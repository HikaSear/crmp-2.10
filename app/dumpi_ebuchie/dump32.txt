         U AAssetManager_fromJava
         U AAssetManager_open
         U AAsset_close
         U AAsset_getLength
         U AAsset_getRemainingLength
         U AAsset_read
         U AAsset_seek
006a9fb8 D ACQUIRED_FREEAIM_STATIC_LIM_A
006a9fbc D ACQUIRED_FREEAIM_STATIC_LIM_B
0068c398 D AEAmbienceTrackManager
00942ed0 B AEAudioHardware
0068d2b4 D AECutsceneTrackManager
006a98b0 D AERadioTrackManager
00943bc4 B AESmoothFadeThread
00945e2c B AESoundManager
0094456c B AEStreamTransformer
006a9f3c D AIMWEAPON_DRIVE_CLOSE_ENOUGH
006a9f38 D AIMWEAPON_DRIVE_SENS_MULT
006a9f34 D AIMWEAPON_FREETARGET_SENS
006a9f40 D AIMWEAPON_RIFLE1_ZOOM
006a9f44 D AIMWEAPON_RIFLE2_ZOOM
006a9f48 D AIMWEAPON_SETTINGS
006a9f30 D AIMWEAPON_STICK_SENS
0023da49 T ALCcontext_DecRef
00249171 T ALCcontext_IncRef
00248c65 T ALCdevice_DecRef
002489b5 T ALCdevice_GetLatencyDefault
00248c11 T ALCdevice_IncRef
002488f5 T ALCdevice_LockDefault
00248955 T ALCdevice_UnlockDefault
006d70bc B ANDThreadStorageKey
006d70c0 B ANDThread_Initted
006d7045 B AND_AppInitialized
006d7046 B AND_AppStarted
006d703c B AND_bufferSwaps
006b03a8 D ARM_IK_AIM_BLEND_TIME
006b03a4 D ARM_IK_AIM_RATE
006aa29c D ARRESTCAM_LAMPPOST_ROTATEDIST
006aa2a0 D ARRESTCAM_LAMPPOST_TRANSLATE
006aa38c D ARRESTCAM_LAMP_BEST_DIST
006aa284 D ARRESTCAM_ROTATION_SPEED
006aa288 D ARRESTCAM_ROTATION_UP
006aa28c D ARRESTCAM_S_ROTATION_UP
006aa384 D ARRESTDIST_ABOVE_COP
006aa298 D ARRESTDIST_ABOVE_GROUND
006aa290 D ARRESTDIST_ALONG_GROUND
006aa37c D ARRESTDIST_BEHIND_COP
006aa388 D ARRESTDIST_MINFROM_PLAYER
006aa380 D ARRESTDIST_RIGHTOF_COP
006aa294 D ARRESTDIST_SIDE_GROUND
006b1344 D AUTOGYRO_ROTORLIFT_FALLOFF
006b1340 D AUTOGYRO_ROTORLIFT_MULT
006b133c D AUTOGYRO_ROTORSPIN_DAMP
006b1334 D AUTOGYRO_ROTORSPIN_MULT
006b1338 D AUTOGYRO_ROTORSPIN_MULTLIMIT
006b1348 D AUTOGYRO_ROTORTILT_ANGLE
00a987cc B AllValidWinJoys
00a88794 B AllowMissionReplay
00990bfd B AlreadyAsked
00685728 D AmazonDownloadFilenames
006b3768 B AmbientLightColor
00a83ce4 B AmbientLightColourForFrame
00a83cf4 B AmbientLightColourForFrame_PedsCarsAndObjects
0067a108 D AmbientLightDirty
006866ce D AmmoForWeapon_OnStreet
006d704c B AndroidEGLContext
006d7058 B AndroidResume
00a83ec4 B AnisoAvailable
002486d9 T AppendAllDevicesList
00248779 T AppendCaptureDeviceList
0025ca21 T ApplyOffset
006857f4 D AreSavesDirty
006b3708 B AssignedLights
0094ec9c B AudioEngine
00247f61 T AudioSetHRTF
006b0588 D BMX_PEDAL_LEANMULT
00a02578 B BMX_PEDAL_LEANSTART
006b03f0 D BMX_PUSHOFF_FORCE_MULT
006b03f4 D BMX_PUSHOFF_START_FRAME
006b0584 D BMX_SPRINT_LEANMULT
006b0580 D BMX_SPRINT_LEANSTART
006a9f24 D BOAT_1STPERSON_LR_OFFSETZ
006a9f28 D BOAT_1STPERSON_L_OFFSETX
006a9f2c D BOAT_1STPERSON_R_OFFSETX
006b06a4 D BOAT_BUOYANCY_DAMPING
006aa248 D BOAT_UNDERWATER_CAM_ALPHA_LIMIT
006aa240 D BOAT_UNDERWATER_CAM_BLUR
006aa244 D BOAT_UNDERWATER_CAM_COLORMAG_LIMIT
006aa24c D BOAT_UNDERWATER_CAM_DEPTH_SCALE
006aa714 D BannerWindTabel
006d6870 B BasePath
0099201c B BigMessageAlpha
00991fdc B BigMessageInUse
00991ffc B BigMessageX
00685fae D Blues
006b050c D BrightTextColourTable
002488a5 T BytesFromDevFmt
0024041d T BytesFromFmt
00240439 T BytesFromUserFmt
006aa094 D CARCAM_SET
006b0528 D CAR_BALANCE_MULT
006a9fd4 D CAR_FOV_FADE_MULT
006a9fd0 D CAR_FOV_START_SPEED
006b131c D CAR_NOS_EXTRA_SKID_LOSS
006ae400 D CBArray
006b037c D CHAIN_COUNT_LIMIT
006a9e10 D CINCAM
00a887a4 B CPIndex
006d634c B CPUCapFlags
0025e6d9 T CalcHrtfDelta
0025c305 T CalcNonAttnSourceParams
0025b311 T CalcSourceParams
00a1dc90 B CameraRangeMaxX
00a1dc98 B CameraRangeMaxY
00a1dc8c B CameraRangeMinX
00a1dc94 B CameraRangeMinY
00a403f8 B CentersWithTriangle
002488c1 T ChannelsFromDevFmt
00240401 T ChannelsFromFmt
0023fe55 T ChannelsFromUserFmt
006bd0b0 B ChunkError
0067a0e4 D ClearAfterSwap
0098f0f0 B CloudColor
006dfe78 B CloudSaveState
00942ec4 B ClumpOffset
007b4da0 B CollectPickupBuffer
006b22d8 D Colours
0025e10d T ComputeAngleGains
00685424 D ConeScale
006af9e4 D ConeShift
00250d55 T ConfigValueExists
00250dc1 T ConfigValueFloat
00250d71 T ConfigValueInt
0024d5a1 T ConfigValueStr
00250d99 T ConfigValueUInt
007af154 B ConnectsToGiven
00953150 B ControlsManager
0025282d T CreateRingBuffer
006e0070 B CurrentDownloadingError
00792fe0 B CurrentGangMemberToLoad
009eccfc B CurrentScriptName
006b15b0 D CurrentTextureShiftSecondU
006b15b4 D CurrentTextureShiftSecondV
006b15a8 D CurrentTextureShiftU
006b15ac D CurrentTextureShiftV
0061ea00 R DAMAGE_THESHOLD
006aad2c D DAMPING_LIMIT_IN_FRAME
006aad30 D DAMPING_LIMIT_OF_SPRING_FORCE
006aa2a8 D DEADCAM_HEIGHT_RATE
006aa2a4 D DEADCAM_HEIGHT_START
006aa2ac D DEADCAM_WAFT_AMPLITUDE
006aa2b0 D DEADCAM_WAFT_RATE
006aa2b4 D DEADCAM_WAFT_TILT_AMP
006b0530 D DEFAULT_COLLISION_EXTENDLIMIT
006b156c D DETAILEDWATERDIST
006b1420 D DIFF_DAMP_MULT_X
006b1424 D DIFF_DAMP_MULT_Y
006b1428 D DIFF_DAMP_MULT_Z
006b140c D DIFF_LIMIT
006b141c D DIFF_SPRING_COMPRESS_MULT
006b1410 D DIFF_SPRING_MULT_X
006b1414 D DIFF_SPRING_MULT_Y
006b1418 D DIFF_SPRING_MULT_Z
00a01ce4 B DOZER_COL_PIVOT
00952fec B DWCineyCamLastFov
00952fe0 B DWCineyCamLastFwd
00952ff0 B DWCineyCamLastNearClip
00952fbc B DWCineyCamLastPos
00952fd4 B DWCineyCamLastRight
00952fc8 B DWCineyCamLastUp
006f228c B DailyUse
006af482 D DataFence
00686734 D DbgLineColour
006af708 D DecisionMakers
0023ecc1 T DedicatedCreate
006b012c D DefaultPCSaveFileName
00685598 D DefaultResampler
00685d24 D DelayBetweenProfilestats
00685d1c D DelayBetweenSends
0024d639 T DeleteCriticalSection
00252865 T DestroyRingBuffer
007a9eb4 B DetachedInfoForTileCars
007a9eb8 B DetachedInfoForTilePeds
0024883d T DevFmtChannelsString
0024881d T DevFmtTypeString
00a83d04 B DirectionalLightColourForFrame
00a83d14 B DirectionalLightColourFromDay
00a98fe0 B DisabledEffects
006d706c B DoInitGraphics
00a887bd B DoLowMemoryCleanup
0079688f B DoMissionCleanup
0081a9c4 B DoMissionSkip
007b7770 B DoPrintCmd
009eccd8 B DoingCheckpointLoad
007af114 B DontWanderGiven
006e0058 B DownloadFileCount
007aecf0 B DummyResult
007aecf2 B DummyResult2
0023ec21 T EchoCreate
00661b58 D EffectList
007a9ec0 B EmptyNodeAddress
006d6818 B EmulateEAXReverb
006b33a8 B EmulatorLights
00248925 T EnterCriticalSection
         U EnterGameFromSCFunc
00a7d374 B ExtraBlocksX
00a7d384 B ExtraBlocksY
006b04b0 D FIGHTER_STICK_BACKWARD_LIMIT
006b04b4 D FIGHTER_STICK_TURNONSPOT_LIMIT
006b0394 D FIGHTING_MAX_HEADING_DIFF
006b0388 D FIGHT_CONTROL_BLOCK_CHANCE
006b0390 D FIGHT_CONTROL_BLOCK_MAXTIME
006b038c D FIGHT_CONTROL_BLOCK_MINTIME
006b0384 D FIGHT_CONTROL_TIME_TO_IDLE
006b053c D FRONT_DAMAGE_MAG_MIN_BONNET
006b0544 D FRONT_DAMAGE_MAG_MIN_WING
006b0540 D FRONT_DAMAGE_MAG_MIN_WSCREEN
006b224c D FX_SPEED_VARS
006aad5c D FadeDistMult
00261295 T FillCPUCaps
00989b90 B FilledColPointIndex
006e0068 B ForceDownloadSkip
00a887bc B ForceGermanBuild
006b2128 D ForiegnCharFontStart
00250b4d T FreeALConfig
002617dd T FreeHrtfs
0023d521 T FreeThunkEntry
006ab398 D FrontEndFilenames
0098f0f8 B FrontEndMenuManager
006a9ef0 D FrontOffsetSyphon
006b2be8 D FullLight
00a29a28 B FullWidthSpaceChar
006b2124 D GLOBAL_FONT_SCALE
006b05ac D G_aComponentDamage
00a066b4 B G_bRenderDebug
006e0050 B GameToSKip
006b2d70 D GamepadType
00a987f8 B GcurSel
006b2d6c D GcurSelVM
         U GetCloudUploadResult
00250c0d T GetConfigValue
00250de9 T GetConfigValueBool
0023cc51 T GetContextRef
0024f5f5 T GetHrtf
0025e109 T GetHrtfIrSize
002707a1 T GetJavaVM
0025dd6d T GetLerpedHrtfCoeffs
0025e7e5 T GetMovingHrtfCoeffs
         U GetRockstarID
006b3398 B GlobalColor
0067a105 D GlobalColorDirty
006bcc4c B GraphicsFinishSemaphore
006bcc48 B GraphicsFlushSemaphore
006bcc44 B GraphicsThreadHandle
00685fad D Greens
00a4043c B GridRefList
00a01a90 B GxtErrorString
006b1254 D HARRIER_NOZZLE_ROTATERATE
006aad10 D HIGHSPEED_ELASTICITY_MULT_COPCAR
006b06a8 D HandlingFilename
006d7040 B HasTimeError
006b1814 D HeadLightsFlareDef
0099205d B HudColour
006a9ee8 D INIT_SYPHON_ALPHA_OFFSET
006a9eec D INIT_SYPHON_DEGREE_OFFSET
006a9ee4 D INIT_SYPHON_GROUND_DIST
006a9ef4 D INIT_SYPHON_Z_OFFSET
00a98f80 B INT123_COS9
00225181 T INT123_bytes_to_samples
0022ee61 T INT123_check_decoders
00225ed1 T INT123_clear_icy
00223177 T INT123_compat_close
0022316f T INT123_compat_open
00231fe1 T INT123_compute_bpf
0022b7e1 T INT123_dct36
0022317d T INT123_dct64
00225555 T INT123_decclass
0022fec9 T INT123_decode_update
0022f119 T INT123_dectype
00225551 T INT123_defdec
00223d1d T INT123_do_equalizer
002286ab T INT123_do_layer1
002290a9 T INT123_do_layer2
0022be69 T INT123_do_layer3
00226a85 T INT123_do_rva
00225d91 T INT123_exit_id3
00230e79 T INT123_feed_more
00231bc1 T INT123_feed_set_pos
002285d1 T INT123_fi_add
002284ef T INT123_fi_exit
002284dd T INT123_fi_init
0022869f T INT123_fi_reset
00228519 T INT123_fi_resize
00228653 T INT123_fi_set
0022602d T INT123_frame_bitrate
00225a21 T INT123_frame_buffers
00225ba1 T INT123_frame_buffers_reset
0022ef4d T INT123_frame_cpu_opt
00225cd5 T INT123_frame_exit
00226469 T INT123_frame_expect_outsamples
00225c19 T INT123_frame_fill_toc
00224891 T INT123_frame_freq
00226061 T INT123_frame_index_find
002252a3 T INT123_frame_init
002252b1 T INT123_frame_init_par
00226191 T INT123_frame_ins2outs
00226589 T INT123_frame_offset
0022592f T INT123_frame_outbuffer
00223df1 T INT123_frame_output_format
002262f5 T INT123_frame_outs
00225c47 T INT123_frame_reset
002266e9 T INT123_frame_set_frameseek
002267bd T INT123_frame_set_seek
00226727 T INT123_frame_skip
00234539 T INT123_get_songlen
00226c75 T INT123_icy2utf8
00226e41 T INT123_id3_link
00226f75 T INT123_id3_to_utf8
002256e1 T INT123_init_icy
002256e7 T INT123_init_id3
00228de1 T INT123_init_layer12
00229015 T INT123_init_layer12_stuff
00229049 T INT123_init_layer12_table
00229d61 T INT123_init_layer3
00229d41 T INT123_init_layer3_gainpow2
0022b71d T INT123_init_layer3_stuff
00225145 T INT123_invalidate_format
00233919 T INT123_make_conv16to8_table
00233ac9 T INT123_make_decode_tables
00226535 T INT123_ntom_frame_outsamples
00226671 T INT123_ntom_frameoff
002263e5 T INT123_ntom_frmouts
0022625d T INT123_ntom_ins2outs
00226989 T INT123_ntom_set_ntom
002338a5 T INT123_ntom_val
00234741 T INT123_open_bad
0022fc75 T INT123_open_feed
0022f759 T INT123_open_stream
0022fac1 T INT123_open_stream_handle
00227065 T INT123_parse_new_id3
00683cfc D INT123_pnts
0022eca1 T INT123_prepare_decode_tables
002320a1 T INT123_read_frame
00226c5d T INT123_reset_icy
00226e0d T INT123_reset_id3
00223141 T INT123_safe_realloc
0022516f T INT123_samples_to_bytes
00226775 T INT123_set_pointer
00230235 T INT123_set_synth_functions
00234a31 T INT123_synth_1to1
00236321 T INT123_synth_1to1_8bit
0023690d T INT123_synth_1to1_8bit_m2s
002367d9 T INT123_synth_1to1_8bit_mono
00233be9 T INT123_synth_1to1_8bit_wrap
00233cd5 T INT123_synth_1to1_8bit_wrap_m2s
00233c69 T INT123_synth_1to1_8bit_wrap_mono
00234fe1 T INT123_synth_1to1_m2s
00234ed1 T INT123_synth_1to1_mono
00237d11 T INT123_synth_1to1_real
00238273 T INT123_synth_1to1_real_m2s
00238121 T INT123_synth_1to1_real_mono
00239421 T INT123_synth_1to1_s32
002399a9 T INT123_synth_1to1_s32_m2s
002398d9 T INT123_synth_1to1_s32_mono
00235111 T INT123_synth_2to1
00236a39 T INT123_synth_2to1_8bit
00236fc5 T INT123_synth_2to1_8bit_m2s
00236ef1 T INT123_synth_2to1_8bit_mono
00235661 T INT123_synth_2to1_m2s
002355b1 T INT123_synth_2to1_mono
002383a1 T INT123_synth_2to1_real
00238877 T INT123_synth_2to1_real_m2s
002387a9 T INT123_synth_2to1_real_mono
00239ad9 T INT123_synth_2to1_s32
0023a021 T INT123_synth_2to1_s32_m2s
00239f91 T INT123_synth_2to1_s32_mono
00235711 T INT123_synth_4to1
00237071 T INT123_synth_4to1_8bit
002375ed T INT123_synth_4to1_8bit_m2s
00237549 T INT123_synth_4to1_8bit_mono
00235c4d T INT123_synth_4to1_m2s
00235bcf T INT123_synth_4to1_mono
00238929 T INT123_synth_4to1_real
00238dd7 T INT123_synth_4to1_real_m2s
00238d49 T INT123_synth_4to1_real_mono
0023a0d1 T INT123_synth_4to1_s32
0023a613 T INT123_synth_4to1_s32_m2s
0023a5a5 T INT123_synth_4to1_s32_mono
00235d21 T INT123_synth_ntom
002376e9 T INT123_synth_ntom_8bit
00237cbd T INT123_synth_ntom_8bit_m2s
00237659 T INT123_synth_ntom_8bit_mono
002362cf T INT123_synth_ntom_m2s
00235cb9 T INT123_synth_ntom_mono
00238eb1 T INT123_synth_ntom_real
002393cb T INT123_synth_ntom_real_m2s
00238e43 T INT123_synth_ntom_real_mono
0023a6e9 T INT123_synth_ntom_s32
0023accf T INT123_synth_ntom_s32_m2s
0023a67f T INT123_synth_ntom_s32_mono
002300b1 T INT123_synth_ntom_set_step
00a98f38 B INT123_tfcos36
006b32a4 B Imm
006b3308 B ImmArrayMode
         U ImmVibeCloseDevice
         U ImmVibeGetEffectState
         U ImmVibeGetIVTEffectIndexFromName
         U ImmVibeInitialize2
         U ImmVibeOpenDevice
         U ImmVibePlayUHLEffect
         U ImmVibeStopPlayingEffect
         U ImmVibeTerminate
006b2c06 D IndicateB
006b2bff D IndicateG
006b2bf8 D IndicateR
00252e89 T InitEffect
0023cded T InitEffectSlot
0024d54d T InitUIntMap
002483ad T InitializeCriticalSection
0023e281 T InitializeEffect
0023d2b9 T InsertUIntMapEntry
007aee08 B InteriorIDBeingBuilt
006d7054 B IsAndroidInMultiplayer
006855bc D IsAndroidPaused
006e0130 B IsDownloadBack
006b2d60 D IsGermanVersion
006d7050 B IsInitGraphics
00a3ebb8 B IsInitialized
00a29a2c B IsJapanese
009eccf4 B IsMissionLoad
009eccf5 B IsMissionSave
00a887a0 B IsOddJob
         U IsProfileStatsBusy
006e0054 B IsWaitingForCloud
006b0478 D JETPACK_POS_OFFSET
006b0484 D JETPACK_ROT_AXIS
00a29a30 B JMet
00271695 T JNI_OnLoad
0025f76d T JNI_OnUnload
00a29a14 B JPNIndexPunct
006b212c D JPNUnicodePunct
00271611 T Java_com_nvidia_devtech_NvEventQueueActivity_jniNvAPKInit
0027034d T Java_com_rockstargames_bully_bully_initTouchSense
0026c6a9 T Java_com_wardrumstudios_utils_WarAdMob_jniWarAdMob
0027b26d T Java_com_wardrumstudios_utils_WarMedia_NativeNotifyNetworkChange
00270cb5 T Java_com_wardrumstudios_utils_WarMedia_setTouchSenseFilepath
0026c5b9 T Java_com_wardrumstudios_utils_WarService_jniWarService
009fa864 B JustLoadedDontFadeInYet
006d6f00 B KKDown
006d6f64 B KKtoChar
006d6fc8 B KKtoShiftedChar
006bcc50 B KillGraphicsThread
006af940 D LIGHT_AI_LEVEL_MAX
006af94c D LIGHT_AI_SCALE_MIN
006af950 D LIGHT_AI_SCALE_MIN_SEEN
006af944 D LIGHT_AI_SCALE_RANGE
006af948 D LIGHT_AI_SCALE_RANGE2
006af954 D LIGHT_AI_SCALE_THRESHOLD_DIST
0099176c B LastBigMessage
00a88780 B LastFiveKeyPresses
00951c04 B LastUpdateCoors
00248985 T LeaveCriticalSection
00a83d24 B LightStrengths
00a83cc8 B Lighting
00a41108 B LinesVertexBuffer
00253cb1 T LoadReverbPreset
00a98fd8 B LogFile
00685420 D LogLevel
00952de8 B LookatOffset
0023ddb5 T LookupUIntMapKey
006a9ef8 D MAX_ANGLE_BEFORE_AIMWEAPON_JUMPCUT
006af174 D MAX_CUTJUMP_TIME
00a53530 B MAX_DISTANCE_PED_SHADOWS
00a53534 B MAX_DISTANCE_PED_SHADOWS_SQR
006aac62 D MI_AIRPORTRADAR
006aacd4 D MI_ATM
006aac56 D MI_BARRIER1
006aad06 D MI_BASKETBALL
006aac66 D MI_BEACHBALL
006aac90 D MI_BEACHTOWEL01
006aac92 D MI_BEACHTOWEL02
006aac94 D MI_BEACHTOWEL03
006aac96 D MI_BEACHTOWEL04
006aabee D MI_BIN
006aac9a D MI_BLIMP_DAY
006aac98 D MI_BLIMP_NIGHT
006aac38 D MI_BOLLARDLIGHT
006aac10 D MI_BRIEFCASE
006aac3e D MI_BUOY
006aabfe D MI_BUSSIGN1
006aac0a D MI_CARMINE
006aac06 D MI_COLLECTABLE1
006aacaa D MI_CRANETROLLEY
006aacca D MI_CRANE_HARNESS
006aaccc D MI_CRANE_MAGNET
006aacd6 D MI_DEAD_TIED_COP
006aac7e D MI_DOLPHIN
006aabcc D MI_DOUBLESTREETLIGHTS
006aabf6 D MI_DUMP1
006aac84 D MI_ESCALATORSTEP
006aac86 D MI_ESCALATORSTEP8
006aac16 D MI_EXPLODINGBARREL
006aac3a D MI_FENCE
006aac3c D MI_FENCE2
006aac04 D MI_FIRE_HYDRANT
006aac72 D MI_FISH1S
006aac70 D MI_FISH1SINGLE
006aac76 D MI_FISH2S
006aac74 D MI_FISH2SINGLE
006aac7a D MI_FISH3S
006aac78 D MI_FISH3SINGLE
006aacfa D MI_FLARE
006aacdc D MI_FREEFALL_BOMB
006aace0 D MI_GANG_DRINK
006aace2 D MI_GANG_SMOKE
006aacc6 D MI_GASSTATION
006aac12 D MI_GLASS1
006aac14 D MI_GLASS8
006aacc4 D MI_GRASSHOUSE
006aacc8 D MI_GRASSPLANT
006aacee D MI_HANGING_CARCASS
006aacbc D MI_HARVESTERBODYPART1
006aacbe D MI_HARVESTERBODYPART2
006aacc0 D MI_HARVESTERBODYPART3
006aacc2 D MI_HARVESTERBODYPART4
006aacf6 D MI_HORSESHOE
006aabe6 D MI_HOTELFAN_DAY
006aabe4 D MI_HOTELFAN_NIGHT
006aabe8 D MI_HOTROOMFAN
006aad02 D MI_HYDRAULICS
006aad0c D MI_IMY_GRAY_CRATE
006aacf0 D MI_IMY_SHASH_WALL
006aac6c D MI_JELLYFISH
006aac6e D MI_JELLYFISH01
006aacea D MI_KMB_BOMB
006aace8 D MI_KMB_PLANK
006aace6 D MI_KMB_ROCK
006aac42 D MI_LAMPPOST1
006aac60 D MI_LIGHTBEAM
006aac58 D MI_LITTLEHA_POLICE
006aac8e D MI_LOTION
006aac8a D MI_LOUNGE_TOWEL_UP
006aac8c D MI_LOUNGE_WOOD_DN
006aac88 D MI_LOUNGE_WOOD_UP
006aaca8 D MI_MAGNOCRANE
006aacba D MI_MAGNOCRANE_HOOK
006aabe2 D MI_MALLFAN
006aacec D MI_MINI_MAGNET
006aac54 D MI_MLAMPPOST
006aac08 D MI_MONEY
006aac0c D MI_NAUTICALMINE
006aabf2 D MI_NEWSSTAND
006aad00 D MI_NITRO_BOTTLE_DOUBLE
006aacfe D MI_NITRO_BOTTLE_LARGE
006aacfc D MI_NITRO_BOTTLE_SMALL
006aac00 D MI_NOPARKINGSIGN1
006aacb8 D MI_OBJECTFORBUILDINGSITECRANE1
006aacae D MI_OBJECTFORMAGNOCRANE1
006aacb0 D MI_OBJECTFORMAGNOCRANE2
006aacb2 D MI_OBJECTFORMAGNOCRANE3
006aacb4 D MI_OBJECTFORMAGNOCRANE4
006aacb6 D MI_OBJECTFORMAGNOCRANE5
006aacf8 D MI_OFFROAD_WHEEL
006aacf4 D MI_OYSTER
006aacf2 D MI_PARACHUTE_BACKPACK
006aac5e D MI_PARKBENCH
006aabde D MI_PARKINGMETER
006aabe0 D MI_PARKINGMETER2
006aac40 D MI_PARKTABLE
006aabea D MI_PHONEBOOTH1
006aac02 D MI_PHONESIGN
006aac36 D MI_PICKUP_2P_COOP
006aac34 D MI_PICKUP_2P_KILLFRENZY
006aac18 D MI_PICKUP_ADRENALINE
006aac1a D MI_PICKUP_BODYARMOUR
006aac20 D MI_PICKUP_BONUS
006aac22 D MI_PICKUP_BRIBE
006aac26 D MI_PICKUP_CAMERA
006aac32 D MI_PICKUP_CLOTHES
006aac1e D MI_PICKUP_HEALTH
006aac1c D MI_PICKUP_INFO
006aac24 D MI_PICKUP_KILLFRENZY
006aac28 D MI_PICKUP_PARACHUTE
006aac2e D MI_PICKUP_PROPERTY
006aac30 D MI_PICKUP_PROPERTY_FORSALE
006aac2a D MI_PICKUP_REVENUE
006aac2c D MI_PICKUP_SAVEGAME
006aad08 D MI_POOL_CUE_BALL
006aabf0 D MI_POSTBOX1
006aad0a D MI_PUNCHBAG
006aacac D MI_QUARRYCRANE_ARM
006aacce D MI_QUARY_ROCK1
006aacd0 D MI_QUARY_ROCK2
006aacd2 D MI_QUARY_ROCK3
006aac64 D MI_RCBOMB
006aace4 D MI_RHYMESBOOK
006aabfa D MI_ROADBLOCKFUCKEDCAR1
006aabfc D MI_ROADBLOCKFUCKEDCAR2
006aabf8 D MI_ROADWORKBARRIER1
006aaca0 D MI_SAMSITE
006aaca2 D MI_SAMSITE2
006aac68 D MI_SANDCASTLE1
006aac6a D MI_SANDCASTLE2
006aac80 D MI_SHARK
006aabc6 D MI_SINGLESTREETLIGHTS1
006aabc8 D MI_SINGLESTREETLIGHTS2
006aabca D MI_SINGLESTREETLIGHTS3
006aad04 D MI_STEREO_UPGRADE
006aabce D MI_STREETLAMP1
006aabd0 D MI_STREETLAMP2
006aac82 D MI_SUBMARINE
006aac0e D MI_TELLY
006aac5a D MI_TELPOLE02
006aabf4 D MI_TRAFFICCONE
006aac5c D MI_TRAFFICLIGHT01
006aabb4 D MI_TRAFFICLIGHTS
006aabbe D MI_TRAFFICLIGHTS_3
006aabc0 D MI_TRAFFICLIGHTS_4
006aabc2 D MI_TRAFFICLIGHTS_5
006aabc4 D MI_TRAFFICLIGHTS_GAY
006aabb8 D MI_TRAFFICLIGHTS_MIAMI
006aabbc D MI_TRAFFICLIGHTS_TWOVERTICAL
006aabba D MI_TRAFFICLIGHTS_VEGAS
006aabb6 D MI_TRAFFICLIGHTS_VERTICAL
006aaca4 D MI_TRAINCROSSING
006aaca6 D MI_TRAINCROSSING1
006aac7c D MI_TURTLE
006aac44 D MI_VEG_PALM01
006aac46 D MI_VEG_PALM02
006aac48 D MI_VEG_PALM03
006aac4a D MI_VEG_PALM04
006aac4c D MI_VEG_PALM05
006aac4e D MI_VEG_PALM06
006aac50 D MI_VEG_PALM07
006aac52 D MI_VEG_PALM08
006aabec D MI_WASTEBIN
006aacd8 D MI_WINDSOCK
006aacde D MI_WONG_DISH
006aacda D MI_WRECKING_BALL
006aac9c D MI_YT_MAIN_BODY
006aac9e D MI_YT_MAIN_BODY2
002615e1 T MOB_ConfigGetEnumByName
00261641 T MOB_ConfigValueStr_KeyStr
002615df T MOB_FreeALConfig
00261711 T MOB_Local_ConfigValueExists
002617a1 T MOB_Local_ConfigValueFloat
0024d5fd T MOB_Local_ConfigValueInt
0024d565 T MOB_Local_ConfigValueStr
0024d5c1 T MOB_Local_ConfigValueUInt
002616dd T MOB_Local_FindConfigValue
0026173d T MOB_Local_GetConfigValue
0026176d T MOB_Local_GetConfigValueBool
002615dd T MOB_ReadALConfig
006aabd2 D MODELID_CRANE_1
006aabd4 D MODELID_CRANE_2
006aabd6 D MODELID_CRANE_3
006aabd8 D MODELID_CRANE_4
006aabda D MODELID_CRANE_5
006aabdc D MODELID_CRANE_6
006b054c D MOVE_UNDERWATER_BUBBLE_MOVESPDSQR
006b0548 D MOVE_UNDERWATER_CAR_COB
006b0590 D MTB_PEDAL_LEANMULT
006b058c D MTB_SPRINT_LEANMULT
00a98830 B MarketingCamBaseOffset
00a9883c B MarketingCamBaseRotation
00a98884 B MarketingCamOffset
00a98890 B MarketingCamRotation
00a98db5 B MarketingCheatsOff
00a98db0 B MarketingControllerEnabled
00a98db6 B MarketingDebugCamera
006b0230 D MarketingPCSaveFileName
00a98db4 B MarketingScreenshot
00a98db2 B MarketingToggleBackZone
00a98db3 B MarketingToggleForwardZone
00a98db1 B MarketingToggleMission
006b723c B MatFXInfo
006b7238 B MatFXMaterialDataOffset
006b3778 B MaterialAmbient
006b3788 B MaterialDiffuse
006b37bc B MaterialDirty
006b37a8 B MaterialEmissive
006b37b8 B MaterialShininess
006b3798 B MaterialSpecular
006855a0 D MaxAsyncReadMultiply
006f2220 B MenuCounts
00992220 B MenuNumber
00260b8d T MixDirect_C
002605f5 T MixDirect_Hrtf_C
00260cfd T MixDirect_Hrtf_SUFFIX
00260c59 T MixSend_C
0025eca9 T MixSource
006b37c4 B ModelViewStack
0023ec75 T ModulatorCreate
0098f0f4 B MousePointerStateHelper
006855fc D NVLog
006855f0 D NVLogDebug
006855ec D NVLogError
0068560c D NVLogFatal
00685608 D NVLogInfo
00685600 D NVLogMessage
00685604 D NVLogOutput
006855f4 D NVLogWarn
006d6b04 B NVtoKK
0067a0ec D NativeFormat
007aee0c B NewInteriorSlot
0023ce75 T NewThunkEntry
006dfe74 B NextCheckTime
006b4054 B NoRenderTarget
007aecf4 B NodeList
0023ea89 T NoneCreate
007a9ec8 B NumDetachedCarNodeGroups
007a9ec4 B NumDetachedPedNodeGroups
00a7d370 B NumExtraBlocks
00a83ce0 B NumExtraDirLightsInWorld
007af2d4 B NumLinksToExteriorNodes
007aee10 B NumNodesGiven
007a9ecc B NumTempExternalNodes
00a12e6c B NumTrackNodes
00992044 B OddJob2OffTimer
0099203c B OddJob2On
0099203e B OddJob2Timer
00992040 B OddJob2XOffset
00685d20 D OneTimeSend
0025f6e5 T OpenAL_Android_Init
00a01cd8 B PACKER_COL_PIVOT
00a887c0 B PC_Scratch
006a9fd8 D PEDCAM_SET
006b2c7c D PELLET_COL_SCALE_RATIO_MULT
006aad38 D PHYSICAL_CARCAR_FRICTION_MULT
006aad34 D PHYSICAL_CAR_FRICTION_MULT
006aad3c D PHYSICAL_CAR_FRICTION_SPEED_LIMSQR
006aad40 D PHYSICAL_CAR_FRICTION_TURN_LIMSQR
006aad14 D PHYSICAL_SHIFT_SPEED_DAMP
006b1268 D PLANE_DAMAGE_DESTROY_THRESHHOLD
006b1264 D PLANE_DAMAGE_SCALE_MASS
006b1260 D PLANE_DAMAGE_THRESHHOLD
006b125c D PLANE_DAMAGE_WAVE_COUNTER_VAR
006a9e28 D PLAYERFIGHT_LEVEL_SMOOTHING_CONST
006a9e2c D PLAYERFIGHT_TREND_SMOOTHING_CONST
006a9e20 D PLAYERPED_LEVEL_SMOOTHING_CONST_INV
006a9e24 D PLAYERPED_TREND_SMOOTHING_CONST_INV
006af9f4 D PLAYER_SPRINT_HOLDSUB
006af9f8 D PLAYER_SPRINT_RELEASESUB
006afa00 D PLAYER_SPRINT_SET
006af9f0 D PLAYER_SPRINT_TAPADD
006af9fc D PLAYER_SPRINT_THRESHOLD
0095ad40 B PS2Keyboard
00959b1c B Pads
006ab46c D PagerXOffset
00248111 T PauseOpenSLES
009fc8f4 B PcSaveHelper
006af4c8 D PersonalityTypeTexts
00a842e4 B PlayerSniperBulletEnd
00a842d8 B PlayerSniperBulletStart
006d707c B Points
00685670 D PositionIDs
00950c78 B PostLoadingTimer
006a9f10 D PrintDebugCode
006e08b0 B ProfileData
006e2210 B ProfileStats
006b3c0c B ProjectionStack
00a9881c B PsGlobal
006b127c D QUAD_HBSTEER_ANIM_MULT
006b128c D RELINK_TRAILER_DIFF_LIMIT_XY
006b1290 D RELINK_TRAILER_DIFF_LIMIT_Z
006b055c D ROLL_ONTO_WHEELS_FORCE
006b134c D ROTOR_SEMI_THICKNESS
006b142c D ROT_DAMP_MULT_X
006b1430 D ROT_DAMP_MULT_Y
006b1434 D ROT_DAMP_MULT_Z
006b8b9c B RQCaps
006b8bac B RQMaxBones
         U RTPrioLevel
0023f22d T RWLockInit
006ae1c8 D RadarBlipSpriteFilenames
006b1c38 D RandomWindowVals
006b31fc B RasterExtOffset
0025046d T ReadALConfig
00246ab1 T ReadLock
002529e9 T ReadRingBuffer
00246bbd T ReadUnlock
00685fac D Reds
006b70e8 B RegEntries
0023ed35 T ReleaseALAuxiliaryEffectSlots
00247d81 T ReleaseALBuffers
00253ac9 T ReleaseALEffects
00254f09 T ReleaseALFilters
0025cb4d T ReleaseALSources
0023df47 T RemoveUIntMapKey
00260435 T Resample_copy32_C
00260535 T Resample_cubic32_C
002604d9 T Resample_lerp32_C
002604a9 T Resample_point32_C
005fc264 R ResamplerPadding
005fc270 R ResamplerPrePadding
002614cd T ResetUIntMap
0023ed2f T RestoreFPUMode
00685594 D ReverbBoost
0023ead5 T ReverbCreate
002528a9 T RingBufferSize
006aad60 D RopeIndices
006b709c B RpHAnimAtomicGlobals
001c98ed T RpSkinAtomicGetHAnimHierarchy
001c9c4b T RpSkinAtomicGetType
001c98dd T RpSkinAtomicSetHAnimHierarchy
001c9c0b T RpSkinAtomicSetType
001c9951 T RpSkinCreate
001c9bb1 T RpSkinDestroy
001c98fd T RpSkinGeometryGetSkin
001c990d T RpSkinGeometrySetSkin
001c9bf1 T RpSkinGetNumBones
001c86d9 T RpSkinGetOpenGLPipeline
001c9bfd T RpSkinGetSkinToBoneMatrices
001c9bf9 T RpSkinGetVertexBoneIndices
001c9bf5 T RpSkinGetVertexBoneWeights
001c9c01 T RpSkinIsSplit
001c90c5 T RpSkinPluginAttach
001c909d T RpSkinSetFreeListCreateParams
006b8ae4 B RpUVAnimMaterialGlobals
009fc8fc B RsGlobal
006bd1e8 B RtAnimAnimationFreeList
006bd1ec B RtAnimAnimationFreeListSpace
006bd214 B RtAnimInterpolatorInfoBlock
006bd210 B RtAnimInterpolatorInfoBlockNumEntries
006bd1e4 B RunUVAnim
006bcd38 B RwEngineInstance
00683c98 D RwHackNoCompressedTexCoords
00a987f0 B RwInitialized
00682844 D RxClCamNorms
00682700 D RxClCamSpace3DVertices
006827ac D RxClIndices
00682750 D RxClInterpolants
00682770 D RxClMeshState
006826d4 D RxClObjSpace3DVertices
00682824 D RxClRGBAs
00682790 D RxClRenderState
006827cc D RxClScatter
0068272c D RxClScrSpace2DVertices
00682864 D RxClTriPlanes
006827e8 D RxClUVs
00682808 D RxClVSteps
006bcfdc B RxPipelineInstanced
006b2c74 D SHOTGUN_NUM_PELLETS
006b2c70 D SHOTGUN_SPREAD_RATE
00a56268 B SKID_COLOR_BLOOD
00a5625c B SKID_COLOR_DEFAULT
00a56264 B SKID_COLOR_MUD
00a56260 B SKID_COLOR_SAND
         U SL_IID_ANDROIDSIMPLEBUFFERQUEUE
         U SL_IID_BUFFERQUEUE
         U SL_IID_ENGINE
         U SL_IID_PLAY
006aad28 D SOFTCOL_CARLINE_SPEED_MULT
006aad18 D SOFTCOL_DEPTH_MIN
006aad1c D SOFTCOL_DEPTH_MULT
006aad20 D SOFTCOL_SPEED_MULT
006aad24 D SOFTCOL_SPEED_MULT2
006b2c78 D SPAS_NUM_PELLETS
006af958 D STEALTH_KILL_RANGE
006af480 D SaveAnyway
0098f0f6 B SaveGameFromMenu
006b2d5c D SaveGameStateType
009eccf6 B SaveStreamedScripts
009fc938 B Scene
006b2344 D Screens8Track
006855d8 D ScreenshotIsDone
0081a908 B ScriptParams
006b1cbc D ScrollCharSet
007967bc B SequenceElements
006aa350 D SequenceOfBoatCams
006aa2c8 D SequenceOfCarCams
006aa314 D SequenceOfHeliCams
006aa334 D SequenceOfPlaneCams
006aa2f8 D SequenceOfTrainCams
007967c0 B SequenceRandomOffset
00248abd T SetDefaultChannelOrder
002489bd T SetDefaultWFXChannelOrder
0023ed19 T SetMixerFPUMode
00261441 T SetRTPriority
0025a865 T SetSourceState
006b4588 B ShaderClosetInitialized
006dfd60 B ShowAudioLogs
0061d570 R ShowSaveLog
006d7044 B ShowTimeErrors
         U SigningOutfromApp
009598b0 B SkipAllMPEGs
00685620 D SkipBankLoader
009fc8f2 B SkipBriefsClear
00a88798 B SkipIntroCutscene
00a887be B SkipPauseSave
00686730 D SkipToMissionNumber
0081a9c0 B SkipToMissionPage
002613c5 T Sleep
009fc3fe B SlotSaveDate
00252a95 T StartThread
00a12e8c B StationDist
006aaffc D StatsAchievementList
006aaf12 D StatsCriminalList
006aafa8 D StatsGangList
006ab332 D StatsMiscList
006ab128 D StatsMissionList
006aae76 D StatsMoneyList
006aade0 D StatsPlayerList
006aaeee D StatsWeaponList
009fa865 B StillToFadeOut
00252b13 T StopThread
006d9ed1 B StorageBaseRootBuffer
006d687c B StorageRootBuffer
00952f38 B StoreMatrixForMirror
006b15f8 D SunFlareDef
007b7785 B SwapScriptEndian
006aad44 D TEST_ADD_AMBIENT_LIGHT_FRAC
006aad4c D TEST_AI_LIGHTING_DAY_ADD
006aad48 D TEST_AI_LIGHTING_DAY_MULT
006a9efc D TEST_FOLLOW_CAR_USING_FOLLOW_PED_CODE
006b22bc D TEST_SPEEDFX_OLD_VALUES
006b0558 D TIGER_GUNFIRE_RATE
00a01f7c B TIGER_GUN_POS
006b052c D TOWTRUCK_HOIST_DOWN_LIMIT
006b052e D TOWTRUCK_HOIST_UP_LIMIT
006b0534 D TOWTRUCK_ROT_ANGLE
006b0538 D TOWTRUCK_WIRE_LENGTH
006b1288 D TRAILER_TOWED_MINRATIO
006b12ec D TRANSMISSION_AI_CHEAT_INERTIA_MULT
006b12e4 D TRANSMISSION_AI_CHEAT_MULT
006b12dc D TRANSMISSION_FREE_ACCELERATION
006b12f0 D TRANSMISSION_NITROS_INERTIA_MULT
006b12e8 D TRANSMISSION_NITROS_MULT
006b12e0 D TRANSMISSION_SMOOTHER_FRAC
006af9dc D TargetAngleCone
00a7c1d8 B TempBufferIndicesStored
00a40420 B TempBufferIndicesStoredHiLight
00a40430 B TempBufferIndicesStoredReflection
00a40428 B TempBufferIndicesStoredShattered
00a7a1d8 B TempBufferRenderIndexList
00a7c1dc B TempBufferVerticesStored
00a40424 B TempBufferVerticesStoredHiLight
00a40434 B TempBufferVerticesStoredReflection
00a4042c B TempBufferVerticesStoredShattered
00a1d488 B TempColourBufferB
00a1cc88 B TempColourBufferG
00a1dc88 B TempColourBufferIndex
00a1c488 B TempColourBufferR
007a9ebc B TempExternalNodes
006dfe70 B TempSignIn
00a5a1d8 B TempVertexBuffer
006b04f0 D TextColourTable
00a1c478 B TextureShiftHighLightU
00a1c47c B TextureShiftHighLightV
00a1c470 B TextureShiftSecondU
00a1c474 B TextureShiftSecondV
00a1c468 B TextureShiftU
00a1c46c B TextureShiftV
006b3e30 B TextureStack
00951fa8 B TheCamera
007a61f0 B ThePaths
00a00768 B TheText
0025dd49 T ThunkExit
0024845d T ThunkInit
006a9e58 D TiltOverShoot
006a9e44 D TiltSpeedStep
006a9e30 D TiltTopSpeed
006f2304 B TimeInBackground
009fa868 B TimeStartedCountingForFade
006b011c D TimeToStayFadedBeforeFadeOut
007aed74 B ToBeStreamed
007aedb4 B ToBeStreamedForScript
006b0334 D TopLineEmptyFile
006e0060 B TotalDownloadPayloadMB
006e005c B TotalDownloadSizeMB
009eccd4 B TotalLoadSize
006e0064 B TotalSizeDownloadedMB
006b232c D TrafficLightIndices
006b22fc D TrafficLightsSide
006b2314 D TrafficLightsUp
006b1de4 D TrailIndices
006d6819 B TrapALError
007a08b8 B TriggerMissionJumpWidget
006b03a0 D USE_GUN_REQ_PISTOL_WHIP_ANGLE_TAN
006b039c D USE_GUN_REQ_PISTOL_WHIP_RANGE
0067a0e0 D UncompressedRead
006d7160 B UseAssetFile
007b7784 B UseBigEndianScript
00685724 D UseCloudSaves
009ecd04 B UseDataFence
0067a1b0 D UseGpuSkinning
006855e4 D UseTouchSense
0067a118 D UseWP8ForcedPortrait
00a1c450 B VecForWaterNormalCalculation
006b06ac D VehicleNames
006b39e8 B ViewStack
006ab394 D WORLD_PLAYER_SHIFT_DAMPING
006b1324 D WS_ALREADY_SPINNING_LOSS
006b1320 D WS_TRAC_FRAC_LIMIT
00a887b8 B WaitForApplicationInit
006d6b00 B WarKeyboard_class
006d7048 B WasAndroidPaused
00990bfc B WasDoingResumeBeforeRate
00a987f4 B WasForegroundApp
00a1c480 B WaterColor
00a1c484 B WaterColorDebug
006b2410 D WeatherTypesListDefault
006b2510 D WeatherTypesListDesert
006b2450 D WeatherTypesListLA
006b2490 D WeatherTypesListSF
006b24d0 D WeatherTypesListVegas
006af9e0 D WiderTargetAngleCone
00685624 D WidgetIDs
006aa6d4 D WindTabel
006b23b0 D Windyness
00240309 T WriteLock
00252921 T WriteRingBuffer
002403ab T WriteUnlock
007aee14 B XCoorGiven
007aef14 B YCoorGiven
007af014 B ZCoorGiven
006a9e6c D ZOOM_ONE_DISTANCE
006a9e94 D ZOOM_THREE_DISTANCE
006a9e80 D ZOOM_TWO_DISTANCE
00685428 D ZScale
006a9ea8 D ZmOneAlphaOffset
006a9ed0 D ZmThreeAlphaOffset
006a9ebc D ZmTwoAlphaOffset
0027a5b9 T AND_GetJNI()
0027a5bd T AND_GetObj()
002c9be1 T AddToQueue(Queue*, int)
005d32ad T CameraSize(RwCamera*, RwRect*, float, float)
005e573d T CapturePad(unsigned int)
005e509d T CheckAniso()
00385209 T CheckBones(RpHAnimHierarchy*)
0056e6e3 T CranesLoad(unsigned char*, unsigned int)
003f5581 T DisplayFPS()
001bd5e1 T EnumString(unsigned int)
001b9919 T GLTypeToRQ(unsigned int)
001cfa27 T GLWOFromRQ(RQWindingOrder)
001b40c1 T GetMipSize(RwRaster const*, int, unsigned char, unsigned int, unsigned int)
00483dd3 T GetPoolObj(int)
00483db9 T GetPoolPed(int)
00297281 T GetTexture(char const*)
001e7201 T HashString(char const*)
003f5711 T IdleThread(void*)
00481cc9 T InitSource(jpeg_decompress_struct*)
005964c1 T IsOnScreen(CVector const&, float, bool)
003fcaf1 T LittleTest()
0048fc75 T LoadBriefs()
002182db T MeshSorter(void const*, void const*)
0027101d T NvAPKClose(void*)
002771a1 T NvCopyMatf(float (*) [4], float const (*) [4])
002775a1 T NvMultMatf(float (*) [4], float const (*) [4], float const (*) [4])
002792ad T NvQuatCopy(float*, float const*)
0027959d T NvQuatMult(float*, float const*, float const*)
0026911d T NvUtilInit()
0027f5e1 T OALService()
0026c90d T OS_HTTPGet(char const*)
001aef95 T ResetBlend()
001e25f9 T RwErrorGet(RwError*)
001e25a9 T RwErrorSet(RwError*)
001e0fe5 T RxHeapFree(RxHeap*, void*)
0048f705 T SaveBriefs()
0050451d T SayJacking(CPed*, CPed*, CVehicle*, unsigned int)
005d4c85 T SetAlphaCB(RpMaterial*, void*)
00457561 T SetFatStat(float)
002cb085 T SetReflMap(float)
001c1f11 T ShaderSort(void const*, void const*)
002cad7d T SwapColors(RpAtomic*)
00481ccb T TermSource(jpeg_decompress_struct*)
0036ce61 T TestMatrix(RwMatrixTag*)
00457639 T TryClothes(char const*, char const*, char const*)
001e2705 T _rwES2feof(void*)
001e6581 T _rwInvSqrt(float)
001cfb69 T es2SetCull(RQCullMode)
0047a0e1 T jpeg_abort(jpeg_common_struct*)
001cd945 T strreplace(char*, char const*, char const*)
002ad05d T AddMenuStat(MenuStat, int)
00297325 T BackPressed()
003f5515 T Diag_GetFPS()
003fa5a9 T DisableHorn()
005e4765 T DoGameState()
002974d9 T DownPressed()
0040fcdf T GetBufferID(CEntity*)
004669b1 T GetFilename(char const*)
00463761 T GetNextLine(char const*, char*, unsigned int)
0027d8b9 T HasLoadTask(ZIPFile*, int, int, int)
005e4dbd T IsCarTurret()
00299909 T IsCloudSlot(int)
0029754d T LeftPressed()
0026fe99 T LockStorage()
002a945d T Menu_Resume()
0045090f T Multiply3x3(CMatrix const&, CVector const&)
00450989 T Multiply3x3(CVector const&, CMatrix const&)
00274b09 T NVHHDDSFree(NVHHDDSImage*)
002741e9 T NVHHDDSLoad(char const*, int)
002715f1 T NVImeClosed()
00276fbd T NVLogEnable(ENVLogLevel, unsigned char)
002797d3 T NvQuatNLerp(float*, float const*, float const*, float)
003f0ccd T OSWOpenFile(OSFileDataArea, void**, char const*, OSFileAccessType)
00266781 T OS_DebugOut(char const*)
00266a69 T OS_FileOpen(OSFileDataArea, void**, char const*, OSFileAccessType)
002671e3 T OS_FileRead(void*, void*, int)
002674c5 T OS_FileSize(void*)
0026c7db T OS_HTTPPost(char const*)
001cc4f9 T RQGetVendor()
005a7e09 T ReadMetFile(char*, int)
00366805 T RenderBegin(RwRaster*, RwMatrixTag*, unsigned int)
003f6565 T RenderMenus()
003f60ed T RenderScene(bool)
002caae5 T ResetEnvMap()
005c9995 T RotatePoint(float, float, float)
0021ca99 T RpWorldLock(RpWorld*)
004d452b T RsTerminate()
001d8241 T RwFrameInit(RwFrame*)
001d9561 T RwImageCopy(RwImage*, RwImage const*)
001d97ad T RwImageRead(char const*)
001e67b1 T RwV2dLength(RwV2d const*)
001e6739 T RwV3dLength(RwV3d const*)
001e1185 T RxHeapAlloc(RxHeap*, unsigned int)
005e50ad T UpdateInput()
001c7a49 T UseSkinning(RpGeometry const*)
00297231 T VectorInBox(CVector2D, CVector2D, CVector2D)
0027c2c1 T WarHttpInit(_JNIEnv*)
0026c911 T War_HttpGet(char const*)
00458185 T WriteRaster(RwRaster*, char const*)
00270029 T ZIP_FileSet(char const*)
00217e25 T _rpMeshOpen(void*, int, int)
0021835d T _rpMeshRead(RwStream*, void const*, RpMaterialList const*)
002185b5 T _rpMeshSize(RpMeshHeader const*, void const*)
001e269d T _rwES2fgets(char*, int, void*)
001e2701 T _rwES2fputs(char const*, void*)
001e2655 T _rwES2fread(void*, unsigned int, unsigned int, void*)
001e2719 T _rwES2fseek(void*, long, int)
001e274d T _rwES2ftell(void*)
001dd7d1 T _rwIm3DOpen(void*, int, int)
003d1fad T bIsLampPost(int)
001b3c11 T d3dhasAlpha(unsigned int, unsigned char)
001b5029 T emu_glBegin(unsigned int)
001bb821 T emu_glClear(unsigned int)
001baf49 T emu_glOrtho(double, double, double, double, double, double)
005d32a3 T freeAlignPC(void*)
005e503d T psTerminate()
002acbad T updateUsage(bool)
0026bea1 T ANDRunThread(void*)
0026bd69 T AND_GetAppId()
0026c3f9 T AND_OpenLink(char const*)
0027ba1d T AND_SendData(char const*, unsigned char const*, unsigned int, bool)
00483cd1 T AddDataFence()
00269a75 T AndroidPause()
001bd5b3 T AssertFailed(char const*, char const*, int)
004108a9 T CalcNewDelta(RwV2d*, RwV2d*)
0046f83d T CameraCreate(int, int, int)
002c998d T CdStreamInit(int)
002c9d39 T CdStreamOpen(char const*, bool)
002c9b3d T CdStreamRead(int, void*, unsigned int, unsigned int)
002c9c3d T CdStreamSync(int)
001e8c69 T CheckForPump()
004508c5 T CrossProduct(CVector const&, CVector const&)
005d0c11 T DefinedState()
00553411 T DisableMatFx(RpMaterial*, void*)
0047001d T DoHaspChecks()
00270fd5 T FindFileName(char const*)
003f6dc9 T FrontendIdle()
001b371d T GetNumLevels(unsigned int, unsigned int)
001b3767 T GetNumPixels(unsigned int, unsigned int)
001b0261 W HandleDecalZ(unsigned short)
0046f551 T Initialise3D(void*)
         U IsSCSignedIn()
002a9761 T IsWideScreen()
0046fc09 T LightsCreate(RpWorld*)
005d19c5 T LightsEnable(int)
005e50b9 T MainGameFunc(void*)
00297175 T MenuToScreen(CVector2D const&)
002a943d T Menu_NewGame()
002a91f9 T Menu_ShowNag()
00276a75 T NVDefaultLog(ENVLogLevel, char const*, char const*, char const*, ...)
00274c65 T NVHHDDSAlloc()
002718f1 T NVThreadInit(_JavaVM*)
00266a5b T NvFIsApkFile(void*)
00277209 T NvVecLengthf(float const*)
00267105 T OS_FileClose(void*)
00267637 T OS_FileFlush(void*)
00267401 T OS_FileWrite(void*, void const*, int)
0026a841 T OS_MoviePlay(char const*, bool, bool, float)
0026adcd T OS_MovieStop()
00268cdf T OS_SystemSet(OSDeviceChip, OSDeviceForm, OSDefinedDevice)
0029770d T PlayNavSound()
003f5ba9 T PluginAttach()
003f5b6d T PrintMetrics()
005c358f T RemoveRefsCB(RpAtomic*, void*)
0036689d T RenderAddTri(float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, int, int, int, int, int, int, int, int, int, int, int, int)
0039f6e9 T ReplaceTrack(int, int*)
002975c1 T RightPressed()
0021444d T RpClumpClone(RpClump*)
004d4ec5 T RsGrabScreen(RwCamera*)
004d4531 T RsInitialize()
00211135 T RtQuatRotate(RtQuat*, RwV3d const*, float, RwOpCombineType)
00211f8d T RtTileRender(RwCamera*, int, int, int, int, RwCamera* (*)(RwCamera*, int, int, void*), RwImage* (*)(RwImage*, int, int, void*), void*)
001d7a8d T RwEngineInit(RwMemoryFunctions const*, unsigned int, unsigned int)
001d78b5 T RwEngineOpen(RwEngineOpenParams*)
001d770d T RwEngineStop()
001d7a4d T RwEngineTerm()
001d85f3 T RwFrameCount(RwFrame*)
001d8135 T RwFrameDirty(RwFrame const*)
001d8671 T RwFrameScale(RwFrame*, RwV3d const*, RwOpCombineType)
003f5715 T RwGrabScreen(RwCamera*, char*)
001d9d41 T RwImageWrite(RwImage*, char const*)
001daa75 T RwRasterLock(RwRaster*, unsigned char, int)
001da575 T RwRasterRead(char const*)
001e59f1 T RwStreamOpen(RwStreamType, RwStreamAccessType, void const*)
001e56d5 T RwStreamRead(RwStream*, void*, unsigned int)
001e58cd T RwStreamSkip(RwStream*, unsigned int)
001e1689 T RxHeapCreate(unsigned int)
002971d1 T ScreenToMenu(CVector2D const&)
002976f5 T ScrollUpHeld()
005d606d T SetTextureCB(RpMaterial*, void*)
002d44a9 T SortRequests(CStreamingInfo**, CStreamingInfo**)
001bd5b1 T TodoFunction(char const*, char const*, int)
0026c7dd T War_HttpPost(char const*)
003d209d T WellBufferMe(float, float*, float*, float, float, bool)
00213bcd T _rpClumpOpen(void*, int, int)
00216fed T _rpLightOpen(void*, int, int)
00217ded T _rpMeshClose(void*, int, int)
0021813b T _rpMeshWrite(RpMeshHeader const*, void const*, RwStream*, RpMaterialList const*)
001e2535 T _rwColorOpen(void*, int, int)
001e2645 T _rwES2fclose(void*)
001e2751 T _rwES2fflush(void*)
001e267d T _rwES2fwrite(void const*, unsigned int, unsigned int, void*)
001e2555 T _rwErrorOpen(void*, int, int)
001d8141 T _rwFrameInit(RwFrame*)
001d7df5 T _rwFrameOpen(void*, int, int)
001dd78d T _rwIm3DClose(void*, int, int)
001d8901 T _rwImageOpen(void*, int, int)
001e1511 T _rxHeapReset(RxHeap*)
001c0751 T emu_GammaSet(unsigned char)
001b4dd5 T emu_SetWater(unsigned char)
001c076d T emu_Shutdown()
001bb19d T emu_glEnable(unsigned int)
001b9c7d T emu_glLightf(unsigned int, unsigned int, float)
001ba19d T emu_glLighti(unsigned int, unsigned int, int)
001bac0d T emu_glScaled(double, double, double)
001bacdd T emu_glScalef(float, float, float)
00269035 T initGraphics()
0047a10b T jpeg_destroy(jpeg_common_struct*)
005e4e1d T psGrabScreen(RwCamera*)
005e4ecd T psInitialize()
00279f95 T readDataFile(char const*, char*, unsigned int)
0027b765 T AND_LeaveRoom()
0027a5c9 T AND_MovieInit(_JNIEnv*)
0026ab05 T AND_PlayMovie(char const*, bool, bool, float)
0026aa61 T AND_PlayMovie(char const*, bool, bool, int, int, float)
0026cc09 T AND_SkuChange(char const*, int)
0026adf5 T AND_StopMovie()
0027d7e9 T AddLoaderTask(LoadTask*)
00269a55 T AndroidPaused()
0026687d T AsyncFileLock()
00315299 T BitfieldError(char*, char*, int)
003d64d9 T CamShakeNoPos(CCamera*, float)
005d33a5 T CameraDestroy(RwCamera*)
002c9d9d T CdStreamClose(int)
003bf2f9 T CheckValidCam()
0058d211 T CopyObjectsCB(RwObject*, void*)
0032ed05 T CorrectAspect(float&, float&, float&, float&)
005e4b39 T DoGameRestart()
0040b2d9 T FindPlayerPed(int)
0058d159 T FindUpgradeCB(RpAtomic*, void*)
001b37d7 T GetDataAsMips(unsigned char*, unsigned int, unsigned int, bool)
005d0df5 T GetFirstChild(RwFrame*)
001e8c61 T GetMaxStorage()
004825a5 T GetPipelineID(RpAtomic*)
005a8459 T GxtCharOvrStr(unsigned short*, unsigned short*, int)
005a83e1 T GxtCharStrcat(unsigned short*, unsigned short*)
005a8423 T GxtCharStrcpy(unsigned short*, unsigned short const*)
005a843f T GxtCharStrlen(unsigned short const*)
005e474d T IsPlayingGame()
003f8407 T IsPointerDown(unsigned int, unsigned int)
003bcb9d T IsPostLoading()
005a7ba1 T IsPunctuation(unsigned short)
00286ff1 T IsSCCloudFree()
005d19c9 T LightsDestroy(RpWorld*)
002ad129 T LoadMenuStats(void*)
002ad193 T LoadOtherData(void*)
002ad3f1 T LoadTelemetry()
003f609d T LoadingScreen(char const*, char const*, char const*)
0036ce5d T LogTestMatrix(char const*, char const*, int)
005a84db T MakeLowerCase(char*)
005a84b7 T MakeUpperCase(char*)
002a9165 T Menu_LoadSlot(int)
0029b5b5 T Menu_RateGame(void*)
0027a1dd T NVThreadSleep(unsigned long)
00266799 T OS_DebugBreak()
0026bdf5 T OS_DeviceIsTV()
00267425 T OS_FileDelete(OSFileDataArea, char const*)
00267645 T OS_FileRename(OSFileDataArea, char const*, char const*, bool)
0026bac5 T OS_SystemChip()
0026bad5 T OS_SystemForm()
0026c127 T OS_ThreadWait(void*)
00297305 T PS3MenuActive()
0031c4c5 T PhonePickUpCB(CAnimBlendAssociation*, void*)
0029775d T PlayBackSound()
002692d5 T ProcessEvents(bool)
001e7317 T RLEDecompress(unsigned char*, unsigned int, unsigned char const*, unsigned int, unsigned int)
001d3311 T RQDrawIndexed(RQShader*, RQDrawMode, unsigned int, void*)
001cc509 T RQGetRenderer()
001cc17d T RQ_CheckError(char const*, char const*, int)
00483d29 T ReadDataFence()
003f646d T Render2dStuff()
003f6391 T RenderEffects()
002142e1 T RpAtomicClone(RpAtomic*)
002140f5 T RpClumpCreate()
0021425d T RpClumpRender(RpClump*)
00216db1 T RpLightCreate(int)
0021d145 T RpWorldCreate(RwBBox*)
0021cc8d T RpWorldRender(RpWorld*)
0021caf1 T RpWorldUnlock(RpWorld*)
004d42e5 T RsAlwaysOnTop(int)
005e5b7d T RsKeyToOSWKey(RsKeyCodes)
004d42f1 T RsMouseSetPos(RwV2d*)
004d4485 T RsRwTerminate()
001ed2b1 T RtCharsetOpen()
001ed609 T RtDictDestroy(RtDict*)
002115db T RtQuatModulus(RtQuat*)
00211611 T RtSlerpCreate(int)
001d5cf1 T RwCameraClear(RwCamera*, RwRGBA*, int)
001d6eb5 T RwCameraClone(RwCamera*)
001d7825 T RwEngineClose()
001d7785 T RwEngineStart()
001d81ad T RwFrameCreate()
001d841d T RwFrameDeInit(RwFrame*)
001d849d T RwFrameGetLTM(RwFrame*)
001d8729 T RwFrameRotate(RwFrame*, RwV3d const*, float, RwOpCombineType)
001d8e21 T RwImageCreate(int, int, int)
001d8fa1 T RwImageResize(RwImage*, int, int)
001e3cfd T RwMatrixScale(RwMatrixTag*, RwV3d const*, RwOpCombineType)
001e208d T RwMemNative16(void*, unsigned int)
001e1f81 T RwMemNative32(void*, unsigned int)
001da019 T RwRGBAToPixel(RwRGBA*, int)
001da6dd T RwRasterClear(int)
001e5959 T RwStreamClose(RwStream*, void*)
001e57b5 T RwStreamWrite(RwStream*, void const*, unsigned int)
001dba3d T RwTextureRead(char const*, char const*)
001e1621 T RxHeapDestroy(RxHeap*)
001e13e1 T RxHeapRealloc(RxHeap*, void*, unsigned int, int)
002ad0c5 T SaveMenuStats(void*)
002ad2bd T SaveTelemetry()
00297309 T SelectPressed()
         U SetJNEEnvFunc(void* (*)())
00457619 T SetMuscleStat(float)
004825b5 T SetPipelineID(RpAtomic*, unsigned int)
00296ff9 T StartDownload(int)
003f577d T TakeJPegPhoto(RwCamera*)
0057f499 T TrainHitStuff(CPtrList&, CEntity*)
0026fee1 T UnlockStorage()
002a9799 T UpdateMapArea(bool)
00213b0d T _rpClumpClose(void*, int, int)
00216f39 T _rpLightClose(void*, int, int)
0021c719 T _rpSectorOpen(void*, int, int)
0021d7c5 T _rpTieDestroy(RpTie*)
001a9d93 T _rwCPUHaveMMX()
001a9d97 T _rwCPUHaveSSE()
001d5999 T _rwCameraOpen(void*, int, int)
001e2545 T _rwColorClose(void*, int, int)
001e2599 T _rwErrorClose(void*, int, int)
001d7e79 T _rwFrameClose(void*, int, int)
001d8c55 T _rwImageClose(void*, int, int)
001e3129 T _rwMatrixOpen(void*, int, int)
001e4d2d T _rwMemoryOpen(RwMemoryFunctions const*)
001aea39 T _rwOpenGLOpen()
001dd8d7 T _rwPipeAttach()
001dab11 T _rwRasterOpen(void*, int, int)
001e29d1 T _rwSListEmpty(RwSList*)
001e7035 T _rwStringOpen()
001e6a39 T _rwVectorOpen(void*, int, int)
001b3c91 T d3dShouldSwap(unsigned int)
001c04ad T emu_SetEnvMap(void*, float, int)
001b5615 T emu_glColor3b(signed char, signed char, signed char)
001b57a9 T emu_glColor3d(double, double, double)
001b5959 T emu_glColor3f(float, float, float)
001b5aed T emu_glColor3s(short, short, short)
001b5fb5 T emu_glColor4b(signed char, signed char, signed char, signed char)
001b62c5 T emu_glColor4d(double, double, double, double)
001b6581 T emu_glColor4f(float, float, float, float)
001b6829 T emu_glColor4s(short, short, short, short)
001bb3e9 T emu_glDisable(unsigned int)
001bae71 T emu_glFrustum(double, double, double, double, double, double)
001b9c9d T emu_glLightfv(unsigned int, unsigned int, float const*)
001ba1c5 T emu_glLightiv(unsigned int, unsigned int, int const*)
001ba975 T emu_glRotated(double, double, double, double)
001baac9 T emu_glRotatef(float, float, float, float)
001bb891 T emu_glScissor(int, int, int, int)
00279e61 T findDataMatch(char const*, char const*)
004822e9 T jdiv_round_up(long, long)
00481cc1 T jpeg_mem_init(jpeg_common_struct*)
00481cc5 T jpeg_mem_term(jpeg_common_struct*)
005d3289 T mallocAlignPC(int, int)
005e503f T psAlwaysOnTop(int)
0026be21 T AND_DeviceIsTV()
0026a3f1 T AND_DeviceType()
0026746d T AND_FileDelete(char const*)
002676bd T AND_FileRename(char const*, char const*, int)
002668a9 T AND_FileUpdate(double)
0027a5ad T AND_GetJNIFunc()
00269741 T AND_TouchEvent(int, int, int, int)
00296b79 T AddAmazonFiles(bool)
002969c5 T AllowNagScreen()
005a83c1 T AsciiToGxtChar(char const*, unsigned short*)
002c9d37 T CdStreamResume()
002c98a9 T CdStreamThread(void*)
002ad085 T ClearMenuStats()
002d4429 T CompareRequest(void const*, void const*)
003868e3 T CountAtomicsCB(RpAtomic*, void*)
005d0cb5 T DefinedState2d()
00297291 T DestroyTexture(RwTexture*&)
002ac73d T DoProfileStats()
00296d5d T DownloadThread(void*)
00450cb5 T FindCBFunction(unsigned char)
001bd5b5 T FunctionCalled(char const*, char const*)
001bcbd9 T GLDrawModeToRQ(unsigned int)
005d0d35 T GetFirstAtomic(RpClump*)
005d0da1 T GetFirstObject(RwFrame*)
002c9a89 T GetGTA3ImgSize()
001b4fd5 T GetGlobalColor()
001b9a7d T GetLightByType(EmuLightType, unsigned int)
00483d9f T GetPoolVehicle(int)
00483dc5 T GettPoolObjRef(CObject*)
00483dab T GettPoolPedRef(CPed*)
001d217d T GraphicsThread(void*)
0054d709 T GxtCharToAscii(unsigned short*, unsigned char)
005b796d T Im2DRenderQuad(float, float, float, float, float, float, float)
003f6ee9 T InitialiseGame()
00482bf1 T IsGameResuming(bool)
003fc009 T IsPinchZooming(bool)
0039f5f1 T IsRemovedTrack(int)
00267b79 T LIB_InputEvent(OSEventType, void*)
002ad191 T LoadMenuValues(void*)
005c3049 T MarkerAtomicCB(RpAtomic*, void*)
002aad01 T Menu_MapRender()
002a9ab9 T Menu_MapUpdate(float)
002a9451 T Menu_PauseGame(bool)
0026910d T NVEventAppInit(int, char**)
00269a89 T NVEventAppMain(int, char**)
002690c5 T NVEventEGLInit()
005e6539 T NotifyTrapFire(unsigned int)
00279351 T NvQuatIdentity(float*)
00266a4d T OS_FileFromApk(void**)
00267739 T OS_FileGetDate(OSFileDataArea, char const*)
002683b5 T OS_GamepadAxis(unsigned int, unsigned int)
0026c2a5 T OS_GetDateTime(DateTime*)
0026ca41 T OS_HTTPGetData(char const*, char**)
002667fd T OS_MutexCreate(char const*)
00266859 T OS_MutexDelete(void*)
0026688d T OS_MutexObtain(void*)
0026b041 T OS_PointerLock(bool)
0026c135 T OS_ThreadClose(void*)
0026a82d T OS_ThreadSleep(int)
0031c645 T PhonePutDownCB(CAnimBlendAssociation*, void*)
002a98e5 T PlaceRedMarker(bool)
00297785 T PlayErrorSound()
002972a9 T PointerClicked()
001cd7a9 T RQCreateShader(char const*, char const*, unsigned int)
001cd8a1 T RQDeleteShader(RQShader*)
001d2545 T RQ_CheckThread()
001c1ef1 T RegisterShader(unsigned int)
0021f741 T RegisterStream(RQVertexAttributeType, unsigned int, RQVertexAttributeFormat, bool, unsigned int, void*, bool)
00214045 T RpAtomicCreate()
0021458d T RpClumpDestroy(RpClump*)
002157df T RpGeometryLock(RpGeometry*, int)
00216ef5 T RpLightDestroy(RpLight*)
001c5e09 T RpMTEffectFind(char*)
001ca24d T RpUVAnimAddRef(RtAnimAnimation*)
001ca901 T RpUVAnimCreate(char const*, unsigned int, unsigned int, float, unsigned int*, RpUVAnimKeyFrameType)
0021cdb5 T RpWorldDestroy(RpWorld*)
004d4245 T RsErrorMessage(char const*)
004d4381 T RsEventHandler(RsEvent, void*)
004d4499 T RsRwInitialize(void*)
004d42f3 T RsSelectDevice()
001ebb8d T RtBMPImageRead(char const*)
001ed279 T RtCharsetClose()
001ece09 T RtCharsetPrint(RwRaster*, char const*, int, int)
001ed4e7 T RtDictAddEntry(RtDict*, void*)
0020a3f5 T RtPNGImageRead(char const*)
00211765 T RtSlerpDestroy(RtSlerp*)
00211a3d T RtSlerpSetLerp(RtSlerp*, int)
001d45af T RwBBoxAddPoint(RwBBox*, RwV3d const*)
001d5ee1 T RwCameraCreate()
001d83ed T RwFrameDestroy(RwFrame*)
001d84b7 T RwFrameGetRoot(RwFrame const*)
001d8e79 T RwImageDestroy(RwImage*)
001d9759 T RwImageGetPath()
001d96c5 T RwImageSetPath(char const*)
001e4495 T RwMatrixCreate()
001e39a9 T RwMatrixInvert(RwMatrixTag*, RwMatrixTag const*)
001e38f5 T RwMatrixRotate(RwMatrixTag*, RwV3d const*, float, RwOpCombineType)
001e33d5 T RwMatrixUpdate(RwMatrixTag*)
001da9d1 T RwRasterCreate(int, int, int, int)
001da781 T RwRasterRender(RwRaster*, int, int)
001da6b9 T RwRasterUnlock(RwRaster*)
001e681d T RwV2dNormalize(RwV2d*, RwV2d const*)
001e65d9 T RwV3dNormalize(RwV3d*, RwV3d const*)
001de515 T RxPacketCreate(RxPipelineNode*)
001df559 T RxPipelineLock(RxPipeline*)
005e4c35 T SaveCheckpoint(char const*, int)
002976fb T ScrollDownHeld()
00297701 T ScrollLeftHeld()
0058a221 T SetCompAlphaCB(RpMaterial*, void*)
005d204d T SetFullAmbient()
001b4f51 T SetGlobalColor(float, float, float, float)
003f042b T void SwapEndianness<CColSphere>(CColSphere*)
0027d7e5 T void SwapEndianness<WaveHeader>(WaveHeader*)
003f0431 T void SwapEndianness<CColTriangle>(CColTriangle*)
0027f12d T void SwapEndianness<tTrackLookup>(tTrackLookup*)
0038ea25 T void SwapEndianness<CompressedQuat>(CompressedQuat*)
0038ea29 T void SwapEndianness<QuaternionData>(QuaternionData*)
003f0437 T void SwapEndianness<CColModelSection>(CColModelSection*)
0038ea27 T void SwapEndianness<CompressedVector>(CompressedVector*)
0038ea2f T void SwapEndianness<CAnimBlendKeyFrame>(CAnimBlendKeyFrame*)
003f0433 T void SwapEndianness<CSerializedColTriangle>(CSerializedColTriangle*)
0059c951 T void SwapEndianness<LightAttrFileStructure>(LightAttrFileStructure*)
0038ea31 T void SwapEndianness<CAnimBlendKeyFrameNoTrans>(CAnimBlendKeyFrameNoTrans*)
0059c953 T void SwapEndianness<OldLightAttrFileStructure>(OldLightAttrFileStructure*)
0059c955 T void SwapEndianness<ParticleAttrFileStructure>(ParticleAttrFileStructure*)
0059c959 T void SwapEndianness<PedQueueAttrFileStructure>(PedQueueAttrFileStructure*)
0059c957 T void SwapEndianness<RoadsignAttrFileStructure>(RoadsignAttrFileStructure*)
003f0435 T void SwapEndianness<CSerializedColTrianglePlane>(CSerializedColTrianglePlane*)
0038ea2b T void SwapEndianness<CCompressedAnimBlendKeyFrame>(CCompressedAnimBlendKeyFrame*)
0038ea2d T void SwapEndianness<CCompressedAnimBlendKeyFrameNoTrans>(CCompressedAnimBlendKeyFrameNoTrans*)
003f042d T void SwapEndianness<CColBox>(CColBox*)
003f042f T void SwapEndianness<CColLine>(CColLine*)
0031529b T void SwapEndianness<CPathNode>(CPathNode*)
0038ea39 T void SwapEndianness<CAnimManager::CIFFRTSKey>(CAnimManager::CIFFRTSKey*)
0038ea33 T void SwapEndianness<CAnimManager::CIFFAnimData>(CAnimManager::CIFFAnimData*)
0038ea37 T void SwapEndianness<CAnimManager::CIFFRKey>(CAnimManager::CIFFRKey*)
0038ea35 T void SwapEndianness<CAnimManager::CIFFRTKey>(CAnimManager::CIFFRTKey*)
00450f15 T SwapEndianness(BreakInfo_t*)
00549a89 T TaskIsFighting(int)
003f5501 T ToggleDebugFPS()
0040833d T TransformPoint(RwV3d&, CSimpleTransform const&, RwV3d const&)
004082c9 T TransformPoint(CSimpleTransform const&, RwV3d const&)
005d3d0d T TxdStoreLoadCB(char const*, char const*)
0027b295 T WarBillingInit(_JNIEnv*)
0027a375 T WarGamepadInit(_JNIEnv*)
00287135 T WriteCloudInfo()
0026fef1 T ZIP_AddStorage(ZIPFile*)
0026fdd5 T ZIP_FileCreate(char const*)
00217ffd T _rpMeshDestroy(RpMeshHeader*)
0021c729 T _rpSectorClose(void*, int, int)
001a9d9b T _rwCPUHaveSSE2()
001d5931 T _rwCameraClose(void*, int, int)
001d82b9 T _rwFrameDeInit(RwFrame*)
001dd76d T _rwIm3DGetPool()
001e30c1 T _rwMatrixClose(void*, int, int)
001e4de9 T _rwMemoryClose()
001aea3d T _rwOpenGLClose()
001daaa5 T _rwRasterClose(void*, int, int)
001e6c1f T _rwResHeapFree(void*)
001e6bed T _rwResHeapInit(void*, unsigned int)
001e2931 T _rwSListCreate(int, unsigned int)
001e2c03 T _rwSListGetEnd(RwSList*)
001e71e5 T _rwStringClose()
001dbd31 T _rwTextureOpen(void*, int, int)
001e69bd T _rwVectorClose(void*, int, int)
005d3411 T destroyTexture(RwTexture*, void*)
001bce65 T emu_ArraysLock(unsigned int)
001b56dd T emu_glColor3bv(signed char const*)
001b5885 T emu_glColor3dv(double const*)
001b5a29 T emu_glColor3fv(float const*)
001b5bb9 T emu_glColor3sv(short const*)
001b5c89 T emu_glColor3ub(unsigned char, unsigned char, unsigned char)
001b5e1d T emu_glColor3us(unsigned short, unsigned short, unsigned short)
001b6131 T emu_glColor4bv(signed char const*)
001b6429 T emu_glColor4dv(double const*)
001b66d5 T emu_glColor4fv(float const*)
001b69a9 T emu_glColor4sv(short const*)
001b6b41 T emu_glColor4ub(unsigned char, unsigned char, unsigned char, unsigned char)
001b6e49 T emu_glColor4us(unsigned short, unsigned short, unsigned short, unsigned short)
001bb199 T emu_glGetError()
001b92ad T emu_glNormal3b(signed char, signed char, signed char)
001b9439 T emu_glNormal3d(double, double, double)
001b95e9 T emu_glNormal3f(float, float, float)
001b977d T emu_glNormal3s(short, short, short)
001b8431 T emu_glVertex2d(double, double)
001b85cd T emu_glVertex2f(float, float)
001b8751 T emu_glVertex2s(short, short)
001b88cd T emu_glVertex3d(double, double, double)
001b8a7d T emu_glVertex3f(float, float, float)
001b8c11 T emu_glVertex3s(short, short, short)
001b8dad T emu_glVertex4d(double, double, double, double)
001b8f71 T emu_glVertex4f(float, float, float, float)
001b910d T emu_glVertex4s(short, short, short, short)
001bb735 T emu_glViewport(int, int, int, int)
00279ea5 T findDataString(char const*, char const*, int)
00481ca5 T jpeg_get_large(jpeg_common_struct*, unsigned int)
00481c99 T jpeg_get_small(jpeg_common_struct*, unsigned int)
004806ed T jpeg_std_error(jpeg_error_mgr*)
0047bda9 T jpeg_stdio_src(jpeg_decompress_struct*, __sFILE*)
00269119 T nv_shader_init()
005e4de1 T psErrorMessage(char const*)
005e5099 T psSelectDevice()
001e9979 T textureCompare(void const*, void const*)
0026a419 T AND_BillingInit()
00266825 T AND_FileCleanup()
0026bbd9 T AND_GetDeviceID()
00287171 T AddSCCloudWatch()
003f6f31 T AppEventHandler(RsEvent, void*)
00266891 T AsyncFileUnlock()
005ced91 T CalcNewDeltaVal(RwV2d*, RwV2d*)
005adffd T CalcScreenCoors(CVector const&, CVector*)
005adf11 T CalcScreenCoors(CVector const&, CVector*, float*, float*)
002c9d35 T CdStreamSuspend()
0040eb7d T CheckReferences(CEntity*)
00388785 T ChooseComponent(int, int)
005d0c09 T CreateDebugFont()
002fedb9 T DebugHelpSystem(char const*, char const*, int)
001cff19 T ES2InitTextures()
002ad03d T EnterGameFromSC()
         U EnterSocialCLub()
001e738f T FileWriteEndian(void*, unsigned char*, unsigned int, unsigned int)
0040b62d T FindPlayerCoors(int)
0040bb1d T FindPlayerSpeed(int)
0040b5e5 T FindPlayerTrain(int)
00386899 T GetAtomicListCB(RpAtomic*, void*)
001b37b1 T GetDataHasAlpha(unsigned char*, unsigned int, unsigned int)
002c9c85 T GetFirstInQueue(Queue*)
005d0e1d T GetFirstTexture(RwTexDictionary*)
0021829d T GetMeshPriority(RpMesh const*)
005d0dcd T GetSecondObject(RwFrame*)
003eab71 T GetStackPointer()
00482189 T HDSkipInputData(jpeg_decompress_struct*, long)
001b00cd W HandleForceZOff(unsigned short)
002ffc4d T HandleSlotMelee()
00300345 T HandleSlotOther()
003000ad T HandleSlotThrow()
001bd5ad T IgnoredFunction(char const*, char const*, int)
00482199 T InitDestination(jpeg_compress_struct*)
002ac601 T InitProfileData()
001c1d89 T InitShaderCache()
002fcec1 T IsCheatMenuOpen()
005e5043 T IsForegroundApp()
001e8c5d T IsLowSpecDevice()
00388611 T IsValidCompRule(int)
00268f25 T LIB_InputUpdate(int)
002a94bd T Menu_ClearSlots()
002a94a9 T Menu_DeleteSlot(int)
00276a45 T NVCompressFlush()
00274da1 T NVCompressToDXT(NVHHDDSImage*, int, int)
00271141 T NVEventLoadFile(char const*)
002772dd T NvCrossProductf(float*, float const*, float const*)
00278567 T NvMultScaleMatf(float (*) [4], float const (*) [4], float, float, float)
00277233 T NvNormalizeVecf(float*, float const*)
0027945d T NvQuatFromEuler(float*, float, float, float)
0027990d T NvQuatNormalize(float*, float const*)
0027750f T NvTransformVecf(float*, float const (*) [4], float const*)
00267623 T OS_FileGetState(void*)
0026ae7d T OS_MovieSetText(char const*, bool, bool)
002668a1 T OS_MutexRelease(void*)
0026c1b9 T OS_SemaphoreGet(void*)
0026bae5 T OS_SystemDevice()
0026bf35 T OS_ThreadLaunch(unsigned int (*)(void*), void*, unsigned int, char const*, int, OSThreadPriority)
0026a4e9 T OS_TimeAccurate()
001b34cb W void OrBlockToPixels<unsigned int>(unsigned char const*, unsigned int*, unsigned int, unsigned int*)
001b3235 W void OrBlockToPixels<unsigned short>(unsigned char const*, unsigned short*, unsigned int, unsigned short*)
00297735 T PlaySelectSound()
001b50cd T QueueImmCPUData()
0058d1e1 T RemoveObjectsCB(RwFrame*, void*)
0058d187 T RemoveObjectsCB(RwObject*, void*)
0058d0fd T RemoveUpgradeCB(RpAtomic*, void*)
003f638d T RenderDebugShit()
00483cb5 T ResetFenceCount()
0021416d T RpAtomicDestroy(RpAtomic*)
00214725 T RpClumpAddLight(RpClump*, RpLight*)
0021e601 T RpClumpGetWorld(RpClump const*)
002142c1 T RpLightGetClump(RpLight const*)
0021e875 T RpLightGetWorld(RpLight const*)
00216747 T RpLightSetColor(RpLight*, RwRGBAReal const*)
001c5f2d T RpMTEffectWrite(RpMTEffect const*)
0021724d T RpMaterialClone(RpMaterial*)
001ca259 T RpUVAnimDestroy(RtAnimAnimation*)
001ca295 T RpUVAnimGetName(RtAnimAnimation const*)
0021e295 T RpWorldAddClump(RpWorld*, RpClump*)
0021e7b1 T RpWorldAddLight(RpWorld*, RpLight*)
0021d371 T RpWorldInstance(RpWorld*)
004d46a1 T RsSetPresetView(RwCamera*, int)
004d4241 T RsWindowSetText(char const*)
001ec645 T RtBMPImageWrite(RwImage*, char const*)
001ed1f9 T RtCharsetCreate(RwRGBA const*, RwRGBA const*)
0020a145 T RtPNGImageWrite(RwImage*, char const*)
001d44dd T RwBBoxCalculate(RwBBox*, RwV3d const*, int)
001d5ea1 T RwCameraDestroy(RwCamera*)
001d84bd T RwFrameAddChild(RwFrame*, RwFrame*)
001e4909 T RwFreeListPurge(RwFreeList*)
001dcfad T RwIm3DTransform(RxObjSpace3DVertex*, unsigned int, RwMatrixTag*, unsigned int)
001da435 T RwImageGetGamma()
001d90c9 T RwImageMakeMask(RwImage*)
001dac01 T RwImageResample(RwImage*, RwImage const*)
001d8b75 T RwImageSetGamma(float)
001e446d T RwMatrixDestroy(RwMatrixTag*)
001da7d1 T RwRasterDestroy(RwRaster*)
001db7bd T RwTextureCreate(RwRaster*)
001de755 T RxClusterUnlock(RxCluster*)
001df715 T RxPipelineClone(RxPipeline*)
0027b109 T SaveGameToCloud(unsigned int, char const*, unsigned int)
00297707 T ScrollRightHeld()
002cafb1 T SetNormalMatrix(float, float, RwV2d)
001bbacd T SetTargetCoords(bool)
001de9dd T StalacMiteAlloc(unsigned int)
001de98d T StalacTiteAlloc(unsigned int)
001e8c5b T StopTexdbThread()
004083b9 T TransformPoints(RwV3d*, int, CSimpleTransform const&, RwV3d const*)
004085c5 T TransformPoints(RwV3d*, int, CMatrix const&, RwV3d const*)
004084a3 T TransformVector(RwV3d&, CSimpleTransform const&, RwV3d const&)
00408447 T TransformVector(CSimpleTransform const&, RwV3d const&)
002acd19 T UpdateTelemetry()
0046f755 T ValidateVersion()
00268539 T WarKeyboardInit(_JNIEnv*)
0026ca45 T War_HttpGetData(char const*, char**)
0021571d T _rpGeometryOpen(void*, int, int)
001c5579 T _rpMTEffectInit(RpMTEffect*, RwPlatformID)
001c5271 T _rpMTEffectOpen()
002170a9 T _rpMaterialOpen(void*, int, int)
0021bccd T _rpMeshOptimise(RpBuildMesh*, unsigned int)
001ed4ad T _rtDictDestruct(RtDict*)
001a9d9f T _rwCPUHave3DNow()
001b1131 T _rwOpenGLSystem(int, void*, void*, int)
001ac1e1 T _rwPalQuantInit(rwPalQuant*)
001ac339 T _rwPalQuantTerm(rwPalQuant*)
001e6c9b T _rwResHeapAlloc(void*, unsigned int)
001e6c1b T _rwResHeapClose(void*)
001e2b51 T _rwSListDestroy(RwSList*)
001e2bb5 T _rwSListToArray(RwSList*)
001dbc01 T _rwTextureClose(void*, int, int)
001e64e5 T _rwV3dNormalize(RwV3d*, RwV3d const*)
001de1cd T _rxPipelineOpen()
00279d51 T charIsSeparator(char)
001bd00b T emu_ArraysGetID(unsigned int)
001bcd65 T emu_ArraysReset()
001bce41 T emu_ArraysStore(unsigned char, unsigned char)
001c0535 T emu_ResetEnvMap()
001b9931 T emu_ShutdownImm()
001b5d51 T emu_glColor3ubv(unsigned char const*)
001b5ee5 T emu_glColor3usv(unsigned short const*)
001b6cbd T emu_glColor4ubv(unsigned char const*)
001b6fc5 T emu_glColor4usv(unsigned short const*)
001bb6d1 T emu_glGetFloatv(unsigned int, float*)
001bb639 T emu_glIsEnabled(unsigned int)
001ba265 T emu_glMaterialf(unsigned int, unsigned int, float)
001b9371 T emu_glNormal3bv(signed char const*)
001b9515 T emu_glNormal3dv(double const*)
001b96b9 T emu_glNormal3fv(float const*)
001b9849 T emu_glNormal3sv(short const*)
001ba7dd T emu_glPopMatrix()
001b8501 T emu_glVertex2dv(double const*)
001b8695 T emu_glVertex2fv(float const*)
001b880d T emu_glVertex2sv(short const*)
001b89a9 T emu_glVertex3dv(double const*)
001b8b4d T emu_glVertex3fv(float const*)
001b8cdd T emu_glVertex3sv(short const*)
001b8e95 T emu_glVertex4dv(double const*)
001b904d T emu_glVertex4fv(float const*)
001b91d9 T emu_glVertex4sv(short const*)
00482339 T jcopy_block_row(short (*) [64], short (*) [64], unsigned int)
0047fd05 T jinit_upsampler(jpeg_decompress_struct*)
004808a5 T jpeg_fdct_float(float*)
00481cab T jpeg_free_large(jpeg_common_struct*, void*, unsigned int)
00481c9f T jpeg_free_small(jpeg_common_struct*, void*, unsigned int)
00480a71 T jpeg_idct_float(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
0047bcad T jpeg_stdio_dest(jpeg_compress_struct*, __sFILE*)
00279a3d T nv_load_program(char const*, char const*)
0027b191 T AND_CreateBitmap(char*, int)
00268c85 T AND_DeviceLocale()
0026aed9 T AND_MovieSetText(char const*, bool, bool)
0027b67d T AND_SetPopupView()
0026c14d T AND_ThreadOnMain()
0027b205 T AND_VibratePhone(int)
00459731 T AddPlayerTexture(RwTexDictionary*, RwTexture*)
0040ede1 T AllowDistanceFog()
001ce0d9 T BuildPixelSource(unsigned int)
002c9a99 T CdStreamShutdown()
00388765 T CountCompsInRule(int)
003f5713 T CreateIdleThread()
005d0c0b T DestroyDebugFont()
005e55c9 T DoesPadHaveInput(int)
00450c91 T FindCBFunctionID(void (*)(CAnimBlendAssociation*, void*))
002f90dd T FindFlightHeight(CPlane*, float)
00386939 T FindHeadRadiusCB(RwObject*, void*)
0040bbb9 T FindPlayerEntity(int)
0040bea5 T FindPlayerHeight()
0040bbf5 T FindPlayerWanted(int)
005d0c0f T FlushObrsPrintfs()
001ba5dd T GetAlphaModulate()
002caddd T GetExtraColorPtr(RpGeometry*)
0048248d T GetFrameNodeName(RwFrame*)
001cc0e9 T GetGLErrorString(unsigned int)
005a7c41 T GetJapaneseWidth(unsigned short, bool)
001b9a49 T GetMaterialDirty()
003892d5 T GetModelFromName(char const*)
003ef097 T GetNameAndDamage(char const*, char*, bool&)
003eab6d T GetReturnAddress()
004c83e9 T GetTouchDistance(bool, float, float, float, CVector, CVector, float*)
005e5079 T GetVideoCardName()
001e7249 T HashStringNoCase(char const*)
00472059 T InitModelIndices()
0027b10b T IsCloudAvailable()
002969e5 T IsFileDownloaded(int)
0027025d T LIB_GamepadState(int, int)
00276d21 T NVDefaultLogInfo(char const*, char const*, ...)
00276db9 T NVDefaultLogWarn(char const*, char const*, ...)
00274c7f T NVHHDDSAllocData(NVHHDDSImage*)
00276fed T NVLogLevelString(ENVLogLevel)
0027921b T NvBuildOrthoMatf(float (*) [4], float, float, float, float, float, float)
00278541 T NvBuildScaleMatf(float (*) [4], float, float, float)
00277181 T NvDifferentMatsf(float (*) [4], float const (*) [4])
002771e3 T NvExtract3x3Matf(float (*) [3], float const (*) [4])
00278fa5 T NvMultRotDegMatf(float (*) [4], float const (*) [4], float const*, float)
002789a1 T NvMultRotRadMatf(float (*) [4], float const (*) [4], float const*, float)
0026ce2d T OS_BillingSetKey(char const*)
0026cc81 T OS_BillingUpdate()
00267035 T OS_FileSubHandle(void*, int, int)
0026837d T OS_GamepadButton(unsigned int, unsigned int)
0026baf9 T OS_GetDeviceInfo(int)
0026c18f T OS_SemaphorePost(void*)
0026c193 T OS_SemaphoreWait(void*)
0027add1 T OS_SendStatEvent(char const*, bool)
0026c549 T OS_ServiceShowAd()
0026baf5 T OS_SystemVersion()
005d0c0d T ObrsPrintfString(char const*, short, short)
001cc5bd T OutputShaderCode(char const*)
0057d09d T PlayAnnouncement(unsigned char, unsigned char)
005e4db9 T PlayerDrivingCar()
00458251 T PreInstanceClump(RpClump*)
004081f9 T PrintNumMatrices(char*)
003f60b5 T PrintRwUsageInfo()
         U ProfileStatsSend(char const*, int)
003f6d85 T Pump_SwapBuffers()
001d33f1 T RQDrawNonIndexed(RQShader*, RQDrawMode, unsigned int, unsigned int)
001d3135 T RQSetDescription(RQVertexBufferDescription const&)
00366abd T RotateVecIntoVec(RwV3d*, RwV3d*, RwV3d*)
0021e0bd T RpAtomicGetWorld(RpAtomic const*)
002156dd T RpAtomicInstance(RpAtomic*)
002141d5 T RpAtomicSetFrame(RpAtomic*, RwFrame*)
00214245 T RpClumpAddAtomic(RpClump*, RpAtomic*)
00214781 T RpClumpAddCamera(RpClump*, RwCamera*)
00215a41 T RpGeometryCreate(int, int, unsigned int)
002158d1 T RpGeometryUnlock(RpGeometry*)
00216731 T RpLightSetRadius(RpLight*, float)
001c5cf7 T RpMTEffectAddRef(RpMTEffect*)
00217171 T RpMaterialCreate()
0021dff9 T RpWorldAddAtomic(RpWorld*, RpAtomic*)
0021df85 T RpWorldAddCamera(RpWorld*, RwCamera*)
004d458d T RsPathnameCreate(char const*)
004d4b59 T RsSavePresetView(RwCamera*)
004d42a1 T RsWarningMessage(char const*)
001eadbd T RtAnimInitialize()
001ed1b1 T RtCharsetDestroy(RwRaster*)
001ed031 T RtCharsetGetDesc(RwRaster*, RtCharsetDesc*)
001ed341 T RtDictSchemaInit(RtDictSchema*)
0021179d T RtSlerpGetMatrix(RtSlerp*, RwMatrixTag*, float)
001d4595 T RwBBoxInitialize(RwBBox*, RwV3d const*)
002142d1 T RwCameraGetClump(RwCamera const*)
0021dfe9 T RwCameraGetWorld(RwCamera const*)
001d76b9 T RwEngineSetFocus(int)
001d86cd T RwFrameTransform(RwFrame*, RwMatrixTag const*, RwOpCombineType)
001d8615 T RwFrameTranslate(RwFrame*, RwV3d const*, RwOpCombineType)
001e44f1 T RwFreeListCreate(int, int, int)
001e28d9 T RwIm2DRenderLine(RwOpenGLVertex*, int, int, int)
001dd3b5 T RwIm3DRenderLine(int, int)
001d9281 T RwImageApplyMask(RwImage*, RwImage const*)
001e33e5 T RwMatrixMultiply(RwMatrixTag*, RwMatrixTag const*, RwMatrixTag const*)
001e3219 T RwMatrixOptimize(RwMatrixTag*, RwMatrixTolerance const*)
001e28c9 T RwRenderStateGet(RwRenderState, void*)
001e2895 T RwRenderStateSet(RwRenderState, void*)
001e214f T RwStreamReadReal(RwStream*, float*, unsigned int)
001db6e5 T RwTextureDestroy(RwTexture*)
001db821 T RwTextureSetName(RwTexture*, char const*)
001de591 T RxClusterSetData(RxCluster*, void*, int, int)
001de8c5 T RxPipelineCreate()
005e4c39 T SaveGameForPause(eSaveTypes, char*)
0046bac9 T ScaleLODDistance(unsigned short)
005d2959 T ScratchPadMemcpy(void*, void*, unsigned int)
002a8cf5 T SendLanguageToSC()
001ead95 T Set360UVAnimHack(bool)
00269a65 T SetAndroidPaused(int)
002caa8d T SetEnvMapTexture(RwTexture*, float, float, float, RwV2d)
005d1cf9 T SetFlashyColours(float)
00482465 T SetFrameNodeName(RwFrame*, char const*)
001b9a59 T SetMaterialDirty(bool)
001e8c59 T StartTexdbThread()
002ef6fd T TestForThisAngle(float, CVector*, CVector*, CVector*, CVector*, CVector*, CVector*, CVector*, CVector*, float, float, float, bool)
003f7001 T TestModelIndices()
003f4639 T TidyUpModelInfo2(CEntity*, bool)
00408501 T TransformVectors(RwV3d*, int, CSimpleTransform const&, RwV3d const*)
00408571 T TransformVectors(RwV3d*, int, CMatrix const&, RwV3d const*)
00287075 T UpdateCloudSaves()
0021572d T _rpGeometryClose(void*, int, int)
001c54ad T _rpMTEffectClose()
00217121 T _rpMaterialClose(void*, int, int)
0021c8b7 T _rpWorldFindBBox(RpWorld*, RwBBox*)
001a9d8d T _rwCPUGetCPUName(char*)
001d6fa5 T _rwCameraValOpen()
001aedf5 T _rwGLHandleBlend(RwRaster*)
001d9775 T _rwImageSwapPath(char**, int*)
001e6d5d T _rwResHeapCalloc(void*, unsigned int, unsigned int)
001e4f2d T _rwResourcesOpen(void*, int, int)
001e2b3f T _rwSListGetArray(RwSList*)
001e2bff T _rwSListGetBegin(RwSList*)
001e2bf5 T _rwSListGetEntry(RwSList*, int)
001d4ecd T _rwStringDestroy(char*)
001de035 T _rxPacketDestroy(RxPacket*)
001de155 T _rxPipelineClose()
001e1ddb T _rxSelectionSort(void*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
005a7b01 T containsNonAscii(unsigned short*, int)
001bcff5 T emu_ArraysDelete(unsigned int)
001bce81 T emu_ArraysUnlock(unsigned int)
001bcdb9 T emu_ArraysVertex(void*, unsigned int, unsigned int, unsigned int)
001bb895 T emu_IsAltDrawing()
001b4df1 T emu_SetWaterTime(float)
001bb85d T emu_glClearColor(float, float, float, float)
001bb86d T emu_glClearDepth(double)
001ba279 T emu_glMaterialfv(unsigned int, unsigned int, float const*)
001ba6a9 T emu_glMatrixMode(unsigned int)
001ba6cd T emu_glPushMatrix()
001b4c21 T emu_glReadPixels(int, int, int, int, unsigned int, unsigned int, void*)
001b7151 T emu_glTexCoord1d(double)
001b72d9 T emu_glTexCoord1f(float)
001b744d T emu_glTexCoord1s(short)
001b75b5 T emu_glTexCoord2d(double, double)
001b7751 T emu_glTexCoord2f(float, float)
001b78d5 T emu_glTexCoord2s(short, short)
001b7a51 T emu_glTexCoord3d(double, double, double)
001b7c01 T emu_glTexCoord3f(float, float, float)
001b7d95 T emu_glTexCoord3s(short, short, short)
001b7f31 T emu_glTexCoord4d(double, double, double, double)
001b80f5 T emu_glTexCoord4f(float, float, float, float)
001b8291 T emu_glTexCoord4s(short, short, short, short)
001bad99 T emu_glTranslated(double, double, double)
001bae0d T emu_glTranslatef(float, float, float)
00480ded T jinit_memory_mgr(jpeg_common_struct*)
0047ce91 T jpeg_huff_decode(bitread_working_state*, int, int, d_derived_tbl*, int)
0047b839 T jpeg_read_header(jpeg_decompress_struct*, unsigned char)
0047a351 T jpeg_set_quality(jpeg_compress_struct*, int, unsigned char)
005e4e25 T psPathnameCreate(char const*)
005e4de3 T psWarningMessage(char const*)
001aed05 T rwIsAlphaBlendOn()
001aecf1 T rwIsDepthWriteOn()
0026a5ad T AND_BillingUpdate(bool)
0027b149 T AND_CreateTextBox(int, int, int, int, int)
00267905 T AND_GamepadUpdate()
0026bb2d T AND_GetDeviceInfo(int)
0027b935 T AND_InvitePLayers()
0026895d T AND_KeyboardEvent(bool, int, int, bool)
0026e685 T AND_OnStateLoaded(LIB_CloudLoadResultStatus, unsigned char*, int)
0026a681 T AND_ThreadCleanup()
0027d931 T BankLoadingThread(void*)
004510c9 T BreakableTransfer(RpAtomic*, RpAtomic*)
001ce991 T BuildVertexSource(unsigned int)
005d3741 T CanVideoCardDoDXT()
002c9bfd T CdStreamGetStatus(int)
00221bdd T ClearLightApplied()
001b2d5d T ConvertDXTToRaw16(void const*, RQTextureFormat, unsigned int, unsigned int)
001b3aa7 T CreateTextureData(RwPlatformID, RwRaster*)
0040be31 T FindPlayerHeading(int)
0040b581 T FindPlayerVehicle(int, bool)
001cfa19 T GLDepthFuncFromRQ(RQDepthFunc)
005d0d79 T Get2DEffectAtomic(RpClump*)
00459d89 T GetAtomicWithName(RpClump*, char const*)
0044326d T GetTextureCorners(int, int, CVector2D*)
0048214d T HDFillInputBuffer(jpeg_decompress_struct*)
004821ed T HDTermDestination(jpeg_compress_struct*)
004a72c5 T IsPedPointerValid(CPed*)
005ae529 T IsPointInsideLine(float, float, float, float, float, float, float)
002701ad T LIB_KeyboardState(OSKeyboardKey)
0027b105 T LoadGameFromCloud(unsigned int, int*)
0034e1a9 T LoadMissionScript(int)
0029b46d T Menu_LoadFailedOK(void*)
002a8f05 T Menu_LoadSettings()
002a99bd T Menu_MapInitPause()
002a90e1 T Menu_RetryMission()
0029b515 T Menu_SaveFailedOK(void*)
002a8e55 T Menu_SaveSettings()
00276c89 T NVDefaultLogDebug(char const*, char const*, ...)
00276e51 T NVDefaultLogError(char const*, char const*, ...)
00276ee9 T NVDefaultLogFatal(char const*, char const*, ...)
00277069 T NVDefaultLogTrace(char const*, char const*, ...)
003f5c1d T NewTileRendererCB(RwCamera*, int, int, void*)
005e653b T NotifyTriggerFail(unsigned int)
00278fbd T NvBuildLookatMatf(float (*) [4], float const*, float const*, float const*)
002791ad T NvBuildOrtho2Matf(float (*) [4], float, float, float, float)
00278f8d T NvBuildRotDegMatf(float (*) [4], float const*, float)
00278855 T NvBuildRotRadMatf(float (*) [4], float const*, float)
0027715d T NvClockDiffInSecs(long long, long long)
00278de1 T NvMultRotXDegMatf(float (*) [4], float const (*) [4], float)
002786e3 T NvMultRotXRadMatf(float (*) [4], float const (*) [4], float)
00278e6d T NvMultRotYDegMatf(float (*) [4], float const (*) [4], float)
0027875b T NvMultRotYRadMatf(float (*) [4], float const (*) [4], float)
00278efd T NvMultRotZDegMatf(float (*) [4], float const (*) [4], float)
002787d7 T NvMultRotZRadMatf(float (*) [4], float const (*) [4], float)
00277327 T NvTransformPointf(float*, float const (*) [4], float const*)
0026af35 T OS_MovieClearText(bool)
0026ae1d T OS_MovieIsPlaying(int*)
0026afd5 T OS_MovieTextScale(int)
0026b043 T OS_PointerGetType(int)
00268cbd T OS_ScreenGetWidth()
0026c441 T OS_ServiceRateApp(char const*)
0026bcdd T OS_SystemGetAppId()
0026c0f1 T OS_ThreadGetValue()
0026c0d1 T OS_ThreadSetValue(void*)
001d1f3f T RQ_Command_rqCopy(char*&)
001d1f31 T RQ_Command_rqFree(char*&)
001cc191 T RQ_Command_rqInit(char*&)
0045bec1 T ResolveClothesIDs()
00366bcd T RotateVecAboutVec(RwV3d*, RwV3d*, RwV3d*, float)
00215109 T RpClumpStreamRead(RwStream*)
00215961 T RpGeometryDestroy(RpGeometry*)
001c2c01 T RpHAnimFrameGetID(RwFrame*)
001c2bed T RpHAnimFrameSetID(RwFrame*, int)
001c2c11 T RpHAnimIDGetIndex(RpHAnimHierarchy*, int)
00216bc1 T RpLightStreamRead(RwStream*)
001c5bed T RpMTEffectDestroy(RpMTEffect*)
001c5f5d T RpMTEffectGetName(RpMTEffect*)
001c5709 T RpMTEffectGetPath()
001c5de5 T RpMTEffectSetName(RpMTEffect*, char*)
001c565d T RpMTEffectSetPath(char const*)
002171d1 T RpMaterialDestroy(RpMaterial*)
00212c51 T RpWorldStreamRead(RwStream*)
004d4221 T RsKeyFromScanCode(unsigned char, int)
004d4809 T RsLoadPresetViews()
004d4345 T RsPadEventHandler(RsEvent, void*)
004d4589 T RsPathnameDestroy(char*)
001ed5a3 T RtDictRemoveEntry(RtDict*, void*)
001ed79f T RtDictStreamWrite(RtDict const*, RwStream*)
002113c1 T RtQuatQueryRotate(RtQuat const*, RwV3d*, float*)
00211675 T RtSlerpInitialize(RtSlerp*, RwMatrixTag*, RwMatrixTag*)
001d5a15 T RwCameraEndUpdate(RwCamera*)
001e4671 T RwFreeListDestroy(RwFreeList*)
001d8ed9 T RwImageFreePixels(RwImage*)
001da0b9 T RwImageStreamRead(RwStream*)
001e402d T RwMatrixTransform(RwMatrixTag*, RwMatrixTag const*, RwOpCombineType)
001e3ed5 T RwMatrixTranslate(RwMatrixTag*, RwV3d const*, RwOpCombineType)
001da761 T RwRasterClearRect(RwRect*, int)
001da6ad T RwRasterGetOffset(RwRaster*, short*, short*)
001da975 T RwRasterSubRaster(RwRaster*, RwRaster*, RwRect*)
001e1fbb T RwStreamFindChunk(RwStream*, unsigned int, unsigned int*, unsigned int*)
001e2125 T RwStreamReadInt16(RwStream*, short*, unsigned int)
001e2179 T RwStreamReadInt32(RwStream*, int*, unsigned int)
001e2095 T RwStreamWriteReal(RwStream*, float const*, unsigned int)
001de839 T RxPipelineExecute(RxPipeline*, void*, int)
002872b5 T SaveGameToSCCloud(int, char const*, int)
005d2085 T SetAmbientColours(RwRGBAReal*)
005d2069 T SetAmbientColours()
002968b1 T SetupDataDownload()
         U TelemetryDataSend(char const*, char const*)
001db33d T TextureAnnihilate(RwTexture*)
001c1f19 T UpdateShaderCache()
00296b75 T UseHiDetailPlayer()
0026cdb9 T WarBilling_AddSku(char const*)
00215f7f T _rpGeometryAddRef(RpGeometry*)
002125f9 T _rpReadSectRights(RwStream*, int, void*, int, int)
0021266b T _rpSizeSectRights(void const*, int, int)
001d7095 T _rwCameraValClose()
001b13e1 T _rwD3D8PixelToRGB(void*, void*, int)
001e2755 T _rwFileSystemOpen()
001db109 T _rwFrameSyncDirty()
001e44e5 T _rwFreeListEnable(int)
001ad8c1 T _rwOpenGLIm2DOpen(RwDevice*)
001a9fc1 T _rwRGBAFromImage8(RwRGBA*, unsigned char const*, RwImage const*, int)
001e6d7d T _rwResHeapRealloc(void*, unsigned int)
001e4f81 T _rwResourcesClose(void*, int, int)
001e5121 T _rwResourcesPurge()
001c1fbd T _rwgetcurrenttime(char*, int)
001c1f95 T _rwpathisabsolute(char const*)
001e1735 T _rxNotAFunction17(int)
00222741 T _rxOpenGLInstance(void*, void*, RwResEntry**, RpMeshHeader*, int, int (*)(void*, RxOpenGLMeshInstanceData*, int, int))
00271619 T android_sigaction(int, siginfo*, void*)
001bcd7d T emu_ArraysIndices(void*, unsigned int, unsigned int)
001bc92d T emu_SetAltBlurAmt(float)
001b5259 T emu_glEndInternal()
001b9ae9 T emu_glLightModelf(unsigned int, float)
001b9bf5 T emu_glLightModeli(unsigned int, int)
001ba861 T emu_glMultMatrixd(double const*)
001ba915 T emu_glMultMatrixf(float const*)
001b7215 T emu_glTexCoord1dv(double const*)
001b7399 T emu_glTexCoord1fv(float const*)
001b7501 T emu_glTexCoord1sv(short const*)
001b7685 T emu_glTexCoord2dv(double const*)
001b7819 T emu_glTexCoord2fv(float const*)
001b7991 T emu_glTexCoord2sv(short const*)
001b7b2d T emu_glTexCoord3dv(double const*)
001b7cd1 T emu_glTexCoord3fv(float const*)
001b7e61 T emu_glTexCoord3sv(short const*)
001b8019 T emu_glTexCoord4dv(double const*)
001b81d1 T emu_glTexCoord4fv(float const*)
001b835d T emu_glTexCoord4sv(short const*)
00279dc1 T findDataNextToken(char const*)
00279f49 T findDataStringEOL(char const*, char const*)
00482303 T jcopy_sample_rows(unsigned char**, int, unsigned char**, int, int, unsigned int)
0047ac89 T jinit_downsampler(jpeg_compress_struct*)
00476fd9 T jinit_forward_dct(jpeg_compress_struct*)
0047c7a9 T jinit_inverse_dct(jpeg_decompress_struct*)
0047a385 T jpeg_set_defaults(jpeg_compress_struct*)
004760cd T jpeg_write_m_byte(jpeg_compress_struct*, int)
00476023 T jpeg_write_marker(jpeg_compress_struct*, int, unsigned char const*, unsigned int)
004760d5 T jpeg_write_tables(jpeg_compress_struct*)
005e4e99 T psPathnameDestroy(char*)
0026cb91 T AND_BillingGetItem(char const*)
002667c9 T AND_FileInitialize()
0026c359 T AND_IsAppInstalled(char const*)
0026ae55 T AND_IsMoviePlaying()
0026af5d T AND_MovieClearText(bool)
0026b009 T AND_MovieTextScale(int)
0026d28d T AND_OnSignInChange(bool)
0026d2c5 T AND_OnSignInFailed()
0027b595 T AND_StartQuickGame()
0026a081 T AND_TimeInitialize()
001cb0c5 T ATCConvertFromDXT1(int, int, void*)
001cb45d T ATCConvertFromDXT3(int, int, void*)
001cb57d T ATCConvertFromDXT5(int, int, void*)
005e4421 T AttachInputDevices()
002a9859 T CalculateMapLimits(float*, float*, float*, float*)
002c97c5 T CdStreamInitThread()
005d3745 T CheckVideoCardCaps()
005a30d5 T FadeVectorLocation(CVector, float)
003beeb1 T GetAccidentManager()
005e5075 T GetBestRefreshRate(unsigned int, unsigned int, unsigned int)
005a40ad T GetDayNightBalance()
001cff8d T GetES2TargetFormat(RQRenderTarget*)
00420ab9 T GetMillisecondTime()
00483d91 T GettPoolVehicleRef(CVehicle*)
002ffda5 T HandleSlotHandguns()
002ffef5 T HandleSlotShotguns()
005e4fb1 T InitialiseLanguage()
00443225 T IsPointInsideRadar(CVector2D const&)
00286fa5 T IsSCCloudAvailable()
005e4db1 T IsSaveGameForPause()
00481e3d T JPegCompressScreen(RwCamera*, jpeg_destination_mgr&)
00270191 T LIB_KeyboardIsDown(OSKeyboardKey)
004108cb T LimitFrustumVector(CVector&, CVector const&, float)
0031a42d T MakeSureLinkExists(signed char, signed char)
002a8d5d T Menu_ApplyLanguage()
002a9491 T Menu_IsPlayingGame(bool)
002a9539 T Menu_PopulateSaves(bool)
003f4489 T MoveColModelMemory(CColModel&, bool)
003f45f5 T MoveGeometryMemory(RpGeometry*)
00276c49 T NVDefaultLogOutput(char const*)
002710fd T NVEventGetEventStr(NVEventType)
0027911d T NvBuildFrustumMatf(float (*) [4], float, float, float, float, float, float)
00278c7d T NvBuildRotXDegMatf(float (*) [4], float)
002785b9 T NvBuildRotXRadMatf(float (*) [4], float)
00278cf1 T NvBuildRotYDegMatf(float (*) [4], float)
00278611 T NvBuildRotYRadMatf(float (*) [4], float)
00278d75 T NvBuildRotZDegMatf(float (*) [4], float)
00278691 T NvBuildRotZRadMatf(float (*) [4], float)
0027a361 T NvUtilGetParameter(char*, int, char const*)
005e5419 T OS_ApplicationTick(float)
002675d7 T OS_FileGetPosition(void*)
00267735 T OS_FileSetNoBackup(char const*)
00267055 T OS_FileSetPosition(void*, int)
002683f5 T OS_GamepadTouchpad(unsigned int, unsigned int, float*, float*)
00268a09 T OS_KeyboardRequest(int)
00268ccd T OS_ScreenGetHeight()
0027b0d9 T OS_ScreenGetInches()
0026c16d T OS_SemaphoreCreate()
0026c18b T OS_SemaphoreDelete(void*)
0026c7d9 T OS_ServiceCancelAd()
0026c3b1 T OS_ServiceOpenLink(char const*)
0026c113 T OS_ThreadIsRunning(void*)
001bd5b9 T PerformanceWarning(char const*, int, char const*)
002a98e1 T ProcessMapTeleport(bool, float)
002a9221 T ProcessShaderCache()
002c9c99 T RemoveFirstInQueue(Queue*)
00214e5d T RpAtomicStreamRead(RwStream*)
00213e65 T RpClumpCreateSpace(RwV3d const*, float)
002146fd T RpClumpGetCallBack(RpClump const*)
00214751 T RpClumpRemoveLight(RpClump*, RpLight*)
002146e5 T RpClumpSetCallBack(RpClump*, RpClump* (*)(RpClump*, void*))
00214b29 T RpClumpStreamWrite(RpClump*, RwStream*)
001c4113 T RpHAnimKeyFrameAdd(void*, void*, void*)
00216ae5 T RpLightStreamWrite(RpLight const*, RwStream*)
0021e3d1 T RpWorldRemoveClump(RpWorld*, RpClump*)
0021e7f5 T RpWorldRemoveLight(RpWorld*, RpLight*)
002127fd T RpWorldStreamWrite(RpWorld const*, RwStream*)
004d42dd T RsCameraShowRaster(RwCamera*)
004d42d9 T RsPathGetSeparator()
001ed091 T RtCharsetSetColors(RwRaster*, RwRGBA const*, RwRGBA const*)
001d5d15 T RwCameraShowRaster(RwCamera*, void*, unsigned int)
001d47c9 T RwCameraStreamRead(RwStream*)
001d76f9 T RwEngineGetMetrics()
001d73a9 T RwEngineGetVersion()
001d8371 T RwFrameRemoveChild(RwFrame*)
001d8785 T RwFrameSetIdentity(RwFrame*)
001e4701 T RwFreeListGetFlags(RwFreeList*)
001e46f5 T RwFreeListSetFlags(RwFreeList*, unsigned int)
001da239 T RwImageStreamWrite(RwImage const*, RwStream*)
001e240f T RwMatrixStreamRead(RwStream*, RwMatrixTag*)
001e2091 T RwMemFloat32ToReal(void*, unsigned int)
001e208f T RwMemRealToFloat32(void*, unsigned int)
001da2ed T RwRGBAGammaCorrect(RwRGBA*)
001da03d T RwRGBASetFromPixel(RwRGBA*, unsigned int, int)
001da8b9 T RwRasterPopContext()
001da735 T RwRasterRenderFast(RwRaster*, int, int)
001ae85d T RwRasterSetKeepCPU(bool)
001da93d T RwRasterShowRaster(RwRaster*, void*, unsigned int)
001e2117 T RwStreamWriteInt16(RwStream*, short const*, unsigned int)
001e2109 T RwStreamWriteInt32(RwStream*, int const*, unsigned int)
001db4d5 T RwTextureSetRaster(RwTexture*, RwRaster*)
001de6a9 T RxClusterLockWrite(RxPacket*, unsigned int, RxPipelineNode*)
001de539 T RxClusterSetStride(RxCluster*, int)
001def31 T RxLockedPipeUnlock(RxPipeline*)
005e653d T SecuromDisplayInit()
00281705 T SetIfIplIsRequired(CVector2D const&, void*)
         U TelemetryDataFlush()
005b955d T UseAdvancedShadows(int)
0027b4a5 T WarBillingShutdown()
0027b4a7 T WarGameServiceInit(_JNIEnv*)
0027a5a9 T WarGamepadShutdown()
00213849 T _rpBinaryWorldOpen(void*, int, int)
00217f0d T _rpBuildMeshCreate(unsigned int)
0021d779 T _rpLightTieDestroy(RpLightTie*)
00212575 T _rpReadWorldRights(RwStream*, int, void*, int, int)
002125e3 T _rpSizeWorldRights(void const*, int, int)
00222bed T _rpSkipBlendRender(bool)
0021f73d T _rpWorldPipeAttach()
00212635 T _rpWriteSectRights(RwStream*, int, void const*, int, int)
001d70c1 T _rwCameraValRender(RwCamera*)
001adaad T _rwDeviceGetHandle()
001e2873 T _rwFileSystemClose()
001d8079 T _rwFramePurgeClone(RwFrame*)
001e2c11 T _rwMatrixSetMultFn(void (*)(RwMatrixTag*, RwMatrixTag const*, RwMatrixTag const*))
001ad9a9 T _rwOpenGLIm2DClose()
001aa051 T _rwRGBAFromImage32(RwRGBA*, unsigned char const*, RwImage const*, int)
001e6faf T _rwResHeapGetStats(void*, unsigned int*, unsigned int*, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
001e6215 T _rwVectorSetMultFn(RwV3d* (*)(RwV3d*, RwV3d const*, RwMatrixTag const*), RwV3d* (*)(RwV3d*, RwV3d const*, int, RwMatrixTag const*), RwV3d* (*)(RwV3d*, RwV3d const*, RwMatrixTag const*), RwV3d* (*)(RwV3d*, RwV3d const*, int, RwMatrixTag const*))
001de929 T _rxPipelineDestroy(RxPipeline*)
001bb885 T emu_glClearStencil(int)
001b9b7d T emu_glLightModelfv(unsigned int, float const*)
001b9bf9 T emu_glLightModeliv(unsigned int, int const*)
001ba805 T emu_glLoadIdentity()
0047cf39 T jinit_huff_decoder(jpeg_decompress_struct*)
00477799 T jinit_huff_encoder(jpeg_compress_struct*)
0047b88d T jpeg_consume_input(jpeg_decompress_struct*)
00481cb1 T jpeg_mem_available(jpeg_common_struct*, long, long, long)
0047bc1b T jpeg_read_raw_data(jpeg_decompress_struct*, unsigned char***, unsigned int)
005e4e11 T psCameraShowRaster(RwCamera*)
005e4eb1 T psPathGetSeparator()
0026a691 T AND_BillingShutdown()
0026a44d T AND_GameServiceInit()
00268935 T AND_KeyboardGetChar(OSKeyboardKey, int)
0026e675 T AND_OnStateConflict(unsigned char*, int, unsigned char*, int, unsigned char**, int*)
0026e6f5 T AND_ResolveConflict(unsigned char*, int, unsigned char*, int)
0026a079 T AND_TouchInitialize()
001cb1e9 T ATCConvertFromDXT1A(int, int, void*)
005d1fad T ActivateDirectional()
001b3601 W void AssignBlockToPixels<unsigned int>(unsigned char const*, unsigned int*, unsigned int, unsigned int*)
001b33a1 W void AssignBlockToPixels<unsigned short>(unsigned char const*, unsigned short*, unsigned int, unsigned short*)
00450e29 T BreakableDestructor(void*, int, int)
00450f19 T BreakableStreamRead(RwStream*, int, void*, int, int)
00481f59 T BufferSkipInputData(jpeg_decompress_struct*, long)
002a9021 T CachePlayerControls()
002c9c31 T CdStreamGetLastPosn()
00483d51 T ClassSerializeError(int, int)
00443025 T ClipRadarTileCoords(int&, int&)
001b2d31 T ConvertDXTToRaw8888(void const*, RQTextureFormat, unsigned int, unsigned int)
001b48b5 W DecodeDXTColorBlock(unsigned char const*, unsigned int*, unsigned int, bool)
003f5b71 T DoRWStuffEndOfFrame(bool)
00369731 T FindClosestPtOnLine(RwV3d*, RwV3d*, RwV3d*, RwV3d*)
003bf2e1 T GetCurrentCameraPad()
00296a35 T GetDownloadFilename(int)
0036f93d T GetEventGlobalGroup()
001b4fe1 T GetGlobalColorDirty()
00221b51 T GetNextLightApplied()
00297841 T GetTitleSafeFontTop()
004821b1 T HDEmptyOutputBuffer(jpeg_compress_struct*)
0030017d T HandleSlotArtillery()
00300245 T HandleSlotEquipment()
003eaecd T IsDummyPointerValid(CDummy*)
0040bb61 T IsPlayerRemotePlane()
0033e409 T IsVecIn2dAngledArea(CVector&, float, float, float, float, float)
0033e5d5 T IsVecIn3dAngledArea(CVector&, float, float, float, float, float, float, float)
002701bd T LIB_KeyboardPressed(OSKeyboardKey)
00270119 T LIB_PointerGetWheel(int)
002a90c5 T Menu_DrawLoadScreen(bool, int)
00276b01 T NVDefaultLogMessage(ENVLogLevel, char const*, char const*, char const*)
00269635 T NVEventGetNextEvent(NVEvent*, int)
00296751 T NeedsAmazonDownload()
0027843f T NvBuildIdentityMatf(float (*) [4])
00278499 T NvMultTranslateMatf(float (*) [4], float const (*) [4], float, float, float)
00279371 T NvQuatFromAngleAxis(float*, float, float const*)
005e54b9 T OS_ApplicationEvent(OSEventType, void*)
0026af85 T OS_MovieDisplayText(bool)
0026b03d T OS_PointerGetNumber()
00268ce5 T OS_ScreenSetRefresh(unsigned int)
0026c197 T OS_SemaphoreTryWait(void*)
0026c4c5 T OS_ServiceUpdateApp(char const*)
0026a831 T OS_SetIsMultiplayer(int)
0026a7ad T OS_SystemCheckPause(int)
001de2c1 T PipelineNodeDestroy(RxPipelineNode*, RxPipeline*)
003fab57 T PlayerIsEnteringCar()
002970b5 T ProcessDataDownload()
0058d279 T RemoveAllUpgradesCB(RpAtomic*, void*)
005c35a1 T RemoveRefsForAtomic(RpClump*)
00388ad1 T RemoveWindowAlphaCB(RpMaterial*, void*)
002141eb T RpAtomicSetGeometry(RpAtomic*, RpGeometry*, unsigned int)
00214a11 T RpAtomicStreamWrite(RpAtomic*, RwStream*)
00213dbd T RpClumpForAllLights(RpClump*, RpLight* (*)(RpLight*, void*), void*)
00213d95 T RpClumpGetNumLights(RpClump*)
00214711 T RpClumpRemoveAtomic(RpClump*, RpAtomic*)
002147ad T RpClumpRemoveCamera(RpClump*, RwCamera*)
00215749 T RpGeometryTransform(RpGeometry*, RwMatrixTag const*)
001c2035 T RpHAnimPluginAttach()
00216781 T RpLightGetConeAngle(RpLight const*)
00216a25 T RpLightSetConeAngle(RpLight*, float)
001c6251 T RpMatFXPluginAttach()
001cab8d T RpMaterialSetUVAnim(RpMaterial*, RtAnimAnimation*, unsigned int)
0021a5cd T RpTriStripMeshQuick(RpTriStripMesh*, void*)
0021d3e7 T RpWorldForAllClumps(RpWorld*, RpClump* (*)(RpClump*, void*), void*)
0021d449 T RpWorldForAllLights(RpWorld*, RpLight* (*)(RpLight*, void*), void*)
0021d525 T RpWorldPluginAttach()
0021e025 T RpWorldRemoveAtomic(RpWorld*, RpAtomic*)
0021dfa9 T RpWorldRemoveCamera(RpWorld*, RwCamera*)
0021c745 T RpWorldSectorRender(RpWorldSector*)
004d42e1 T RsCameraBeginUpdate(RwCamera*)
004d42f9 T RsInputDeviceAttach(RsInputDeviceType, RsEventStatus (*)(RsEvent, void*))
004d4321 T RsMouseEventHandler(RsEvent, void*)
004d4745 T RsSetNextPresetView(RwCamera*)
001eafd9 T RtAnimAnimationRead(char const*)
001ed569 T RtDictForAllEntries(RtDict const*, void* (*)(void*, void*), void*)
001ed433 T RtDictSchemaAddDict(RtDictSchema*, RtDict*)
001ed6a5 T RtDictStreamGetSize(RtDict const*)
001d4635 T RwBBoxContainsPoint(RwBBox const*, RwV3d const*)
001d5a19 T RwCameraBeginUpdate(RwCamera*)
001d46f5 T RwCameraStreamWrite(RwCamera const*, RwStream*)
001e2885 T RwIm2DGetFarScreenZ()
001d9b01 T RwImageFindFileType(char const*)
001da331 T RwImageGammaCorrect(RwImage*)
001e4135 T RwMatrixQueryRotate(RwMatrixTag const*, RwV3d*, float*, RwV3d*)
001e222d T RwMatrixStreamWrite(RwMatrixTag const*, RwStream*)
001e208b T RwMemLittleEndian16(void*, unsigned int)
001e1fb9 T RwMemLittleEndian32(void*, unsigned int)
001da88d T RwRasterLockPalette(RwRaster*, int)
001da819 T RwRasterPushContext(RwRaster*)
001d5391 T RwTextureStreamRead(RwStream*)
001e690d T RwV3dTransformPoint(RwV3d*, RwV3d const*, RwMatrixTag const*)
001de641 T RxClusterResizeData(RxCluster*, unsigned int)
001de505 T RxHeapGetGlobalHeap()
001dfc91 T RxLockedPipeAddPath(RxPipeline*, unsigned int*, RxPipelineNode*)
005e65cd T SecuromStateDisplay()
001b9a91 T SetLightToTypeIndex(EmuLight*, unsigned int)
003bcc11 T SetPostLoadingTimer(int)
003f0439 T SwapModelEndianness(CColModel&)
005d3a7d T TxdParentDestructor(void*, int, int)
00213839 T _rpBinaryWorldClose(void*, int, int)
00217fb9 T _rpBuildMeshDestroy(RpBuildMesh*)
00217765 T _rpMaterialListCopy(RpMaterialList*, RpMaterialList const*)
00217dd1 T _rpMeshHeaderCreate(unsigned int)
00213859 T _rpReadAtomicRights(RwStream*, int, void*, int, int)
002138c7 T _rpSizeAtomicRights(void const*, int, int)
002125b1 T _rpWriteWorldRights(RwStream*, int, void const*, int, int)
001e480d T _rwFreeListFreeReal(RwFreeList*, void*)
00221ca1 T _rwOpenGLLightsOpen()
001ad59d T _rwOpenGLPixelToRGB(void*, void*, int)
001ad549 T _rwOpenGLRGBToPixel(void*, void*, int)
001ae069 T _rwOpenGLRasterLock(void*, void*, int)
001ab261 T _rwPalQuantAddImage(rwPalQuant*, RwImage*, float)
001e29d9 T _rwSListGetNewEntry(RwSList*, unsigned int)
001e55ed T _rwStreamInitialize(RwStream*, int, RwStreamType, RwStreamAccessType, void const*)
001e554d T _rwStreamModuleOpen(void*, int, int)
00222c0d T _rxOpenGLReinstance(void*, RpMeshHeader const*, RxOpenGLMeshInstanceData*, int, int (*)(void*, RxOpenGLMeshInstanceData*, int, int))
001bd011 T emu_ArraysSetUseGPU(unsigned char)
001b4d79 T emu_CustomShaderSet(void*)
001b4dad T emu_GetCustomShader()
001bc8e1 T emu_SetAltRTGrading(RQVector const&, RQVector const&, RQVector const&)
001c1d35 T emu_ShutdownShaders()
001c1f5d T emu_SkinSetMatrices(float*, int)
001b992d T emu_glColorMaterial(unsigned int, unsigned int)
0047e23d T jinit_marker_reader(jpeg_decompress_struct*)
0047855d T jinit_marker_writer(jpeg_compress_struct*)
00475e2d T jpeg_CreateCompress(jpeg_compress_struct*, int, unsigned int)
00475ed3 T jpeg_abort_compress(jpeg_compress_struct*)
0047ba15 T jpeg_input_complete(jpeg_decompress_struct*)
0047bb9b T jpeg_read_scanlines(jpeg_decompress_struct*, unsigned char**, unsigned int)
0047a761 T jpeg_set_colorspace(jpeg_compress_struct*, J_COLOR_SPACE)
00476121 T jpeg_start_compress(jpeg_compress_struct*, unsigned char)
00476087 T jpeg_write_m_header(jpeg_compress_struct*, int, unsigned int)
00476229 T jpeg_write_raw_data(jpeg_compress_struct*, unsigned char***, unsigned int)
005e4de5 T psCameraBeginUpdate(RwCamera*)
005e4ec1 T psInstallFileSystem()
0026cbd9 T AND_ConnectionChange(bool)
0026afad T AND_MovieDisplayText(bool)
0026ad99 T AND_MovieIsSkippable(bool)
0027b4a9 T AND_StartInvitedGame(bool)
0026a121 T AND_SystemInitialize()
0026a0c5 T AND_ThreadInitialize()
0027b84d T AND_UpdateMuliplayer()
00450e11 T BreakableConstructor(void*, int, int)
00450e71 T BreakableStreamWrite(RwStream*, int, void const*, int, int)
002c9cb5 T CdStreamRemoveImages()
004acf7d T CloneAtomicToFrameCB(RwObject*, void*)
00459d5d T FindAtomicFromNameCB(RpAtomic*, void*)
001cfa01 T GLFactorFromRQFactor(RQBlendFactor)
001b9ad1 T GetAmbientLightColor()
001b9add T GetAmbientLightDirty()
0035fb0d T GetChangingStatIndex(char const*)
001ba661 T GetCurrentViewMatrix()
003f608d T GetLevelSplashScreen(int)
001b99d9 T GetMaterialParameter(unsigned int)
001b9a39 T GetMaterialShininess()
001ada85 T GetRQFormatForRaster(RwRaster*)
001c1ef5 T GetRegisteredShaders()
005a8483 T GxtCharMakeUpperCase(unsigned short*, unsigned short const*)
00300025 T HandleSlotLongRifles()
003ee381 T IsEntityPointerValid(CEntity*)
00455fe9 T IsObjectPointerValid(CObject*)
0030760d T IsTeleportPointValid(CVector const&, CVector const&)
00360341 T IsValidModForVehicle(unsigned int, CVehicle*)
002700f1 T LIB_PointerGetButton(int, int)
0026f3f1 T LIB_ScreenshotIsDone(bool)
0026f3e1 T LIB_ScreenshotIsDone()
003d21a1 T MakeAngleLessThan180(float&)
00467475 T MatchAllModelStrings()
002a9361 T Menu_SwitchOffToGame()
002712ed T NVEventWaitForEvents(int const*, int, int)
00482351 T NodeNamePluginAttach()
00278465 T NvBuildTranslateMatf(float (*) [4], float, float, float)
0027740d T NvTransformHomPointf(float*, float const (*) [4], float const*)
002677ed T OS_FileListUserFiles()
0026ab8d T OS_MoviePlayinWindow(char const*, int, int, int, int, bool, bool, float)
0026ad65 T OS_MovieSetSkippable(bool)
0026a725 T OS_ScreenSetWakeLock(bool)
00268e65 T OS_ScreenSwapBuffers()
0027af05 T OS_ServiceAppCommand(char const*, char const*)
0026c57d T OS_ServiceGetAdState(int)
00266961 T OS_SetFilePathOffset(char const*)
00268ce3 T OS_SystemAcceptFiles()
0026bb61 T OS_SystemGetDeviceID()
0027b04d T OS_SystemMemoryStats(int*, int*, int*)
00268ce9 T OS_ThreadMakeCurrent()
004824a5 T PipelinePluginAttach()
002dbb99 T ProcessDiscCollision(CColPoint&, CMatrix const&, CColDisk const&, CColPoint&, bool&, float&, CColPoint&)
001cff3d T RQ_Command_rqCleanup(char*&)
001cfbf1 T RQ_Command_rqSetCull(char*&)
00472e9d T ReadPlayerCoordsFile()
003907e9 T RpAnimBlendClumpInit(RpClump*)
00213d67 T RpClumpForAllAtomics(RpClump*, RpAtomic* (*)(RpAtomic*, void*), void*)
00213e25 T RpClumpForAllCameras(RpClump*, RwCamera* (*)(RwCamera*, void*), void*)
00213d53 T RpClumpGetNumAtomics(RpClump*)
00213dfd T RpClumpGetNumCameras(RpClump*)
005d0569 T RpClumpGtaStreamRead(RwStream*)
00214801 T RpClumpStreamGetSize(RpClump*)
00216449 T RpGeometryStreamRead(RwStream*)
001c34f9 T RpHAnimKeyFrameApply(void*, void*)
001c3a79 T RpHAnimKeyFrameBlend(void*, void*, void*, float)
00216acd T RpLightStreamGetSize(RpLight const*)
001c53dd T RpMTEffectDictCreate()
001c5b39 T RpMTEffectStreamRead(RwStream*)
00217225 T RpMaterialSetTexture(RpMaterial*, RwTexture*)
002173fd T RpMaterialStreamRead(RwStream*)
00219ff5 T RpTriStripMeshTunnel(RpTriStripMesh*, void*)
001caf61 T RpUVAnimKeyFrameInit(RtAnimAnimation const*, RpUVAnimKeyFrame*, RpUVAnimKeyFrame*, float, RwMatrixTag const*)
001ca299 T RpUVAnimPluginAttach()
00212681 T RpWorldStreamGetSize(RpWorld const*)
004d47c5 T RsDestroyPresetViews()
004d42ed T RsMouseSetVisibility(int)
001eb131 T RtAnimAnimationWrite(RtAnimAnimation const*, char const*)
001ec8e1 T RtCharsetBufferFlush()
001ed50d T RtDictFindNamedEntry(RtDict*, char const*)
001ed363 T RtDictSchemaDestruct(RtDictSchema*)
00212499 T RtTileDefaultArchive(RwImage*, int, int, void*)
001d74c1 T RwEngineSetSubSystem(int)
001d75e9 T RwEngineSetVideoMode(int)
001d8859 T RwFrameForAllObjects(RwFrame*, RwObject* (*)(RwObject*, void*), void*)
001d802d T RwFrameUpdateObjects(RwFrame*)
001e4a19 T RwFreeListForAllUsed(RwFreeList*, void (*)(void*, void*), void*)
001e2875 T RwIm2DGetNearScreenZ()
001e28f1 T RwIm2DRenderTriangle(RwOpenGLVertex*, int, int, int, int)
001dd309 T RwIm3DRenderTriangle(int, int, int)
001da455 T RwImageSetFromRaster(RwImage*, RwRaster*)
001da09d T RwImageStreamGetSize(RwImage const*)
001e2635 T RwOsGetFileInterface()
001da4f1 T RwRGBAGetRasterPixel(RwRGBA*, RwRaster*, int, int)
001da901 T RwRasterGetNumLevels(RwRaster*)
001da68d T RwRasterRenderScaled(RwRaster*, RwRect*)
001da479 T RwRasterSetFromImage(RwRaster*, RwImage*)
001db885 T RwTextureSetMaskName(RwTexture*, char const*)
001d5239 T RwTextureStreamWrite(RwTexture const*, RwStream*)
001e6935 T RwV3dTransformPoints(RwV3d*, RwV3d const*, int, RwMatrixTag const*)
001e6965 T RwV3dTransformVector(RwV3d*, RwV3d const*, RwMatrixTag const*)
001de67d T RxClusterDestroyData(RxCluster*)
00296741 T SCSetCurrentLangauge(char const*)
005d1165 T SkinGetBonePositions(RpClump*)
005d12e5 T SkinSetBonePositions(RpClump*)
005d3a6d T TxdParentConstructor(void*, int, int)
00220711 T VertexAttrFormatToGL(RQVertexAttributeFormat)
00217751 T _rpMaterialListAlloc(unsigned int)
00217da5 T _rpMeshHeaderDestroy(RpMeshHeader*)
0021f711 T _rpWorldPipelineOpen()
00213895 T _rpWriteAtomicRights(RwStream*, int, void const*, int, int)
001e4705 T _rwFreeListAllocReal(RwFreeList*)
001aeacd T _rwGetES2TextureType()
001e2eb9 T _rwMatrixDeterminant(RwMatrixTag const*)
001e2f95 T _rwMatrixNormalError(RwMatrixTag const*)
001add7d T _rwOpenGLCameraClear(void*, void*, int)
00221dbd T _rwOpenGLLightsClose()
001b0d6d T _rwOpenGLRasterClear(void*, void*, int)
001dd8db T _rwPipeInitForCamera(RwCamera const*)
001e2b95 T _rwSListDestroyArray(unsigned char*)
001e2af9 T _rwSListDestroyEntry(RwSList*, int)
001e2b4b T _rwSListReleaseArray(RwSList*)
001aea9d T _rwSetES2TextureType(RwPlatformID)
001e55b5 T _rwStreamModuleClose(void*, int, int)
001d4f15 T _rwStringStreamWrite(char const*, RwStream*)
001e04e9 T _rxChaseDependencies(RxPipeline*)
001bce91 T emu_ArraysDrawStored(unsigned int, unsigned int)
001c0631 T emu_DistanceFogSetup(float, float, float, float, float)
001bc7ed T emu_SetAltRTContrast(float, float, float, float, float, float)
0047a161 T jpeg_add_quant_table(jpeg_compress_struct*, int, unsigned int const*, int, unsigned char)
0047cdc5 T jpeg_fill_bit_buffer(bitread_working_state*, int, int, int)
00475f51 T jpeg_finish_compress(jpeg_compress_struct*)
0047a329 T jpeg_quality_scaling(int)
00475ed7 T jpeg_suppress_tables(jpeg_compress_struct*, unsigned char)
00476185 T jpeg_write_scanlines(jpeg_compress_struct*, unsigned char**, unsigned int)
005e4eb5 T psGetMemoryFunctions()
005e4e21 T psMouseSetVisibility(int)
0038923d T strcmpIgnoringDigits(char const*, char const*)
002678cd T AND_GamepadInitialize()
0026acc9 T AND_MoviePlayInWindow(char const*, int, int, int, int, bool, bool, int, int, float)
0026ed19 T AND_OnSnapshotLoading()
0026a779 T AND_ScreenSetWakeLock(bool)
00450cc5 T ApplyPanelDamageToCar(unsigned int, CAutomobile*, bool)
004510e1 T BreakablePluginAttach()
00481f01 T BufferFillInputBuffer(jpeg_decompress_struct*)
00481ccd T BufferInitDestination(jpeg_compress_struct*)
00481d51 T BufferTermDestination(jpeg_compress_struct*)
005d1f99 T DeActivateDirectional()
005d39e9 T DealWithTxdWriteError(unsigned int, unsigned int, char const*)
003f578d T DoRWStuffStartOfFrame(short, short, short, short, short, short, short)
001cff99 T ES2BindActiveTextures()
00560449 T GetBikeAtomicObjectCB(RwObject*, void*)
0056aed1 T GetBoatAtomicObjectCB(RwObject*, void*)
005d0ded T GetFirstFrameCallback(RwFrame*, void*)
00420a91 T GetOSWPerformanceTime()
00585401 T IsVehiclePointerValid(CVehicle*)
0026d757 T LIB_GameServiceExists()
0026d2fd T LIB_GameServiceUpdate()
002701d5 T LIB_KeyboardUpdateKey(OSKeyboardKey)
0026f2bd T LIB_ScreenshotSetData(void const*, int)
004c6a85 T LOSBlockedBetweenPeds(CEntity*, CEntity*)
004432cb T LineRadarBoxCollision(CVector2D&, CVector2D const&, CVector2D const&)
0027b101 T LoadAllGamesFromCloud()
0029b381 T Menu_DontRetryMission(void*)
002a91d1 T Menu_ShowMissionRetry()
002a9059 T Menu_SwitchOnFromGame()
00268d51 T NVEventEGLMakeCurrent()
00268ecd T NVEventEGLSwapBuffers()
0027111d T NVEventGetOrientation()
002711f9 T NVEventGetTextureData(char const*, unsigned char*&, unsigned int&, unsigned int&, unsigned int&, unsigned int&)
002715a5 T NVEventUnhandledEvent(NVEvent*)
0027b10f T NewCloudSaveAvailable(int)
002792b7 T NvQuatConvertTo3x3Mat(float (*) [3], float const*)
002872e1 T OS_ApplicationPreinit()
005e52d9 T OS_ApplicationStartup(int, int, int, char const**)
0026cf79 T OS_BillingIsPurchased(char const*)
00270285 T OS_ConvertUTF16toUTF8(unsigned short*, unsigned char*, int)
00266991 T OS_FileGetArchiveName(OSFileArchive)
0026835d T OS_GamepadIsConnected(unsigned int, OSGamepadType*)
0027af01 T OS_SendStatEventFlush()
0027ae71 T OS_SendStatEventValue(char const*, char const*, char const*, bool)
0026ba39 T OS_SystemGetBuildinfo(int)
0026c111 T OS_ThreadSetStackSize(unsigned int)
001cfaa3 T RQ_Command_rqSetZBias(char*&)
001cc4d1 T RQ_Command_rqShutdown(char*&)
001b3ab5 T ReadTextureDataRaster(unsigned int, RwStream*, int)
005d36c5 T ReadVideoCardCapsFile(unsigned int&, unsigned int&, unsigned int&, unsigned int&)
002a903d T RestorePlayerControls()
002147dd T RpAtomicStreamGetSize(RpAtomic*)
005d07ed T RpClumpGtaStreamRead1(RwStream*)
005d094d T RpClumpGtaStreamRead2(RwStream*)
0021561d T RpClumpRegisterPlugin(int, unsigned int, void* (*)(void*, int, int), void* (*)(void*, int, int), void* (*)(void*, void const*, int, int))
002159f9 T RpGeometryCreateSpace(float)
00216155 T RpGeometryStreamWrite(RpGeometry const*, RwStream*)
00216a61 T RpLightRegisterPlugin(int, unsigned int, void* (*)(void*, int, int), void* (*)(void*, int, int), void* (*)(void*, void const*, int, int))
001c5d85 T RpMTEffectCreateDummy()
001c5449 T RpMTEffectDictDestroy(RpMTEffectDict*)
001c58a1 T RpMTEffectStreamWrite(RpMTEffect const*, RwStream*)
00217621 T RpMaterialStreamWrite(RpMaterial const*, RwStream*)
00219d97 T RpTriStripDefaultCost(RpTriStripPolygon*, unsigned int, void*)
0021d499 T RpWorldRegisterPlugin(int, unsigned int, void* (*)(void*, int, int), void* (*)(void*, int, int), void* (*)(void*, void const*, int, int))
0021cbb1 T RpWorldSectorGetWorld(RpWorldSector const*)
004d42e9 T RsRegisterImageLoader()
004d4591 T RsSetModelTexturePath(char const*)
001eaf2d T RtAnimAnimationCreate(int, int, int, float)
00211a41 T RtQuatSetupSlerpCache(RtQuat*, RtQuat*, RtQuatSlerpCache*)
001d48bd T RwCameraChunkInfoRead(RwStream*, rwStreamCamera*, int*)
001d5d29 T RwCameraSetProjection(RwCamera*, RwCameraProjection)
001d5a1d T RwCameraSetViewOffset(RwCamera*, RwV2d const*)
001d5e05 T RwCameraSetViewWindow(RwCamera*, RwV2d const*)
001d46dd T RwCameraStreamGetSize(RwCamera const*)
001d80bd T RwFrameCloneHierarchy(RwFrame*)
001d85c9 T RwFrameForAllChildren(RwFrame*, RwFrame* (*)(RwFrame*, void*), void*)
001d87fd T RwFrameOrthoNormalize(RwFrame*)
001d889d T RwFrameRegisterPlugin(int, unsigned int, void* (*)(void*, int, int), void* (*)(void*, int, int), void* (*)(void*, void const*, int, int))
001e2909 T RwIm2DRenderPrimitive(RwPrimitiveType, RwOpenGLVertex*, int)
001dd1c5 T RwIm3DRenderPrimitive(RwPrimitiveType)
001d8f05 T RwImageAllocatePixels(RwImage*)
001dae91 T RwImageCreateResample(RwImage const*, int, int)
001da061 T RwImageRegisterPlugin(int, unsigned int, void* (*)(void*, int, int), void* (*)(void*, int, int), void* (*)(void*, void const*, int, int))
001e235f T RwMatrixChunkInfoRead(RwStream*, rwStreamMatrix*, int*)
001e2229 T RwMatrixStreamGetSize(RwMatrixTag const*)
001da7ad T RwRasterUnlockPalette(RwRaster*)
001e4fa1 T RwResourcesEmptyArena()
001db501 T RwTexDictionaryCreate()
001e698d T RwV3dTransformVectors(RwV3d*, RwV3d const*, int, RwMatrixTag const*)
00287005 T SaveSCCloudGameToDisk(int, void*, int)
004a4c6b T SetAtomicVisibilityCB(RwObject*, void*)
0046ace5 T SetBaseModelInfoFlags(CBaseModelInfo*, unsigned int)
005d2099 T SetDirectionalColours(RwRGBAReal*)
005d1dfd T SetFlashyColours_Mild(float)
003eab55 T SetupExceptionHandler()
001bd5af T UnimplementedFunction(char const*, char const*, int)
00215599 T _rpClumpChunkInfoRead(RwStream*, RpClumpChunkInfo*, int*)
00220735 T _rpGeometryNativeRead(RwStream*, RpGeometry*)
00220c9d T _rpGeometryNativeSize(RpGeometry const*)
00216e65 T _rpLightChunkInfoRead(RwStream*, RpLightChunkInfo*, int*)
001c522d T _rpMTEffectSystemInit()
00222bfd T _rpSkipNonblendRender(bool)
0021373d T _rpWorldChunkInfoRead(RwStream*, RpWorldChunkInfo*, int*)
0021f6fd T _rpWorldPipelineClose()
0021c9dd T _rpWorldRegisterWorld(RpWorld*, unsigned int)
001ed3f5 T _rtDictSchemaInitDict(RtDictSchema*, RtDict*)
001a9da5 T _rwDataBlockMgrCreate()
001d4a1f T _rwFrameListFindFrame(rwFrameList const*, RwFrame const*, int*)
001aa0dd T _rwImageFindAlphaType(RwImage*)
00221e49 T _rwOpenGLLightsEnable(int)
001ae841 T _rwOpenGLNextPowerOf2(unsigned int)
001ae86d T _rwOpenGLRasterCreate(void*, void*, int)
001b09f9 T _rwOpenGLRasterRender(void*, void*, int)
001ae2e5 T _rwOpenGLRasterUnlock(void*, void*, int)
001b0f35 T _rwOpenGLSetStandards(int (**)(void*, void*, int), int)
001abe61 T _rwPalQuantMatchImage(unsigned char*, int, int, int, rwPalQuant*, RwImage*)
001e5d75 T _rwPluginRegistryOpen()
001dd8a9 T _rwRenderPipelineOpen(void*, int, int)
001e2a61 T _rwSListGetNewEntries(RwSList*, int, unsigned int)
001e2bb1 T _rwSListGetNumEntries(RwSList const*)
001bcfe5 T emu_ArraysDrawCurrent(unsigned int)
001c0605 T emu_GetCameraPosition()
001bb7f5 T emu_IsAltRenderTarget()
001c0589 T emu_SetCameraPosition(float*)
001c1691 T emu_ShaderListCompile(unsigned int*, unsigned int)
001c1625 T emu_ShaderListGetList(unsigned int*)
005a7b65 T isJapanesePunctuation(unsigned short)
00476981 T jinit_color_converter(jpeg_compress_struct*)
00478365 T jinit_compress_master(jpeg_compress_struct*)
0047b78d T jpeg_CreateDecompress(jpeg_decompress_struct*, int, unsigned int)
0047b835 T jpeg_abort_decompress(jpeg_decompress_struct*)
0047a13b T jpeg_alloc_huff_table(jpeg_common_struct*)
00475ecf T jpeg_destroy_compress(jpeg_compress_struct*)
0047bae9 T jpeg_start_decompress(jpeg_decompress_struct*)
00279cf5 T nv_set_attrib_by_name(unsigned int, char const*, int, unsigned int, unsigned char, int, void*)
005e4ec9 T psDebugMessageHandler(RwDebugType, char const*)
00266995 T AND_FileGetArchiveName(OSFileArchive)
002685b1 T AND_KeyboardInitialize()
00268c01 T AND_KeyboardSoftClosed()
0026edc9 T AND_OnLeaderboardQuery(int, int, float*, char const**)
0026ed29 T AND_OnSnapshotSelected(unsigned char*, int)
0027b239 T AND_VibratePhoneEffect(int)
004510b1 T BreakableStreamGetSize(void const*, int, int)
0038fd65 T ConvertPedNode2BoneTag(int)
0046cae9 T CreateCarColourTexture(unsigned char, unsigned char, unsigned char)
003868ed T FindPedFrameFromNameCB(RwFrame*, void*)
005e23ad T FireOneInstantHitRound(CVector*, CVector*, int)
001ba649 T GetCurrentObjectMatrix()
005d0d2f T GetFirstAtomicCallback(RpAtomic*, void*)
005d0d99 T GetFirstObjectCallback(RwObject*, void*)
001b4ff9 T GetImmediateColorArray()
005e5281 T GetMobileEffectSetting()
004a9625 T GetPedAttractorManager()
001c0781 T InitializeShaderCloset()
001c1e91 T InternalRegisterShader(unsigned int)
002801c9 T IsBuildingPointerValid(CBuilding*)
00481fe5 T JPegDecompressToRaster(RwRaster*, jpeg_source_mgr&)
0026d65d T LIB_GameServiceSignOut()
00488cd5 T LoadSomeStaticSettings()
0046bb01 T MatchModelStringUint16(char*, unsigned short)
003ec251 T MaterialUpdateUVAnimCB(RpMaterial*, void*)
003f60b7 T MemoryCardVersionCheck()
0026c075 T NVThreadSpawnJNIThread(long*, pthread_attr_t const*, char const*, void* (*)(void*), void*)
0027964d T NvQuatFromEulerReverse(float*, float, float, float)
0027a231 T NvUtilGetLocalAppValue(char*, int, char const*)
0027a2d1 T NvUtilHasLocalAppValue(char const*)
0027a30d T NvUtilSetLocalAppValue(char const*, char const*)
002677e9 T OS_FileCreateDirectory(OSFileDataArea, char const*)
00268cdd T OS_ScreenSetResolution(unsigned int, unsigned int)
00268da9 T OS_ThreadUnmakeCurrent()
001cb69d T RQVertexAttrFormatToGL(RQVertexAttributeFormat)
001cfabd T RQ_Command_rqBlendFunc(char*&)
001cfb51 T RQ_Command_rqDepthFunc(char*&)
003f65a1 T Render2dStuffAfterFade()
002155f5 T RpAtomicRegisterPlugin(int, unsigned int, void* (*)(void*, int, int), void* (*)(void*, int, int), void* (*)(void*, void const*, int, int))
002156c5 T RpClumpGetPluginOffset(unsigned int)
005d0ba9 T RpClumpGtaCancelStream()
002156d9 T RpClumpValidatePlugins(RpClump const*)
00215f61 T RpGeometryForAllMeshes(RpGeometry const*, RpMesh* (*)(RpMesh*, RpMeshHeader*, void*), void*)
001c29d1 T RpHAnimHierarchyAttach(RpHAnimHierarchy*)
001c2675 T RpHAnimHierarchyCreate(int, unsigned int*, int*, RpHAnimHierarchyFlag, int)
001c2a99 T RpHAnimHierarchyDetach(RpHAnimHierarchy*)
00216ab9 T RpLightGetPluginOffset(unsigned int)
00216ac9 T RpLightValidatePlugins(RpLight const*)
001cae65 T RpMaterialUVAnimExists(RpMaterial const*)
0021d419 T RpWorldForAllMaterials(RpWorld*, RpMaterial* (*)(RpMaterial*, void*), void*)
0021d511 T RpWorldGetPluginOffset(unsigned int)
0021d521 T RpWorldValidatePlugins(RpWorld*)
004d427d T RsKeyboardEventHandler(RsEvent, void*)
001eafbd T RtAnimAnimationDestroy(RtAnimAnimation*)
001eb3e7 T RtAnimInterpolatorCopy(RtAnimInterpolator*, RtAnimInterpolator*)
001ec9d9 T RtCharsetPrintBuffered(RwRaster*, char const*, int, int, int)
001ed371 T RtDictSchemaCreateDict(RtDictSchema*)
001ed453 T RtDictSchemaRemoveDict(RtDictSchema*, RtDict*)
002114d1 T RtQuatTransformVectors(RwV3d*, RwV3d const*, int, RtQuat const*)
001d5e61 T RwCameraRegisterPlugin(int, unsigned int, void* (*)(void*, int, int), void* (*)(void*, int, int), void* (*)(void*, void const*, int, int))
001d73b5 T RwEngineRegisterPlugin(int, unsigned int, void* (*)(void*, int, int), void* (*)(void*, int, int))
001d88c9 T RwFrameGetPluginOffset(unsigned int)
001d88d9 T RwFrameValidatePlugins(RwFrame const*)
001da089 T RwImageGetPluginOffset(unsigned int)
001d9ddd T RwImageReadMaskedImage(char const*, char const*)
001da099 T RwImageValidatePlugins(RwImage const*)
001e3421 T RwMatrixOrthoNormalize(RwMatrixTag*, RwMatrixTag const*)
001e4f19 T RwOsGetMemoryInterface()
001da865 T RwRasterRegisterPlugin(int, unsigned int, void* (*)(void*, int, int), void* (*)(void*, int, int), void* (*)(void*, void const*, int, int))
001db589 T RwTexDictionaryDestroy(RwTexDictionary*)
001db43d T RwTextureGetMipmapping()
005d341d T RwTextureGtaStreamRead(RwStream*)
001db41d T RwTextureSetMipmapping(int)
001d51e1 T RwTextureStreamGetSize(RwTexture const*)
001de821 T RxClusterGetAttributes(RxCluster*)
001de82d T RxClusterSetAttributes(RxCluster*, unsigned int)
001dfdf3 T RxLockedPipeDeleteNode(RxPipeline*, RxPipelineNode*)
001dfe89 T RxLockedPipeDeletePath(RxPipeline*, unsigned int*, RxPipelineNode*)
0028732d T SCCloudSaveStateUpdate()
00488c75 T SaveSomeStaticSettings()
005d1f09 T SetBrightMarkerColours(float)
0046ae21 T SetClumpModelInfoFlags(CClumpModelInfo*, unsigned int)
0026ce01 T WarBilling_InitBilling()
0026d66d T WarGameService_SignOut()
005d3749 T WriteVideoCardCapsFile()
0021f9a9 T _rpGeometryNativeWrite(RwStream*, RpGeometry const*)
00217821 T _rpMaterialListSetSize(RpMaterialList*, int)
001c8699 T _rpSkinPipelinesAttach(RpAtomic*, RpSkinType)
001c865d T _rpSkinPipelinesCreate(unsigned int)
0021b8f9 T _rpTriListMeshGenerate(RpBuildMesh*, void*)
001ecfe1 T _rtCharsetAtariFontGet(RtCharsetDesc*, int*)
001a9df1 T _rwDataBlockMgrDestroy(RwDataBlockMgr*)
001d72f9 T _rwDeviceSystemRequest(RwDevice*, int, void*, void*, int)
001d498d T _rwFrameListInitialize(rwFrameList*, RwFrame*)
001d4c89 T _rwFrameListStreamRead(RwStream*, rwFrameList*)
001e301f T _rwMatrixIdentityError(RwMatrixTag const*)
001b1001 T _rwOpenGLApplyRwMatrix(RwMatrixTag*)
001ae979 T _rwOpenGLRasterDestroy(void*, void*, int)
001e5dc5 T _rwPluginRegistryClose()
001dd8c9 T _rwRenderPipelineClose(void*, int, int)
001d4ee9 T _rwStringStreamGetSize(char const*)
001b2d89 W dxtSwizzler_DXTCtoPVRC(colorblock*, pvrblock*)
001b1d21 T dxtSwizzler_SwizzlePVR(unsigned int, unsigned int, void const*)
001bcbf1 T emu_ArraysProcessQueue(unsigned char)
001bcdf5 T emu_ArraysVertexAttrib(unsigned int, int, unsigned int, unsigned char, int)
001b4d49 T emu_CustomShaderCreate(char const*, char const*)
001b4d61 T emu_CustomShaderDelete(void*)
001c0731 T emu_DistanceFogIsDirty()
001bb8cd T emu_SetAltRenderTarget(int, int)
001c0551 T emu_SetRenderingSphere(float*, unsigned char)
001c15d5 T emu_ShaderGetCurSource(char*, char*)
00479a41 T jinit_c_master_control(jpeg_compress_struct*, unsigned char)
0047d425 T jinit_input_controller(jpeg_decompress_struct*)
0047a125 T jpeg_alloc_quant_table(jpeg_common_struct*)
0047ba69 T jpeg_finish_decompress(jpeg_decompress_struct*)
00477589 T jpeg_gen_optimal_table(jpeg_compress_struct*, JHUFF_TBL*, long*)
004805cd T jpeg_read_coefficients(jpeg_decompress_struct*)
0047e079 T jpeg_resync_to_restart(jpeg_decompress_struct*, int)
00279d2d T nv_set_attrib_by_index(int, int, unsigned int, unsigned char, int, void*)
005e4ec5 T psNativeTextureSupport()
0026a6f1 T AND_GameServiceShutdown()
0026bc51 T AND_GetAndroidBuildinfo(int)
0027ada9 T AND_GetSpecialBuildType()
003868a5 T AttachAtomicsFromListCB(RpAtomic*, void*)
00481ce5 T BufferEmptyOutputBuffer(jpeg_compress_struct*)
0038f961 T ConvertBoneTag2BoneName(int)
001b40e9 T CreateUncompressedImage(unsigned char*, unsigned char, unsigned int, unsigned int, unsigned char)
0040bc1d T FindPlayerCentreOfWorld(int)
00457955 T GetClothesModelFromName(char const*)
001ba691 T GetCurrentTextureMatrix()
005d0e15 T GetFirstTextureCallback(RwTexture*, void*)
001b5019 T GetImmediateNormalArray()
001b4fed T GetImmediateVertexArray()
003883a9 T GetOkAndDamagedAtomicCB(RwObject*, void*)
004d3ac1 T GetSavedGameDateAndTime(int)
005d0dc1 T GetSecondObjectCallback(RwObject*, void*)
002fff9d T HandleSlotAssaultRifles()
002a8e11 T Menu_ApplyAudioSettings()
00268e0d T NVEventEGLUnmakeCurrent()
00287235 T NewSCCloudSaveAvailable(int)
0026d02d T OS_BillingPurchasePrice(char const*)
00268519 T OS_GamepadAccelerometer(float*, float*, float*)
00268cad T OS_LanguageDeviceRegion()
00268c21 T OS_LanguageUserSelected()
0027b115 T OS_MovieKeepAspectRatio(bool)
0027afed T OS_ServiceAppCommandInt(char const*, int)
001cc519 T RQ_Command_rqReadPixels(char*&)
001d052d T RQ_Command_rqTextureMip(char*&)
004ade89 T ResetDebugPedAICounters()
003902b5 T RpAnimBlendAllocateData(RpClump*)
003902a1 T RpAnimBlendFrameGetName(RwFrame*)
003902a5 T RpAnimBlendFrameSetName(RwFrame*, char*)
00390471 T RpAnimBlendPluginAttach()
002156b5 T RpAtomicGetPluginOffset(unsigned int)
002156d5 T RpAtomicValidatePlugins(RpAtomic const*)
00215ff5 T RpGeometryStreamGetSize(RpGeometry const*)
001c274d T RpHAnimHierarchyDestroy(RpHAnimHierarchy*)
001c3ff7 T RpHAnimKeyFrameMulRecip(void*, void*)
001c55dd T RpMTEffectDictAddEffect(RpMTEffectDict*, RpMTEffect*)
001c5785 T RpMTEffectStreamGetSize(RpMTEffect const*)
002175f9 T RpMaterialStreamGetSize(RpMaterial const*)
0021b8d9 T RpMeshGetTriStripMethod(RpMeshHeader* (**)(RpBuildMesh*, void*), void**)
0021b8b5 T RpMeshSetTriStripMethod(RpMeshHeader* (*)(RpBuildMesh*, void*), void*)
001c507f T RpMultiTextureGetCoords(RpMultiTexture const*, unsigned int)
001c503b T RpMultiTextureGetEffect(RpMultiTexture const*)
001c5077 T RpMultiTextureSetCoords(RpMultiTexture*, unsigned int, unsigned int)
001c5019 T RpMultiTextureSetEffect(RpMultiTexture*, RpMTEffect*)
004d4785 T RsSetPreviousPresetView(RwCamera*)
001eb855 T RtAnimInterpolatorBlend(RtAnimInterpolator*, RtAnimInterpolator*, RtAnimInterpolator*, float)
00210ed1 T RtQuatConvertFromMatrix(RtQuat*, RwMatrixTag const*)
001d5e8d T RwCameraGetPluginOffset(unsigned int)
001d5acd T RwCameraSetFarClipPlane(RwCamera*, float)
001d5e9d T RwCameraValidatePlugins(RwCamera const*)
001d73dd T RwEngineGetPluginOffset(unsigned int)
001d8429 T RwFrameDestroyHierarchy(RwFrame*)
005d16ff T RwIm2DRenderLine_BUGFIX(RwOpenGLVertex*, int, int, int)
001dd465 T RwIm3DGetRenderPipeline(RwPrimitiveType)
001dd589 T RwIm3DSetRenderPipeline(RxPipeline*, RwPrimitiveType)
001da49d T RwImageFindRasterFormat(RwImage*, int, int*, int*, int*, int*)
001afe75 T RwOpenGLGetStencilClear()
001afe55 T RwOpenGLSetStencilClear(unsigned int)
001da65d T RwRasterGetPluginOffset(unsigned int)
001da731 T RwRasterValidatePlugins(RwRaster const*)
001e50b9 T RwResourcesFreeResEntry(RwResEntry*)
001e54e5 T RwResourcesGetArenaSize()
001e53a5 T RwResourcesSetArenaSize(unsigned int)
001dbae1 T RwTextureRegisterPlugin(int, unsigned int, void* (*)(void*, int, int), void* (*)(void*, int, int), void* (*)(void*, void const*, int, int))
001de5e5 T RxClusterInitializeData(RxCluster*, unsigned int, unsigned short)
001df9cd T RxLockedPipeAddFragment(RxPipeline*, unsigned int*, RxNodeDefinition*, ...)
001dfcf3 T RxLockedPipeReplaceNode(RxPipeline*, RxPipelineNode*, RxNodeDefinition*)
001deddb T RxPipelineNodeFindInput(RxPipelineNode*)
0046ad35 T SetAtomicModelInfoFlags(CAtomicModelInfo*, unsigned int)
005d22e5 T SetLightsForNightVision()
0027b3d5 T WarBilling_notifyChange(_JNIEnv*, _jobject*, _jstring*, int)
0027c45d T War_AddHttpGetLineFeeds(bool)
00218049 T _rpBuildMeshAddTriangle(RpBuildMesh*, RpMaterial*, int, int, int)
001c425d T _rpMatFXPipelinesCreate()
001c7a7d T _rpSkinPipelinesDestroy()
0021ca39 T _rpWorldUnregisterWorld(RpWorld*)
001b10f9 T _rwDeviceRegisterPlugin()
001d4ac5 T _rwFrameListStreamWrite(rwFrameList const*, RwStream*)
001af759 T _rwOpenGLGetRenderState(RwRenderState, void*)
001acb9d T _rwOpenGLImageSetRaster(void*, void*, int)
001ad0e9 T _rwOpenGLRasterSetImage(void*, void*, int)
001aefa5 T _rwOpenGLSetRenderState(RwRenderState, void*)
001d58bf T _rwTextureChunkInfoRead(RwStream*, rpTextureChunkInfo*, int*)
001e1a2d T _rx_rxRadixExchangeSort(void*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
001bd021 T emu_ArraysShareResource(unsigned char)
001bc1b1 T emu_BindAltRenderTarget()
001b4dbd T emu_CustomShaderUniform(void*, unsigned int, int, float*)
001c0719 T emu_DistanceFogGetColor()
001c0741 T emu_DistanceFogSetDirty(unsigned char)
001bc93d T emu_DropAltRenderTarget()
001ba615 T emu_EnableAlphaModulate(float)
001bbb6d T emu_ResolveShadowTarget(float)
001bbb3d T emu_SetAltTargetTexture()
001bc975 T emu_SwapAltRenderTarget()
001ba739 T emu_glPushAndLoadMatrix(float*)
004762d1 T jinit_c_coef_controller(jpeg_compress_struct*, unsigned char)
004783f9 T jinit_c_main_controller(jpeg_compress_struct*, unsigned char)
0047aa09 T jinit_c_prep_controller(jpeg_compress_struct*, unsigned char)
0047c259 T jinit_color_deconverter(jpeg_decompress_struct*)
0047bf31 T jinit_d_coef_controller(jpeg_decompress_struct*, unsigned char)
0047d8b9 T jinit_d_main_controller(jpeg_decompress_struct*, unsigned char)
0047fbd1 T jinit_d_post_controller(jpeg_decompress_struct*, unsigned char)
0047f6a1 T jinit_master_decompress(jpeg_decompress_struct*)
0047a511 T jpeg_default_colorspace(jpeg_compress_struct*)
0047b831 T jpeg_destroy_decompress(jpeg_decompress_struct*)
0047ba3f T jpeg_has_multiple_scans(jpeg_decompress_struct*)
004773b5 T jpeg_make_c_derived_tbl(jpeg_compress_struct*, unsigned char, int, c_derived_tbl**)
0047ca31 T jpeg_make_d_derived_tbl(jpeg_decompress_struct*, unsigned char, int, d_derived_tbl**)
00481cb5 T jpeg_open_backing_store(jpeg_common_struct*, backing_store_struct*, long)
0047a221 T jpeg_set_linear_quality(jpeg_compress_struct*, int, unsigned char)
0047b171 T jpeg_write_coefficients(jpeg_compress_struct*, jvirt_barray_control**)
0026b051 T nvGetSystemCapabilities(_NvSysCaps*, bool)
0026d1b1 T AND_ClearAchievementData(bool)
0026dee5 T AND_OnAchievementsLoaded(int, char const**, bool*, int*, int*)
002e1031 T ClumpCollisionDestructor(void*, int, int)
005d3751 T ConvertingTexturesScreen(unsigned int, unsigned int, char const*)
003623bd T DoesLineSegmentIntersect(float, float, float, float, float, float, float, float)
00463725 T FindCutsceneAudioTrackId(char const*)
0058d24d T FindReplacementUpgradeCB(RwObject*, void*)
0054e2c1 T GetCurrentAtomicObjectCB(RwObject*, void*)
001c1f01 T GetRegisteredShaderCount()
002ffe4d T HandleSlotSubmachineGuns()
00482219 T JPegCompressScreenToFile(RwCamera*, char const*)
00270275 T LIB_ClearInputNextUpdate()
00270205 T LIB_KeyboardComboPressed(OSKeyboardKey, OSKeyboardKey)
00270249 T LIB_KeyboardDoubleTapped(OSKeyboardKey)
00270165 T LIB_PointerDoubleClicked(int, int)
004669c9 T LoadingScreenLoadingFile(char const*)
0029b36d T Menu_RetryMissionWrapped(void*)
00268af5 T NVThreadGetCurrentJNIEnv()
00274081 T NvCreateTextureFromDDSEx(char const*, unsigned char, unsigned char, int*, int*, unsigned char*, unsigned char*)
005e5291 T OS_ApplicationInitialize(int, char const**)
00268aa1 T OS_KeyboardIsSoftVisible()
0027ae29 T OS_SendTimedStatEventEnd(char const*)
0026c301 T OS_ServiceIsAppInstalled(char const*)
001cd97d T RQ_Command_rqBuildShader(char*&)
001cc56f T RQ_Command_rqDebugMarker(char*&)
001cfbfd T RQ_Command_rqDisableCull(char*&)
001cbe3d T RQ_Command_rqDrawIndexed(char*&)
001cfa5f T RQ_Command_rqEnableBlend(char*&)
001d01b5 T RQ_Command_rqInitTexture(char*&)
001cc56b T RQ_Command_rqSwapBuffers(char*&)
001d1045 T RQ_Command_rqTargetClear(char*&)
001d0475 T RQ_Command_rqTextureWrap(char*&)
0039070d T RpAnimBlendClumpFindBone(RpClump*, unsigned int)
005d0e3d T RpClumpGetBoundingSphere(RpClump*, RwSphere*, bool)
005d0565 T RpClumpStreamReadAtomics(RwStream*, RpAtomic* (*)(RpAtomic*))
00215d59 T RpGeometryAddMorphTarget(RpGeometry*)
00215f89 T RpGeometryRegisterPlugin(int, unsigned int, void* (*)(void*, int, int), void* (*)(void*, int, int), void* (*)(void*, void const*, int, int))
0021f0a1 T RpGeometrySortByMaterial(RpGeometry const*, void (*)(RpGeometry const*, RpGeometry*, unsigned short*, unsigned short))
001c2bd9 T RpHAnimFrameGetHierarchy(RwFrame*)
001c2bad T RpHAnimFrameSetHierarchy(RwFrame*, RpHAnimHierarchy*)
001c5d65 T RpMTEffectDictGetCurrent()
001c5d45 T RpMTEffectDictSetCurrent(RpMTEffectDict*)
001c5955 T RpMTEffectDictStreamRead(RwStream*)
001c4859 T RpMatFXGetOpenGLPipeline(RpMatFXOpenGLPipeline)
00217301 T RpMaterialRegisterPlugin(int, unsigned int, void* (*)(void*, int, int), void* (*)(void*, int, int), void* (*)(void*, void const*, int, int))
001c506f T RpMultiTextureGetTexture(RpMultiTexture const*, unsigned int)
001c503f T RpMultiTextureSetTexture(RpMultiTexture*, unsigned int, RwTexture*)
001ca183 T RpUVAnimParamKeyFrameAdd(void*, void*, void*)
001eb711 T RtAnimAnimationMakeDelta(RtAnimAnimation*, int, float)
003902d9 T RtAnimBlendKeyFrameApply(void*, void*)
001eb219 T RtAnimInterpolatorCreate(int, int)
001d5a39 T RwCameraSetNearClipPlane(RwCamera*, float)
001d73ed T RwEngineGetNumSubSystems()
001d750d T RwEngineGetNumVideoModes()
001d7421 T RwEngineGetSubSystemInfo(RwSubSystemInfo*, int)
001d7555 T RwEngineGetVideoModeInfo(RwVideoMode*, int)
001da615 T RwRasterReadMaskedRaster(char const*, char const*)
001e5501 T RwResourcesGetArenaUsage()
001db3c5 T RwTextureGetFindCallBack()
001dbb0d T RwTextureGetPluginOffset(unsigned int)
001db401 T RwTextureGetReadCallBack()
001db3a5 T RwTextureSetFindCallBack(RwTexture* (*)(char const*))
001db3e1 T RwTextureSetReadCallBack(RwTexture* (*)(char const*, char const*))
001dbb1d T RwTextureValidatePlugins(RwTexture const*)
001de53d T RxClusterSetExternalData(RxCluster*, void*, int, int)
001df929 T RxPipelineFindNodeByName(RxPipeline*, char const*, RxPipelineNode*, int*)
002e2775 T SetIfCollisionIsRequired(CVector2D const&, void*)
004acf41 T SetPedAtomicVisibilityCB(RwObject*, void*)
00420ac5 T SetupPerformanceCounters()
005d3a81 T TxdParentCopyConstructor(void*, void const*, int, int)
0026ce75 T WarBilling_SetBillingKey(char const*)
002166d1 T _rpGeometryChunkInfoRead(RwStream*, RpGeometryChunkInfo*, int*)
001c47c5 T _rpMatFXPipelinesDestroy()
0021737d T _rpMaterialChunkInfoRead(RwStream*, RpMaterialChunkInfo*, int*)
00220e01 T _rpWorldSectorNativeRead(RwStream*, RpWorldSector*)
00220e05 T _rpWorldSectorNativeSize(RpWorldSector const*)
001d4a4d T _rwFrameListDeinitialize(rwFrameList*)
001db1e9 T _rwFrameSyncHierarchyLTM(RwFrame*)
001d739d T _rwGetNumEngineInstances()
001aa591 T _rwImageSetFromRaster565(RwImage*, unsigned char*, int)
001aa2b5 T _rwImageSetFromRaster888(RwImage*, unsigned char*, int)
001e2f1b T _rwMatrixOrthogonalError(RwMatrixTag const*)
001add55 T _rwOpenGLCameraEndUpdate(void*, void*, int)
001ae77d T _rwOpenGLGetRasterFormat(void*, void*, int)
001b0a15 T _rwOpenGLRasterClearRect(void*, void*, int)
001ae9ff T _rwOpenGLRasterSubRaster(void*, void*, int)
001e5c13 T _rwPluginRegistryGetSize(RwPluginRegistry const*, void const*)
001ab06b T _rwRasterSetFromImage565(unsigned char*, int, RwImage*)
001aab87 T _rwRasterSetFromImage888(unsigned char*, int, RwImage*)
001e1ef5 T _rwStreamReadChunkHeader(RwStream*, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
001bba89 T emu_ClearAltRenderTarget(float, float, float)
001b4f05 T emu_DebugLightingEnabled(unsigned char)
001ba5ed T emu_DisableAlphaModulate()
001bc20d T emu_FlushAltRenderTarget()
001c049d T emu_GetEnvMapCoefficient()
001ba599 T emu_LightingSetBackLight(unsigned char)
001b4e11 T emu_SetSecondVertexColor(unsigned char, float)
00279d4f T nv_flush_tracked_attribs()
0026ed9d T AND_OnSnapshotCountLoaded(int)
002e102d T ClumpCollisionConstructor(void*, int, int)
0048d6b1 T CopyToRadarTraceSerialize(sRadarTraceSerialize*, sRadarTrace&)
005d0d55 T Get2DEffectAtomicCallback(RpAtomic*, void*)
005d1119 T GetAnimHierarchyFromClump(RpClump*)
005d10a1 T GetAnimHierarchyFromFrame(RwFrame*)
001cc58f T GetCompiledShaderWithCode(char const*, TDBArray<RQCompiledShader>&)
001b5009 T GetImmediateTexCoordArray()
0054d7a9 T GxtCharToAsciiForSaveLoad(unsigned short*)
001afe81 W HandleTextureEnhancements(RwRaster*)
002700a9 T LIB_PointerGetCoordinates(int, int*, int*, float*)
002712b9 T NVEventReleaseTextureData(void*, unsigned char*)
0026cec1 T OS_BillingPurchaseRequest(char const*)
0027af7d T OS_ServiceAppCommandValue(char const*, char const*)
0026a48d T OS_ServiceIsWifiAvailable()
00268ce1 T OS_SystemSetEmulatorTitle(char const*)
00466a09 T PrintGapsInModelInfoArray()
0057d09b T ProcessTrainAnnouncements()
001cdc6d T RQ_Command_rqDeleteShader(char*&)
001cda99 T RQ_Command_rqSelectShader(char*&)
001cfc45 T RQ_Command_rqSetAlphaTest(char*&)
001d0c91 T RQ_Command_rqTargetCreate(char*&)
001d0f55 T RQ_Command_rqTargetDelete(char*&)
001d0ed1 T RQ_Command_rqTargetSelect(char*&)
001d03f1 T RQ_Command_rqTextureAniso(char*&)
002dfba1 T ResetMadeInvisibleObjects()
003905c5 T RpAnimBlendClumpFindFrame(RpClump*, char const*)
00215c09 T RpGeometryAddMorphTargets(RpGeometry*, int)
00215f31 T RpGeometryForAllMaterials(RpGeometry*, RpMaterial* (*)(RpMaterial*, void*), void*)
00215fe1 T RpGeometryGetPluginOffset(unsigned int)
00215ff1 T RpGeometryValidatePlugins(RpGeometry const*)
001c3f19 T RpHAnimKeyFrameStreamRead(RwStream*, RtAnimAnimation*)
0021e885 T RpLightForAllWorldSectors(RpLight*, RpWorldSector* (*)(RpWorldSector*, void*), void*)
001c57b9 T RpMTEffectDictStreamWrite(RpMTEffectDict const*, RwStream*)
001c6ef5 T RpMatFXAtomicQueryEffects(RpAtomic*)
001c75fd T RpMatFXMaterialGetEffects(RpMaterial const*)
001c6f45 T RpMatFXMaterialSetEffects(RpMaterial*, RpMatFXMaterialFlags)
001c51e9 T RpMaterialGetMultiTexture(RpMaterial const*, RwPlatformID)
00217369 T RpMaterialGetPluginOffset(unsigned int)
00217379 T RpMaterialValidatePlugins(RpMaterial const*)
001c9e73 T RpUVAnimLinearKeyFrameAdd(void*, void*, void*)
0021cc3d T RpWorldForAllWorldSectors(RpWorld*, RpWorldSector* (*)(RpWorldSector*, void*), void*)
0021e1f9 T RpWorldSectorForAllLights(RpWorldSector*, RpLight* (*)(RpLight*, void*), void*)
0021c759 T RpWorldSectorForAllMeshes(RpWorldSector const*, RpMesh* (*)(RpMesh*, RpMeshHeader*, void*), void*)
001eb011 T RtAnimAnimationStreamRead(RwStream*)
001eaef5 T RtAnimGetInterpolatorInfo(int)
001eb271 T RtAnimInterpolatorDestroy(RtAnimInterpolator*)
001d5b61 T RwCameraFrustumTestSphere(RwCamera const*, RwSphere const*)
001d7671 T RwEngineGetMaxTextureSize()
001da66d T RwRasterGetCurrentContext()
001db8e9 T RwTexDictionaryAddTexture(RwTexDictionary*, RwTexture*)
001db9e5 T RwTexDictionaryGetCurrent()
001db9c9 T RwTexDictionarySetCurrent(RwTexDictionary*)
001d5731 T RwTexDictionaryStreamRead(RwStream*)
001dfe63 T RxLockedPipeGetEntryPoint(RxPipeline*)
001dfe1f T RxLockedPipeSetEntryPoint(RxPipeline*, RxPipelineNode*)
001df9b1 T RxPipelineFindNodeByIndex(RxPipeline*, unsigned int)
001dfec5 T RxPipelineInsertDebugNode(RxPipeline*, RxPipelineNode*, RxPipelineNode*, RxNodeDefinition*)
001def2d T RxPipelineNodeGetInitData(RxPipelineNode*)
001e1851 T RxRenderStateVectorCreate(int)
003f65d1 T TemporaryFPSVisualization()
0026d10d T WarBilling_LocalizedPrice(char const*)
00268321 T WarGamepad_GetGamepadAxis(int, int)
00267b11 T WarGamepad_GetGamepadType(int)
0027c3c1 T WarHttp_EnsureInitialized()
005e5049 T WasForegroundAppLastFrame()
001c5fb5 T _rpMatFXStreamReadTexture(RwStream*, RwTexture**)
001c6013 T _rpMatFXStreamSizeTexture(RwTexture const*)
001c6029 T _rpMatFXTextureMaskCreate(RwTexture const*, RwTexture const*)
00217745 T _rpMaterialListInitialize(RpMaterialList*)
00217ac9 T _rpMaterialListStreamRead(RwStream*, RpMaterialList*)
00218105 T _rpMeshHeaderForAllMeshes(RpMeshHeader*, RpMesh* (*)(RpMesh*, RpMeshHeader*, void*), void*)
001c88f5 T _rpSkinGenericMatrixBlend(int, RwMatrixWeights const*, unsigned int const*, RwMatrixTag const*, unsigned char*, RwV3d const*, unsigned char*, RwV3d const*, unsigned int)
001c7c9d T _rpSkinGeometryNativeRead(RwStream*, RpGeometry*)
001c7c01 T _rpSkinGeometryNativeSize(RpGeometry const*)
00220df1 T _rpWorldSectorNativeWrite(RwStream*, RpWorldSector const*)
001d4a75 T _rwFrameListStreamGetSize(rwFrameList const*)
001aa441 T _rwImageSetFromRaster1555(RwImage*, unsigned char*, int)
001aa31b T _rwImageSetFromRaster4444(RwImage*, unsigned char*, int)
001aa259 T _rwImageSetFromRaster8888(RwImage*, unsigned char*, int)
001e2e99 T _rwMatrixSetOptimizations(int)
001dcf65 T _rwObjectHasFrameSetFrame(void*, RwFrame*)
001b1095 T _rwOpenGLDescribeMipLevel(int, int, int, int, int*, int*, int*)
001b104f T _rwOpenGLMatrixToRwMatrix(void*)
001b0a0f T _rwOpenGLRasterRenderFast(void*, void*, int)
001b1251 T _rwOpenGLRasterShowRaster(void*, void*, int)
001aed19 T _rwOpenGLRenderStateClose()
001b0d95 T _rwOpenGLSetRasterContext(void*, void*, int)
001ae9f9 T _rwOpenGLTextureSetRaster(void*, void*, int)
001ab7ad T _rwPalQuantResolvePalette(RwRGBA*, int, rwPalQuant*)
001aae49 T _rwRasterSetFromImage1555(unsigned char*, int, RwImage*)
001aac3b T _rwRasterSetFromImage4444(unsigned char*, int, RwImage*)
001aaac1 T _rwRasterSetFromImage8888(unsigned char*, int, RwImage*)
001e2b37 T _rwSListDestroyEndEntries(RwSList*, int)
001c0611 T emu_CameraPositionIsDirty()
001b4f25 T emu_DebugAlphaTestEnabled(unsigned char)
001b4ef5 T emu_DebugDrawCallsEnabled(unsigned char)
001b4f15 T emu_DebugTexturingEnabled(unsigned char)
001c06fd T emu_DistanceFogSetEnabled(unsigned char)
001c056d T emu_SetCameraBasedNormals(unsigned char)
001bcb01 T emu_TexturingSetTrilinear(unsigned char)
0047f375 T jpeg_set_marker_processor(jpeg_decompress_struct*, int, unsigned char (*)(jpeg_decompress_struct*))
005d1b25 T AddAnExtraDirectionalLight(RpWorld*, float, float, float, float, float, float)
005d14cd T AtomicRemoveAnimFromSkinCB(RpAtomic*, void*)
002d9b2d T CalculateColPointInsideBox(CBox const&, CVector const&, CColPoint&)
003e1349 T CameraObscuredByWaterLevel()
0053770d T CheckForTargetToPutHandsUp(CPlayerPed*, CPed*)
005d3a55 T CreateTxdImageForVideoCard()
002f8fb5 T FindHeightForVerticalAngle(CPlane*, float, float, float*)
001ba679 T GetCurrentProjectionMatrix()
005d0499 T IsPointWithinArbitraryArea(float, float, float, float, float, float, float, float, float, float)
00481dbd T JPegCompressScreenToBuffer(RwCamera*, char**, unsigned int*)
0026ddf1 T LIB_GameServiceRefreshData(bool)
0026e451 T LIB_GameServiceSaveToCloud(unsigned char const*, unsigned int)
0026e339 T LIB_GameServiceSubmitScore(char const*, long long)
003f0a71 T NormalCollisionVectorFixup(CompressedVector*, int)
0026d18d T OS_BillingConnectionStatus()
0026cebd T OS_BillingRestorePurchases()
001d030d T RQ_Command_rqDeleteTexture(char*&)
001d0325 T RQ_Command_rqSelectTexture(char*&)
001d0fcd T RQ_Command_rqTargetScissor(char*&)
0021e0cd T RpAtomicForAllWorldSectors(RpAtomic*, RpWorldSector* (*)(RpWorldSector*, void*), void*)
0021f6ad T RpAtomicSetDefaultPipeline(RxPipeline*)
005d1555 T RpClumpConvertGeometryToTL(RpClump*)
005d15ad T RpClumpConvertGeometryToTS(RpClump*)
001c35c9 T RpHAnimKeyFrameInterpolate(void*, void*, void*, float, void*)
001c3f8b T RpHAnimKeyFrameStreamWrite(RtAnimAnimation const*, RwStream*)
001c5c31 T RpMTEffectDictRemoveEffect(RpMTEffect*)
001c6ec5 T RpMatFXAtomicEnableEffects(RpAtomic*)
001c7361 T RpMatFXMaterialSetupEnvMap(RpMaterial*, RwTexture*, RwFrame*, int, float)
001cafb9 T RpUVAnimKeyFrameStreamRead(RwStream*, RtAnimAnimation*)
001c9f31 T RpUVAnimParamKeyFrameApply(void*, void*)
001ca0b1 T RpUVAnimParamKeyFrameBlend(void*, void*, void*, float)
0021e0fb T RpWorldSectorForAllAtomics(RpWorldSector*, RpAtomic* (*)(RpAtomic*, void*), void*)
004d4b19 T RsGetPresetViewDescription()
001eb1f3 T RtAnimAnimationGetNumNodes(RtAnimAnimation const*)
001eb15d T RtAnimAnimationStreamWrite(RtAnimAnimation const*, RwStream*)
001ed4a5 T RtDictSchemaGetCurrentDict(RtDictSchema*)
001ed4a9 T RtDictSchemaSetCurrentDict(RtDictSchema*, RtDict*)
001ed6e7 T RtDictSchemaStreamReadDict(RtDictSchema*, RwStream*)
001dd449 T RwIm3DGetTransformPipeline()
001dd549 T RwIm3DSetTransformPipeline(RxPipeline*)
001d9bed T RwImageRegisterImageFormat(char const*, RwImage* (*)(char const*), RwImage* (*)(RwImage*, char const*))
001d55a9 T RwTexDictionaryStreamWrite(RwTexDictionary const*, RwStream*)
001db479 T RwTextureGetAutoMipmapping()
001db459 T RwTextureSetAutoMipmapping(int)
001e19f9 T RxRenderStateVectorDestroy(RxRenderStateVector*)
002817bd T SetIfInteriorIplIsRequired(CVector2D const&, void*)
002a8c29 T SettingsBeforeStartingGame()
001ad9ad W SetupScreenSpaceProjection()
0026cfd5 T WarBilling_RequestPurchase(char const*)
0026e055 T WarGameService_RefreshData(bool)
0026e455 T WarGameService_SaveToCloud(unsigned char const*, int)
0026e33d T WarGameService_SubmitScore(char const*, long long)
002684a5 T WarGamepad_GetGamepadTrack(int, int, int*, int*)
00213cbd T _rpClumpRegisterExtensions()
0021f839 T _rpGeometryNeedsPrecideUVs(RpGeometry const*, int)
001c5f79 T _rpMatFXStreamWriteTexture(RwStream*, RwTexture const*)
00217819 T _rpMaterialListGetMaterial(RpMaterialList const*, int)
00217989 T _rpMaterialListStreamWrite(RpMaterialList const*, RwStream*)
002185f5 T _rpMeshGetNextSerialNumber()
00221bf5 T _rpOpenGLLightPluginAttach()
001c7c19 T _rpSkinGeometryNativeWrite(RwStream*, RpGeometry const*)
001c86ed T _rpSkinPrepareAtomicMatrix(RpAtomic*, RpSkin*, RpHAnimHierarchy*)
001c7945 T _rpSkinSplitDataStreamRead(RwStream*, RpSkin*)
0021c84d T _rpWorldForAllGlobalLights(RpLight* (*)(RpLight*, void*), void*)
001a9e45 T _rwDataBlockMgrCreateBlock(RwDataBlockMgr*, unsigned int, void (*)(void*))
001a9f5d T _rwDataBlockMgrEmptyBlocks(RwDataBlockMgr*)
001d7ec9 T _rwFrameCloneAndLinkClones(RwFrame*)
001adab9 T _rwOpenGLCameraBeginUpdate(void*, void*, int)
001aebd9 T _rwOpenGLNativeTextureRead(void*, void*, int)
001ae761 T _rwOpenGLRasterLockPalette(void*, void*, int)
001e5f35 T _rwPluginRegistryAddPlugin(RwPluginRegistry*, int, unsigned int, void* (*)(void*, int, int), void* (*)(void*, int, int), void* (*)(void*, void const*, int, int))
001d4f89 T _rwStringStreamFindAndRead(char*, RwStream*)
00222fc5 T _rxWorldDevicePluginAttach()
001bd08d T emu_ArraysGetShareResource()
001bc9a1 T emu_BindShadowRenderTarget()
001c0621 T emu_CameraPositionSetDirty(unsigned char)
001c1f2d T emu_InternalSkinClearDirty()
001bbb55 T emu_SetShadowTargetTexture()
002138dd T AtomicDefaultRenderCallBack(RpAtomic*)
0048d765 T CopyFromRadarTraceSerialize(sRadarTrace*, sRadarTraceSerialize&)
005ae0e1 T DoesInfiniteLineTouchScreen(float, float, float, float)
00463045 T FindSplinePathPositionFloat(float*, float*, float, unsigned int&)
0026e951 T LIB_GameServiceLoadSnapshot()
0026e6f7 T LIB_GameServiceSaveSnapshot(char const*, char const*, unsigned char const*, int, int)
0026d571 T LIB_GameServiceShowSignInUI()
00270795 T NVEventGetPlatformAppHandle()
0026cc89 T OS_BillingSubmitPurchaseIDs(OS_BillingPurchaseID*, int)
002667b9 T OS_FileSetAsyncReadMultiple(int)
0026c759 T OS_ServiceLocalNotification(int, char const*, char const*)
001cc069 T RQ_Command_rqDrawNonIndexed(char*&)
001cbb81 T RQ_Command_rqIndexBufferCPU(char*&)
001d0f9b T RQ_Command_rqTargetViewport(char*&)
001d0351 T RQ_Command_rqTextureMipMode(char*&)
005d14f9 T RpAtomicConvertGeometryToTL(RpAtomic*)
005d1527 T RpAtomicConvertGeometryToTS(RpAtomic*)
0021ab91 T RpBuildMeshGenerateTriStrip(RpBuildMesh*, void*)
00215685 T RpClumpRegisterPluginStream(unsigned int, RwStream* (*)(RwStream*, int, void*, int, int), RwStream* (*)(RwStream*, int, void const*, int, int), int (*)(void const*, int, int))
0021ef39 T RpGeometryIsCorrectlySorted(RpGeometry const*, int*)
00215d5d T RpGeometryRemoveMorphTarget(RpGeometry*, int)
00216a89 T RpLightRegisterPluginStream(unsigned int, RwStream* (*)(RwStream*, int, void*, int, int), RwStream* (*)(RwStream*, int, void const*, int, int), int (*)(void const*, int, int))
001c5ccd T RpMTEffectDictForAllEffects(RpMTEffectDict const*, RpMTEffect* (*)(RpMTEffect*, void*), void*)
001c5729 T RpMTEffectDictStreamGetSize(RpMTEffectDict const*)
001c7115 T RpMatFXMaterialSetupBumpMap(RpMaterial*, RwTexture*, RwFrame*, float)
001cad5d T RpMaterialUVAnimAddAnimTime(RpMaterial*, float)
001ca98d T RpMaterialUVAnimApplyUpdate(RpMaterial*)
001cade1 T RpMaterialUVAnimSubAnimTime(RpMaterial*, float)
001cb02f T RpUVAnimKeyFrameStreamWrite(RtAnimAnimation const*, RwStream*)
001c9c5d T RpUVAnimLinearKeyFrameApply(void*, void*)
001c9d31 T RpUVAnimLinearKeyFrameBlend(void*, void*, void*, float)
0021d4c5 T RpWorldRegisterPluginStream(unsigned int, RwStream* (*)(RwStream*, int, void*, int, int), RwStream* (*)(RwStream*, int, void const*, int, int), int (*)(void const*, int, int))
0021c73f T RpWorldSectorGetNumPolygons(RpWorldSector const*)
0021c739 T RpWorldSectorGetNumVertices(RpWorldSector const*)
0021c779 T RpWorldSectorRegisterPlugin(int, unsigned int, void* (*)(void*, int, int), void* (*)(void*, int, int), void* (*)(void*, void const*, int, int))
00211e2d T RtQuatSetupSlerpArgandCache(RtQuat*, RtQuat*, RtQuatSlerpArgandCache*)
001d7491 T RwEngineGetCurrentSubSystem()
001d75a1 T RwEngineGetCurrentVideoMode()
001e31f1 T RwEngineGetMatrixTolerances(RwMatrixTolerance*)
001e31c9 T RwEngineSetMatrixTolerances(RwMatrixTolerance const*)
001d4955 T RwFrameRegisterPluginStream(unsigned int, RwStream* (*)(RwStream*, int, void*, int, int), RwStream* (*)(RwStream*, int, void const*, int, int), int (*)(void const*, int, int))
001d8889 T RwFrameSetStaticPluginsSize(int)
001e4be5 T RwFreeListPurgeAllFreeLists()
005d16fb T RwIm2DRenderTriangle_BUGFIX(RwOpenGLVertex*, int, int, int, int)
001e51c5 T RwResourcesAllocateResEntry(void*, RwResEntry**, int, void (*)(RwResEntry*))
001e21a5 T RwStreamReadChunkHeaderInfo(RwStream*, RwChunkHeaderInfo*)
001dba01 T RwTextureGenerateMipmapName(char*, char*, unsigned char, int)
001de757 T RxPipelineNodeSendConfigMsg(RxPipelineNode*, unsigned int, unsigned int, void*)
0028182d T SetIfIplIsRequiredReducedBB(CVector2D const&, void*)
005d136d T SkinGetBonePositionsToTable(RpClump*, RwV3d*)
0027b471 T WarBilling_changeConnection(_JNIEnv*, _jobject*, unsigned char)
0026e955 T WarGameService_LoadSnapshot()
0026e6f9 T WarGameService_SaveSnapshot(char const*, char const*, unsigned char const*, int, int)
0026d575 T WarGameService_ShowSignInUI()
0021f885 T _rpGeometryNeedsPreciseSkin(RpGeometry const*, RpSkin*)
001c5245 T _rpMTEffectRegisterPlatform(RwPlatformID, RpMTEffect* (*)(RwStream*, RwPlatformID, unsigned int, unsigned int), RpMTEffect const* (*)(RpMTEffect const*, RwStream*), int (*)(RpMTEffect const*), void (*)(RpMTEffect*))
001c4a0d T _rpMatFXOpenGLDefaultRender(RxOpenGLMeshInstanceData*, RwTexture*, unsigned int)
001c4831 T _rpMatFXPipelineAtomicSetup(RpAtomic*)
001c4851 T _rpMatFXSetupBumpMapTexture(RwTexture const*, RwTexture const*)
002176ed T _rpMaterialListDeinitialize(RpMaterialList*)
001c4a41 T _rpMultiTexturePluginAttach()
002136bf T _rpPlaneSectorChunkInfoRead(RwStream*, RpPlaneSectorChunkInfo*, int*)
001c7d79 T _rpSkinOpenGLPipelineCreate(RpSkinType, void (*)(RwResEntry*, void*, unsigned char, unsigned int))
001c78e5 T _rpSkinSplitDataStreamWrite(RwStream*, RpSkin const*)
0021363d T _rpWorldSectorChunkInfoRead(RwStream*, RpWorldChunkInfoSector*, int*)
001a9f15 T _rwDataBlockMgrRecallBlocks(RwDataBlockMgr*, RwRecallDirection)
001ad751 T _rwOpenGLIm2DSetSubmitFuncs()
001ad8b9 T _rwOpenGLIm2DSetVertexFuncs(int, int, int)
001aeadd T _rwOpenGLNativeTextureWrite(void*, void*, int)
001ae769 T _rwOpenGLRasterGetMipLevels(void*, void*, int)
001b0525 T _rwOpenGLRasterRenderScaled(void*, void*, int)
001e61e5 T _rwPluginRegistryCopyObject(RwPluginRegistry const*, void*, void const*)
001e617b T _rwPluginRegistryInitObject(RwPluginRegistry const*, void*)
001b1985 T dxtSwizzler_GetNativeFormat()
001c1f3d T emu_InternalSkinGetMatrices()
001b4e59 T emu_SetTextureMatrixEnabled(float*, unsigned char)
001bca39 T emu_ShutdownAltRenderTarget()
001bcb45 T emu_TextureSetDetailTexture(void*, unsigned int)
0047f641 T jpeg_calc_output_dimensions(jpeg_decompress_struct*)
00462de1 T FindSplinePathPositionVector(CVector*, float*, float, unsigned int&)
0035fafd T GetStatFromChangingStatIndex(int)
005e505d T HasAppJustRegainedForeground()
004a7335 T IsPedPointerValid_NotInWorld(CPed*)
0026f401 T LIB_GameServiceGetPlayerName()
0026e57d T LIB_GameServiceLoadFromCloud()
0026f15d T LIB_LeaderboardQueryFinished(int, LeaderboardQuerySt*&)
0026a4b9 T OS_ServiceIsNetworkAvailable()
001cfa77 T RQ_Command_rqEnableDepthRead(char*&)
001cfa3f T RQ_Command_rqSetWindingOrder(char*&)
001cb8e1 T RQ_Command_rqVertexBufferCPU(char*&)
005d1c35 T RemoveExtraDirectionalLights(RpWorld*)
00215645 T RpAtomicRegisterPluginStream(unsigned int, RwStream* (*)(RwStream*, int, void*, int, int), RwStream* (*)(RwStream*, int, void const*, int, int), int (*)(void const*, int, int))
001c3fed T RpHAnimKeyFrameStreamGetSize(RtAnimAnimation const*)
001c5089 T RpMaterialCreateMultiTexture(RpMaterial*, RwPlatformID, unsigned int)
0021f6d5 T RpMaterialSetDefaultPipeline(RxPipeline*)
001c5015 T RpMultiTextureGetNumTextures(RpMultiTexture const*)
0021d749 T RpTieSetFreeListCreateParams(int, int)
00219faf T RpTriStripPolygonFollowStrip(RpTriStripPolygon*, RpTriStripPolygon*)
0021c7f1 T RpWorldSectorGetPluginOffset(unsigned int)
0021c801 T RpWorldSectorValidatePlugins(RpWorldSector const*)
001eb1e5 T RtAnimAnimationStreamGetSize(RtAnimAnimation const*)
001d46a5 T RwCameraRegisterPluginStream(unsigned int, RwStream* (*)(RwStream*, int, void*, int, int), RwStream* (*)(RwStream*, int, void const*, int, int), int (*)(void const*, int, int))
001d7629 T RwEngineGetTextureMemorySize()
001e2919 T RwIm2DRenderIndexedPrimitive(RwPrimitiveType, RwOpenGLVertex*, int, unsigned short*, int)
005d16f3 T RwIm2DRenderPrimitive_BUGFIX(RwPrimitiveType, RwOpenGLVertex*, int)
001dd085 T RwIm3DRenderIndexedPrimitive(RwPrimitiveType, unsigned short*, int)
005d3515 T RwTexDictionaryGtaStreamRead(RwStream*)
001db917 T RwTexDictionaryRemoveTexture(RwTexture*)
001d5505 T RwTexDictionaryStreamGetSize(RwTexDictionary const*)
001deec1 T RxPipelineNodeCreateInitData(RxPipelineNode*, unsigned int)
001dee4f T RxPipelineNodeReplaceCluster(RxPipeline*, RxPipelineNode*, RxClusterDefinition*, RxClusterDefinition*)
001dedeb T RxPipelineNodeRequestCluster(RxPipeline*, RxPipelineNode*, RxClusterDefinition*)
005d1705 T SetLightsWithTimeOfDayColour(RpWorld*)
00588769 T SetVehicleAtomicVisibilityCB(RwFrame*, void*)
0058873d T SetVehicleAtomicVisibilityCB(RwObject*, void*)
0026f405 T WarGameService_GetPlayerName()
0026e581 T WarGameService_LoadFromCloud()
00267b45 T WarGamepad_GetGamepadButtons(int)
001c4855 T _rpMatFXSetupDualRenderState(MatFXDualData*, RwRenderState)
0021792d T _rpMaterialListStreamGetSize(RpMaterialList const*)
001c90b5 T _rpSkinGetAlignedMatrixCache()
001ae765 T _rwOpenGLRasterUnlockPalette(void*, void*, int)
001db4b9 T _rwTextureGetAutoMipMapState()
001db495 T _rwTextureSetAutoMipMapState(int)
001b19b9 T dxtSwizzler_InlineSwizzleATC(unsigned int, unsigned int, unsigned int, void const*, unsigned int&)
001bcf2d T emu_ArraysDrawStoredSeparate(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
001c0725 T emu_DistanceFogGetParameters()
0026be4d T AND_CurrentThreadAffinityMask(char const*, int)
0026d935 T AND_GameServiceGetAchievement(char const*)
002e102f T ClumpCollisionCopyConstructor(void*, void const*, int, int)
003f5881 T DoRWStuffStartOfFrame_Horizon(short, short, short, short, short, short, short)
0040bd39 T FindPlayerCentreOfWorldForMap(int)
005d1071 T GetAnimHierarchyFromSkinClump(RpClump*)
004d651d T GetPlayerRelationshipRecorder()
0026eb29 T LIB_GameServiceDeleteSnapshot(char const*)
00274b29 T NvCreateTextureFromHHDDSImage(NVHHDDSImage const&, unsigned char, int*, int*, unsigned char*, unsigned char*)
001dea2d T PipelineCalcNumUniqueClusters(RxPipeline*)
001cfa8f T RQ_Command_rqEnableDepthWrite(char*&)
001cbd05 T RQ_Command_rqVertexStateApply(char*&)
004acfb9 T RecurseFrameChildrenToCloneCB(RwFrame*, void*)
004a76f9 T RemoveAnimsFromAnimationBlock(RpClump*, char const*)
0039091d T RpAnimBlendClumpIsInitialized(RpClump*)
00390c35 T RpAnimBlendGetNextAssociation(CAnimBlendAssociation*)
00390c3f T RpAnimBlendGetNextAssociation(CAnimBlendAssociation*, unsigned int)
00215f1f T RpGeometryTriangleGetMaterial(RpGeometry const*, RpTriangle const*)
00215eb7 T RpGeometryTriangleSetMaterial(RpGeometry*, RpTriangle*, RpMaterial*)
001c5d01 T RpMTEffectDictFindNamedEffect(RpMTEffectDict const*, char const*)
001c7739 T RpMatFXMaterialGetDualTexture(RpMaterial const*)
001c76cd T RpMatFXMaterialGetEnvMapFrame(RpMaterial const*)
001c7599 T RpMatFXMaterialSetDualTexture(RpMaterial*, RwTexture*)
001c7479 T RpMatFXMaterialSetEnvMapFrame(RpMaterial*, RwFrame*)
001c5175 T RpMaterialDestroyMultiTexture(RpMaterial*, RwPlatformID)
001cb0af T RpUVAnimKeyFrameStreamGetSize(RtAnimAnimation const*)
001ca181 T RpUVAnimParamKeyFrameMulRecip(void*, void*)
001eb531 T RtAnimInterpolatorAddAnimTime(RtAnimInterpolator*, float)
001eb8b1 T RtAnimInterpolatorAddTogether(RtAnimInterpolator*, RtAnimInterpolator*, RtAnimInterpolator*)
001eb3fd T RtAnimInterpolatorSubAnimTime(RtAnimInterpolator*, float)
0021e611 T RwCameraForAllClumpsInFrustum(RwCamera*, void*)
001db6b5 T RwTexDictionaryForAllTextures(RwTexDictionary const*, RwTexture* (*)(RwTexture*, void*), void*)
001db98f T RwTexDictionaryGetNumTextures(RwTexDictionary*)
005d358d T RwTexDictionaryGtaStreamRead1(RwStream*)
005d3645 T RwTexDictionaryGtaStreamRead2(RwStream*, RwTexDictionary*)
001dbb21 T RwTexDictionaryRegisterPlugin(int, unsigned int, void* (*)(void*, int, int), void* (*)(void*, int, int), void* (*)(void*, void const*, int, int))
001d51a9 T RwTextureRegisterPluginStream(unsigned int, RwStream* (*)(RwStream*, int, void*, int, int), RwStream* (*)(RwStream*, int, void const*, int, int), int (*)(void const*, int, int))
001dea95 T RxPipelineNodeCloneDefinition(RxPipelineNode*, RxClusterDefinition*)
005d1649 T SetFilterModeOnClumpsTextures(RpClump*, RwTextureFilterMode)
0031a511 T SetOneAdjacentNodeForThisNode(int, signed char, int, int, int, int&)
0026eb2d T WarGameService_DeleteSnapshot(char const*)
0026f2c1 T WarGameService_SaveScreenshot(unsigned char const*, int)
00217885 T _rpMaterialListAppendMaterial(RpMaterialList*, RpMaterial*)
001c7a2d T _rpSkinSplitDataStreamGetSize(RpSkin const*)
001ca881 T _rpUVAnimCustomDataStreamRead(RwStream*)
0021d819 T _rpWorldObjRegisterExtensions()
001dcf97 T _rwObjectHasFrameReleaseFrame(void*)
001b10e7 T _rwOpenGLDetermineMaxMipLevel(int, int)
001aede9 T _rwOpenGLGetActiveTextureUnit()
001aea41 T _rwOpenGLNativeTextureGetSize(void*, void*, int)
001aedd9 T _rwOpenGLSetActiveTextureUnit(unsigned char)
001e61bd T _rwPluginRegistryDeInitObject(RwPluginRegistry const*, void*)
001e5bd9 T _rwPluginRegistryInvokeRights(RwPluginRegistry const*, unsigned int, void*, unsigned int)
001de095 T _rxEmbeddedPacketBetweenNodes(RxPipeline*, RxPipelineNode*, unsigned int)
00222de1 T _rxOpenGLAllInOnePipelineInit(RxPipelineNode*)
00222ee5 T _rxOpenGLAllInOnePipelineTerm(RxPipelineNode*)
001b4f35 T emu_DebugDrawWhenBlendEnabled(unsigned char)
001c1f1d T emu_InternalSkinMatricesDirty()
005d162d T forceLinearFilteringAtomicsCB(RpAtomic*, void*)
0047b2a9 T jpeg_copy_critical_parameters(jpeg_decompress_struct*, jpeg_compress_struct*)
00268509 T AND_GamepadUpdateAccelerometer(float, float, float)
003eaf01 T IsDummyPointerValid_NotInWorld(CDummy*)
00481f5d T JPegDecompressToVramFromBuffer(RwRaster*, char**)
0026e22d T LIB_GameServiceShowLeaderboard(char const*)
0026d755 T LIB_GameServiceTrySilentSignIn()
00270149 T LIB_PointerSetDoubleClickDelay(float)
001cbae5 T RQ_Command_rqIndexBufferCreate(char*&)
001cbbc9 T RQ_Command_rqIndexBufferDelete(char*&)
001cbb09 T RQ_Command_rqIndexBufferSelect(char*&)
001cbb39 T RQ_Command_rqIndexBufferUpdate(char*&)
001cbcfd T RQ_Command_rqVertexStateCreate(char*&)
001cbd0d T RQ_Command_rqVertexStateDelete(char*&)
0039093d T RpAnimBlendClumpAddAssociation(RpClump*, CAnimBlendAssociation*, unsigned int, float, float)
00390751 T RpAnimBlendClumpFillFrameArray(RpClump*, AnimBlendFrameData**)
00390a25 T RpAnimBlendClumpGetAssociation(RpClump*, char const*)
00390a79 T RpAnimBlendClumpGetAssociation(RpClump*, bool, CAnimBlendHierarchy*)
00390a51 T RpAnimBlendClumpGetAssociation(RpClump*, unsigned int)
00390989 T RpAnimBlendClumpSetBlendDeltas(RpClump*, unsigned int, float)
00390441 T RpAnimBlendKeyFrameInterpolate(void*, void*, void*, float, void*)
00213a19 T RpAtomicGetWorldBoundingSphere(RpAtomic*)
00213bb5 T RpClumpSetFreeListCreateParams(int, int)
002156a5 T RpClumpSetStreamAlwaysCallBack(unsigned int, int (*)(void*, int, int))
00215fb1 T RpGeometryRegisterPluginStream(unsigned int, RwStream* (*)(RwStream*, int, void*, int, int), RwStream* (*)(RwStream*, int, void const*, int, int), int (*)(void const*, int, int))
001c2ba9 T RpHAnimHierarchyGetMatrixArray(RpHAnimHierarchy*)
001c2c35 T RpHAnimHierarchyUpdateMatrices(RpHAnimHierarchy*)
00216fd5 T RpLightSetFreeListCreateParams(int, int)
00216aa9 T RpLightSetStreamAlwaysCallBack(unsigned int, int (*)(void*, int, int))
001c765d T RpMatFXMaterialGetBumpMapFrame(RpMaterial const*)
001c730d T RpMatFXMaterialSetBumpMapFrame(RpMaterial*, RwFrame*)
001c6f35 T RpMatFXWorldSectorQueryEffects(RpWorldSector*)
00217329 T RpMaterialRegisterPluginStream(unsigned int, RwStream* (*)(RwStream*, int, void*, int, int), RwStream* (*)(RwStream*, int, void const*, int, int), int (*)(void const*, int, int))
001cacd9 T RpMaterialUVAnimSetCurrentTime(RpMaterial*, float)
001c9dc7 T RpUVAnimLinearKeyFrameMulRecip(void*, void*)
0021d141 T RpWorldGetSectorRenderCallBack(RpWorld const*)
0021d12d T RpWorldSetSectorRenderCallBack(RpWorld*, RpWorldSector* (*)(RpWorldSector*))
0021d4e9 T RpWorldSetStreamAlwaysCallBack(unsigned int, int (*)(void*, int, int))
0021d4fd T RpWorldSetStreamRightsCallBack(unsigned int, int (*)(void*, int, int, unsigned int))
001ed88d T RtDictSchemaForAllDictionaries(RtDictSchema*, RtDict* (*)(RtDict*, void*), void*)
0021e5c9 T RwCameraForAllSectorsInFrustum(RwCamera*, RpWorldSector* (*)(RpWorldSector*, void*), void*)
001d7ddd T RwFrameSetFreeListCreateParams(int, int)
001d4979 T RwFrameSetStreamAlwaysCallBack(unsigned int, int (*)(void*, int, int))
001d88dd T RwImageSetFreeListCreateParams(int, int)
001dbb4d T RwTexDictionaryGetPluginOffset(unsigned int)
001dbb5d T RwTexDictionaryValidatePlugins(RwTexDictionary const*)
001dbbbd T RwTextureGetMipmapNameCallBack()
001dbbd9 T RwTextureRasterGenerateMipmaps(RwRaster*, RwImage*)
001dbb9d T RwTextureSetMipmapNameCallBack(int (*)(char*, char*, unsigned char, int))
001ded51 T RxPipelineNodeFindOutputByName(RxPipelineNode*, char const*)
005d1611 T SetFilterModeOnAtomicsTextures(RpAtomic*, RwTextureFilterMode)
0026e231 T WarGameService_ShowLeaderboard(char const*)
001c487d T _rpMatFXOpenGLAllInOneRenderCB(RwResEntry*, void*, unsigned char, unsigned int)
0021c805 T _rpSectorDefaultRenderCallBack(RpWorldSector*)
001ca8d1 T _rpUVAnimCustomDataStreamWrite(_rpUVAnimCustomData const*, RwStream*)
001b134d T _rwD3D8FindCorrectRasterFormat(RwRasterType, int)
001aa9fd T _rwMipmapRasterSetFromImage565(unsigned char*, int, RwImage*, int)
001aa79d T _rwMipmapRasterSetFromImage888(unsigned char*, int, RwImage*, int)
001b1339 T _rwOpenGLGetEngineWindowHeight()
001b133d T _rwOpenGLGetEngineZBufferDepth()
001b1345 T _rwOpenGLGetStencilBufferDepth(unsigned char*)
001ad5f5 T _rwOpenGLImageFindRasterFormat(void*, void*, int)
001b14c9 T _rwOpenGLNativeTextureReadD3D8(void*, void*)
001b3ca1 T _rwOpenGLNativeTextureReadD3D9(void*, void*)
001b4601 T _rwOpenGLNativeTextureReadXBOX(void*, void*)
001af841 T _rwOpenGLSetInitialRenderState()
001c1f49 T emu_InternalSkinGetVectorCount()
001bcbc9 T emu_TexturingGet4444Conversion()
001bcb31 T emu_TexturingGetEnhancedDetail()
001bcbb5 T emu_TexturingSet4444Conversion(unsigned char)
001bcb15 T emu_TexturingSetEnhancedDetail(unsigned char)
001b2aa5 T wrapped_glCompressedTexImage2D(RQTexture*&, int, unsigned int, int, int, int, void const*, bool)
001b2c1d T wrapped_glCompressedTexImage2D(unsigned int, int, unsigned int, int, int, int, void const*)
00465009 T CalculateBoundingSphereRadiusCB(RpAtomic*, void*)
005ae085 T DoesInfiniteLineCrossFiniteLine(float, float, float, float, float, float, float, float)
00456031 T IsObjectPointerValid_NotInWorld(CObject*)
0026d845 T LIB_GameServiceConnectionStatus()
0026e141 T LIB_GameServiceShowLeaderboards()
0026e865 T LIB_GameServiceShowSnapshotList()
001cb841 T RQ_Command_rqVertexBufferCreate(char*&)
001cb929 T RQ_Command_rqVertexBufferDelete(char*&)
001cb865 T RQ_Command_rqVertexBufferSelect(char*&)
001cb899 T RQ_Command_rqVertexBufferUpdate(char*&)
00213b9d T RpAtomicSetFreeListCreateParams(int, int)
00215665 T RpAtomicSetStreamAlwaysCallBack(unsigned int, int (*)(void*, int, int))
00215675 T RpAtomicSetStreamRightsCallBack(unsigned int, int (*)(void*, int, int, unsigned int))
001c76a9 T RpMatFXMaterialGetEnvMapTexture(RpMaterial const*)
001c7425 T RpMatFXMaterialSetEnvMapTexture(RpMaterial*, RwTexture*)
001c74f1 T RpMatFXMaterialSetupDualTexture(RpMaterial*, RwTexture*, RwBlendFunction, RwBlendFunction)
001c6f05 T RpMatFXWorldSectorEnableEffects(RpWorldSector*)
001caca9 T RpMaterialUVAnimGetInterpolator(RpMaterial*, unsigned int)
001cacc1 T RpMaterialUVAnimSetInterpolator(RpMaterial*, RtAnimInterpolator*, unsigned int)
00215809 T RpMorphTargetCalcBoundingSphere(RpMorphTarget const*, RwSphere*)
001ca869 T RpUVAnimSetFreeListCreateParams(int, int)
0021f685 T RpWorldSetDefaultSectorPipeline(RxPipeline*)
001d5981 T RwCameraSetFreeListCreateParams(int, int)
001d46c9 T RwCameraSetStreamAlwaysCallBack(unsigned int, int (*)(void*, int, int))
001e3111 T RwMatrixSetFreeListCreateParams(int, int)
001daaf9 T RwRasterSetFreeListCreateParams(int, int)
001e5535 T RwStreamSetFreeListCreateParams(int, int)
001db931 T RwTexDictionaryFindNamedTexture(RwTexDictionary*, char const*)
001dedc1 T RxPipelineNodeFindOutputByIndex(RxPipelineNode*, unsigned int)
005d1c5d T SetAmbientAndDirectionalColours(float)
003f0489 T TranslationCollisionVectorFixup(CompressedVector*, int)
00465099 T UpdateCutsceneObjectBoundingBox(RpClump*, int)
0026e145 T WarGameService_ShowLeaderboards()
0026e869 T WarGameService_ShowSnapshotList()
0021f92d T _rpGeometryNativeCompressNormal(float)
0021c885 T _rpWorldSectorForAllLocalLights(RpWorldSector*, RpLight* (*)(RpLight*, void*), void*)
001aa179 T _rwImageFindNearestPaletteColor(RwRGBA*, RwRGBA*, int)
001d8dd1 T _rwImageGammaCorrectArrayOfRGBA(RwRGBA*, RwRGBA*, int)
001aa929 T _rwMipmapRasterSetFromImage1555(unsigned char*, int, RwImage*, int)
001aa859 T _rwMipmapRasterSetFromImage4444(unsigned char*, int, RwImage*, int)
001aa6dd T _rwMipmapRasterSetFromImage8888(unsigned char*, int, RwImage*, int)
002222c5 T _rwOpenGLLightsLocalLightEnable(RpLight const*)
001aee9d T _rwOpenGLSetRenderStateNoExtras(RwRenderState, void*)
001e5ae9 T _rwPluginRegistryReadDataChunks(RwPluginRegistry const*, RwStream*, void*)
001e5cfb T _rwPluginRegistrySkipDataChunks(RwPluginRegistry const*, RwStream*)
001b2e75 W dxtSwizzler_DecodeDXTColorBlock(unsigned char const*, unsigned short*, unsigned int, bool, unsigned int)
0058544d T IsVehiclePointerValid_NotInWorld(CVehicle*)
0026ea3d T LIB_GameServiceLoadSnapshotCount()
0026da65 T LIB_GameServiceUnlockAchievement(char const*)
004acf4d T RecurseFrameChildrenVisibilityCB(RwFrame*, void*)
005d409d T RemoveIfRefCountIsGreaterThanOne(RwTexture*, void*)
00390d3d T RpAnimBlendClumpGiveAssociations(RpClump*, CAnimBlendAssociation*)
0038bf51 T RpAnimBlendClumpUpdateAnimations(RpClump*, float, bool)
001c2abd T RpHAnimHierarchyAttachFrameIndex(RpHAnimHierarchy*, int)
001c2b9d T RpHAnimHierarchyDetachFrameIndex(RpHAnimHierarchy*, int)
001c5c89 T RpMTEffectDictForAllDictionaries(RpMTEffectDict* (*)(RpMTEffectDict*, void*), void*)
001c7639 T RpMatFXMaterialGetBumpMapTexture(RpMaterial const*)
001c775d T RpMatFXMaterialGetDualBlendModes(RpMaterial const*, RwBlendFunction*, RwBlendFunction*)
001c7189 T RpMatFXMaterialSetBumpMapTexture(RpMaterial*, RwTexture*)
001c70c9 T RpMatFXMaterialSetDualBlendModes(RpMaterial*, RwBlendFunction, RwBlendFunction)
0022270d T RpOpenGLLightGetSoftSpotExponent(void const*)
002226ed T RpOpenGLLightSetSoftSpotExponent(void*, float)
001c9fcd T RpUVAnimParamKeyFrameInterpolate(void*, void*, void*, float, void*)
001eb285 T RtAnimInterpolatorSetCurrentAnim(RtAnimInterpolator*, RtAnimAnimation*)
001eb6dd T RtAnimInterpolatorSetCurrentTime(RtAnimInterpolator*, float)
0021e739 T RwCameraForAllClumpsNotInFrustum(RwCamera*, int, void*)
001e3745 T RwMatrixRotateOneMinusCosineSine(RwMatrixTag*, RwV3d const*, float, float, RwOpCombineType)
001db9a3 T RwTexDictionaryGetTextureByIndex(RwTexDictionary*, int)
001dbd01 T RwTextureSetFreeListCreateParams(int, int)
001d51cd T RwTextureSetStreamAlwaysCallBack(unsigned int, int (*)(void*, int, int))
001de7e5 T RxPipelineNodeGetPipelineCluster(RxPipelineNode*, unsigned int)
002e27d5 T SetIfInteriorCollisionIsRequired(CVector2D const&, void*)
0026d4d5 T WarGameService_EnsureInitialized()
0026d759 T WarGameService_GameServiceExists()
0026ea41 T WarGameService_LoadSnapshotCount()
0026dad1 T WarGameService_UnlockAchievement(char const*)
0027be65 T WarGameService_notifyStateLoaded(_JNIEnv*, _jobject*, int, int, _jbyteArray*)
00223081 T _rpCreatePlatformAtomicPipelines()
001c4841 T _rpMatFXPipelineWorldSectorSetup(RpWorldSector*)
00217911 T _rpMaterialListFindMaterialIndex(RpMaterialList const*, RpMaterial const*)
001c8565 T _rpSkinOpenGLPrepareAtomicMatrix(RpAtomic*, RpSkin*, RpHAnimHierarchy*)
001ca8fd T _rpUVAnimCustomDataStreamGetSize(_rpUVAnimCustomData const*)
0021c925 T _rpWorldSetupSectorBoundingBoxes(RpWorld*)
001e5a5d T _rwPluginRegistryAddPluginStream(RwPluginRegistry*, unsigned int, RwStream* (*)(RwStream*, int, void*, int, int), RwStream* (*)(RwStream*, int, void const*, int, int), int (*)(void const*, int, int))
001e5f19 T _rwPluginRegistryGetPluginOffset(RwPluginRegistry const*, unsigned int)
001e5c4b T _rwPluginRegistryWriteDataChunks(RwPluginRegistry const*, RwStream*, void const*)
00222c51 T _rxOpenGLDefaultAllInOneRenderCB(RwResEntry*, void*, unsigned char, unsigned int)
0048227d T CopyCameraRasterScanlineToTexture(RwRaster*, int, unsigned int, unsigned int)
0038864d T GetListOfComponentsNotUsedByRules(unsigned int, int, int*)
0026ec2d T LIB_GameServiceDeleteAllSnapshots()
0026e669 T LIB_GameServiceSetConflictHandler(void (*)(unsigned char*, int, unsigned char*, int, unsigned char**, int*))
0026c7b5 T OS_ServiceLocalNotificationCancel()
004a7755 T PlayRandomAnimationsFromAnimBlock(CPed*, AssocGroupId, unsigned int, int)
001cbd25 T RQ_Command_rqSetVertexDescription(char*&)
005d1f5d T ReSetAmbientAndDirectionalColours()
00215fd1 T RpGeometrySetStreamAlwaysCallBack(unsigned int, int (*)(void*, int, int))
0021d761 T RpLightTieSetFreeListCreateParams(int, int)
00217091 T RpMaterialSetFreeListCreateParams(int, int)
00217349 T RpMaterialSetStreamAlwaysCallBack(unsigned int, int (*)(void*, int, int))
00217359 T RpMaterialSetStreamRightsCallBack(unsigned int, int (*)(void*, int, int, unsigned int))
002226d1 T RpOpenGLLightGetAttenuationParams(void const*)
002226b5 T RpOpenGLLightSetAttenuationParams(void*, RpOpenGLLightAttentuation const*)
001c9c87 T RpUVAnimLinearKeyFrameInterpolate(void*, void*, void*, float, void*)
0021c7a5 T RpWorldSectorRegisterPluginStream(unsigned int, RwStream* (*)(RwStream*, int, void*, int, int), RwStream* (*)(RwStream*, int, void const*, int, int), int (*)(void const*, int, int))
001eb3df T RtAnimInterpolatorSetAnimCallBack(RtAnimInterpolator*, RtAnimInterpolator* (*)(RtAnimInterpolator*, void*), float, void*)
001eae69 T RtAnimRegisterInterpolationScheme(RtAnimInterpolatorInfo*)
00222fb3 T RxOpenGLAllInOneGetRenderCallBack(RxPipelineNode*)
00222fad T RxOpenGLAllInOneSetRenderCallBack(RxPipelineNode*, void (*)(RwResEntry*, void*, unsigned char, unsigned int))
001de1b5 T RxPipelineSetFreeListCreateParams(int, int)
002e2825 T SetIfCollisionIsRequiredReducedBB(CVector2D const&, void*)
0026ec31 T WarGameService_DeleteAllSnapshots()
0027bb61 T WarGameService_notifySignInChange(_JNIEnv*, _jobject*, unsigned char)
0027bb9d T WarGameService_notifySignInFailed(_JNIEnv*, _jobject*)
00213915 T _rpAtomicResyncInterpolatedSphere(RpAtomic*)
002230e9 T _rpDestroyPlatformAtomicPipelines()
0021573d T _rpGeometryGetTKListFirstRegEntry()
0021f98d T _rpGeometryNativeCompressTexCoord(float)
001d8d81 T _rwImageGammaUnCorrectArrayOfRGBA(RwRGBA*, RwRGBA*, int)
00221ed1 T _rwOpenGLLightsGlobalLightsEnable(RpLightFlag)
001b1341 T _rwOpenGLSelectStencilBufferDepth(unsigned char)
001ddef5 T _rxEmbeddedPacketBetweenPipelines(RxPipeline*, RxPipeline*)
005d1603 T forceLinearFilteringMatTexturesCB(RpMaterial*, void*)
0026d979 T LIB_GameServiceShowAchievementList()
0031f6b1 T ModifyStringLabelForControlSetting(char*)
00390a9d T RpAnimBlendClumpGetMainAssociation(RpClump*, CAnimBlendAssociation**, float*)
00390cb1 T RpAnimBlendClumpGetNumAssociations(RpClump*)
00390c61 T RpAnimBlendClumpPauseAllAnimations(RpClump*)
003909ed T RpAnimBlendClumpRemoveAssociations(RpClump*, unsigned int)
00218691 T RpBuildMeshGenerateDefaultTriStrip(RpBuildMesh*, void*)
00218615 T RpBuildMeshGenerateTrivialTriStrip(RpBuildMesh*, void*)
00215ef9 T RpGeometryTriangleGetVertexIndices(RpGeometry const*, RpTriangle const*, unsigned short*, unsigned short*, unsigned short*)
00215ea9 T RpGeometryTriangleSetVertexIndices(RpGeometry const*, RpTriangle*, unsigned short, unsigned short, unsigned short)
001c27d5 T RpHAnimHierarchyCreateSubHierarchy(RpHAnimHierarchy*, int, RpHAnimHierarchyFlag, int)
00222fbf T RxOpenGLAllInOneGetInstanceDLandVA(RxPipelineNode*)
00222fb9 T RxOpenGLAllInOneSetInstanceDLandVA(RxPipelineNode*, int)
001e1911 T RxRenderStateVectorLoadDriverState(RxRenderStateVector*)
0026d849 T WarGameService_GetConnectionStatus()
0026d97d T WarGameService_ShowAchievementList()
0027bd55 T WarGameService_notifyStateConflict(_JNIEnv*, _jobject*, int, _jstring*, _jbyteArray*, _jbyteArray*)
00222fc9 T _rpCreatePlatformMaterialPipelines()
001c433d T _rpMatFXOpenGLAtomicPipelineCreate()
001e5a9b T _rwPluginRegistryAddPlgnStrmlwysCB(RwPluginRegistry*, unsigned int, int (*)(void*, int, int))
001e1f83 T _rwStreamWriteVersionedChunkHeader(RwStream*, int, int, unsigned int, unsigned int)
00220eb1 T _rxOpenGLDefaultAtomicAllInOneNode(RxPipelineNode*, RxPipelineNodeParam const*)
0026dc51 T LIB_GameServiceIncrementAchievement(char const*, int)
00390d21 T RpAnimBlendClumpExtractAssociations(RpClump*)
0038d959 T RpAnimBlendClumpGetFirstAssociation(RpClump*)
00390c05 T RpAnimBlendClumpGetFirstAssociation(RpClump*, unsigned int)
001c28dd T RpHAnimHierarchyCreateFromHierarchy(RpHAnimHierarchy*, RpHAnimHierarchyFlag, int)
001c7715 T RpMatFXMaterialGetEnvMapCoefficient(RpMaterial const*)
001c74c9 T RpMatFXMaterialSetEnvMapCoefficient(RpMaterial*, float)
001c5215 T RpMaterialQueryMultiTexturePlatform(RwPlatformID)
0021e199 T RpWorldSectorForAllCollisionAtomics(RpWorldSector*, RpAtomic* (*)(RpAtomic*, void*), void*)
001eada5 T RtAnimAnimationFreeListCreateParams(int, int)
001e466d T RwFreeListCreateAndPreallocateSpace(int, int, int, int, RwFreeList*)
005d16f7 T RwIm2DRenderIndexedPrimitive_BUGFIX(RwPrimitiveType, RwOpenGLVertex*, int, unsigned short*, int)
005d16bf T RwTexDictionaryFindHashNamedTexture(RwTexDictionary*, unsigned int)
001d54cd T RwTexDictionaryRegisterPluginStream(unsigned int, RwStream* (*)(RwStream*, int, void*, int, int), RwStream* (*)(RwStream*, int, void const*, int, int), int (*)(void const*, int, int))
00222f8f T RxOpenGLAllInOneGetInstanceCallBack(RxPipelineNode*)
00222fa7 T RxOpenGLAllInOneGetLightingCallBack(RxPipelineNode*)
00222f89 T RxOpenGLAllInOneSetInstanceCallBack(RxPipelineNode*, int (*)(void*, RxOpenGLMeshInstanceData*, int, int))
00222fa1 T RxOpenGLAllInOneSetLightingCallBack(RxPipelineNode*, void (*)(void*))
0026dcdd T WarGameService_IncrementAchievement(char const*, int)
0027a489 T WarGamepad_ProcessTouchpadAsPointer(_JNIEnv*, _jobject*, _jobject*, unsigned char)
00222fcd T _rpDestroyPlatformMaterialPipelines()
001b0fc5 T _rwOpenGLGetMaxSupportedTextureSize()
001b3063 W dxtSwizzler_DecodeDXTColorBlock8888(unsigned char const*, unsigned int*, unsigned int, bool, bool)
00585381 T DestroyVehicleAndDriverAndPassengers(CVehicle*)
0026dbd9 T LIB_GameServiceIsAchievementUnlocked(char const*)
0039066d T RpAnimBlendClumpFindFrameFromHashKey(RpClump*, unsigned int)
00390b9d T RpAnimBlendClumpGetMainAssociation_N(RpClump*, int)
00390c89 T RpAnimBlendClumpUnPauseAllAnimations(RpClump*)
001c7681 T RpMatFXMaterialGetBumpMapCoefficient(RpMaterial const*)
001c7335 T RpMatFXMaterialSetBumpMapCoefficient(RpMaterial*, float)
0021c7c9 T RpWorldSectorSetStreamAlwaysCallBack(unsigned int, int (*)(void*, int, int))
0021c7dd T RpWorldSectorSetStreamRightsCallBack(unsigned int, int (*)(void*, int, int, unsigned int))
001ebb0f T RtAnimInterpolatorAddSubInterpolator(RtAnimInterpolator*, RtAnimInterpolator*, RtAnimInterpolator*)
001d88f5 T RwImageFormatSetFreeListCreateParams(int, int)
001db77d T RwTexDictionaryForAllTexDictionaries(RwTexDictionary* (*)(RwTexDictionary*, void*), void*)
001dbb81 T RwTextureGetMipmapGenerationCallBack()
001dbb61 T RwTextureSetMipmapGenerationCallBack(RwRaster* (*)(RwRaster*, RwImage*))
001dda21 T RxNodeDefinitionGetOpenGLImmInstance()
001de775 T RxPipelineNodeForAllConnectedOutputs(RxPipelineNode*, RxPipeline*, RxPipelineNode* (*)(RxPipelineNode*, RxPipelineNode*, void*), void*)
005d1fc1 T SetAmbientColoursToIndicateRoadGroup(int)
005d20ad T SetLightColoursForPedsCarsAndObjects(float)
0027bff5 T WarGameService_notifySnapshotLoading(_JNIEnv*, _jobject*)
005d1ac1 T WorldReplaceNormalLightsWithScorched(RpWorld*, float)
005d1af5 T WorldReplaceScorchedLightsWithNormal(RpWorld*)
001c8809 T _rpSkinPrepareAtomicMatrixWorldSpace(RpAtomic*, RpSkin*, RpHAnimHierarchy*)
001dd931 T _rwIm3DCreatePlatformRenderPipelines(rwIm3DRenderPipelines*)
00222505 T _rwOpenGLLightsSetMaterialProperties(RpMaterial const*, unsigned int)
001e5ac1 T _rwPluginRegistryAddPlgnStrmRightsCB(RwPluginRegistry*, unsigned int, int (*)(void*, int, int, unsigned int))
0040bca5 T FindPlayerCentreOfWorld_NoSniperShift(int)
0026ef11 T LIB_GameServiceCancelLeaderboardQuery(int)
0026f001 T LIB_GameServiceSubmitLeaderboardQuery(char const*, int, int, int, bool, bool)
003909c1 T RpAnimBlendClumpRemoveAllAssociations(RpClump*)
00219321 T RpBuildMeshGenerateExhaustiveTriStrip(RpBuildMesh*, void*)
00219311 T RpBuildMeshGeneratePreprocessTriStrip(RpBuildMesh*, void*)
001c77c9 T RpMatFXMaterialGetUVTransformMatrices(RpMaterial const*, RwMatrixTag**, RwMatrixTag**)
001c7795 T RpMatFXMaterialSetUVTransformMatrices(RpMaterial*, RwMatrixTag*, RwMatrixTag*)
001eb3d9 T RtAnimInterpolatorSetAnimLoopCallBack(RtAnimInterpolator*, RtAnimInterpolator* (*)(RtAnimInterpolator*, void*), void*)
00222f9b T RxOpenGLAllInOneGetReinstanceCallBack(RxPipelineNode*)
00222f95 T RxOpenGLAllInOneSetReinstanceCallBack(RxPipelineNode*, int (*)(void*, RwResEntry*, RpMeshHeader const*, int, int (*)(void*, RxOpenGLMeshInstanceData*, int, int)))
005d21cd T SetLightsForInfraredVisionHeatObjects()
0026ef15 T WarGameService_CancelLeaderboardQuery(int)
0026f019 T WarGameService_SubmitLeaderboardQuery(char const*, int, int, int, bool, bool)
0027c159 T WarGameService_notifyLeaderboardQuery(_JNIEnv*, _jobject*, int, _jfloatArray*, _jobjectArray*)
0027c005 T WarGameService_notifySnapshotSelected(_JNIEnv*, _jobject*, _jbyteArray*)
00222fd1 T _rpCreatePlatformWorldSectorPipelines()
001c4ad1 T _rpMaterialRegisterMultiTexturePlugin(RwPlatformID, unsigned int, unsigned int)
001dd9cf T _rwIm3DDestroyPlatformRenderPipelines(rwIm3DRenderPipelines*)
001e5ef5 T _rwPluginRegistrySetStaticPluginsSize(RwPluginRegistry*, int)
00390595 T RpAnimBlendCreateAnimationForHierarchy(RpHAnimHierarchy*)
001c7615 T RpMatFXMaterialGetBumpMapBumpedTexture(RpMaterial const*)
001eb96d T RtAnimInterpolatorBlendSubInterpolator(RtAnimInterpolator*, RtAnimInterpolator*, RtAnimInterpolator*, float)
001eb371 T RtAnimInterpolatorSetKeyFrameCallBacks(RtAnimInterpolator*, int)
001dbd19 T RwTexDictionarySetFreeListCreateParams(int, int)
001d54f1 T RwTexDictionarySetStreamAlwaysCallBack(unsigned int, int (*)(void*, int, int))
001dda3d T RxNodeDefinitionGetOpenGLSubmitNoLight()
001de80b T RxPipelineClusterGetCreationAttributes(RxPipelineCluster*)
001de817 T RxPipelineClusterSetCreationAttributes(RxPipelineCluster*, unsigned int)
00223031 T _rpDestroyPlatformWorldSectorPipelines()
00217065 T _rpMaterialSetDefaultSurfaceProperties(RwSurfaceProperties const*)
001c85ed T _rpSkinOpenGLSkinPlatformGetMaxWeights(RpSkin const*)
001dd8dd T _rwIm3DCreatePlatformTransformPipeline(RxPipeline**)
001b0fe5 T _rwOpenGLGetMaxSupportedHardwareLights()
001aedc5 T _rwOpenGLInvalidateRStateCachedTexture()
00222a9d T _rxOpenGLMeshGetNumVerticesAndMinIndex(unsigned short*, unsigned int, unsigned int*, unsigned int*)
0026de6d T LIB_GameServiceGetAchievementTotalSteps(char const*)
001c201d T RpHAnimHierarchySetFreeListCreateParams(int, int)
001ca185 T RpUVAnimParamKeyFrameDataInitFromMatrix(RpUVAnimParamKeyFrameData*, RwMatrixTag const*)
001eb901 T RtAnimInterpolatorCreateSubInterpolator(RtAnimInterpolator*, int, int, int)
001e5d5d T RwPluginRegistrySetFreeListCreateParams(int, int)
00220ea5 T RxNodeDefinitionGetOpenGLAtomicAllInOne()
0027bbd5 T WarGameService_notifyAchievementsLoaded(_JNIEnv*, _jobject*, _jobjectArray*, _jbooleanArray*, _jintArray*, _jintArray*)
001dd9b1 T _rwIm3DDestroyPlatformTransformPipeline(RxPipeline**)
001b1e79 T dxtSwizzler_CreateUncompressedTexture16(unsigned int, unsigned int, unsigned int, void const*, unsigned int&)
001b2339 T dxtSwizzler_CreateUncompressedTexture32(unsigned int, unsigned int, unsigned int, void const*, unsigned int&)
002e09a9 T ClosestSquaredDistanceBetweenFiniteLines(CVector*, CVector*, CVector*, CVector*, float)
0026c7b1 T OS_ServiceLocalNotificationAskPermission()
001c76f1 T RpMatFXMaterialGetEnvMapFrameBufferAlpha(RpMaterial const*)
001c74a1 T RpMatFXMaterialSetEnvMapFrameBufferAlpha(RpMaterial*, int)
001c9f15 T RpUVAnimLinearKeyFrameDataInitFromMatrix(RpUVAnimLinearKeyFrameData*, RwMatrixTag const*)
005d22a5 T SetLightsForInfraredVisionDefaultObjects()
0027c0f1 T WarGameService_notifySnapshotCountLoaded(_JNIEnv*, _jobject*, int)
00221401 T _rxOpenGLDefaultAllInOneAtomicLightingCB(void*)
0026ddf5 T LIB_GameServiceGetAchievementCurrentSteps(char const*)
005d226d T RestoreLightsForInfraredVisionHeatObjects()
00390b45 T RpAnimBlendClumpGetMainPartialAssociation(RpClump*)
00390ccd T RpAnimBlendClumpGetNumPartialAssociations(RpClump*)
001c5f61 T RpMatFXMaterialDataSetFreeListCreateParams(int, int)
00221061 T _rxOpenGLAllInOneAtomicInstanceVertexArray(RxOpenGLMeshInstanceData*, RpAtomic const*, RpGeometry const*, RpGeometryFlag, int, int, unsigned char*, RwRGBA*, RwRGBA*)
00390bd1 T RpAnimBlendClumpGetMainPartialAssociation_N(RpClump*, int)
005d1661 T RpGeometryReplaceOldMaterialWithNewMaterial(RpGeometry*, RpMaterial*, RpMaterial*)
0057ed69 T MarkSurroundingEntitiesForCollisionWithTrain(CVector, float, CEntity*, bool)
00390cf5 T RpAnimBlendClumpGetNumNonPartialAssociations(RpClump*)
002216a9 T RxNodeDefinitionGetOpenGLWorldSectorAllInOne()
003e254d T GetNearestDistanceOfPedSphereToCameraNearClip(CPed*)
005d2205 T StoreAndSetLightsForInfraredVisionHeatObjects()
001e1809 T RxRenderStateVectorGetDefaultRenderStateVector()
001e1741 T RxRenderStateVectorSetDefaultRenderStateVector(RxRenderStateVector*)
001de7e3 T _rwPipelineCheckForTramplingOfNodePrivateSpace(RxPipeline*)
00219309 T RpBuildMeshGenerateDefaultIgnoreWindingTriStrip(RpBuildMesh*, void*)
003f6949 T Idle(void*, bool)
005e64d9 T test()
00219d91 T RpBuildMeshGenerateExhaustiveIgnoreWindingTriStrip(RpBuildMesh*, void*)
00219319 T RpBuildMeshGeneratePreprocessIgnoreWindingTriStrip(RpBuildMesh*, void*)
0027bf55 T Java_com_wardrumstudios_utils_WarGameSerice_notifyConflict(_JNIEnv*, _jobject*, _jbyteArray*, _jbyteArray*)
003f59b1 T DoFade()
003d300b T FTrunc(float, int)
0044f939 T Invert(CMatrix const&)
0044fa11 T Invert(CMatrix const&, CMatrix&)
002673c9 T NvFEOF(void*)
003f7099 T ObrInt(int)
00297635 T UpHeld()
00268bf5 T GetThiz()
005c5781 T GetZVal(float)
001e71e9 T HashMem(unsigned char const*, unsigned int)
003f445d T MoveMem(void**)
0027404f T NvFGetc(void*)
00274071 T NvFGets(char*, int, void*)
0027404d T NvFInit()
00266db5 T NvFOpen(char const*, char const*, bool, bool)
0026735f T NvFRead(void*, unsigned int, unsigned int, void*)
002675bb T NvFSeek(void*, long, int)
00267571 T NvFSize(void*)
00267337 T NvFTell(void*)
002793d1 T NvQuatX(float*, float)
002793ff T NvQuatY(float*, float)
0027942d T NvQuatZ(float*, float)
00277101 T NvRandf()
003f7141 T ObrInt2(int, int)
003f72b9 T ObrInt3(int, int, int)
003f74e5 T ObrInt4(int, int, int, int)
003f77dd T ObrInt5(int, int, int, int, int)
003f7b89 T ObrInt6(int, int, int, int, int, int)
004d4369 T QuitApp()
004d423d T RsTimer()
0029b6ed T SetVert(int, float, float, float, float, CRGBA const&)
003f60b9 T TheGame()
001e66e1 T _rwSqrt(float)
001b3c3d T d3dToRQ(unsigned int, unsigned char)
005e4e19 T psTimer()
00297665 T DownHeld()
0046f735 T GameInit()
001b9a69 T GetLight(unsigned int)
001e72b9 T HashFile(char const*)
003f7005 T IntToStr(int, char*)
00297695 T LeftHeld()
002710b1 T NvAPKEOF(void*)
002671c1 T NvFClose(void*)
0036f36d T OpenFile(char const*, char const*)
0036f371 T ReadLine(unsigned int, char*, int)
0054d805 T TextCopy(unsigned short*, unsigned short const*)
003d3095 T VecTrunc(CVector*, int)
003e2fbd T WaveFunc(float, float, float, float)
001e2631 T _rwerror(int, ...)
0040fd09 T sortLODs(void const*, void const*)
0036f37b T CloseFile(unsigned int)
005a7a31 T GetJIndex(unsigned short)
002ad219 T LoadUsage(void*)
001e7223 T MakeUpper(char*)
00276f81 T NVLogFile(char const*)
00271021 T NvAPKGetc(void*)
00271037 T NvAPKGets(char*, int, void*)
00270cb9 T NvAPKInit(_jobject*)
00270f25 T NvAPKOpen(char const*)
00270f81 T NvAPKRead(void*, unsigned int, unsigned int, void*)
002710d7 T NvAPKSeek(void*, long, int)
00270f7d T NvAPKSize(void*)
002710e7 T NvAPKTell(void*)
00277279 T NvAddVecf(float*, float const*, float const*)
00277b21 T NvInvMatf(float (*) [4], float const (*) [4])
00279791 T NvQuatDot(float const*, float const*)
002772ab T NvSubVecf(float*, float const*, float const*)
0026c1d1 T OS_TimeMS()
00366a31 T RenderEnd()
002976c5 T RightHeld()
001dd03d T RwIm3DEnd()
002ad195 T SaveUsage(void*)
00504581 T SayJacked(CPed*, CVehicle*, unsigned int)
004578e1 T TryTattoo(char const*, char const*)
00297465 T UpPressed()
001b54b5 T emu_glEnd()
004822f1 T jround_up(long, long)
00482345 T jzero_far(void*, unsigned int)
00279975 T load_file(char const*)
006e01bc V guard variable for KeyboardControlsScreen::ManageScrolling(float)::lastMouseCoords
001bcf35 T ArrayState::DrawWithIndex(ArrayState*, unsigned int, unsigned int, unsigned int)
001bd361 T ArrayState::SetupDrawState()
001bd2dd T ArrayState::SetupVertexState(ArrayState*, bool)
001bce95 T ArrayState::Draw(unsigned int)
001bd09d T ArrayState::ArrayState(ArrayState const&, unsigned char, unsigned char)
001bd09d T ArrayState::ArrayState(ArrayState const&, unsigned char, unsigned char)
001bd21d T ArrayState::~ArrayState()
001bd21d T ArrayState::~ArrayState()
004d23ad T BoneNode_c::CalcWldMat(RwMatrixTag*)
004d1dad T BoneNode_c::InitLimits()
004d2279 T BoneNode_c::EulerToQuat(RwV3d*, RtQuat*)
004d1e75 T BoneNode_c::QuatToEuler(RtQuat*, RwV3d*)
004d24a9 T BoneNode_c::BlendKeyframe(float)
004d1e45 T BoneNode_c::GetIdFromBoneTag(int)
004d1e73 T BoneNode_c::ClampLimitsCurrent(unsigned char, unsigned char, unsigned char)
004d1e71 T BoneNode_c::ClampLimitsDefault(unsigned char, unsigned char, unsigned char)
004d1ce9 T BoneNode_c::Init(int, RpHAnimBlendInterpFrame*)
004d2049 T BoneNode_c::Limit(float)
004d1e3d T BoneNode_c::AddChild(BoneNode_c*)
004d23a1 T BoneNode_c::GetSpeed()
004d23a7 T BoneNode_c::SetSpeed(float)
004d1fed T BoneNode_c::GetLimits(int, float*, float*)
004d2017 T BoneNode_c::SetLimits(int, float, float)
004d1cb9 T BoneNode_c::BoneNode_c()
004d1cb9 T BoneNode_c::BoneNode_c()
004d1ccf T BoneNode_c::~BoneNode_c()
004d1ccf T BoneNode_c::~BoneNode_c()
005c353d T C3dMarkers::LoadMarker(char const*)
005c35b1 T C3dMarkers::ForceRender(unsigned char)
005c3671 T C3dMarkers::PlaceMarker(unsigned int, unsigned short, CVector&, float, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, float, short, float, float, float, bool)
00a58d78 B C3dMarkers::m_colDiamond
005c3dd5 T C3dMarkers::PlaceMarkerSet(unsigned int, unsigned short, CVector&, float, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, float, short)
00a57974 B C3dMarkers::m_aMarkerArray
00a58d7c B C3dMarkers::m_angleDiamond
005c35c1 T C3dMarkers::PlaceMarkerCone(unsigned int, CVector&, float, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, float, short, unsigned char)
005bf0cd T C3dMarkers::User3dMarkerSet(float, float, float, int)
00a57958 B C3dMarkers::m_pRpClumpArray
00a58d74 B C3dMarkers::NumActiveMarkers
00a59f30 B C3dMarkers::ms_user3dMarkers
005bf41d T C3dMarkers::DirectionArrowSet(CVector, float, int, int, int, int, float, float, float)
00a58d80 B C3dMarkers::IgnoreRenderLimit
0048f5b9 T C3dMarkers::LoadUser3dMarkers()
0048f5fd T C3dMarkers::SaveUser3dMarkers()
005bf1f9 T C3dMarkers::User3dMarkersDraw()
005bf1bd T C3dMarkers::User3dMarkerDelete(int)
00a59fc0 B C3dMarkers::ms_directionArrows
005bf521 T C3dMarkers::DirectionArrowsDraw()
005bf38d T C3dMarkers::DirectionArrowsInit()
00a59fbc B C3dMarkers::m_user3dMarkerColor
005bf375 T C3dMarkers::User3dMarkerAtomicCB(RpAtomic*, void*)
005bf1d9 T C3dMarkers::User3dMarkerDeleteAll()
005bf061 T C3dMarkers::User3dMarkerFindFirstFreeSlot()
005bf3ad T C3dMarkers::DirectionArrowFindFirstFreeSlot()
005bfb61 T C3dMarkers::Init()
005c1281 T C3dMarkers::Render()
005c0a99 T C3dMarkers::Update()
005bfe65 T C3dMarkers::Shutdown()
002e3575 T CAutoPilot::ModifySpeed(float)
002e3861 T CAutoPilot::RemoveOnePathNode()
003beda9 T CBugstarPC::ReadConfigData()
003bed9d T CBugstarPC::Init()
003bee7d W CBugstarPC::~CBugstarPC()
002e1cc5 T CColSphere::Set(float, CVector const&, unsigned char, unsigned char, unsigned char)
002dad1d T CCollision::DistToLine(CVector const*, CVector const*, CVector const*)
002e020b T CCollision::RayPolyPOP(CVector*, CVector*, CColTriangle*, CVector*, CVector*)
002e02f7 T CCollision::PointInPoly(CVector*, CColTriangle*, CVector*, CVector*)
002db47b T CCollision::TestLineBox(CColLine const&, CBox const&)
002dae05 T CCollision::DistToLineSqr(CVector const*, CVector const*, CVector const*)
002d9c8d T CCollision::TestSphereBox(CSphere const&, CBox const&)
002db4fd T CCollision::ProcessLineBox(CColLine const&, CColBox const&, CColPoint&, float&)
002e0df5 T CCollision::SphereVsEntity(CColSphere*, CEntity*)
002db199 T CCollision::TestLineBox_DW(CColLine const&, CBox const&)
002dabbd T CCollision::TestLineSphere(CColLine const&, CColSphere const&)
002daffd T CCollision::DistAlongLine2D(float, float, float, float, float, float)
002da1e5 T CCollision::PointInTriangle(CVector const&, CVector const*)
002dc27d T CCollision::TestLineOfSight(CColLine const&, CMatrix const&, CColModel&, bool, bool)
002e02b5 T CCollision::GetPrincipleAxis(CVector*)
002dd091 T CCollision::ProcessColModels(CMatrix const&, CColModel&, CMatrix const&, CColModel&, CColPoint*, CColPoint*, float*, bool)
002d9d11 T CCollision::ProcessSphereBox(CColSphere const&, CColBox const&, CColPoint&, float&)
002e00b1 T CCollision::SphereCastVsBBox(CColSphere*, CColSphere*, CColBox*)
002dbcd9 T CCollision::TestLineTriangle(CColLine const&, CVector const*, CColTriangle const&, CColTrianglePlane const&)
002d99d1 T CCollision::TestSphereSphere(CColSphere const&, CColSphere const&)
00792ff0 B CCollision::ms_colModelCache
002db031 T CCollision::ProcessLineSphere(CColLine const&, CColSphere const&, CColPoint&, float&)
002e04bf T CCollision::ClosestPointOnLine(CVector*, CVector*, CVector*, CVector*)
002e08cb T CCollision::ClosestPointOnPoly(CColTriangle*, CVector*, CVector*)
002dc495 T CCollision::ProcessLineOfSight(CColLine const&, CMatrix const&, CColModel&, CColPoint&, float&, bool, bool)
002dfd75 T CCollision::SphereCastVsCaches(CColSphere*, CVector*, int, CColCacheEntry*, int*, CColCacheEntry*)
002deb51 T CCollision::SphereCastVsEntity(CColSphere*, CColSphere*, CEntity*)
002e0135 T CCollision::SphereCastVsSphere(CColSphere*, CColSphere*, CColSphere*)
002da2ef T CCollision::TestSphereTriangle(CColSphere const&, CVector const*, CColTriangle const&, CColTrianglePlane const&)
002e058b T CCollision::ClosestPointsOnPoly(CColTriangle*, CVector*, CVector*, CVector*)
002dbf51 T CCollision::ProcessLineTriangle(CColLine const&, CVector const*, CColTriangle const&, CColTrianglePlane const&, CColPoint&, float&, CStoredCollPoly*)
002d9a19 T CCollision::ProcessSphereSphere(CColSphere const&, CColSphere const&, CColPoint&, float&)
002dca55 T CCollision::ProcessVerticalLine(CColLine const&, CMatrix const&, CColModel&, CColPoint&, float&, bool, bool, CStoredCollPoly*)
002db47d T CCollision::TestVerticalLineBox(CColLine const&, CBox const&)
00685fb7 D CCollision::bCamCollideWithPeds
002d998d T CCollision::RemoveTrianglePlanes(CCollisionData*)
002d9945 T CCollision::RemoveTrianglePlanes(CColModel*)
00793024 B CCollision::ms_collisionInMemory
002da6b9 T CCollision::ProcessSphereTriangle(CColSphere const&, CVector const*, CColTriangle const&, CColTrianglePlane const&, CColPoint&, float&)
002daef9 T CCollision::DistToMathematicalLine(CVector const*, CVector const*, CVector const*)
002e0bb5 T CCollision::SphereCastVersusVsPoly(CColSphere*, CColSphere*, CColTriangle*, CColTrianglePlane*, CVector*)
00685fb5 D CCollision::bCamCollideWithObjects
002d9855 T CCollision::CalculateTrianglePlanes(CCollisionData*)
002d9849 T CCollision::CalculateTrianglePlanes(CColModel*)
002dbb05 T CCollision::Test2DLineAgainst2DLine(float, float, float, float, float, float, float, float)
00685fb4 D CCollision::bCamCollideWithVehicles
002df651 T CCollision::CheckCameraCollisionPeds(int, int, CVector*, CVector*, float*)
002daf9d T CCollision::DistToMathematicalLine2D(float, float, float, float, float, float)
002df1e1 T CCollision::IsThisVehicleSittingOnMe(CVehicle*, CVehicle*)
00685fb6 D CCollision::bCamCollideWithBuildings
002d981d T CCollision::SortOutCollisionAfterLoad()
002df7e5 T CCollision::BuildCacheOfCameraCollision(CColSphere*, CColSphere*)
002df529 T CCollision::CheckCameraCollisionObjects(int, int, CColBox*, CColSphere*, CColSphere*, CColSphere*)
002dc72d T CCollision::ProcessVerticalLineTriangle(CColLine const&, CVector const*, CColTriangle const&, CColTrianglePlane const&, CColPoint&, float&, CStoredCollPoly*)
00793028 B CCollision::ms_iProcessLineNumCrossings
002df251 T CCollision::CheckCameraCollisionVehicles(int, int, CColBox*, CColSphere*, CColSphere*, CColSphere*, CVector*)
002de955 T CCollision::GetBoundingBoxFromTwoSpheres(CColBox*, CColSphere*, CColSphere*)
002de9e9 T CCollision::CheckCameraCollisionBuildings(int, int, CColBox*, CColSphere*, CColSphere*, CColSphere*)
00685fb8 D CCollision::relVelCamCollisionVehiclesSqr
002dfc0d T CCollision::CameraConeCastVsWorldCollision(CColSphere*, CColSphere*, float*, float)
002dcda5 T CCollision::IsStoredPolyStillValidVerticalLine(CVector const&, float, CColPoint&, CStoredCollPoly*)
002d9721 T CCollision::Init()
002d9819 T CCollision::Update()
002e07ff T CCollision::Closest3(CVector*, CVector*)
002d97c1 T CCollision::Shutdown()
002dfb11 T CCollision::CheckPeds(CVector*, CVector*, float*)
0041e791 T CColourSet::Interpolate(CColourSet*, CColourSet*, float, float, bool)
0041e1e1 T CColourSet::CColourSet(int, int)
0041e1e1 T CColourSet::CColourSet(int, int)
005d0059 T CCullZones::AddCullZone(CVector const&, float, float, float, float, float, float, unsigned short, short)
005d0471 T CCullZones::PlayerNoRain()
005d0411 T CCullZones::InRoomForAudio()
00a7d3aa B CCullZones::aAttributeZones
00a7d3a8 B CCullZones::bRenderCullzones
00a7d394 B CCullZones::NumAttributeZones
005d03fd T CCullZones::PoliceAbandonCars()
005d03c1 T CCullZones::CamStairsForPlayer()
005d03ad T CCullZones::CamCloseInForPlayer()
00a7d3a0 B CCullZones::CurrentFlags_Camera
00a7d3a4 B CCullZones::CurrentFlags_Player
005d03d5 T CCullZones::Cam1stPersonForPlayer()
00a831e4 B CCullZones::aMirrorAttributeZones
00a82f12 B CCullZones::aTunnelAttributeZones
005d02a1 T CCullZones::AddMirrorAttributeZone(CVector const&, float, float, float, float, float, float, unsigned short, float, float, float, float)
005d01d9 T CCullZones::AddTunnelAttributeZone(CVector const&, float, float, float, float, float, float, unsigned short)
005d0449 T CCullZones::DoINeedToLoadCollision()
005cf96d T CCullZones::FindAttributesForCoors(CVector)
00a7d3a9 B CCullZones::bMilitaryZonesDisabled
00a7d398 B CCullZones::NumMirrorAttributeZones
00a7d39c B CCullZones::NumTunnelAttributeZones
005cfe19 T CCullZones::FindMirrorAttributesForCoors(CVector)
005cfcf1 T CCullZones::FindTunnelAttributesForCoors(CVector)
005d0485 T CCullZones::DoExtraAirResistanceForPlayer()
005cff31 T CCullZones::FindZoneWithStairsAttributeForPlayer()
005cf8a9 T CCullZones::Init()
005cf8d1 T CCullZones::Update()
005d03e9 T CCullZones::NoPolice()
005d045d T CCullZones::CamNoRain()
005d0425 T CCullZones::FewerCars()
005d0435 T CCullZones::FewerPeds()
003eac01 T CDirectory::ReadDirFile(char const*)
003eacc5 T CDirectory::WriteDirFile(char const*)
003eabc5 T CDirectory::Init(int, void*)
003eabd1 T CDirectory::AddItem(CDirectory::DirectoryInfo const&)
003eacfd T CDirectory::FindItem(char const*)
003ead2f T CDirectory::FindItem(char const*, unsigned int&, unsigned int&)
003ead7f T CDirectory::FindItem(unsigned int, unsigned int&, unsigned int&)
003eab7f T CDirectory::CDirectory(int)
003eab75 T CDirectory::CDirectory()
003eab7f T CDirectory::CDirectory(int)
003eab75 T CDirectory::CDirectory()
003eabad T CDirectory::~CDirectory()
003eabad T CDirectory::~CDirectory()
007a1e14 B CEntryExit::ms_bWarping
007a1e0c B CEntryExit::ms_spawnPoint
00305d01 T CEntryExit::TransitionStarted(CPed*)
00306e21 T CEntryExit::RequestAmbientPeds()
00305251 T CEntryExit::TransitionFinished(CPed*)
00307255 T CEntryExit::WarpGangWithPlayer(CPed*)
00306f41 T CEntryExit::GenerateAmbientPeds(CVector const&)
00307079 T CEntryExit::FindValidTeleportPoint(CVector&)
00307581 T CEntryExit::ProcessStealableObjects(CPed*)
00306d3d T CEntryExit::RequestObjectsInFrustum()
00306cdd T CEntryExit::GetEntryExitToDisplayNameOf()
00306b79 T CEntryExit::GetPositionRelativeToOutsideWorld(CVector&)
00305b65 T CEntryExit::IsInArea(CVector const&)
007a1e10 B CEntryExit::ms_pDoor
005a77f5 T CEscalator::AddThisOne(CVector const&, CVector const&, CVector const&, CVector const&, bool, CEntity*)
005a7091 T CEscalator::Update()
005a6ee5 T CEscalator::SwitchOff()
005d78c1 T CExplosion::Initialise()
005d7a1d T CExplosion::AddExplosion(CEntity*, CEntity*, eExplosionType, CVector, unsigned int, unsigned char, float, unsigned char)
005d79f5 T CExplosion::GetExplosionType(unsigned char)
005d7935 T CExplosion::ClearAllExplosions()
005d7a09 T CExplosion::GetExplosionPosition(unsigned char)
005d79dd T CExplosion::DoesExplosionMakeSound(unsigned char)
005d90e5 T CExplosion::TestForExplosionInArea(int, float, float, float, float, float, float)
00a842f0 B CExplosion::m_ExplosionAudioEntity
005d79ad T CExplosion::GetExplosionActiveCounter(unsigned char)
005d917d T CExplosion::RemoveAllExplosionsInArea(CVector, float)
005d79c5 T CExplosion::ResetExplosionActiveCounter(unsigned char)
005d89dd T CExplosion::Update()
005d79a9 T CExplosion::Shutdown()
009ff914 B CFormation::m_Destinations
005493f5 T CFormation::FindCoverPoints(CVector, float)
009ffa50 B CFormation::m_DestinationPeds
00549335 T CFormation::ReturnTargetPedForPed(CPed*, CPed**)
00548c0d T CFormation::DistributeDestinations(CPedList*)
00549395 T CFormation::ReturnDestinationForPed(CPed*, CVector&)
005496ad T CFormation::FindCoverPointsBehindBox(CPointList*, CVector, CMatrix*, CVector const*, CVector const*, CVector const*, float)
009ffb48 B CFormation::m_aPedLinkToDestinations
005487e5 T CFormation::GenerateGatherDestinations(CPedList*, CPed*)
009ffb68 B CFormation::m_aFinalPedLinkToDestinations
00548b55 T CFormation::FindNearestAvailableDestination(CVector, float&)
00548fe1 T CFormation::DistributeDestinations_CoverPoints(CPedList*, CVector)
00549165 T CFormation::DistributeDestinations_PedsToAttack(CPedList*)
00548935 T CFormation::GenerateGatherDestinations_AroundCar(CPedList*, CVehicle*)
009ffacc B CFormation::m_Peds
0030928d T CGameLogic::UpdateSkip()
007a1f34 B CGameLogic::SkipVehicle
007a1f10 B CGameLogic::ActivePlayers
007a1f1c B CGameLogic::SkipDestination
007a1f14 B CGameLogic::TimeOfLastEvent
007a206c B CGameLogic::SavedWeaponSlots
0030a391 T CGameLogic::StorePedsWeapons(CPed*)
00309819 T CGameLogic::ForceDeathRestart()
003077a1 T CGameLogic::InitAtStartOfGame()
0030926d T CGameLogic::IsCoopGameGoingOn()
0030a075 T CGameLogic::LaRiotsActiveHere()
006866c0 D CGameLogic::MaxPlayerDistance
0030963d T CGameLogic::RestorePedsWeapons(CPed*)
00309bdd T CGameLogic::SkipCanBeActivated()
006866c4 D CGameLogic::n2PlayerPedInFocus
006866be D CGameLogic::bLimitPlayerDistance
007a2060 B CGameLogic::f2PlayerStartHeading
007a2064 B CGameLogic::nPrintFocusHelpTimer
007a1f40 B CGameLogic::AfterDeathStartPoints
00309ce9 T CGameLogic::IsPointWithinLineArea(CVector*, int, CVector)
00309fd5 T CGameLogic::FindCityClosestToPoint(CVector)
007a1f18 B CGameLogic::bScriptCoopGameGoingOn
007a2068 B CGameLogic::nPrintFocusHelpCounter
00309a6d T CGameLogic::IsScriptCoopGameGoingOn()
006866bc D CGameLogic::bPenaltyForDeathApplies
007a2054 B CGameLogic::vec2PlayerStartLocation
007a1f3c B CGameLogic::NumAfterDeathStartPoints
003096d9 T CGameLogic::Remove2ndPlayerIfPresent()
007a1f38 B CGameLogic::SkipToBeFinishedByScript
006866bd D CGameLogic::bPenaltyForArrestApplies
007a2040 B CGameLogic::ShortCutDropOffForMission
00307d31 T CGameLogic::SortOutStreamingAndMemory(CVector const&, float)
00309a1d T CGameLogic::IsPlayerUse2PlayerControls(CPlayerPed*)
00307825 T CGameLogic::ResetStuffUponResurrection()
007a1f28 B CGameLogic::SkipDestinationOrientation
007a2050 B CGameLogic::MissionDropOffReadyToBeUsed
007a2052 B CGameLogic::bPlayersCanBeInSeparateCars
00309a7d T CGameLogic::Disable2ndControllerForDebug()
0030975d T CGameLogic::StopPlayerMovingFromDirection(int, CVector)
007a2051 B CGameLogic::bPlayersCannotTargetEachother
00309cc5 T CGameLogic::IsSkipWaitingForScriptToFadeIn()
007a2000 B CGameLogic::AfterDeathStartPointOrientations
0030a171 T CGameLogic::DoWeaponStuffAtStartOf2PlayerGame(bool)
0030989d T CGameLogic::IsPlayerAllowedToGoInThisDirection(CPlayerPed*, CVector, float)
00309d75 T CGameLogic::CalcDistanceToForbiddenTrainCrossing(CVector, CVector, bool, CVector*)
00307a11 T CGameLogic::RestorePlayerStuffDuringResurrection(CPlayerPed*, CVector, float)
007a204c B CGameLogic::ShortCutDropOffOrientationForMission
0030906d T CGameLogic::SetPlayerWantedLevelForForbiddenTerritories(bool)
0048ce9d T CGameLogic::Load()
0048cda1 T CGameLogic::Save()
00307d8d T CGameLogic::Update()
00307961 T CGameLogic::PassTime(unsigned int)
00309a81 T CGameLogic::ClearSkip(bool)
007a1f11 B CGameLogic::GameState
00309ae9 T CGameLogic::SetUpSkip(CVector, float, bool, CVehicle*, bool)
007a1f2c B CGameLogic::SkipState
007a1f30 B CGameLogic::SkipTimer
005e4dd1 T CJoySticks::ClearJoyInfo(int)
005e4dc1 T CJoySticks::CJoySticks()
005e4dc1 T CJoySticks::CJoySticks()
005d3033 T CMemoryMgr::MoveMemory(void*)
005d3035 T CMemoryMgr::MoveMemory(void*, void**, int)
005d3011 T CMemoryMgr::MallocAlign(unsigned int, unsigned int)
00a83eb0 B CMemoryMgr::m_idCapture
005d31f5 T CMemoryMgr::RegisterFree(void*)
00a83ea8 B CMemoryMgr::m_blocksUsed
005d3275 T CMemoryMgr::GetBlocksUsed(int)
005d3261 T CMemoryMgr::GetMemoryUsed(int)
00a83eac B CMemoryMgr::m_pBlockArray
005d3065 T CMemoryMgr::GetSizeOfHoles()
005d2e85 T CMemoryMgr::InitScratchPad()
005d2d69 T CMemoryMgr::InternalMalloc(unsigned int)
005d300d T CMemoryMgr::LockScratchPad()
005d2f19 T CMemoryMgr::RegisterMalloc(void*)
005d2d9d T CMemoryMgr::InternalRealloc(void*, unsigned int)
00a83ea4 B CMemoryMgr::m_pMemUsedArray
005d3089 T CMemoryMgr::PrintFrequencies()
005d300f T CMemoryMgr::ReleaseScratchPad()
00a83e58 B CMemoryMgr::m_largeAllocation
005d308d T CMemoryMgr::InitMemoryTracking(int)
005d3055 T CMemoryMgr::GetLargestFreeBlock()
005d2ea1 T CMemoryMgr::MallocFromScratchPad(unsigned int)
00a83e54 B CMemoryMgr::m_minLargeAllocation
005d3039 T CMemoryMgr::SetRestrictMemoryMove(bool)
00a83e50 B CMemoryMgr::m_bMallocHintDebugging
005d2f81 T CMemoryMgr::MallocAlignFromScratchPad(unsigned int, unsigned int)
005d2e75 T CMemoryMgr::Free(void*)
005d2d65 T CMemoryMgr::Init()
00a83ea0 B CMemoryMgr::m_id
005d2e81 T CMemoryMgr::Calloc(unsigned int, unsigned int)
005d2e79 T CMemoryMgr::Malloc(unsigned int)
005d2e7d T CMemoryMgr::Realloc(void*, unsigned int)
005d31b9 T CMemoryMgr::PopMemId()
005d2d67 T CMemoryMgr::Shutdown()
005d302b T CMemoryMgr::FreeAlign(void*)
005d3175 T CMemoryMgr::PushMemId(int)
00a83e5c B CMemoryMgr::m_idStack
00a83e4c B CMemoryMgr::m_memUsed
003857b1 T CModelInfo::Initialise()
00386375 T CModelInfo::IsBmxModel(int)
00386195 T CModelInfo::IsCarModel(int)
00386115 T CModelInfo::AddPedModel(int)
00386285 T CModelInfo::IsBikeModel(int)
00386159 T CModelInfo::IsBoatModel(int)
0038620d T CModelInfo::IsHeliModel(int)
00386005 T CModelInfo::AddTimeModel(int)
00385d99 T CModelInfo::GetModelInfo(char const*, int*)
00385f11 T CModelInfo::GetModelInfo(char const*, int, int)
00386249 T CModelInfo::IsPlaneModel(int)
003861d1 T CModelInfo::IsTrainModel(int)
003860a5 T CModelInfo::AddClumpModel(int)
00385a39 T CModelInfo::AddAtomicModel(int)
00386071 T CModelInfo::AddWeaponModel(int)
003863b1 T CModelInfo::IsTrailerModel(int)
0038603d T CModelInfo::AddLodTimeModel(int)
003860dd T CModelInfo::AddVehicleModel(int)
00386339 T CModelInfo::IsQuadBikeModel(int)
00385a75 T CModelInfo::ReInit2dEffects()
0038614d T CModelInfo::Get2dEffectStore()
00385f45 T CModelInfo::GetModelInfoFast(CModelInfoAccelerator*, char const*, int*)
003862c1 T CModelInfo::IsFakePlaneModel(int)
0091dcb8 B CModelInfo::ms_modelInfoPtrs
00385fcd T CModelInfo::AddLodAtomicModel(int)
00385e79 T CModelInfo::GetModelInfoUInt16(char const*, unsigned short*)
003863ed T CModelInfo::IsVehicleModelType(int)
003862fd T CModelInfo::IsMonsterTruckModel(int)
00385f95 T CModelInfo::AddDamageAtomicModel(int)
00385e39 T CModelInfo::GetModelInfoFromHashKey(unsigned int, int*)
00931538 B CModelInfo::ms_lastPositionSearched
00385a71 T CModelInfo::PrintModelInfoStoreUsage()
00385aa9 T CModelInfo::ShutDown()
00450e01 T CNetworkPC::Disconnect(int)
00450df1 T CNetworkPC::InitNetwork()
00450de1 T CNetworkPC::IsNetworkUp()
00450df5 T CNetworkPC::_CheckError()
00450dd1 T CNetworkPC::SetNetworkUp(bool)
0099dd10 B CNetworkPC::sm_network_up
00450df9 T CNetworkPC::ShutdownNetwork()
00450dfd T CNetworkPC::Connect(unsigned int, char*)
00450e09 T CNetworkPC::RecvBytes(int, void*, unsigned long)
00450e05 T CNetworkPC::SendBytes(int, void*, unsigned long)
00450db9 T CNetworkPC::CNetworkPC()
00450db9 T CNetworkPC::CNetworkPC()
00450dcb T CNetworkPC::~CNetworkPC()
00450dc9 T CNetworkPC::~CNetworkPC()
00450dc9 T CNetworkPC::~CNetworkPC()
0032733d T CNodeRoute::operator delete(void*)
003272d9 T CNodeRoute::operator new(unsigned int)
006b216a D COcclusion::NearbyList
00a41140 B COcclusion::aOccluders
006b2168 D COcclusion::FarAwayList
00a46d3c B COcclusion::bRenderShadows
00a45a68 B COcclusion::aActiveOccluders
006b216c D COcclusion::ListWalkThroughFA
00a45790 B COcclusion::NumOccludersOnMap
005b0f69 T COcclusion::IsPositionOccluded(CVector, float)
00a46d38 B COcclusion::NumActiveOccluders
00a45794 B COcclusion::aInteriorOccluders
005afbb9 T COcclusion::OccluderHidesBehind(CActiveOccluder*, CActiveOccluder*)
005ae569 T COcclusion::ProcessBeforeRendering()
00a45a64 B COcclusion::NumInteriorOccludersOnMap
006b216e D COcclusion::PreviousListWalkThroughFA
005ae1d9 T COcclusion::Init()
005ae23d T COcclusion::AddOne(float, float, float, float, float, float, float, float, float, unsigned int, bool)
004b6949 T CPedGroups::GetGroupId(CPedGroup*)
004b7361 T CPedGroups::RemoveGroup(int)
004b40fd T CPedGroups::GetPedsGroup(CPed const*)
004b79e1 T CPedGroups::IsGroupLeader(CPed*)
004b7bb1 T CPedGroups::AreInSameGroup(CPed const*, CPed const*)
009ef9b0 B CPedGroups::ms_activeGroups
004b7b0d T CPedGroups::IsInPlayersGroup(CPed const*)
004b7921 T CPedGroups::CleanUpForShutDown()
009ef9cc B CPedGroups::ms_iNoOfPlayerKills
004b78fd T CPedGroups::RegisterKillByPlayer()
009ef9b8 B CPedGroups::ScriptReferenceIndex
009ef9c8 B CPedGroups::ms_bIsPlayerOnAMission
004b73b1 T CPedGroups::RemoveAllFollowersFromGroup(int)
004b73dd T CPedGroups::Init()
0048a3c5 T CPedGroups::Load()
00489329 T CPedGroups::Save()
004b7631 T CPedGroups::Process()
004b7281 T CPedGroups::AddGroup()
009ee2f8 B CPedGroups::ms_groups
0031c6ad T CPhoneInfo::Initialise()
0031cd9d T CPhoneInfo::PhoneAtThisPosition(CVector)
0031c7a5 T CPhoneInfo::FindNearestFreePhone(CVector*)
0031cf89 T CPhoneInfo::HasMessageBeenDisplayed(int)
0031cfb1 T CPhoneInfo::IsMessageBeingDisplayed(int)
0031cf49 T CPhoneInfo::SetPhoneMessage_JustOnce(int, unsigned short*, unsigned short*, unsigned short*, unsigned short*, unsigned short*, unsigned short*)
0031cf09 T CPhoneInfo::SetPhoneMessage_Repeatedly(int, unsigned short*, unsigned short*, unsigned short*, unsigned short*, unsigned short*, unsigned short*)
0031c81d T CPhoneInfo::Update()
0031c79d T CPhoneInfo::Shutdown()
0031cddd T CPhoneInfo::GrabPhone(float, float)
0031c6a3 T CPhoneInfo::CPhoneInfo()
0031c6a3 T CPhoneInfo::CPhoneInfo()
0031c6a5 T CPhoneInfo::~CPhoneInfo()
0031c6a5 T CPhoneInfo::~CPhoneInfo()
004212f9 T CPlaceName::ProcessAfterFrontEndShutDown()
00421141 T CPlaceName::Init()
004212d9 T CPlaceName::Display()
004211f1 T CPlaceName::Process()
00421149 T CPlaceName::GetForMap(float, float)
00421139 T CPlaceName::CPlaceName()
00421139 T CPlaceName::CPlaceName()
004087c1 T CPlaceable::RemoveMatrix()
00408905 T CPlaceable::AllocateMatrix()
00408b21 T CPlaceable::InitMatrixArray()
00408d7d T CPlaceable::FreeStaticMatrix()
00408bf5 T CPlaceable::ShutdownMatrixArray()
00408c4d T CPlaceable::AllocateStaticMatrix()
004088ad T CPlaceable::SetMatrix(CMatrix const&)
0040870d T CPlaceable::CPlaceable()
0040870d T CPlaceable::CPlaceable()
00408821 T CPlaceable::~CPlaceable()
0040872d T CPlaceable::~CPlaceable()
0040872d T CPlaceable::~CPlaceable()
004ca6d9 W CPlayerPed::SetMoveAnim()
004c9a15 T CPlayerPed::AnnoyPlayerPed(bool)
004c739d T CPlayerPed::EvaluateTarget(CEntity*, CEntity**, float*, float, float, bool)
004c47e9 T CPlayerPed::ProcessControl()
004c9719 T CPlayerPed::SetWantedLevel(int)
004c39a5 T CPlayerPed::SetupPlayerPed(int)
004c9a49 T CPlayerPed::ClearAdrenaline()
004c9b15 T CPlayerPed::FindPedToAttack()
004c3a61 T CPlayerPed::RemovePlayerPed(int)
004c37b5 T CPlayerPed::SetInitialState(bool)
004c3b05 T CPlayerPed::SetRealMoveAnim()
004c9739 T CPlayerPed::CheatWantedLevel(int)
004c4749 T CPlayerPed::GetPadFromPlayer()
004c668d T CPlayerPed::ReApplyMoveAnims()
009f0b15 B CPlayerPed::bDebugTargetting
004c58e5 T CPlayerPed::ClearWeaponTarget()
004c99fd T CPlayerPed::DoStuffToGoOnFire()
004c849d T CPlayerPed::HandleTapToTarget(float, float, bool)
004c5e61 T CPlayerPed::ProcessAnimGroups()
004ca68d T CPlayerPed::ResetPlayerBreath()
004ca401 T CPlayerPed::ResetSprintEnergy()
009f0b16 B CPlayerPed::bDebugTapToTarget
009f0b17 B CPlayerPed::bSwipeTargetHeads
004c9ced T CPlayerPed::DisbandPlayerGroup()
004c7c49 T CPlayerPed::FindTargetPriority(CEntity*)
004c56f5 T CPlayerPed::HandlePlayerBreath(bool, float)
004c5809 T CPlayerPed::HandleSprintEnergy(bool, float)
004ca415 T CPlayerPed::ControlButtonSprint(eSprintType)
004c3ad5 T CPlayerPed::DeactivatePlayerPed(int)
004ca189 T CPlayerPed::PlayerWantsToAttack()
004c682f T CPlayerPed::ProcessPlayerWeapon(CPad*)
004c5919 T CPlayerPed::ProcessWeaponSwitch(CPad*)
004c3aed T CPlayerPed::ReactivatePlayerPed(int)
004c7321 T CPlayerPed::CanIKReachThisTarget(CVector, CWeapon*, bool)
004c8d8d T CPlayerPed::HandleMeleeTargeting()
004c9729 T CPlayerPed::SetWantedLevelNoDrop(int)
004c4765 T CPlayerPed::CanPlayerStartMission()
004c6b4d T CPlayerPed::FindSprayableBuilding()
004c6211 T CPlayerPed::ProcessGroupBehaviour(CPad*)
004c7511 T CPlayerPed::DisplayTargettingDebug()
004c6d65 T CPlayerPed::FindWeaponLockOnTarget()
004c6701 T CPlayerPed::GetButtonSprintResults(eSprintType)
009f0b14 B CPlayerPed::bDebugPlayerInvincible
004c6779 T CPlayerPed::DoesPlayerWantNewWeapon(eWeaponType, bool)
004ca135 T CPlayerPed::ForceGroupToNeverFollow(bool)
004c69e9 T CPlayerPed::GetWeaponRadiusOnScreen()
004c68f1 T CPlayerPed::MakeChangesForNewWeapon(eWeaponType)
004c6831 T CPlayerPed::MakeChangesForNewWeapon(int)
004ca365 T CPlayerPed::MakePlayerGroupReappear()
004c9d59 T CPlayerPed::MakeThisPedJoinOurGroup(CPed*)
004c9a75 T CPlayerPed::SetPlayerMoveBlendRatio(CVector*)
004c6875 T CPlayerPed::UpdateCameraWeaponModes(CPad*)
004c8efd T CPlayerPed::DoesTargetHaveToBeBroken(CEntity*, CWeapon*)
004ca111 T CPlayerPed::ForceGroupToAlwaysFollow(bool)
004ca2d9 T CPlayerPed::MakePlayerGroupDisappear()
004c57e5 T CPlayerPed::Clear3rdPersonMouseTarget()
004c9749 T CPlayerPed::KeepAreaAroundPlayerClear()
004c7d45 T CPlayerPed::RotatePlayerToTrackTarget()
004c826d T CPlayerPed::EvaluateNeighbouringTarget(CEntity*, CEntity**, float*, float, float, bool)
004c7d4d T CPlayerPed::FindNextWeaponLockOnTarget(CEntity*, bool)
004c901d T CPlayerPed::Compute3rdPersonMouseTarget(bool)
004c6845 T CPlayerPed::PickWeaponAllowedFor2Player()
004c6a81 T CPlayerPed::PedCanBeTargettedVehicleWise(CPed*)
004ca185 T CPlayerPed::PlayerHasJustAttackedSomeone()
004c99cd T CPlayerPed::GetPlayerInfoForThisPlayerPed()
004c4555 T CPlayerPed::TellGroupToStartFollowingPlayer(bool, bool, bool)
004c7d47 T CPlayerPed::MovementDisabledBecauseOfTargeting()
004ca251 T CPlayerPed::MakeGroupRespondToPlayerTakingDamage(CEventDamage const&)
009f0b18 B CPlayerPed::bHasDisplayedPlayerQuitEnterCarHelpText
004851e9 T CPlayerPed::Load()
00485163 T CPlayerPed::Save()
004c970d T CPlayerPed::Busted()
004c367d T CPlayerPed::CPlayerPed(int, bool)
004c367d T CPlayerPed::CPlayerPed(int, bool)
004c3995 T CPlayerPed::~CPlayerPed()
004c3901 T CPlayerPed::~CPlayerPed()
004c3901 T CPlayerPed::~CPlayerPed()
00548741 T CPointList::MergeListsRemovingDoubles(CPointList*, CPointList*)
005486fd T CPointList::Empty()
00548717 T CPointList::AddPoint(CVector)
00a294a8 B CScrollBar::TonightsEvent
0081afac B CSetPieces::aSetPieces
0081afa4 B CSetPieces::NumSetPieces
0035e3a1 T CSetPieces::Init()
0048e1ad T CSetPieces::Load()
0048e151 T CSetPieces::Save()
0035e3bd T CSetPieces::AddOne(unsigned char, CVector2D, CVector2D, CVector2D, CVector2D, CVector2D, CVector2D)
0035e4ad T CSetPieces::Update()
0081afa8 B CSetPieces::bDebug
00a5375c B CSkidmarks::aSkidmarks
005becc5 T CSkidmarks::RegisterOne(unsigned int, CVector const&, float, float, eSkidmarkType, bool*, float)
005bec91 T CSkidmarks::RegisterOne(unsigned int, CVector const&, float, float, bool*, bool*, float)
005be769 T CSkidmarks::Init()
005be819 T CSkidmarks::Clear()
005be915 T CSkidmarks::Render()
005be839 T CSkidmarks::Update()
005be801 T CSkidmarks::Shutdown()
005c156d T CSpecialFX::Render2DFXs()
00a59e94 B CSpecialFX::SnapShotFrames
005c008d T CSpecialFX::AddWeaponStreak(int)
00a59e98 B CSpecialFX::bSnapShotActive
005bf8b1 T CSpecialFX::Init()
005c0b15 T CSpecialFX::Render()
005c03e5 T CSpecialFX::Update()
005bfdf5 T CSpecialFX::Shutdown()
00a59e91 B CSpecialFX::bLiftCam
00a59e90 B CSpecialFX::bVideoCam
00313c61 T CStoredCar::RestoreCar()
00313aad T CStoredCar::StoreCar(CVehicle*)
002d8cd5 T CStreaming::ClearSlots(int)
002d0e0d T CStreaming::IsVeryBusy()
00792c40 B CStreaming::ms_channel
00472615 T CStreaming::ReadIniFile()
002d0129 T CStreaming::RemoveModel(int)
002d6b31 T CStreaming::RequestFile(int, int, int, int, int)
002d39e5 T CStreaming::MakeSpaceFor(int)
002d65c9 T CStreaming::RemoveEntity(CLink<CEntity*>*)
002d6591 T CStreaming::RenderEntity(CLink<CEntity*>*)
002d299d T CStreaming::RequestModel(int, int)
00792b60 B CStreaming::ms_imageSize
002d4879 T CStreaming::FlushChannels()
002cf681 T CStreaming::InitImageList()
002cf66d T CStreaming::IsInitialised()
002d2315 T CStreaming::RetryLoadFile(int)
00792b40 B CStreaming::ms_imageSizes
00792b7c B CStreaming::ms_memoryUsed
00792c30 B CStreaming::ms_oldSectorX
00792c34 B CStreaming::ms_oldSectorY
00792bb4 B CStreaming::ms_pedsLoaded
002cf7d1 T CStreaming::AddImageToList(char const*, bool)
002d26b9 T CStreaming::GetDiscInDrive()
002cf5d1 T CStreaming::GetModelCDName(int)
002d2e81 T CStreaming::RemoveCarModel(int)
00792f00 B CStreaming::m_bBoatsNeeded
00792c20 B CStreaming::ms_loadedGangs
002d50b5 T CStreaming::ClearFlagForAll(unsigned int)
002d6da9 T CStreaming::DisableCopBikes(bool)
002d3a39 T CStreaming::GetNextFileOnCd(int, bool)
0046c0ad T CStreaming::LoadCdDirectory(char const*, int)
0046bff9 T CStreaming::LoadCdDirectory()
002d6bd9 T CStreaming::LoadInitialPeds()
002d4d85 T CStreaming::LoadZoneVehicle(CVector const&)
002d4db9 T CStreaming::StreamCopModels(int)
002d89e9 T CStreaming::StreamOneNewCar()
00792c38 B CStreaming::ms_channelError
00792b28 B CStreaming::ms_imageOffsets
00792c24 B CStreaming::ms_lastCullZone
002cfd85 T CStreaming::FlushRequestList()
002d3fbd T CStreaming::ForceLayerToRead(int)
002d3cd1 T CStreaming::GetCdImageOffset(int)
002d21f9 T CStreaming::PurgeRequestList()
002d5475 T CStreaming::RequestAllModels()
002d193d T CStreaming::StreamZoneModels(CVector const&)
002d0555 T CStreaming::UpdateMemoryUsed()
00712338 B CStreaming::ms_aInfoForModel
00792b64 B CStreaming::ms_lastImageRead
00792c1c B CStreaming::ms_numPedsLoaded
002d962d T CStreaming::GetGta3ImageIndex()
002d2e65 T CStreaming::IsObjectInCdImage(int)
00792c3c B CStreaming::ms_bIsInitialised
00792c22 B CStreaming::ms_loadedGangCars
00792b6c B CStreaming::ms_pEndLoadedList
00792b82 B CStreaming::ms_vehiclesLoaded
002cfe2d T CStreaming::DeleteAllRwObjects()
002d6c15 T CStreaming::GetDefaultCopModel()
002d6bef T CStreaming::LoadInitialWeapons()
002d50d9 T CStreaming::LoadSceneCollision(CVector const&)
002d8b5d T CStreaming::PlayerIsFlyingFast()
002d52a1 T CStreaming::RemoveBigBuildings()
002d3fcd T CStreaming::RequestModelStream(int)
002d87f9 T CStreaming::RequestSpecialChar(int, char const*, int)
00792bb0 B CStreaming::ms_currentZoneType
00685fa0 D CStreaming::ms_memoryAvailable
002d89e5 T CStreaming::LoadInitialVehicles()
002d2105 T CStreaming::LoadRequestedModels()
002d3805 T CStreaming::RemoveLoadedVehicle()
002d4d01 T CStreaming::RequestBigBuildings(CVector const&)
002d6835 T CStreaming::RequestSpecialModel(int, char const*, int)
002d6789 T CStreaming::SetModelIsDeletable(int)
002d6579 T CStreaming::StartRenderEntities()
002d22a9 T CStreaming::UpdateForAnimViewer()
00792d7c B CStreaming::ms_bLoadingBigModel
00712334 B CStreaming::ms_disableStreaming
00792f04 B CStreaming::ms_pExtraObjectsDir
00792b68 B CStreaming::ms_pStartLoadedList
00792d74 B CStreaming::ms_pStreamingBuffer
002d0c01 T CStreaming::AddLodsToRequestList(CVector const&, unsigned int)
002d6db5 T CStreaming::GetDefaultMedicModel()
002d8801 T CStreaming::HasSpecialCharLoaded(int)
002d2bf9 T CStreaming::InstanceLoadedModels(CVector const&)
002d7fb1 T CStreaming::ReclassifyLoadedCars()
002d550d T CStreaming::RemoveLeastUsedModel(unsigned int)
002d6a9d T CStreaming::RequestPlayerSection(int, char const*, int)
00792b74 B CStreaming::ms_pEndRequestedList
00792f08 B CStreaming::ms_rwObjectInstances
002d2fd1 T CStreaming::ConvertBufferToObject(char*, int, int)
002d6cb5 T CStreaming::GetDefaultCopCarModel(unsigned int)
002d2411 T CStreaming::ProcessLoadingChannel(int)
002cfef1 T CStreaming::RemoveAllUnusedModels()
002d5781 T CStreaming::RemoveLoadedZoneModel()
002d49ad T CStreaming::RequestFilesInChannel(int)
002d2f49 T CStreaming::RequestVehicleUpgrade(int, int)
002d8df1 T CStreaming::StreamPedsForInterior(int)
002d0e39 T CStreaming::StreamVehiclesAndPeds()
00792b78 B CStreaming::ms_numModelsRequested
002d0901 T CStreaming::AddModelsToRequestList(CVector const&, unsigned int)
002d95e5 T CStreaming::CarIsCandateForRemoval(int)
002d50fd T CStreaming::DeleteFarAwayRwObjects(CVector const&)
002d36b1 T CStreaming::FinishLoadingLargeFile(char*, int)
002d6ded T CStreaming::GetDefaultFiremanModel()
002d46a9 T CStreaming::LoadAllRequestedModels(bool)
002d6831 T CStreaming::SetModelTxdIsDeletable(int)
002d77e5 T CStreaming::StreamZoneModels_Gangs(CVector const&)
00792c28 B CStreaming::ms_numPriorityRequests
00792b70 B CStreaming::ms_pStartRequestedList
00792d70 B CStreaming::ms_streamingBufferSize
002d34b5 T CStreaming::AddToLoadedVehiclesList(int)
002d2f75 T CStreaming::HasVehicleUpgradeLoaded(int)
002d6eb9 T CStreaming::StreamAmbulanceAndMedic(bool)
00792b58 B CStreaming::ms_interiorImageOffsets
002d9045 T CStreaming::FindMIPedSlotForInterior(int)
002d6dd1 T CStreaming::GetDefaultAmbulanceModel()
002d6e09 T CStreaming::GetDefaultCabDriverModel()
002d6787 T CStreaming::IHaveUsedStreamingMemory()
002d5329 T CStreaming::RemoveBuildingsNotInArea(int)
002d8361 T CStreaming::RemoveCurrentZonesModels()
00685fa4 D CStreaming::desiredNumVehiclesLoaded
002d5141 T CStreaming::DeleteRwObjectsAfterDeath(CVector const&)
002d6e9d T CStreaming::GetDefaultFireEngineModel()
002d6785 T CStreaming::ImGonnaUseStreamingMemory()
002d8821 T CStreaming::SetSpecialCharIsDeletable(int)
002d921d T CStreaming::StreamPedsIntoRandomSlots(int*)
00792bd4 B CStreaming::ms_NextPedToLoadFromGroup
002d49a1 T CStreaming::SetLoadVehiclesInLoadScene(bool)
002d7355 T CStreaming::StreamFireEngineAndFireman(bool)
00792b80 B CStreaming::ms_bEnableRequestListPurge
002d5cd9 T CStreaming::DeleteRwObjectsBehindCamera(int)
002d50ff T CStreaming::DeleteRwObjectsInSectorList(CPtrList&, int, int)
002d280d T CStreaming::ProcessEntitiesInSectorList(CPtrList&, float, float, float, float, float, float, float, unsigned int)
002d2725 T CStreaming::ProcessEntitiesInSectorList(CPtrList&, unsigned int)
00792c2d B CStreaming::m_bHarvesterModelsRequested
002d85ad T CStreaming::RemoveInappropriatePedModels()
002d0011 T CStreaming::SetMissionDoesntRequireModel(int)
002d0d51 T CStreaming::StreamVehiclesAndPeds_Always(CVector const&)
002d8c81 T CStreaming::WeAreTryingToPhaseVehicleOut(int)
002d35a5 T CStreaming::AreAnimsUsedByRequestedModels(int)
002d5a81 T CStreaming::DeleteLeastUsedEntityRwObject(bool, unsigned int)
002d80c9 T CStreaming::IsCarModelNeededInCurrentZone(int)
002d94a1 T CStreaming::RemoveDodgyPedsFromRandomSlots()
002d5509 T CStreaming::RemoveUnusedModelsInLoadedList()
002d2e25 T CStreaming::InstanceLoadedModelsInSectorList(CPtrList&)
002d8bad T CStreaming::PossiblyStreamCarOutAfterCreation(int)
00792c2c B CStreaming::m_bStreamHarvesterModelsThisFrame
002d6781 T CStreaming::RemoveModelsNotVisibleFromCullzone()
002d88cd T CStreaming::SetMissionDoesntRequireSpecialChar(int)
002d6611 T CStreaming::DeleteRwObjectsBehindCameraInSectorList(CPtrList&, int)
002d66c9 T CStreaming::DeleteRwObjectsNotInFrustumInSectorList(CPtrList&, int)
002d6783 T CStreaming::RemoveModelsNotVisibleFromCullzoneInSectorList(CPtrList&)
00468cd9 T CStreaming::Init()
00487acd T CStreaming::Load()
00487a7d T CStreaming::Save()
0046bb05 T CStreaming::Init2()
002cf8f5 T CStreaming::ReInit()
002d0559 T CStreaming::Update()
002cf8b5 T CStreaming::Shutdown()
00792d80 B CStreaming::ms_files
002d64bd T CStreaming::AddEntity(CEntity*)
002d4a01 T CStreaming::LoadScene(CVector const&)
006e08a0 B CTapEffect::m_pChainHead
006e08a4 B CTapEffect::m_pChainTail
002ac4d5 T CTapEffect::Draw()
002ac3b9 T CTapEffect::Update()
002ac571 T CTapEffect::DrawAll()
002ac54d T CTapEffect::UpdateAll()
002ac2a1 T CTapEffect::CTapEffect(char const*, CVector2D)
002ac2a1 T CTapEffect::CTapEffect(char const*, CVector2D)
002ac375 T CTapEffect::~CTapEffect()
002ac375 T CTapEffect::~CTapEffect()
00470ea1 T CTimeCycle::Initialise(bool)
00968fd0 B CTimeCycle::m_NumBoxes
00967768 B CTimeCycle::m_fFarClip
00967318 B CTimeCycle::m_fSunSize
009678d8 B CTimeCycle::m_fFogStart
00967f50 B CTimeCycle::m_fWaterRed
00968fd4 B CTimeCycle::m_vRedGrade
009680c0 B CTimeCycle::m_fWaterBlue
00966a78 B CTimeCycle::m_nSkyTopRed
0096a6d4 B CTimeCycle::m_vBlueGrade
0042096d T CTimeCycle::GetAmbientRed()
0096b49c B CTimeCycle::m_ExtraColour
0096b258 B CTimeCycle::m_VectorToSun
009687f0 B CTimeCycle::m_fCloudAlpha
00968230 B CTimeCycle::m_fPostFx1Red
00968510 B CTimeCycle::m_fPostFx2Red
009673d0 B CTimeCycle::m_fSpriteSize
00968178 B CTimeCycle::m_fWaterAlpha
00968008 B CTimeCycle::m_fWaterGreen
00966628 B CTimeCycle::m_nAmbientRed
00966be8 B CTimeCycle::m_nSkyTopBlue
00966ec8 B CTimeCycle::m_nSunCoreRed
00969b54 B CTimeCycle::m_vGreenGrade
004209bd T CTimeCycle::GetAmbientBlue()
00420951 T CTimeCycle::InitForRestart()
0096b498 B CTimeCycle::m_FogReduction
009683a0 B CTimeCycle::m_fPostFx1Blue
00968680 B CTimeCycle::m_fPostFx2Blue
0096b398 B CTimeCycle::m_fShadowSideX
0096b3d8 B CTimeCycle::m_fShadowSideY
00966798 B CTimeCycle::m_nAmbientBlue
00966b30 B CTimeCycle::m_nSkyTopGreen
00967038 B CTimeCycle::m_nSunCoreBlue
00420995 T CTimeCycle::GetAmbientGreen()
00420899 T CTimeCycle::StopExtraColour(bool)
00968458 B CTimeCycle::m_fPostFx1Alpha
009682e8 B CTimeCycle::m_fPostFx1Green
00968738 B CTimeCycle::m_fPostFx2Alpha
009685c8 B CTimeCycle::m_fPostFx2Green
0096b318 B CTimeCycle::m_fShadowFrontX
0096b358 B CTimeCycle::m_fShadowFrontY
009666e0 B CTimeCycle::m_nAmbientGreen
00967b00 B CTimeCycle::m_nLowCloudsRed
00966ca0 B CTimeCycle::m_nSkyBottomRed
00966f80 B CTimeCycle::m_nSunCoreGreen
009670f0 B CTimeCycle::m_nSunCoronaRed
0042050d T CTimeCycle::FindTimeCycleBox(CVector, CTimeCycleBox**, float*, bool, bool, CTimeCycleBox*)
00420829 T CTimeCycle::StartExtraColour(int, bool)
0096654c B CTimeCycle::m_CurrentColours
0096b4a4 B CTimeCycle::m_bExtraColourOn
00967c70 B CTimeCycle::m_nLowCloudsBlue
00966e10 B CTimeCycle::m_nSkyBottomBlue
00967260 B CTimeCycle::m_nSunCoronaBlue
00968960 B CTimeCycle::m_nWaterFogAlpha
004209e5 T CTimeCycle::GetAmbientRed_Obj()
00966850 B CTimeCycle::m_nAmbientRed_Obj
00967bb8 B CTimeCycle::m_nLowCloudsGreen
00967540 B CTimeCycle::m_nShadowStrength
00966d58 B CTimeCycle::m_nSkyBottomGreen
009671a8 B CTimeCycle::m_nSunCoronaGreen
00420a05 T CTimeCycle::GetAmbientBlue_Obj()
0096b4ac B CTimeCycle::m_BelowHorizonGrey
0096b4a8 B CTimeCycle::m_ExtraColourInter
009669c0 B CTimeCycle::m_nAmbientBlue_Obj
00968a18 B CTimeCycle::m_nDirectionalMult
0041efa1 T CTimeCycle::CalcColoursForPoint(CVector, CColourSet*)
004207a1 T CTimeCycle::FindFarClipForCoors(CVector)
004209f5 T CTimeCycle::GetAmbientGreen_Obj()
00967488 B CTimeCycle::m_fSpriteBrightness
00966908 B CTimeCycle::m_nAmbientGreen_Obj
0096b4b0 B CTimeCycle::m_vecDirnLightToSun
0096b254 B CTimeCycle::m_CurrentStoredValue
009676b0 B CTimeCycle::m_nPoleShadowStrength
0096b418 B CTimeCycle::m_fShadowDisplacementX
0096b458 B CTimeCycle::m_fShadowDisplacementY
009675f8 B CTimeCycle::m_nLightShadowStrength
0096b4a0 B CTimeCycle::m_ExtraColourWeatherType
00967d28 B CTimeCycle::m_nFluffyCloudsBottomRed
009688a8 B CTimeCycle::m_nHighLightMinIntensity
00967e98 B CTimeCycle::m_nFluffyCloudsBottomBlue
00967de0 B CTimeCycle::m_nFluffyCloudsBottomGreen
00967a48 B CTimeCycle::m_fLightsOnGroundBrightness
0096b4bc B CTimeCycle::m_BrightnessAddedToAmbientRed
00420a15 T CTimeCycle::GetAmbientRed_BeforeBrightness()
004206e1 T CTimeCycle::SetConstantParametersForPostFX()
0096b4c4 B CTimeCycle::m_BrightnessAddedToAmbientBlue
00420a65 T CTimeCycle::GetAmbientBlue_BeforeBrightness()
0096b4c0 B CTimeCycle::m_BrightnessAddedToAmbientGreen
00420a3d T CTimeCycle::GetAmbientGreen_BeforeBrightness()
004208bd T CTimeCycle::AddOne(CBox&, short, int, float, float, float)
0041ef79 T CTimeCycle::Update()
0042094d T CTimeCycle::Shutdown()
00968ad0 B CTimeCycle::m_aBoxes
0056f449 T CTrainDoor::Open(float)
0056f41d T CTrainDoor::IsInUse()
0057c481 T CTrainNode::GetLightingFromCollision()
002bc035 W CWidgetMap::GetName()
002bbfed T CWidgetMap::IsTouched(CVector2D*)
002bbfc9 T CWidgetMap::CWidgetMap(char const*, WidgetPosition const&)
002bbfc9 T CWidgetMap::CWidgetMap(char const*, WidgetPosition const&)
002bc025 W CWidgetMap::~CWidgetMap()
005cf741 T CWorldScan::SetExtraRectangleToScan(float, float, float, float)
005cedd5 T CWorldScan::ScanWorld(RwV2d*, int, void (*)(int, int))
005d236f T CommonSize::Free(HeapFreeBlockDesc*)
005d2325 T CommonSize::Init(int)
005d2337 T CommonSize::Malloc()
0067a278 D ES2Texture::boundTextures
006bcc18 B ES2Texture::activeTextures
0067a274 D ES2Texture::curActiveTexture
001d1189 W ES2Texture::BindActiveTextures()
001d15dd W ES2Texture::Select(unsigned int)
001d13e1 W ES2Texture::UploadMip(unsigned int, void const*)
001d13d1 W ES2Texture::~ES2Texture()
001d12b1 W ES2Texture::~ES2Texture()
001ead8d W EntryIndex::sort(void const*, void const*)
0029d1b5 W FlowScreen::GainedFocus()
0029d21d W FlowScreen::IsFlowScreen()
0029d221 W FlowScreen::IsPauseScreen()
002a7c45 W FlowScreen::DrawFeatheredQuad(CVector2D*, CRGBA*)
0029d1c3 W FlowScreen::SetPreviousScreen(MenuScreen*)
0029d2ad W FlowScreen::IsFlow()
0029d945 W FlowScreen::OnBack()
0029c0a1 W FlowScreen::Render(int)
0029d375 W FlowScreen::Update(float)
0029dabd W FlowScreen::OnStats()
0029db21 W FlowScreen::OnBriefs()
0029b8c1 W FlowScreen::FlowScreen(bool, bool)
0029d365 W FlowScreen::~FlowScreen()
0029d2b1 W FlowScreen::~FlowScreen()
0036dbe5 T FxPrimBP_c::GetRWMatrix(RwMatrixTag*)
0046e0f5 T FxPrimBP_c::Load(unsigned int, int, FxName32_t*)
0036db69 T FxPrimBP_c::FxPrimBP_c()
0036dbe1 T FxPrimBP_c::~FxPrimBP_c()
0036db95 T FxPrimBP_c::~FxPrimBP_c()
0036db95 T FxPrimBP_c::~FxPrimBP_c()
0036dd9d T FxSphere_c::IsCollision(FxSphere_c*)
0036dde5 T FxSphere_c::GetDistToPlane(FxPlane_c*)
0036dd71 T FxSphere_c::FxSphere_c()
0036dd71 T FxSphere_c::FxSphere_c()
0036dd99 T FxSphere_c::operator delete(void*)
0036dd79 T FxSphere_c::operator new(unsigned int, int)
0036e541 T FxSystem_c::EnablePrim(int, unsigned char)
0036e45d T FxSystem_c::AddParticle(RwMatrixTag*, RwV3d*, float, FxPrtMult_c*, float, float, float, unsigned char)
0036e375 T FxSystem_c::AddParticle(RwV3d*, RwV3d*, float, FxPrtMult_c*, float, float, float, unsigned char)
0036e231 T FxSystem_c::PlayAndKill()
0036e609 T FxSystem_c::SetRateMult(float)
0036e629 T FxSystem_c::SetTimeMult(float)
0036e5af T FxSystem_c::AddOffsetPos(RwV3d*)
0036e339 T FxSystem_c::AttachToBone(CEntity*, int)
0036e5e5 T FxSystem_c::SetConstTime(unsigned char, float)
0036e59d T FxSystem_c::SetOffsetPos(RwV3d*)
0036efa3 T FxSystem_c::GetPlayStatus()
0036f0d1 T FxSystem_c::GetBoundingBox(FxBox_c*)
0036f341 T FxSystem_c::SetZTestEnable(unsigned char)
0036efbf T FxSystem_c::ForAllParticles(void (*)(Particle_c*, int, void**), void*)
0036ef55 T FxSystem_c::CopyParentMatrix()
0036f2cb T FxSystem_c::SetBoundingSphere(FxSphere_c*)
0036efa9 T FxSystem_c::SetLocalParticles(unsigned char)
0036f357 T FxSystem_c::SetMustCreatePrts(unsigned char)
0036ec99 T FxSystem_c::GetCompositeMatrix(RwMatrixTag*)
0036f303 T FxSystem_c::ResetBoundingSphere()
0036f033 T FxSystem_c::UpdateBoundingBoxCB(Particle_c*, int, void**)
0036f2b1 T FxSystem_c::GetBoundingSphereLcl(FxSphere_c*)
0036e7e5 T FxSystem_c::GetBoundingSphereWld(FxSphere_c*)
0036e76b T FxSystem_c::Exit()
0036e657 T FxSystem_c::Init(FxSystemBP_c*, RwMatrixTag*, RwMatrixTag*)
0036e2fd T FxSystem_c::Kill()
0036e121 T FxSystem_c::Play()
0036e1f9 T FxSystem_c::Stop()
0036e1e1 T FxSystem_c::Pause()
0036e891 T FxSystem_c::Update(RwCamera*, float)
0036ed05 T FxSystem_c::DoFxAudio(CVector)
0036e7b1 T FxSystem_c::IsVisible()
0036e54d T FxSystem_c::SetMatrix(RwMatrixTag*)
0036e649 T FxSystem_c::SetVelAdd(RwV3d*)
0036e0a9 T FxSystem_c::FxSystem_c()
0036e0a9 T FxSystem_c::FxSystem_c()
0036e0dd T FxSystem_c::~FxSystem_c()
0036e0dd T FxSystem_c::~FxSystem_c()
002a4941 W GameScreen::GameScreen()
002a4af5 W GameScreen::~GameScreen()
00445ee9 T Interior_c::AddPickups()
00444bed T Interior_c::CalcMatrix(RwV3d*)
004467bd T Interior_c::IsPtInside(RwV3d*, float, float, float)
00444cc1 T Interior_c::ResetTiles()
0044580d T Interior_c::CalcExitPts()
0044da45 T Interior_c::FurnishShop(int)
004473c5 T Interior_c::PlaceObject(unsigned char, Furniture_c*, float, float, float, float)
0044bb4d T Interior_c::Lounge_AddTV(int, int, int, int)
0044b241 T Interior_c::FurnishLounge()
0044d081 T Interior_c::FurnishOffice()
00447b69 T Interior_c::GetRandomTile(int, int*, int*)
0044671b T Interior_c::GetTileCentre(float, float, RwV3d*)
0044678f T Interior_c::GetTileStatus(int, int)
00447c15 T Interior_c::FindEmptyTiles(int, int, int*, int*)
00447f85 T Interior_c::FurnishBedroom()
0044a8a1 T Interior_c::FurnishKitchen()
004462b9 T Interior_c::GetBoundingBox(FurnitureEntity_c*, CVector*)
0044bf21 T Interior_c::Lounge_AddHifi(int, int, int, int)
00446a21 T Interior_c::PlaceFurniture(Furniture_c*, int, int, float, int, int, int*, int*, unsigned char)
004476d5 T Interior_c::SetCornerTiles(int, int, int, unsigned char)
00447041 T Interior_c::SetTilesStatus(int, int, int, int, int, unsigned char)
00447e55 T Interior_c::AddInteriorInfo(int, float, float, int, CEntity*)
00446fad T Interior_c::CheckTilesEmpty(int, int, int, int, unsigned char)
00446579 T Interior_c::FindBoundingBox(int, int, int*, int*, int*, int*, int*)
00447a27 T Interior_c::GetNumEmptyTiles(int, int, int, int)
0044d60d T Interior_c::Office_PlaceDesk(int, int, int, int, unsigned char, int)
0044e609 T Interior_c::Shop_AddShelfInfo(int, int, int)
0044db85 T Interior_c::Shop_FurnishEdges()
0044e479 T Interior_c::Shop_PlaceCounter(unsigned char)
00447aef T Interior_c::FindFirstEmptyTile(int, int, int)
00446299 T Interior_c::GetFurnitureEntity(CEntity*)
0044bd31 T Interior_c::Lounge_AddSofaInfo(int, int, CEntity*)
0044dfdd T Interior_c::Shop_FurnishAisles()
0044be69 T Interior_c::Lounge_AddChairInfo(int, int, CEntity*)
0044d1c5 T Interior_c::Office_FurnishEdges()
0044e235 T Interior_c::Shop_FurnishCeiling()
0044e3d9 T Interior_c::Shop_PlaceEdgeUnits(int, int, int, int)
004488cd T Interior_c::Bedroom_AddTableItem(int, int, int, int, int, int)
0044aa55 T Interior_c::Kitchen_FurnishEdges()
0044d40d T Interior_c::Office_FurnishCenter()
0044d97d T Interior_c::Office_PlaceDeskQuad(int, int, int, int)
004470d9 T Interior_c::PlaceFurnitureOnWall(int, int, int, float, int, int, int, int, int*, int*, int*, int*, int*, int*)
0044e239 T Interior_c::Shop_Place3PieceUnit(int, int, int, int, int)
0044dae1 T Interior_c::Shop_PlaceFixedUnits()
0044d4b1 T Interior_c::Office_PlaceEdgeDesks(int, int, int, int, int)
00447299 T Interior_c::PlaceFurnitureInCorner(int, int, int, float, int, int, int, int*, int*, int*, int*, int*)
0044e5bd T Interior_c::Shop_GetRandomUnitType()
0044d785 T Interior_c::Office_PlaceEdgeFillers(int, int, int, int, int)
0044616d T Interior_c::Exit()
00444a7d T Interior_c::Init(RwV3d*)
004457e1 T Interior_c::Furnish()
00447d11 T Interior_c::AddGotoPt(int, int, float, float)
004468c5 T Interior_c::IsVisible()
004461d1 T Interior_c::Unfurnish()
00444a41 T Interior_c::Interior_c()
00444a41 T Interior_c::Interior_c()
00444a63 T Interior_c::~Interior_c()
00444a63 T Interior_c::~Interior_c()
0036ccf5 T ListItem_c::ListItem_c()
0036ccf5 T ListItem_c::ListItem_c()
0036ccfd T ListItem_c::~ListItem_c()
0036ccfd T ListItem_c::~ListItem_c()
002a7aa1 W LoadScreen::LoadScreenSelection::LoadFailed(void*)
002a793d W LoadScreen::LoadScreenSelection::ConfirmLoad(void*)
002a77b9 W LoadScreen::LoadScreenSelection::HandleInput(SelectScreen*, float)
002a7941 W LoadScreen::LoadScreenSelection::Load()
002a75bb W LoadScreen::LoadScreenSelection::~LoadScreenSelection()
002a74b5 W LoadScreen::LoadScreen(bool)
002a7591 W LoadScreen::~LoadScreen()
00299349 T MenuScreen::DrawSlider(CVector2D, CVector2D, float, bool, unsigned char, bool)
002980d5 T MenuScreen::DrawSprite(RwTexture*, CRGBA, CVector2D, CVector2D, CVector2D, CVector2D)
00298da5 T MenuScreen::DrawSprite(RwTexture*, CRGBA, CVector2D, CVector2D, bool)
00298221 T MenuScreen::DrawSprite(RwTexture*, CVector2D*, CVector2D*, CRGBA*, bool)
002983c5 T MenuScreen::PushScreen(MenuScreen*, bool)
0029b8ad W MenuScreen::GainedFocus()
00298fbd T MenuScreen::DoesTextWrap(unsigned short*, int, CVector2D)
0029b8b1 W MenuScreen::IsFlowScreen()
0029b8b5 W MenuScreen::IsPauseScreen()
00299065 T MenuScreen::DrawTextDirect(unsigned short*, TextAlign, int, CRGBA, bool, CVector2D, CVector2D, bool, int*)
0029b8af W MenuScreen::SetPreviousScreen(MenuScreen*)
0029b8b9 W MenuScreen::IsSaveLoadDeleteScreen()
0029b8bd W MenuScreen::IsFlow()
002998c5 T MenuScreen::OnBack()
002983b5 T MenuScreen::Render(int)
00297807 T MenuScreen::Update(float)
002978c1 T MenuScreen::DrawBack(bool)
0029884d T MenuScreen::DrawQuad(CVector2D, CVector2D, CRGBA)
00298669 T MenuScreen::DrawQuad(CVector2D, CVector2D, CRGBA*)
002989b9 T MenuScreen::DrawQuad(CVector2D*, CRGBA*)
00298075 T MenuScreen::DrawText(char const*, TextAlign, int, CRGBA, bool, CVector2D, CVector2D, bool)
002992fd T MenuScreen::DrawText(unsigned short*, TextAlign, int, CRGBA, bool, CVector2D, CVector2D, bool)
00298565 T MenuScreen::PopScreen(bool)
002977ad T MenuScreen::MenuScreen(bool)
00297805 T MenuScreen::~MenuScreen()
002977e1 T MenuScreen::~MenuScreen()
002977e1 T MenuScreen::~MenuScreen()
00298ef9 T MobileMenu::DrawSprite(RwTexture*, CRGBA, CVector2D, CVector2D)
00298cd5 T MobileMenu::DrawSprite(RwTexture*, CRGBA, CVector2D, CVector2D, CVector2D, CVector2D)
00298bf5 T MobileMenu::DrawSprite(RwTexture*, CVector2D*, CVector2D*, CRGBA*)
0029b601 T MobileMenu::InitForNag()
0029992d T MobileMenu::Initialize()
0029b479 T MobileMenu::LoadFailed()
0029b519 T MobileMenu::SaveFailed()
0029b2a5 T MobileMenu::InitForSave()
00299ad9 T MobileMenu::CalcBGUVSize()
0029ada9 T MobileMenu::InitForPause()
0029b391 T MobileMenu::InitForRetry()
0029b1a1 T MobileMenu::InitForTitle()
002a8c1d T MobileMenu::InitGameVars()
0029a615 T MobileMenu::ClampBGCoords(CVector2D&)
0029a715 T MobileMenu::PopAllScreens()
0029a657 T MobileMenu::ProcessPending()
00296efd T MobileMenu::UpdateDownload(int, bool)
0029b1e9 T MobileMenu::InitForDownload()
0029a575 T MobileMenu::PrepareToRender()
002985a9 T MobileMenu::RemoveTopScreen(bool, bool)
0029b219 T MobileMenu::InitForSignedOut()
0029ae5d T MobileMenu::IsMainMenuScreen()
00299b15 T MobileMenu::GetRandomBGCoords()
0029ae69 T MobileMenu::Exit()
0029aeb9 T MobileMenu::Load()
00299bd5 T MobileMenu::Render()
0029b12d T MobileMenu::Unload()
0029a731 T MobileMenu::Update()
00298789 T MobileMenu::DrawQuad(CVector2D, CVector2D, CRGBA*)
00298b29 T MobileMenu::DrawQuad(CVector2D*, CRGBA*)
002984d1 T MobileMenu::AddScreen(MenuScreen*, bool)
00299b85 T MobileMenu::MobileMenu()
00299b85 T MobileMenu::MobileMenu()
0029b74d W MobileMenu::~MobileMenu()
002a85a9 W SaveScreen::SaveScreenSelection::SaveFailed(void*)
002a831d W SaveScreen::SaveScreenSelection::ConfirmSave(void*)
002a8181 W SaveScreen::SaveScreenSelection::HandleInput(SelectScreen*, float)
002a8321 W SaveScreen::SaveScreenSelection::Save()
002a8565 W SaveScreen::SaveScreenSelection::SaveDone(void*)
002a817d W SaveScreen::SaveScreenSelection::~SaveScreenSelection()
002a816d W SaveScreen::~SaveScreen()
002709fd T TouchSense::playEffect(int, char const*, int, int)
00270981 T TouchSense::playEffect(int, int, int, int)
00270819 T TouchSense::setIVTFile(char const*)
00270459 T TouchSense::threadFunc(void*)
00270429 T TouchSense::deleteInstance()
002709f1 T TouchSense::hapticsEnabled()
00270c5d T TouchSense::stopAllEffects()
00270aa1 T TouchSense::getHapticsLevel()
00270cb1 T TouchSense::setHapticsLevel(int)
00270b89 T TouchSense::playBuiltinEffect(int, int, int, int)
002709e5 T TouchSense::playEffectInternal(int, int)
00270b5d T TouchSense::stopContinuousEffect()
00270aa5 T TouchSense::getEffectIndexFromName(char const*)
00270bf1 T TouchSense::playBuiltinEffectInternal(int, int)
00270aed T TouchSense::startContinuousBuiltinEffect(int, int, int, int)
00270465 T TouchSense::run()
002703f5 T TouchSense::instance()
00270631 T TouchSense::TouchSense()
00270631 T TouchSense::TouchSense()
002707b1 T TouchSense::~TouchSense()
002707b1 T TouchSense::~TouchSense()
0027ca7d W AndroidFile::AsyncFlush()
0027c989 W AndroidFile::UpdateRead(int)
006d6878 B AndroidFile::firstAsyncFile
002a5aa1 W AudioScreen::RadioSelection::HandleInput(SelectScreen*, float)
002a512d W AudioScreen::RadioSelection::Render(SelectScreen*, CVector2D, CVector2D, float)
002a4e45 W AudioScreen::RadioSelection::RadioSelection()
002a511d W AudioScreen::RadioSelection::~RadioSelection()
002a5075 W AudioScreen::RadioSelection::~RadioSelection()
002a4fc5 W AudioScreen::OnRestoreDefaults(SelectScreen*, int)
002a5009 W AudioScreen::OnBack()
002a5005 W AudioScreen::Render(int)
002a5001 W AudioScreen::Update(float)
002a4ca5 W AudioScreen::AudioScreen()
002a4ff1 W AudioScreen::~AudioScreen()
002a6de1 W BriefScreen::ComputeTotalHeight()
002a70a5 W BriefScreen::Render(int)
002a6f25 W BriefScreen::Update(float)
002a7269 W BriefScreen::DrawBack(bool)
002a6bf5 W BriefScreen::BriefScreen()
002a6f15 W BriefScreen::~BriefScreen()
00951ba4 B CAudioZones::m_NumBoxes
00950c7c B CAudioZones::m_aSpheres
00951ba0 B CAudioZones::m_NumSpheres
00951bd8 B CAudioZones::m_aActiveBoxes
003bde1d T CAudioZones::SwitchAudioZone(char*, bool)
003bdd55 T CAudioZones::RegisterAudioBox(char*, int, bool, float, float, float, float, float, float)
00951bac B CAudioZones::m_NumActiveBoxes
00951bb0 B CAudioZones::m_aActiveSpheres
00951ba8 B CAudioZones::m_NumActiveSpheres
003bdce5 T CAudioZones::RegisterAudioSphere(char*, int, bool, float, float, float, float)
00951c00 B CAudioZones::m_bRenderAudioZones
003bda5d T CAudioZones::Init()
003bda95 T CAudioZones::Update(bool, CVector)
00950cd0 B CAudioZones::m_aBoxes
0055fe51 T CAutomobile::GetCarRoll()
0055e779 T CAutomobile::SetTowLink(CVehicle*, bool)
0055feb1 T CAutomobile::GetCarPitch()
0055d945 T CAutomobile::PlayCarHorn()
00555e59 T CAutomobile::TankControl()
0055ecdd T CAutomobile::BreakTowLink()
0055e5d5 T CAutomobile::GetTowBarPos(CVector&, bool, CVehicle*)
00550aad T CAutomobile::HideAllComps()
00555cad T CAutomobile::SetTaxiLight(bool)
00550aaf T CAutomobile::ShowAllComps()
0055eed9 T CAutomobile::CloseAllDoors()
0055e395 T CAutomobile::DoNitroEffect(float)
005589a5 T CAutomobile::ScanForCrimes()
00552e3d T CAutomobile::SetDoorDamage(eDoors, bool)
0054eba9 T CAutomobile::SetModelIndex(unsigned int)
00551501 T CAutomobile::VehicleDamage(float, unsigned short, CEntity*, CVector*, CVector*, eWeaponType)
0055feed T CAutomobile::FindWheelWidth(bool)
0055e56d T CAutomobile::GetTowHitchPos(CVector&, bool, CVehicle*)
0055ed67 T CAutomobile::KnockPedOutCar(eWeaponType, unsigned short, CPed*)
00556951 T CAutomobile::NitrousControl(signed char)
00553e45 T CAutomobile::ProcessControl()
00552cdd T CAutomobile::SetPanelDamage(ePanels, bool)
005532a5 T CAutomobile::SetTotalDamage(bool)
00553431 T CAutomobile::ProcessBuoyancy()
00559509 T CAutomobile::ResetSuspension()
005525cd T CAutomobile::SetBumperDamage(ePanels, bool)
0055e2ad T CAutomobile::SetBusDoorTimer(unsigned int, unsigned char)
00553049 T CAutomobile::SetRandomDamage(bool)
0054ebf7 T CAutomobile::SetupModelNodes()
0054eb21 T CAutomobile::StopNitroEffect()
0055665d T CAutomobile::TowTruckControl()
00a12e20 B CAutomobile::vecHunterGunPos
0055e2d9 T CAutomobile::BlowUpCarsInPath()
00556895 T CAutomobile::BoostJumpControl()
0055ffad T CAutomobile::DoHeliDustEffect(float, float)
005cbc19 T CAutomobile::FireTruckControl(CFire*)
0054f181 T CAutomobile::GetJackedCounter()
0054f189 T CAutomobile::HydraulicControl()
005574f9 T CAutomobile::ProcessHarvester()
0055d935 T CAutomobile::SetAllTaxiLights(bool)
00a01cd4 B CAutomobile::m_sAllTaxiLights
0055f431 T CAutomobile::ProcessSuspension()
00553421 T CAutomobile::ReduceHornCounter()
00559535 T CAutomobile::UpdateWheelMatrix(int, int)
005524b5 T CAutomobile::SetHeliOrientation(float)
0055d28d T CAutomobile::SetUpWheelColModel(CColModel*)
00560407 W CAutomobile::GetNumContactWheels()
0055e935 T CAutomobile::PlaceOnRoadProperly()
00558f51 T CAutomobile::PlayHornIfNecessary()
0055ee0f T CAutomobile::PopBootUsingPhysics()
00555cbd T CAutomobile::ProcessAutoBusDoors()
00556b39 T CAutomobile::ProcessCarWheelPair(int, int, float, CVector*, CVector*, float, float, float, bool)
005590ed T CAutomobile::ProcessSwingingDoor(int, eDoors)
0055d251 T CAutomobile::RemoveRefsToVehicle(CEntity*)
00552415 T CAutomobile::TellHeliToGoToCoors(float, float, float, float, float)
005524bb T CAutomobile::ClearHeliOrientation()
0055c581 T CAutomobile::ProcessControlInputs(unsigned char)
0055d887 T CAutomobile::SetupDamageAfterLoad()
0054ec39 T CAutomobile::SetupSuspensionLines()
005526f5 T CAutomobile::SpawnFlyingComponent(int, unsigned int)
005524c7 T CAutomobile::TellPlaneToGoToCoors(float, float, float, float, float)
0055253d T CAutomobile::ProcessFlyingCarStuff()
0054fcdd T CAutomobile::UpdateMovingCollision(float)
00558bf5 T CAutomobile::DoSoftGroundResistance(unsigned int&)
0055d9eb T CAutomobile::IsRoomForPedToLeaveCar(unsigned int, CVector*)
0055bf11 T CAutomobile::ProcessEntityCollision(CEntity*, CColPoint*)
00550509 T CAutomobile::AddMovingCollisionSpeed(CVector&)
0055ef9d T CAutomobile::DoHoverSuspensionRatios()
00550711 T CAutomobile::GetMovingCollisionOffset()
0055cfa1 T CAutomobile::BlowUpCarCutSceneNoExtras(bool, bool, bool, bool)
005507bd T CAutomobile::GetComponentWorldPosition(int, CVector&)
0055f139 T CAutomobile::DoBurstAndSoftGroundRatios()
00550e85 T CAutomobile::ProcessCarOnFireAndExplode(unsigned char)
00559479 T CAutomobile::RemoveBonnetInPedCollision()
00558f79 T CAutomobile::ProcessControlCollisionCheck(bool)
00550b85 T CAutomobile::dmgDrawCarCollidingParticles(CVector const&, float, eWeaponType)
0055bee5 T CAutomobile::CustomCarPlate_AfterRenderingStop(CVehicleModelInfo*)
0055bec1 T CAutomobile::CustomCarPlate_BeforeRenderingStart(CVehicleModelInfo*)
0055d5c1 T CAutomobile::Fix()
00487a63 T CAutomobile::Load()
00487a1d T CAutomobile::Save()
0055bb8d T CAutomobile::Render()
0055d6ab T CAutomobile::FixDoor(int, eDoors)
0055d6a1 T CAutomobile::FixTyre(eWheels)
00551475 T CAutomobile::IsInAir()
0055ed6b T CAutomobile::PopBoot()
0055d727 T CAutomobile::PopDoor(int, eDoors, bool)
0055d7a7 T CAutomobile::FixPanel(int, ePanels)
005507f5 T CAutomobile::OpenDoor(CPed*, int, eDoors, float, bool)
0055d823 T CAutomobile::PopPanel(int, ePanels, bool)
0055903f T CAutomobile::Teleport(CVector, unsigned char)
0055cbb9 T CAutomobile::BlowUpCar(CEntity*, unsigned char)
0055d459 T CAutomobile::BurstTyre(unsigned char, bool)
0055ee45 T CAutomobile::CloseBoot()
0055cb11 T CAutomobile::DebugCode()
00559d45 T CAutomobile::PreRender()
00557ad1 T CAutomobile::ProcessAI(unsigned int&)
0054e2d1 T CAutomobile::CAutomobile(int, unsigned char, unsigned char)
0054e2d1 T CAutomobile::CAutomobile(int, unsigned char, unsigned char)
0054eb4d T CAutomobile::~CAutomobile()
0054eac9 T CAutomobile::~CAutomobile()
0054eac9 T CAutomobile::~CAutomobile()
005d6f81 T CBulletInfo::Initialise()
005d7095 T CBulletInfo::Update()
005d6fe9 T CBulletInfo::Shutdown()
005d6fed T CBulletInfo::AddBullet(CEntity*, eWeaponType, CVector, CVector)
005c3e41 T CCheckpoint::Render()
004d6181 T CCoverPoint::CanAccomodateAnotherPed()
004d64d1 T CCoverPoint::ReleaseCoverPointForPed(CPed*)
004d61e9 T CCoverPoint::ReserveCoverPointForPed(CPed*)
005a6369 T CEscalators::Init()
005a77ad T CEscalators::AddOne(CVector const&, CVector const&, CVector const&, CVector const&, bool, CEntity*)
005a6aa1 T CEscalators::Update()
00a26aa8 B CEscalators::aArray
005a6629 T CEscalators::Shutdown()
00373ab1 T CEventDeath::CEventDeath(bool)
00373add T CEventDeath::CEventDeath(bool, int)
00373ab1 T CEventDeath::CEventDeath(bool)
00373add T CEventDeath::CEventDeath(bool, int)
00373b01 T CEventDeath::~CEventDeath()
00378119 T CEventDeath::~CEventDeath()
00378119 T CEventDeath::~CEventDeath()
0036f7c1 T CEventGroup::Reorganise()
0036f79f T CEventGroup::TickEvents()
0036f819 T CEventGroup::RemoveInvalidEvents(bool)
0036f55d T CEventGroup::Add(CEvent&, bool)
0036f46d T CEventGroup::Flush(bool)
0036f6a9 T CEventGroup::Remove(CEvent*)
0036f3e1 T CEventGroup::CEventGroup(CPed*)
0036f3e1 T CEventGroup::CEventGroup(CPed*)
0036f50d T CEventGroup::~CEventGroup()
0036f41d T CEventGroup::~CEventGroup()
0036f41d T CEventGroup::~CEventGroup()
00376729 T CEventInAir::CEventInAir()
00376729 T CEventInAir::CEventInAir()
00376741 T CEventInAir::~CEventInAir()
00378119 T CEventInAir::~CEventInAir()
00378119 T CEventInAir::~CEventInAir()
0046b4e9 T CFileLoader::LoadGarage(char const*)
00469491 T CFileLoader::LoadObject(char const*)
0046b5b9 T CFileLoader::LoadPickup(char const*)
0046abe9 T CFileLoader::ReloadPaths(char const*)
0046a419 T CFileLoader::Load2dEffect(char const*)
0046afb9 T CFileLoader::LoadCullZone(char const*)
0046b201 T CFileLoader::LoadAudioZone(char const*)
003ef291 T CFileLoader::LoadClumpFile(RwStream*, unsigned int)
00467125 T CFileLoader::LoadClumpFile(char const*)
0046b31d T CFileLoader::LoadEntryExit(char const*)
00469ebd T CFileLoader::LoadPedObject(char const*)
0046b7c9 T CFileLoader::LoadStuntJump(char const*)
0046ab49 T CFileLoader::LoadTXDParent(char const*)
003ef1ed T CFileLoader::LoadAtomicFile(RwStream*, unsigned int)
004670d9 T CFileLoader::LoadAtomicFile(char const*)
0046a0d9 T CFileLoader::LoadPathHeader(char const*, int&)
0046960d T CFileLoader::LoadTimeObject(char const*)
003f0401 T CFileLoader::LoadBoundingBox(unsigned char*, CBoundingBox&)
0046a275 T CFileLoader::LoadCarPathNode(char const*, int, int, bool)
00469885 T CFileLoader::LoadClumpObject(char const*)
0046717d T CFileLoader::LoadObjectTypes(char const*)
0046a0f9 T CFileLoader::LoadPedPathNode(char const*, int, int)
003f09d9 T CFileLoader::LoadCarGenerator(CFileCarGenerator*, int)
0046b75d T CFileLoader::LoadCarGenerator(char const*, int)
004697cd T CFileLoader::LoadWeaponObject(char const*)
00466f71 T CFileLoader::LoadCollisionFile(char const*, unsigned char)
003ef471 T CFileLoader::LoadCollisionFile(unsigned char*, unsigned int, unsigned char)
00466f0d T CFileLoader::LoadTexDictionary(char const*)
00469a5d T CFileLoader::LoadVehicleObject(char const*)
0046abe5 T CFileLoader::ReloadObjectTypes(char const*)
004693a9 T CFileLoader::SaveTexDictionary(RwTexDictionary*, char const*)
00466f5d T CFileLoader::AddTexDictionaries(RwTexDictionary*, RwTexDictionary*)
003ef621 T CFileLoader::LoadCollisionModel(unsigned char*, CColModel&, char const*)
003f059d T CFileLoader::LoadObjectInstance(CFileObjectInstance*, char const*)
003f04f9 T CFileLoader::LoadObjectInstance(char const*)
003ef3c5 T CFileLoader::StartLoadClumpFile(RwStream*, unsigned int)
003ef415 T CFileLoader::FinishLoadClumpFile(RwStream*, unsigned int)
0046b111 T CFileLoader::LoadOcclusionVolume(char const*, char const*)
003ef065 T CFileLoader::LoadAtomicFile2Return(char const*)
003ef131 T CFileLoader::SetRelatedModelInfoCB(RpAtomic*, void*)
004693e9 T CFileLoader::FindRelatedModelInfoCB(RpAtomic*, void*)
003ef935 T CFileLoader::LoadCollisionModelVer2(unsigned char*, unsigned int, CColModel&, char const*)
003efc39 T CFileLoader::LoadCollisionModelVer3(unsigned char*, unsigned int, CColModel&, char const*)
003f00d1 T CFileLoader::LoadCollisionModelVer4(unsigned char*, unsigned int, CColModel&, char const*)
0046b8a1 T CFileLoader::LoadTimeCyclesModifier(char const*)
00469919 T CFileLoader::LoadAnimatedClumpObject(char const*)
0046b969 T CFileLoader::LoadCollisionFileFirstTime(unsigned char*, unsigned int, unsigned char)
009584f0 B CFileLoader::ms_line
003eefd9 T CFileLoader::LoadLine(unsigned char**, int&)
003eef65 T CFileLoader::LoadLine(unsigned int)
0046af11 T CFileLoader::LoadZone(char const*)
00466a0d T CFileLoader::LoadLevel(char const*)
00468cdd T CFileLoader::LoadScene(char const*)
00452aa5 T CHandObject::ProcessControl()
00452c25 T CHandObject::Render()
00452aed T CHandObject::PreRender()
00452969 T CHandObject::CHandObject(int, CPed*, bool)
00452969 T CHandObject::CHandObject(int, CPed*, bool)
00452c5d W CHandObject::~CHandObject()
003e2871 T CHandShaker::SetDefaults()
003e296d T CHandShaker::Reset()
003d42e5 T CHandShaker::Process(float)
00296675 T CHoldEffect::SetVertices(int, float*, float*, CRGBA const&)
006e0040 B CHoldEffect::m_pChainHead
006e0044 B CHoldEffect::m_pChainTail
00296419 T CHoldEffect::Draw()
0029670d T CHoldEffect::DrawAll()
002966f9 T CHoldEffect::UpdateAll()
00296341 T CHoldEffect::CHoldEffect(char const*, bool, CRGBA, bool)
00296341 T CHoldEffect::CHoldEffect(char const*, bool, CRGBA, bool)
002963d9 T CHoldEffect::~CHoldEffect()
002963d9 T CHoldEffect::~CHoldEffect()
0043ab3d T CHudColours::GetIntColour(unsigned char)
0043ab01 T CHudColours::SetRGBAValue(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
0043ab5d T CHudColours::GetRGB(unsigned char, unsigned char)
0043ab1d T CHudColours::GetRGBA(unsigned char)
0043aa51 T CHudColours::CHudColours()
0043aa51 T CHudColours::CHudColours()
0043ab7f W CHudColours::~CHudColours()
00407fb9 T CMatrixLink::Insert(CMatrixLink*)
00407fc7 T CMatrixLink::Remove()
005d2a51 T CMemoryHeap::MoveMemory(void*)
005d2b39 T CMemoryHeap::MoveMemory(void*, void**, int)
005d2953 T CMemoryHeap::GetDebugInfo(void*)
005d264d T CMemoryHeap::RegisterFree(HeapFreeBlockDesc*)
005d294d T CMemoryHeap::SetDebugInfo(void*, unsigned int)
005d295d T CMemoryHeap::MoveHeapBlock(HeapFreeBlockDesc*, HeapBlockDesc*)
005d2571 T CMemoryHeap::RegisterMalloc(HeapBlockDesc*)
005d2c59 W CMemoryHeap::FillInBlockData(HeapBlockDesc*, HeapBlockDesc*, unsigned int)
005d256f T CMemoryHeap::PrintMemoryLeaks()
005d29c9 T CMemoryHeap::WhereShouldMemoryMove(void*)
005d2585 T CMemoryHeap::Free(void*)
005d23cf T CMemoryHeap::Init(void*, unsigned int, bool)
005d2489 T CMemoryHeap::Malloc(unsigned int)
005d265d T CMemoryHeap::Realloc(void*, unsigned int)
005d255d T CMemoryHeap::Shutdown()
005d23c9 T CMemoryHeap::CMemoryHeap()
005d23c9 T CMemoryHeap::CMemoryHeap()
0043bac1 T CMenuSystem::Initialise()
0043d819 T CMenuSystem::InsertMenu(unsigned char, unsigned char, char*, char*, char*, char*, char*, char*, char*, char*, char*, char*, char*, char*, char*)
0043d689 T CMenuSystem::SetDPadInput(unsigned char, unsigned char)
0043bf0d T CMenuSystem::ActivateItems(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
0043bc31 T CMenuSystem::CreateNewMenu(unsigned char, char*, float, float, float, unsigned char, unsigned char, unsigned char, unsigned char)
0043c759 T CMenuSystem::InputGridMenu(unsigned char)
0043bbb5 T CMenuSystem::SwitchOffMenu(unsigned char)
0043c369 T CMenuSystem::CheckForAccept(unsigned char)
0043dbc9 T CMenuSystem::SetColumnWidth(unsigned char, unsigned char, unsigned short)
0043d575 T CMenuSystem::ActivateOneItem(unsigned char, unsigned char, unsigned char)
0043d2f1 T CMenuSystem::DisplayGridMenu(unsigned char, unsigned char)
0043d69d T CMenuSystem::GetMenuPosition(unsigned char, float*, float*)
0043d65d T CMenuSystem::SetColumnHeader(unsigned char, unsigned char, char*)
0043c395 T CMenuSystem::CheckForSelected(unsigned char)
0099221e B CMenuSystem::CurrentMenuInUse
0043d639 T CMenuSystem::HighlightOneItem(unsigned char, unsigned char, unsigned char)
0099221f B CMenuSystem::num_menus_in_use
0043c3c1 T CMenuSystem::InputStandardMenu(unsigned char)
0043d6c1 T CMenuSystem::InsertOneMenuItem(unsigned char, unsigned char, unsigned char, char*)
0043dc65 T CMenuSystem::IsCarColourInGrid(unsigned char, unsigned char)
0043dc19 T CMenuSystem::SetActiveMenuItem(unsigned char, signed char)
0043c99d T CMenuSystem::DisplayStandardMenu(unsigned char, unsigned char)
0043dc2d T CMenuSystem::GetCarColourFromGrid(unsigned char, unsigned char)
0043dbe9 T CMenuSystem::SetColumnOrientation(unsigned char, unsigned char, unsigned char)
0043dc01 T CMenuSystem::SetHeaderOrientation(unsigned char, unsigned char, unsigned char)
0043dc41 T CMenuSystem::FindCarColourFromGrid(unsigned char, unsigned char)
0043c03d T CMenuSystem::FillGridWithCarColours(unsigned char)
0043d76d T CMenuSystem::InsertOneMenuItemWithNumber(unsigned char, unsigned char, unsigned char, char*, int, int)
0043c349 T CMenuSystem::Input(unsigned char)
0043c325 T CMenuSystem::Display(unsigned char, unsigned char)
0043c171 T CMenuSystem::Process(signed char)
0099221c B CMenuSystem::MenuInUse
00468601 T CObjectData::Initialise(char*, bool)
0045606d T CObjectData::SetObjectData(int, CObject&)
0099ed3c B CObjectData::ms_aObjectInfo
0040d919 T CPCKeyboard::GetKeyDown(unsigned short, unsigned char, char*)
0040d921 T CPCKeyboard::KeyToAscii(unsigned char, int, int)
0040d915 T CPCKeyboard::GetKeyJustDown(unsigned short, unsigned char, char*)
0040d91d T CPCKeyboard::GetCurrentKeyPressed(unsigned char)
004baec1 T CPedScanner::ScanForPedsInRange(CPed const&)
005a6d2d T CPlaneTrail::RegisterPoint(CVector)
005a6bcb T CPlaneTrail::Init()
005a6bf1 T CPlaneTrail::Render(float)
0040befd T CPlayerInfo::KillPlayer()
0040bf4d T CPlayerInfo::ArrestPlayer()
0040c205 T CPlayerInfo::BlowUpRCBuggy(bool)
0040c279 T CPlayerInfo::SetPlayerSkin(char const*)
0040c2a7 T CPlayerInfo::LoadPlayerSkin()
0040bfcd T CPlayerInfo::MakePlayerSafe(bool, float)
0040c2cb T CPlayerInfo::DeletePlayerSkin()
0040b079 T CPlayerInfo::FindObjectToSteal(CPed*)
0040b9a5 T CPlayerInfo::EvaluateCarPosition(CEntity*, CPed*, float, float*, CVehicle**)
0040b041 T CPlayerInfo::GivePlayerParachute()
0040b98d T CPlayerInfo::IsPlayerInRemoteMode()
004090b1 T CPlayerInfo::SetLastTargetVehicle(CVehicle*)
00408fbd T CPlayerInfo::StreamParachuteWeapon(bool)
0040bed5 T CPlayerInfo::IsRestartingAfterDeath()
0040bee1 T CPlayerInfo::IsRestartingAfterArrest()
0040ade1 T CPlayerInfo::WorkOutEnergyFromHunger()
0040bfc9 T CPlayerInfo::CancelPlayerEnteringCars(CVehicle*)
0040b325 T CPlayerInfo::FindClosestCarSectorList(CPtrList&, CPed*, float, float, float, float, float*, CVehicle**)
0040bf81 T CPlayerInfo::PlayerFailedCriticalMission()
0040beef T CPlayerInfo::IsRestartingAfterMissionFailed()
0048ded3 T CPlayerInfo::Load()
0048dde9 T CPlayerInfo::Save()
00408ea1 T CPlayerInfo::Clear()
0040bae1 T CPlayerInfo::GetPos()
004090dd T CPlayerInfo::Process(int)
0040bab9 T CPlayerInfo::GetSpeed()
0040c2e7 T CPlayerInfo::AddHealth(int)
00408de1 T CPlayerInfo::CPlayerInfo()
00408de1 T CPlayerInfo::CPlayerInfo()
005b1189 T CPlayerSkin::Initialise()
005b11d1 T CPlayerSkin::GetSkinTexture(char const*)
005b126b T CPlayerSkin::EndFrontendSkinEdit()
005b1269 T CPlayerSkin::BeginFrontendSkinEdit()
005b126d T CPlayerSkin::RenderFrontendSkinEdit()
005b11c1 T CPlayerSkin::Shutdown()
00a46e64 B CPlayerSkin::m_txdSlot
00327215 T CPointRoute::operator delete(void*)
003271b1 T CPointRoute::operator new(unsigned int)
004cc235 T CPopulation::Initialise()
009f3888 B CPopulation::ms_nNumCop
004d0739 T CPopulation::AddPedInCar(CVehicle*, bool, int, int, bool, bool)
004cf15d T CPopulation::IsSkateable(CVector const&)
004cf1e1 T CPopulation::IsSunbather(int)
004ce241 T CPopulation::ManageDummy(CDummy*, CVector const&)
004d152d T CPopulation::PickGangCar(int)
004cedc9 T CPopulation::PlaceCouple(ePedType, int, ePedType, int, CVector)
009f4262 B CPopulation::m_CarGroups
009f3908 B CPopulation::m_PedGroups
009f3890 B CPopulation::ms_nNumGang
004cdf05 T CPopulation::ManageObject(CObject*, CVector const&)
00475019 T CPopulation::LoadCarGroups()
00474e51 T CPopulation::LoadPedGroups()
009f4b8a B CPopulation::m_LoadedBoats
009f38d1 B CPopulation::m_bIsHospital
009f38c8 B CPopulation::ms_nTotalPeds
004d0cc9 T CPopulation::UpdatePedCount(CPed*, unsigned char)
009f3880 B CPopulation::ms_nNumCivMale
009f38b8 B CPopulation::ms_nNumDealers
004ccb09 T CPopulation::AddToPopulation(float, float, float, float)
004d0245 T CPopulation::IsSecurityGuard(ePedType)
009f3904 B CPopulation::CurrentWorldZone
004cc5ed T CPopulation::ManagePopulation()
009f3900 B CPopulation::NumMiamiViceCops
004cedad T CPopulation::PlaceGangMembers(ePedType, int, CVector const&)
004d1161 T CPopulation::PopulateInterior(int, CVector)
009f38fd B CPopulation::bInPoliceStation
009f4934 B CPopulation::m_LoadedGangCars
009f3884 B CPopulation::ms_nNumCivFemale
009f388c B CPopulation::ms_nNumEmergency
009f38c0 B CPopulation::ms_nTotalCivPeds
004d13b5 T CPopulation::AddPedAtAttractor(int, C2dEffect*, CVector, CEntity*, int)
004d0e45 T CPopulation::CanJeerAtStripper(int)
009f38f0 B CPopulation::RegenerationFront
009f48f0 B CPopulation::m_nNumCarsInGroup
009f487e B CPopulation::m_nNumPedsInGroup
009f38c4 B CPopulation::ms_nTotalGangPeds
004d0e23 T CPopulation::DealWithZoneChange(eLevelName, eLevelName, bool)
006afa90 D CPopulation::m_TranslationArray
004d0e21 T CPopulation::AddExistingPedInCar(CPed*, CVehicle*)
004ce2f9 T CPopulation::ConvertToRealObject(CDummyObject*)
0046ae81 T CPopulation::FindPedRaceFromName(char*)
004ce6bd T CPopulation::ManageAllPopulation()
009f38d8 B CPopulation::RegenerationPoint_a
009f38e4 B CPopulation::RegenerationPoint_b
004ce959 T CPopulation::RemoveAllRandomPeds()
004d0731 T CPopulation::ChooseGangOccupation(int)
004ce159 T CPopulation::ConvertToDummyObject(CObject*)
004d0249 T CPopulation::CreateWaitingCoppers(CVector, float)
006afa88 D CPopulation::MaxNumberOfPedsInUse
006afa80 D CPopulation::PedDensityMultiplier
004d16e5 T CPopulation::PickRiotRoadBlockCar()
009f38cc B CPopulation::ms_nTotalMissionPeds
004cf9d1 T CPopulation::ArePedStatsCompatible(int, int)
004d0e29 T CPopulation::CanSolicitPlayerInCar(int)
004cdec9 T CPopulation::FindDummyDistForModel(int)
004cea21 T CPopulation::TestSafeForRealObject(CDummyObject*)
004cf7b5 T CPopulation::AddDeadPedInFrontOfCar(CVector const&, CVehicle*)
004d0e25 T CPopulation::CanSolicitPlayerOnFoot(int)
004cec61 T CPopulation::TestRoomForDummyObject(CObject*)
009f38fc B CPopulation::bZoneChangeHasHappened
006afa84 D CPopulation::m_AllRandomPedsThisType
009f4b2e B CPopulation::m_AppropriateLoadedCars
009f38d4 B CPopulation::m_bDontCreateRandomCops
009f38d5 B CPopulation::m_bMoreCarsAndFewerPeds
004cfe3d T CPopulation::ChooseCivilianOccupation(bool, bool, int, int, int, bool, bool, bool, char*)
004cdc01 T CPopulation::GeneratePedsAtAttractors(CVector, float, float, float, float, int, int)
009f38d0 B CPopulation::m_CountDownToPedsAtStart
004cecc5 T CPopulation::ChoosePolicePedOccupation()
004d17f9 T CPopulation::FindCarMultiplierMotorway()
004ce92d T CPopulation::FindPedMultiplierMotorway()
004cc98d T CPopulation::GeneratePedsAtStartOfGame()
006afa8c D CPopulation::NumberOfPedsInUseInterior
004cdb75 T CPopulation::PedCreationDistMultiplier()
009f4b5c B CPopulation::m_InAppropriateLoadedCars
009f38bc B CPopulation::ms_nTotalCarPassengerPeds
004d1381 T CPopulation::IsCorrectTimeOfDayForEffect(C2dEffect const*)
004cfe21 T CPopulation::PedMICanBeCreatedInInterior(int)
004cc7e5 T CPopulation::RemovePedsIfThePoolGetsFull()
004cfa91 T CPopulation::PedMICanBeCreatedAtAttractor(int)
004cf205 T CPopulation::FindDistanceToNearestPedOfType(ePedType, CVector)
004d0fed T CPopulation::LoadSpecificDriverModelsForCar(int)
004d0e61 T CPopulation::PlaceMallPedsAsStationaryGroup(CVector const&, int)
009f38d2 B CPopulation::m_bDontCreateRandomGangMembers
009f38d3 B CPopulation::m_bOnlyCreateRandomGangMembers
004cecc9 T CPopulation::ChooseCivilianCoupleOccupations(int&, int&)
004ce9bd T CPopulation::ConvertAllObjectsToDummyObjects()
004ce935 T CPopulation::FindPedDensityMultiplierCullZone()
004cfab1 T CPopulation::PedMICanBeCreatedAtThisAttractor(int, char*)
004d107d T CPopulation::RemoveSpecificDriverModelsForCar(int)
004d0091 T CPopulation::ChooseCivilianOccupationForVehicle(bool, CVehicle*)
004cc989 T CPopulation::MoveCarsAndPedsOutOfAbandonedZones()
004ce879 T CPopulation::FindNumberOfPedsWeCanPlaceOnBenches()
004d0c11 T CPopulation::FindSpecificDriverModelForCar_ToUse(int)
004cf2dd T CPopulation::AddPed(ePedType, unsigned int, CVector const&, bool)
004d0059 T CPopulation::IsMale(int)
004cc381 T CPopulation::Update(bool)
004d0075 T CPopulation::IsFemale(int)
004cc37d T CPopulation::Shutdown()
004ce3dd T CPopulation::ManagePed(CPed*, CVector const&)
004ce6a1 T CPopulation::RemovePed(CPed*)
004572cd T CProjectile::CProjectile(int)
004572cd T CProjectile::CProjectile(int)
00457341 T CProjectile::~CProjectile()
0045733d T CProjectile::~CProjectile()
0045733d T CProjectile::~CProjectile()
00450287 T CQuaternion::Set(RwV3d*, float)
00450001 T CQuaternion::Set(RwMatrixTag const&)
004501b1 T CQuaternion::Set(float, float, float)
0045074d T CQuaternion::Slerp(CQuaternion const&, CQuaternion const&, float)
00450635 T CQuaternion::Slerp(CQuaternion const&, CQuaternion const&, float, float, float)
00450527 T CQuaternion::Multiply(CQuaternion const&, CQuaternion const&)
0095ad48 B CReferences::pEmptyList
0040eb89 T CReferences::RemoveReferencesToPlayer()
0040ec8d T CReferences::PruneAllReferencesInWorld()
0040e819 T CReferences::Init()
0095ad4c B CReferences::aRefs
0040e85d T CReferences::ListSize(CReference*)
007b6f4c B CRoadBlocks::NumRoadBlocks
007b6f50 B CRoadBlocks::RoadBlockNodes
007b75ac B CRoadBlocks::aScriptRoadBlocks
00325081 T CRoadBlocks::GenerateRoadBlocks()
00325985 T CRoadBlocks::GetRoadBlockNodeInfo(CNodeAddress, float&, CVector&)
00325035 T CRoadBlocks::ClearScriptRoadBlocks()
00326fa9 T CRoadBlocks::RegisterScriptRoadBlock(CVector, CVector, bool)
007b776c B CRoadBlocks::bGenerateDynamicRoadBlocks
003267a1 T CRoadBlocks::GenerateRoadBlockPedsForCar(CVehicle*, int, ePedType)
00326ee1 T CRoadBlocks::ClearSpaceForRoadBlockObject(CVector, CVector)
00325ad9 T CRoadBlocks::CreateRoadBlockBetween2Points(CVector, CVector, unsigned int)
00324f71 T CRoadBlocks::Init()
007b7464 B CRoadBlocks::InOrOut
0048af35 T CSaveGarage::CopyGarageIntoSaveGarage(CGarage*)
0048afa5 T CSaveGarage::CopyGarageOutOfSaveGarage(CGarage*)
005c2e7d T CShinyTexts::RegisterOne(CVector, CVector, CVector, CVector, float, float, float, float, float, float, float, float, unsigned char, unsigned char, unsigned char, unsigned char, float)
00a56e58 B CShinyTexts::aShinyTexts
00a56e54 B CShinyTexts::NumShinyTexts
005c2e01 T CShinyTexts::RenderOutGeometryBuffer()
005bfb51 T CShinyTexts::Init()
005c0ef9 T CShinyTexts::Render()
00362095 T CTagManager::ResetAlpha(CEntity*)
008204c4 B CTagManager::ms_numTags
00820014 B CTagManager::ms_tagDesc
00361e41 T CTagManager::FindTagDesc(CEntity*)
0036235d T CTagManager::SetupAtomic(RpAtomic*)
008204c8 B CTagManager::ms_numTagged
003622dd T CTagManager::GetNearestTag(CVector const&)
00362375 T CTagManager::RenderTagForPC(RpAtomic*)
003620cd T CTagManager::SetAlphaInArea(CRect&, unsigned char)
00361ff1 T CTagManager::UpdateNumTagged()
00361dc5 T CTagManager::ShutdownForRestart()
0036229d T CTagManager::GetPercentageTagged()
003621c5 T CTagManager::GetPercentageTaggedInArea(CRect&)
00361da9 T CTagManager::Init()
0048e3a9 T CTagManager::Load()
0048e345 T CTagManager::Save()
00361e75 T CTagManager::IsTag(CEntity const*)
00361e19 T CTagManager::AddTag(CEntity*)
00362045 T CTagManager::GetAlpha(CEntity*)
00362089 T CTagManager::GetAlpha(RpAtomic*)
00361ec5 T CTagManager::SetAlpha(CEntity*, unsigned char)
00361fed T CTagManager::SetAlpha(RpAtomic*, unsigned char)
00361dfd T CTagManager::GetTagPos(int)
0030779d W CTaskSimple::SetPedPosition(CPed*)
004d6af9 T CTaskSimple::CTaskSimple()
004d6b0d T CTaskSimple::~CTaskSimple()
004d69ed T CTaskSimple::~CTaskSimple()
004d69ed T CTaskSimple::~CTaskSimple()
007bd794 B CTheScripts::ScriptSpace
00819d88 B CTheScripts::bDisplayHud
0034ad95 T CTheScripts::IsPedStopped(CPed*)
008176d6 B CTheScripts::MessageWidth
007b778c B CTheScripts::ScriptsArray
0068672c D CTheScripts::m_nMenuIndex
007bd790 B CTheScripts::pIdleScripts
0034aefd T CTheScripts::DrawDebugCube(float, float, float, float, float, float)
008176d4 B CTheScripts::MessageCentre
0034dc39 T CTheScripts::RemoveThisPed(CPed*)
00819d83 B CTheScripts::RiotIntensity
008194dc B CTheScripts::ScriptSprites
0034dd0d T CTheScripts::CleanUpThisPed(CPed*)
00815d50 B CTheScripts::IntroTextLines
00819d68 B CTheScripts::MainScriptSize
008113cc B CTheScripts::MissionCleanUp
0081308c B CTheScripts::OnAMissionFlag
003299e1 T CTheScripts::PrintListSizes()
00819d85 B CTheScripts::RadarZoomValue
00819a38 B CTheScripts::ScriptsUpdated
0032ad1d T CTheScripts::StartNewScript(unsigned char*)
0032ade1 T CTheScripts::StartNewScript(unsigned char*, unsigned short)
00811628 B CTheScripts::UpsideDownCars
00819d98 B CTheScripts::bDrawCrossHair
007bd78c B CTheScripts::pActiveScripts
0034a589 T CTheScripts::AddScriptSphere(unsigned int, CVector, float)
0034aeff T CTheScripts::DrawDebugSquare(float, float, float, float)
008176d8 B CTheScripts::IntroRectangles
00813094 B CTheScripts::LastRandomPedId
0032b429 T CTheScripts::StartTestScript()
00812194 B CTheScripts::StreamedScripts
0081a6b0 B CTheScripts::SwitchJumpTable
008176d2 B CTheScripts::UseTextCommands
00813098 B CTheScripts::UsedObjectArray
00819a3a B CTheScripts::CommandsExecuted
0034bd15 T CTheScripts::IsVehicleStopped(CVehicle*)
00819a48 B CTheScripts::MultiScriptArray
00811898 B CTheScripts::ScriptsForBrains
008196dc B CTheScripts::BuildingSwapArray
0081a014 B CTheScripts::CardStackPosition
0034df95 T CTheScripts::CleanUpThisObject(CObject*)
0034a7ed T CTheScripts::DrawScriptSpheres()
0034d885 T CTheScripts::ScriptDebugLine3D(float, float, float, float, float, float, unsigned int, unsigned int)
00815bd0 B CTheScripts::ScriptSphereArray
00819a40 B CTheScripts::StoreVehicleIndex
0034a86d T CTheScripts::UndoBuildingSwaps()
00819d95 B CTheScripts::bEnableCraneLower
00819d94 B CTheScripts::bEnableCraneRaise
0032abed T CTheScripts::CheckScriptVersion(unsigned int, char*)
0034df4d T CTheScripts::CleanUpThisVehicle(CVehicle*)
0032e951 T CTheScripts::CurrentMissionName()
00819d79 B CTheScripts::FailCurrentMission
0032b4e9 T CTheScripts::IsPlayerOnAMission()
0034a5e5 T CTheScripts::RemoveScriptSphere(int)
0033507d T CTheScripts::UseSwitchJumpTable(int*)
00819d84 B CTheScripts::bPlayerIsOffTheMap
00819da1 B CTheScripts::bScriptHasFadedOut
00358979 T CTheScripts::AddScriptCheckpoint(float, float, float, float, float, float, float, int)
0034c58d T CTheScripts::DrawDebugAngledCube(float, float, float, float, float, float, float, float, float, float)
00819d9c B CTheScripts::ForceRandomCarModel
00815bcc B CTheScripts::NumberOfUsedObjects
0034d889 T CTheScripts::ScriptDebugCircle2D(float, float, float, float, int)
0081a6a4 B CTheScripts::SwitchDefaultExists
0034e0b9 T CTheScripts::UpdateObjectIndices()
00819d96 B CTheScripts::bEnableCraneRelease
00819d80 B CTheScripts::bMiniGameInProgress
00357b49 T CTheScripts::AddScriptSearchLight(float, float, float, CEntity*, float, float, float, float, float)
00335051 T CTheScripts::AddToSwitchJumpTable(int, int)
0081a6a8 B CTheScripts::SwitchDefaultAddress
00357af1 T CTheScripts::AddScriptEffectSystem(FxSystem_c*)
0034c58f T CTheScripts::DrawDebugAngledSquare(float, float, float, float, float, float, float, float)
00813090 B CTheScripts::LastMissionPassedTime
003587b1 T CTheScripts::RenderAllSearchLights()
0081a4fc B CTheScripts::ScriptCheckpointArray
00811e10 B CTheScripts::ScriptResourceManager
00819a3c B CTheScripts::StoreVehicleWasRandom
008176d3 B CTheScripts::bUseMessageFormatting
0034a2f1 T CTheScripts::AddToBuildingSwapArray(CBuilding*, int, int)
0034ae55 T CTheScripts::HighlightImportantArea(unsigned int, float, float, float, float, float)
00819d70 B CTheScripts::NumberOfMissionScripts
003582b9 T CTheScripts::ProcessAllSearchLights()
00358a71 T CTheScripts::RemoveScriptCheckpoint(int)
00819d7c B CTheScripts::ScriptPickupCycleIndex
0081a118 B CTheScripts::ScriptSearchLightArray
00819a44 B CTheScripts::bUsingAMultiScriptFile
00819d87 B CTheScripts::HideAllFrontEndMapBlips
003580fd T CTheScripts::MoveSearchLightToEntity(int, CEntity*, float)
00357c59 T CTheScripts::RemoveScriptSearchLight(int)
0081a018 B CTheScripts::ScriptEffectSystemArray
0081a59e B CTheScripts::ScriptSequenceTaskArray
00819858 B CTheScripts::SuppressedVehicleModels
00819808 B CTheScripts::InvisibilitySettingArray
00357d4d T CTheScripts::IsPointWithinSearchLight(CVector&, int)
00819d6c B CTheScripts::LargestMissionScriptSize
00819d86 B CTheScripts::RadarShowBlipOnAllLevels
00357b21 T CTheScripts::RemoveScriptEffectSystem(int)
00819948 B CTheScripts::ScriptAttachedAnimGroups
008199e8 B CTheScripts::ScriptConnectLodsObjects
00819da3 B CTheScripts::bDrawSubtitlesBeforeFade
00819d82 B CTheScripts::bPlayerHasMetDebbieHarry
0034a3d1 T CTheScripts::GetActualScriptThingIndex(int, unsigned char)
0032aec5 T CTheScripts::GetScriptIndexFromPointer(CRunningScript*)
0034a639 T CTheScripts::GetUniqueScriptThingIndex(int, unsigned char)
0032f065 T CTheScripts::HasCarModelBeenSuppressed(int)
00357e2d T CTheScripts::IsEntityWithinSearchLight(int, CEntity*)
0081a59c B CTheScripts::NumberOfScriptCheckpoints
0034dff1 T CTheScripts::ReadObjectNamesFromScript()
0034da31 T CTheScripts::RenderTheScriptDebugLines()
00335721 T CTheScripts::ScriptConnectLodsFunction(int, int)
00348555 T CTheScripts::AddToInvisibilitySwapArray(CEntity*, bool)
0032e94d T CTheScripts::CheckStreamedScriptVersion(RwStream*, char*)
0034da35 T CTheScripts::ClearSpaceForMissionEntity(CVector const&, CEntity*)
003391b9 T CTheScripts::InitialiseSpecialAnimGroup(unsigned short)
0081a4f8 B CTheScripts::NumberOfScriptSearchLights
00819da2 B CTheScripts::bDrawOddJobTitleBeforeFade
0032eff1 T CTheScripts::ClearAllSuppressedCarModels()
0033555d T CTheScripts::InitialiseConnectLodObjects(unsigned short)
0032f009 T CTheScripts::AddToSuppressedCarModelArray(int)
0034a695 T CTheScripts::GetNewUniqueScriptThingIndex(int, unsigned char)
0034c3f9 T CTheScripts::HighlightImportantAngledArea(unsigned int, float, float, float, float, float, float, float, float, float)
00357f25 T CTheScripts::IsEntityWithinAnySearchLight(CEntity*, int*)
0081a6ac B CTheScripts::NumberOfEntriesInSwitchTable
008198f8 B CTheScripts::VehicleModelsBlockedByScript
00812bdc B CTheScripts::EntitiesWaitingForScriptBrain
00358161 T CTheScripts::MoveSearchLightToPointAndStop(int, float, float, float, float)
003282d5 T CTheScripts::RemoveScriptTextureDictionary()
0081a6a0 B CTheScripts::ValueToCheckInSwitchStatement
00819d78 B CTheScripts::bAlreadyRunningAMissionScript
00335591 T CTheScripts::AddToListOfConnectedLodObjects(CObject*, CObject*)
00329ca1 T CTheScripts::DrawScriptSpritesAndRectangles(unsigned char)
00335579 T CTheScripts::InitialiseAllConnectLodObjects()
0034a8b9 T CTheScripts::UndoEntityInvisibilitySettings()
0032f971 T CTheScripts::AddToWaitingForScriptBrainArray(CEntity*, short)
008103cc B CTheScripts::LocalVariablesForCurrentMission
0035803d T CTheScripts::MoveSearchLightBetweenTwoPoints(int, float, float, float, float, float, float, float)
00819d72 B CTheScripts::NumberOfExclusiveMissionScripts
008176d0 B CTheScripts::NumberOfIntroTextLinesThisFrame
00335005 T CTheScripts::ReinitialiseSwitchStatementData()
00819da0 B CTheScripts::bAddNextMessageToPreviousBriefs
00819d81 B CTheScripts::bDisplayNonMiniGameHelpMessages
008194d8 B CTheScripts::NumberOfIntroRectanglesThisFrame
003393c5 T CTheScripts::ScriptAttachAnimGroupToCharModel(int, char*)
0032f139 T CTheScripts::AddToVehicleModelsBlockedByScript(int)
0048cd3d T CTheScripts::DoScriptSetupAfterPoolsHaveLoaded()
0032fe19 T CTheScripts::ProcessWaitingForScriptBrainArray()
0032f08d T CTheScripts::RemoveFromSuppressedCarModelArray(int)
0032f20d T CTheScripts::HasVehicleModelBeenBlockedByScript(int)
00819d8c B CTheScripts::fCameraHeadingWhenPlayerIsAttached
0081a69e B CTheScripts::NumberOfEntriesStillToReadForSwitch
003581d1 T CTheScripts::AttachSearchlightToSearchlightObject(int, CObject*, CObject*, CObject*, float, float, float)
0032f121 T CTheScripts::ClearAllVehicleModelsBlockedByScript()
0034e111 T CTheScripts::ReadMultiScriptFileOffsetsFromScript()
0032fb21 T CTheScripts::RemoveFromWaitingForScriptBrainArray(CEntity*, short)
0032f355 T CTheScripts::RemoveFromVehicleModelsBlockedByScript(int)
00819d90 B CTheScripts::fCameraHeadingStepWhenPlayerIsAttached
0032abc1 T CTheScripts::WipeLocalVariableMemoryForMissionScript()
00819d74 B CTheScripts::LargestNumberOfMissionScriptLocalVariables
003391d9 T CTheScripts::InitialiseSpecialAnimGroupsAttachedToCharModels()
00339219 T CTheScripts::AddToListOfSpecialAnimGroupsAttachedToCharModels(int, char*)
00329f01 T CTheScripts::Init()
0048c409 T CTheScripts::Load()
0048b955 T CTheScripts::Save()
0060fe26 R CTheScripts::DbgFlag
0032aed9 T CTheScripts::Process()
00819da4 B CTheScripts::CardStack
0048aa75 T CTheScripts::LoadAfter()
00489d99 T CTheScripts::SaveAfter()
00811658 B CTheScripts::StuckCars
005970d1 T CWaterLevel::RenderWater()
00a1696c B CWaterLevel::m_aVertices
006b1570 D CWaterLevel::m_bWaterFog
00a1c108 B CWaterLevel::ms_WaterFog
00a15d74 B CWaterLevel::m_aTriangles
0059bec9 T CWaterLevel::GetWaterDepth(CVector const&, float*, float*, float*)
00595891 T CWaterLevel::GetWaterLevel(float, float, float, float*, bool, CVector*)
0059a001 T CWaterLevel::SetUpWaterFog(int, int, int, int)
00a1c100 B CWaterLevel::m_WaterFogCol
0059c3b5 T CWaterLevel::CreateBeachToy(CVector const&, eBeachToy)
0059bccd T CWaterLevel::GetGroundLevel(CVector const&, float*, ColData*, float)
00596541 T CWaterLevel::PreRenderWater()
0059bf85 T CWaterLevel::RenderWaterFog()
00597c01 T CWaterLevel::SetCameraRange()
00a1c0e8 B CWaterLevel::m_CurrentFlowX
00a1c0ec B CWaterLevel::m_CurrentFlowY
005947cd T CWaterLevel::AddWaveToResult(float, float, float*, float, float, CVector*)
00595879 T CWaterLevel::AddWaveToResult(int, int, float*, float, float)
005982f1 T CWaterLevel::RenderBoatWakes()
0059396d T CWaterLevel::AddWaterLevelQuad(int, int, CRenPar, int, int, CRenPar, int, int, CRenPar, int, int, CRenPar, unsigned int)
005940b1 T CWaterLevel::FixVertexOnToLine(CWaterVertex*, CWaterVertex*, CWaterVertex*, float*)
0059bd51 T CWaterLevel::GetGroundLevel_WS(CVector const&, float*, ColData*, float)
0059b6b1 T CWaterLevel::RenderWakeSegment(CVector2D&, CVector2D&, CVector2D&, CVector2D&, float&, float&, float&, float&, float&)
00596699 T CWaterLevel::ScanThroughBlocks()
006b157c D CWaterLevel::m_WaterFogDensity
006b1571 D CWaterLevel::m_bWaterFogScript
006b1580 D CWaterLevel::m_fWaterFogHeight
00a15d70 B CWaterLevel::m_nNumOfWaterQuads
00a1c0fc B CWaterLevel::m_nWaterTimeOffset
005946b1 T CWaterLevel::AddWaterLevelVertex(int, int, CRenPar)
00596cfd T CWaterLevel::RenderSeaBedSegment(int, int, float, float, float, float)
00597d65 T CWaterLevel::RenderWaterTriangle(int, int, CRenPar, int, int, CRenPar, int, int, CRenPar)
00a1c104 B CWaterLevel::m_WaterFogInsideCol
00595901 T CWaterLevel::GetWaterLevelNoWaves(float, float, float, float*, float*, float*)
00596cb9 T CWaterLevel::HandleBeachToysStuff()
0059c3b1 T CWaterLevel::RenderShipsOnHorizon()
00598039 T CWaterLevel::RenderWaterRectangle(int, int, int, int, CRenPar, CRenPar, CRenPar, CRenPar)
005960f1 T CWaterLevel::TestLineAgainstWater(CVector, CVector, CVector*)
00593329 T CWaterLevel::WaterLevelInitialise()
00593bd5 T CWaterLevel::AddWaterLevelTriangle(int, int, CRenPar, int, int, CRenPar, int, int, CRenPar, unsigned int)
00a1c0f0 B CWaterLevel::m_CurrentDesiredFlowX
00a1c0f4 B CWaterLevel::m_CurrentDesiredFlowY
00a16968 B CWaterLevel::m_nNumOfWaterVertices
00a1c0f8 B CWaterLevel::m_nWaterConfiguration
0059b6ab T CWaterLevel::RenderTransparentWater()
006b1578 D CWaterLevel::m_WaterFogHourOfDayEnd
00a15d6c B CWaterLevel::m_nNumOfWaterTriangles
00599709 T CWaterLevel::RenderFlatWaterTriangle(int, int, CRenPar, int, int, CRenPar, int, int, CRenPar)
00595ac5 T CWaterLevel::TestQuadToGetWaterLevel(CWaterQuad*, float, float, float, float*, float*, float*)
00a1ba50 B CWaterLevel::m_QuadsAndTrianglesList
0059bc8d T CWaterLevel::ChangeWaterConfiguration(int)
0059a8e5 T CWaterLevel::RenderFlatWaterRectangle(int, int, int, int, CRenPar, CRenPar, CRenPar, CRenPar)
006b1574 D CWaterLevel::m_WaterFogHourOfDayStart
00593d09 T CWaterLevel::FillQuadsAndTrianglesList()
0059437d T CWaterLevel::AddToQuadsAndTrianglesList(int, int, int, unsigned int)
005967e1 T CWaterLevel::FindNearestWaterAndItsFlow()
00597cf1 T CWaterLevel::RenderAndEmptyRenderBuffer()
006b1584 D CWaterLevel::m_fWaterFogInsideFadeSpeed
00598739 T CWaterLevel::CalculateWavesForCoordinate(int, int, float, float, float*, float*, float*, CVector*)
00596e3d T CWaterLevel::RenderDetailedSeaBedSegment(int, int, float, float, float, float)
00595dd5 T CWaterLevel::TestTriangleToGetWaterLevel(CWaterTriangle*, float, float, float, float*, float*, float*)
00598c71 T CWaterLevel::SplitWaterTriangleAlongXLine(int, int, int, CRenPar, int, int, CRenPar, int, int, CRenPar)
0059b085 T CWaterLevel::SplitWaterTriangleAlongYLine(int, int, int, CRenPar, int, int, CRenPar, int, int, CRenPar)
0059be3d T CWaterLevel::IsLocationOutOfWorldBounds_WS(CVector const&, int)
00594429 T CWaterLevel::MarkQuadsAndPolysToBeRendered(int, int, bool)
00598b0d T CWaterLevel::RenderHighDetailWaterTriangle(int, int, CRenPar, int, int, CRenPar, int, int, CRenPar)
00599d39 T CWaterLevel::SplitWaterRectangleAlongXLine(int, int, int, int, int, CRenPar, CRenPar, CRenPar, CRenPar)
00599e9d T CWaterLevel::SplitWaterRectangleAlongYLine(int, int, int, int, int, CRenPar, CRenPar, CRenPar, CRenPar)
00599b49 T CWaterLevel::RenderHighDetailWaterRectangle(int, int, int, int, CRenPar, CRenPar, CRenPar, CRenPar)
00a1b930 B CWaterLevel::m_QuadsAndTrianglesInEachBlock
00595651 T CWaterLevel::CalculateWavesOnlyForCoordinate(int, int, float, float, float*)
005997bd T CWaterLevel::RenderFlatWaterTriangle_OneLayer(int, int, CRenPar, int, int, CRenPar, int, int, CRenPar, int)
0059acfd T CWaterLevel::RenderFlatWaterRectangle_OneLayer(int, int, int, int, CRenPar, CRenPar, CRenPar, CRenPar, int)
00a1bfd0 B CWaterLevel::m_BlocksToBeRenderedOutsideWorldX
00a1c05c B CWaterLevel::m_BlocksToBeRenderedOutsideWorldY
00a1bfc8 B CWaterLevel::m_ElementsOnQuadsAndTrianglesList
00a1bfcc B CWaterLevel::m_NumBlocksOutsideWorldToBeRendered
00598fad T CWaterLevel::RenderHighDetailWaterTriangle_OneLayer(int, int, CRenPar, int, int, CRenPar, int, int, CRenPar, int, int, int, int)
0059a175 T CWaterLevel::RenderHighDetailWaterRectangle_OneLayer(int, int, int, int, CRenPar, CRenPar, CRenPar, CRenPar, int, int, int, int, int)
005986ad T CWaterLevel::BlockHit(int, int)
00594645 T CWaterLevel::Shutdown()
00a15da4 B CWaterLevel::m_aQuads
0059bcb1 T CWaterLevel::SyncWater()
004746b9 T CWeaponInfo::Initialise()
005e42e9 T CWeaponInfo::GetWeaponInfo(eWeaponType, signed char)
005e4335 T CWeaponInfo::FindWeaponType(char const*)
00474751 T CWeaponInfo::LoadWeaponData()
006b2c98 D CWeaponInfo::ms_aWeaponNames
005e4319 T CWeaponInfo::GetSkillStatIndex(eWeaponType)
00474db9 T CWeaponInfo::FindWeaponFireType(char const*)
005e4369 T CWeaponInfo::GetTargetHeadRange()
005e4391 T CWeaponInfo::GetWeaponReloadTime()
00a88588 B CWeaponInfo::ms_aWeaponAimOffsets
005e42e5 T CWeaponInfo::Shutdown()
002bab1d T CWidgetList::IsReleased(CVector2D*)
002b9bfd T CWidgetList::Alphebetize(char const**, int)
002ba861 T CWidgetList::IsSwipedLeft()
002ba89b T CWidgetList::IsSwipedRight()
002bab9b W CWidgetList::GetWidgetValue()
002ba741 T CWidgetList::OnInitialTouch()
002babdf W CWidgetList::SetWidgetValue(float)
002ba905 T CWidgetList::AlphabetizeSort(void const*, void const*)
002ba6b9 T CWidgetList::GetAlphaAtIndex(int)
002babd3 W CWidgetList::SetEquippedItem(int)
002ba91d T CWidgetList::ShrinkTextToFit(float)
002ba8d5 T CWidgetList::GetSelectedEntry(char*)
002ba281 T CWidgetList::Draw()
002b9c7d T CWidgetList::Update()
002ba9e1 T CWidgetList::AddItem(char const*, char const*)
002babb1 W CWidgetList::IsSwiped()
002bab33 T CWidgetList::Visualize()
002b9701 T CWidgetList::CWidgetList(char const*, WidgetPosition const&, char const**, int, bool, bool, bool)
002bab99 W CWidgetList::~CWidgetList()
002bab65 W CWidgetList::~CWidgetList()
002be9d5 T CWidgetPool::SetWidgetInfo2(int, int, int, int, char*, char*)
002be581 T CWidgetPool::Draw()
002be56d T CWidgetPool::Update()
002bea6d W CWidgetPool::GetName()
002be525 T CWidgetPool::CWidgetPool(char const*, WidgetPosition const&)
002be525 T CWidgetPool::CWidgetPool(char const*, WidgetPosition const&)
002bea5d W CWidgetPool::~CWidgetPool()
0036955d T FxEmitter_c::AddParticle(RwMatrixTag*, RwV3d*, float, FxPrtMult_c*, float, float, unsigned char)
00368cf1 T FxEmitter_c::AddParticle(RwV3d*, RwV3d*, float, FxPrtMult_c*, float, float, unsigned char)
00368e75 T FxEmitter_c::CreateParticle(EmissionInfo_t*, RwMatrixTag*, RwV3d*, float, FxPrtMult_c*, float, unsigned char)
00368a49 T FxEmitter_c::CreateParticles(float, float)
00368a25 T FxEmitter_c::Init(FxPrimBP_c*, FxSystem_c*)
00368ce9 T FxEmitter_c::Reset()
00368a31 T FxEmitter_c::Update(float, float)
00369715 W FxEmitter_c::~FxEmitter_c()
0036b79d T FxInfoDir_c::Load(unsigned int, int)
0036b7a5 T FxInfoDir_c::GetValue(float, float, float, float, unsigned char, void*)
0036b75d T FxInfoDir_c::FxInfoDir_c()
0036b75d T FxInfoDir_c::FxInfoDir_c()
0036c2f1 W FxInfoDir_c::~FxInfoDir_c()
0036c2cd W FxInfoDir_c::~FxInfoDir_c()
0036da9d T FxManager_c::GetParticle(signed char)
0036dab1 T FxManager_c::SetWindData(RwV3d*, float*)
0036d99d T FxManager_c::ShouldCreate(FxSystemBP_c*, RwMatrixTag*, RwMatrixTag*, unsigned char)
0046d98d T FxManager_c::LoadFxProject(char*)
0036d6f1 T FxManager_c::CreateFxSystem(FxSystemBP_c*, RwMatrixTag*, RwMatrixTag*, unsigned char)
0036d875 T FxManager_c::CreateFxSystem(FxSystemBP_c*, RwV3d*, RwMatrixTag*, unsigned char)
0036d675 T FxManager_c::CreateFxSystem(char*, RwMatrixTag*, RwMatrixTag*, unsigned char)
0036d7f9 T FxManager_c::CreateFxSystem(char*, RwV3d*, RwMatrixTag*, unsigned char)
0036d799 T FxManager_c::FindFxSystemBP(char*)
0036dab7 T FxManager_c::FreeUpParticle()
0036d205 T FxManager_c::GetFrustumInfo()
0046daf1 T FxManager_c::LoadFxSystemBP(char*, unsigned int)
0036da97 T FxManager_c::ReturnParticle(FxEmitterPrt_c*)
0036d209 T FxManager_c::CalcFrustumInfo(RwCamera*)
0036d4d1 T FxManager_c::DestroyFxSystem(FxSystem_c*)
0036d5ed T FxManager_c::UnloadFxProject()
0036da69 T FxManager_c::FxRwMatrixCreate()
0036da7f T FxManager_c::FxRwMatrixDestroy(RwMatrixTag*)
0036d1e7 T FxManager_c::DestroyAllFxSystems()
0036d16b T FxManager_c::Exit()
0036d0b7 T FxManager_c::Init()
0036d559 T FxManager_c::Render(RwCamera*, unsigned char)
0036d349 T FxManager_c::Update(RwCamera*, float)
0036d05d T FxManager_c::FxManager_c()
0036d05d T FxManager_c::FxManager_c()
0036d08f T FxManager_c::~FxManager_c()
0036d08f T FxManager_c::~FxManager_c()
0036f3bb T FxPrtMult_c::SetUp(float, float, float, float, float, float, float)
0036f395 T FxPrtMult_c::FxPrtMult_c(float, float, float, float, float, float, float)
0036f37f T FxPrtMult_c::FxPrtMult_c()
0036f395 T FxPrtMult_c::FxPrtMult_c(float, float, float, float, float, float, float)
0036f37f T FxPrtMult_c::FxPrtMult_c()
001d2461 T RenderQueue::Initialize()
001d1f7f T RenderQueue::ProcessCommand(char*)
001d24e1 T RenderQueue::Kill()
001d20a5 T RenderQueue::Flush()
001d1f99 T RenderQueue::Reset()
001d215d T RenderQueue::Finish()
001d2031 T RenderQueue::Process()
001d16b1 T RenderQueue::RenderQueue()
001d16b1 T RenderQueue::RenderQueue()
001d1f67 T RenderQueue::~RenderQueue()
001d1f67 T RenderQueue::~RenderQueue()
002a6bed W StatsScreen::GetMenuRight()
002a61a1 W StatsScreen::Render(int)
002a6079 W StatsScreen::Update(float)
002a604d W StatsScreen::StatsCat(SelectScreen*, int)
002a5e99 W StatsScreen::StatsScreen()
002a6069 W StatsScreen::~StatsScreen()
002a890d W YesNoScreen::NoFunc(SelectScreen*, int)
002a89c1 W YesNoScreen::Render(int)
002a8961 W YesNoScreen::YesFunc(SelectScreen*, int)
002a89b1 W YesNoScreen::~YesNoScreen()
00471f95 T CAnimManager::Initialise()
0038e069 T CAnimManager::AddAnimation(RpClump*, AssocGroupId, AnimationId)
0038e0e1 T CAnimManager::AddAnimation(RpClump*, CAnimBlendHierarchy*, int)
0038df85 T CAnimManager::GetAnimation(char const*, CAnimBlock const*)
0038dfc1 T CAnimManager::GetAnimation(unsigned int, CAnimBlock const*)
0038ea3d T CAnimManager::LoadAnimFile(RwStream*, bool, char const (*) [32])
0038e629 T CAnimManager::LoadAnimFile(char const*)
00942188 B CAnimManager::ms_animCache
0038e561 T CAnimManager::LoadAnimFiles()
0038e341 T CAnimManager::BlendAnimation(RpClump*, AssocGroupId, AnimationId, float)
0038e1e1 T CAnimManager::BlendAnimation(RpClump*, CAnimBlendHierarchy*, int, float)
00940afc B CAnimManager::ms_aAnimBlocks
0093209c B CAnimManager::ms_aAnimations
0038f905 T CAnimManager::AddAnimBlockRef(int)
0038f841 T CAnimManager::RemoveAnimBlock(int)
0038e009 T CAnimManager::GetAnimBlockName(AssocGroupId)
0038dff5 T CAnimManager::GetAnimGroupName(AssocGroupId)
00942180 B CAnimManager::ms_numAnimBlocks
0094217c B CAnimManager::ms_numAnimations
0038dea5 T CAnimManager::GetAnimationBlock(char const*)
0038e971 T CAnimManager::RegisterAnimBlock(char const*)
0038e039 T CAnimManager::GetAnimAssociation(AssocGroupId, AnimationId)
0038e051 T CAnimManager::GetAnimAssociation(AssocGroupId, char const*)
0038df45 T CAnimManager::GetFirstAssocGroup(char const*)
0038f91d T CAnimManager::RemoveAnimBlockRef(int)
0038f775 T CAnimManager::RemoveLastAnimFile()
0038e169 T CAnimManager::AddAnimationAndSync(RpClump*, CAnimBlendAssociation*, AssocGroupId, AnimationId)
0038dd55 T CAnimManager::UncompressAnimation(CAnimBlendHierarchy*)
00942184 B CAnimManager::ms_aAnimAssocGroups
0038e689 T CAnimManager::CreateAnimAssocGroups()
0038e021 T CAnimManager::CreateAnimAssociation(AssocGroupId, AnimationId)
0038f94d T CAnimManager::GetNumRefsToAnimBlock(int)
0038e84d T CAnimManager::AddAnimAssocDefinition(char const*, char const*, unsigned int, unsigned int, CAnimManager::AnimDescriptor*)
0038dee9 T CAnimManager::GetAnimationBlockIndex(char const*)
0038e961 T CAnimManager::AddAnimToAssocDefinition(CAnimManager::AnimAssocDefinition*, char const*)
0068a7e4 D CAnimManager::ms_aAnimAssocDefinitions
009421bc B CAnimManager::ms_numAnimAssocDefinitions
0038de61 T CAnimManager::RemoveFromUncompressedCache(CAnimBlendHierarchy*)
0047459d T CAnimManager::ReadAnimAssociationDefinitions()
0038f935 T CAnimManager::RemoveAnimBlockRefWithoutDelete(int)
0038dca1 T CAnimManager::Shutdown()
0046cb81 T CAudioEngine::Initialise()
003bd933 T CAudioEngine::SayPedless(int, short, CEntity*, unsigned int, float, unsigned char, unsigned char, unsigned char)
003bd36d T CAudioEngine::StartRadio(tVehicleAudioSettings*)
003bd321 T CAudioEngine::StartRadio(signed char, signed char)
003bd809 T CAudioEngine::GetBeatInfo()
003bd3b1 T CAudioEngine::RetuneRadio(signed char)
003bd805 T CAudioEngine::StopBeatTrack()
003bd999 T CAudioEngine::PauseAllSounds()
003bd84d T CAudioEngine::PauseBeatTrack(unsigned char)
003bd2db T CAudioEngine::ReportBulletHit(CEntity*, unsigned char, CVector&, float)
003bd299 T CAudioEngine::ReportCollision(CEntity*, CEntity*, unsigned char, unsigned char, CVector&, CVector*, float, float, unsigned char, unsigned char)
003bd0c1 T CAudioEngine::ResetStatistics()
003bd9a9 T CAudioEngine::ResumeAllSounds()
003bd6bd T CAudioEngine::PreloadBeatTrack(short)
003bd975 T CAudioEngine::StartLoadingTune()
003bd8ad T CAudioEngine::ClearMissionAudio(unsigned char)
003bd829 T CAudioEngine::IsBeatInfoPresent()
003bd2fd T CAudioEngine::ReportWaterSplash(CVector, float)
003bd2f5 T CAudioEngine::ReportWaterSplash(CPhysical*, float, unsigned char)
003bd305 T CAudioEngine::ReportWeaponEvent(int, eWeaponType, CPhysical*)
003bd04d T CAudioEngine::ResetSoundEffects()
003bcfe5 T CAudioEngine::StopAmbienceTrack(unsigned char)
003bd5d1 T CAudioEngine::StopCutsceneTrack(unsigned char)
003bd96f T CAudioEngine::StopPoliceScanner(unsigned char)
003bd35d T CAudioEngine::GetBeatTrackStatus()
003bd311 T CAudioEngine::ReportDoorMovement(CPhysical*)
003bcb35 T CAudioEngine::ServiceLoadingTune(float)
003bd96b T CAudioEngine::EnablePoliceScanner()
003bd43d T CAudioEngine::GetRadioStationName(signed char)
003bcb95 T CAudioEngine::IsLoadingTuneActive()
003bd87d T CAudioEngine::PreloadMissionAudio(unsigned char, int)
003bd3f1 T CAudioEngine::SetBassEnhanceOnOff(unsigned char)
003bd401 T CAudioEngine::SetRadioBassSetting(signed char)
003bd963 T CAudioEngine::DisablePoliceScanner(unsigned char, unsigned char)
003bd289 T CAudioEngine::EnableEffectsLoading()
003bd89d T CAudioEngine::GetMissionAudioEvent(unsigned char)
003bcaf5 T CAudioEngine::IsVehicleRadioActive()
003bd491 T CAudioEngine::PreloadCutsceneTrack(short, unsigned char)
003bd219 T CAudioEngine::SetMusicMasterVolume(signed char)
003bd279 T CAudioEngine::DisableEffectsLoading()
003bcc39 T CAudioEngine::InitialisePostLoading()
003bd86d T CAudioEngine::IsAmbienceRadioActive()
003bcfd5 T CAudioEngine::IsAmbienceTrackActive()
003bd69d T CAudioEngine::IsCutsceneTrackActive()
003bd48d T CAudioEngine::PlayRadioAnnouncement(unsigned int)
003bd6ad T CAudioEngine::GetCutsceneTrackStatus()
003bd44d T CAudioEngine::GetRadioStationNameKey(signed char, char*)
003bd88d T CAudioEngine::PlayLoadedMissionAudio(unsigned char)
003bd7e9 T CAudioEngine::PlayPreloadedBeatTrack(unsigned char)
003bd241 T CAudioEngine::SetEffectsMasterVolume(signed char)
003bd8bd T CAudioEngine::AttachMissionAudioToPed(unsigned char, CPed*)
003bd46d T CAudioEngine::DisplayRadioStationName()
003bd8a5 T CAudioEngine::GetMissionAudioPosition(unsigned char)
003bd435 T CAudioEngine::IsRadioRetuneInProgress()
003bd8f7 T CAudioEngine::ReportMissionAudioEvent(unsigned short, CPed*)
003bd8dd T CAudioEngine::ReportMissionAudioEvent(unsigned short, CObject*)
003bd911 T CAudioEngine::ReportMissionAudioEvent(unsigned short, CVehicle*)
003bd92b T CAudioEngine::ReportMissionAudioEvent(unsigned short, CPhysical*, float, float)
003bd8d5 T CAudioEngine::ReportMissionAudioEvent(unsigned short, CVector&)
003bd2e3 T CAudioEngine::ReportObjectDestruction(CEntity*)
003bd8b5 T CAudioEngine::SetMissionAudioPosition(unsigned char, CVector&)
003bd3e1 T CAudioEngine::SetRadioAutoRetuneOnOff(unsigned char)
003bd47d T CAudioEngine::GetCurrentRadioStationID()
003bd415 T CAudioEngine::InitialiseRadioStationID(signed char)
003bcaed T CAudioEngine::ReportFrontendAudioEvent(int, float, float)
003bd425 T CAudioEngine::HasRadioRetuneJustStarted()
003bd2eb T CAudioEngine::ReportGlassCollisionEvent(int, CVector&)
003bd8c5 T CAudioEngine::AttachMissionAudioToObject(unsigned char, CObject*)
003bd45d T CAudioEngine::GetRadioStationListenTimes()
003bd5c1 T CAudioEngine::PlayPreloadedCutsceneTrack()
003bcb05 T CAudioEngine::SetMusicFaderScalingFactor(float)
003bd269 T CAudioEngine::SetStreamFaderScalingFactor(float)
003bd8cd T CAudioEngine::AttachMissionAudioToPhysical(unsigned char, CPhysical*)
003bd885 T CAudioEngine::GetMissionAudioLoadingStatus(unsigned char)
003bd895 T CAudioEngine::IsMissionAudioSampleFinished(unsigned char)
003bcb15 T CAudioEngine::SetEffectsFaderScalingFactor(float)
003bd85d T CAudioEngine::DoesAmbienceTrackOverrideRadio()
003bcb25 T CAudioEngine::SetNonStreamFaderScalingFactor(float)
0048a915 T CAudioEngine::Load()
00489b41 T CAudioEngine::Save()
003bce1d T CAudioEngine::Reset()
003bd0d1 T CAudioEngine::Restart()
003bc965 T CAudioEngine::Service()
003bd0e1 T CAudioEngine::Shutdown()
003bcfc5 T CAudioEngine::IsRadioOn()
003bd3a1 T CAudioEngine::StopRadio(tVehicleAudioSettings*, unsigned char)
003bd9b9 W CAudioEngine::~CAudioEngine()
002e1181 T CBoundingBox::CBoundingBox()
002e1181 T CBoundingBox::CBoundingBox()
005c22fd T CBulletTrace::Update()
00319469 T CCarPathLink::OneWayLaneOffset()
005c435d T CCheckpoints::SetHeading(unsigned int, float)
005c43c1 T CCheckpoints::PlaceMarker(unsigned int, unsigned short, CVector&, CVector&, float, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, float, short)
00a59484 B CCheckpoints::NumActiveCPts
00a58d84 B CCheckpoints::m_aCheckPtArray
005bfd51 T CCheckpoints::Init()
005c1529 T CCheckpoints::Render()
005c0705 T CCheckpoints::Update()
005c45e9 T CCheckpoints::DeleteCP(unsigned int, unsigned short)
005c4301 T CCheckpoints::Shutdown()
005c4305 T CCheckpoints::UpdatePos(unsigned int, CVector&)
0049e5f1 T CCivilianPed::ProcessControl()
0049e5ad T CCivilianPed::CCivilianPed(ePedType, unsigned int)
0049e5ad T CCivilianPed::CCivilianPed(ePedType, unsigned int)
0049e5e1 T CCivilianPed::~CCivilianPed()
0049e5dd T CCivilianPed::~CCivilianPed()
0049e5dd T CCivilianPed::~CCivilianPed()
0038fd81 T CCutsceneMgr::Initialise()
009421c5 B CCutsceneMgr::ms_running
0046514d T CCutsceneMgr::SetHeadAnim(char const*, CObject*)
00465861 T CCutsceneMgr::SkipCutscene()
00465175 T CCutsceneMgr::StartCutscene()
009421c4 B CCutsceneMgr::ms_animLoaded
00465915 T CCutsceneMgr::FinishCutscene()
00465405 T CCutsceneMgr::Update_overlay()
009acdc4 B CCutsceneMgr::ms_cTextOutput
009421c9 B CCutsceneMgr::ms_hasFileInfo
009accf4 B CCutsceneMgr::ms_iModelIndex
00465129 T CCutsceneMgr::AddCutsceneHead(CObject*, int)
00464afd T CCutsceneMgr::SetCutsceneAnim(char const*, CObject*)
009abf74 B CCutsceneMgr::ms_cutsceneName
009421cc B CCutsceneMgr::ms_pCutsceneDir
0038fe65 T CCutsceneMgr::LoadCutsceneData(char const*)
009ad520 B CCutsceneMgr::ms_bRepeatObject
009ac6b4 B CCutsceneMgr::ms_cLoadAnimName
009ad624 B CCutsceneMgr::ms_crToHideItems
009abf94 B CCutsceneMgr::ms_cutsceneTimer
009ad0c4 B CCutsceneMgr::ms_iTextDuration
009acdbc B CCutsceneMgr::ms_numTextOutput
009ae220 B CCutsceneMgr::m_PrevExtraColour
009ae22c B CCutsceneMgr::m_fPrevCarDensity
009ae228 B CCutsceneMgr::m_fPrevPedDensity
009acdc0 B CCutsceneMgr::ms_currTextOutput
009abf98 B CCutsceneMgr::ms_cutsceneOffset
009acfc4 B CCutsceneMgr::ms_iTextStartTime
00464b91 T CCutsceneMgr::AttachObjectToBone(CObject*, CObject*, int)
0038feed T CCutsceneMgr::DeleteCutsceneData()
00942814 B CCutsceneMgr::ms_cAppendAnimName
009ac074 B CCutsceneMgr::ms_cLoadObjectName
009abfa4 B CCutsceneMgr::ms_numCutsceneObjs
009ad558 B CCutsceneMgr::ms_pHiddenEntities
0046514f T CCutsceneMgr::AttachObjectToFrame(CObject*, CEntity*, char const*)
0038fec1 T CCutsceneMgr::BuildCutscenePlayer()
004659a9 T CCutsceneMgr::HasCutsceneFinished()
009ae224 B CCutsceneMgr::m_PrevExtraColourOn
009abfa8 B CCutsceneMgr::ms_pCutsceneObjects
009adebc B CCutsceneMgr::ms_pParticleEffects
009421c7 B CCutsceneMgr::ms_useLodMultiplier
0039022d T CCutsceneMgr::AppendToNextCutscene(char const*, char const*)
00465167 T CCutsceneMgr::AttachObjectToParent(CObject*, CEntity*)
00464a09 T CCutsceneMgr::CreateCutsceneObject(int)
0046469d T CCutsceneMgr::HideRequestedObjects()
0038ff11 T CCutsceneMgr::RemoveCutscenePlayer()
004651ed T CCutsceneMgr::SetupCutsceneToStart()
009421d4 B CCutsceneMgr::ms_cAppendObjectName
009421ca B CCutsceneMgr::IntroTextIsActiveHack
0046512d T CCutsceneMgr::SetCutsceneAnimToLoop(char const*)
009421c0 B CCutsceneMgr::ms_cutsceneLoadStatus
009abf90 B CCutsceneMgr::ms_cutscenePlayStatus
009421c6 B CCutsceneMgr::ms_cutsceneProcessing
009ad620 B CCutsceneMgr::ms_iNumHiddenEntities
009ac070 B CCutsceneMgr::ms_numLoadObjectNames
0068c394 D CCutsceneMgr::ms_useCutsceneShadows
009421c8 B CCutsceneMgr::ms_wasCutsceneSkipped
009ad2c8 B CCutsceneMgr::ms_iAttachObjectToBone
009ae21c B CCutsceneMgr::ms_iNumParticleEffects
009abf7c B CCutsceneMgr::ms_cutsceneAssociations
009421d0 B CCutsceneMgr::ms_numAppendObjectNames
0046479d T CCutsceneMgr::LoadCutsceneData_loading()
00464bb5 T CCutsceneMgr::LoadCutsceneData_overlay(char const*)
004637a9 T CCutsceneMgr::LoadCutsceneData_preload()
0038fe31 T CCutsceneMgr::LoadAnimationUncompressed(char const*)
0046449d T CCutsceneMgr::LoadCutsceneData_postload()
009ad554 B CCutsceneMgr::ms_numAttachObjectToBones
00464c21 T CCutsceneMgr::DeleteCutsceneData_overlay()
0046583d T CCutsceneMgr::GetCutsceneTimeInMilleseconds()
009ad1c4 B CCutsceneMgr::ms_aUncompressedCutsceneAnims
009ad2c4 B CCutsceneMgr::ms_numUncompressedCutsceneAnims
00390139 T CCutsceneMgr::IsCutsceneSkipButtonBeingPressed()
0038ff19 T CCutsceneMgr::LoadEverythingBecauseCutsceneDeletedAllOfIt()
00390011 T CCutsceneMgr::RemoveEverythingBecauseCutsceneDoesntFitInMemory()
00390121 T CCutsceneMgr::Update()
0038fe0d T CCutsceneMgr::Shutdown()
0045285d T CDummyObject::CreateObject()
004528b9 T CDummyObject::UpdateFromObject(CObject*)
004527f5 T CDummyObject::CDummyObject(CObject*)
004527dd T CDummyObject::CDummyObject()
004527f5 T CDummyObject::CDummyObject(CObject*)
004527dd T CDummyObject::CDummyObject()
0045284d T CDummyObject::~CDummyObject()
00452849 T CDummyObject::~CDummyObject()
00452849 T CDummyObject::~CDummyObject()
00372ee1 T CEventDamage::ComputeDeathAnim(CPed*, bool)
00372cd5 T CEventDamage::IsSameEventForAI(CEventDamage*)
003732cd T CEventDamage::ComputeDamageAnim(CPed*, bool)
00372509 T CEventDamage::From(CEventDamage const&)
003723bd T CEventDamage::CEventDamage(CEntity*, unsigned int, eWeaponType, ePedPieceTypes, unsigned char, bool, bool)
003724d1 T CEventDamage::CEventDamage(CEventDamage const&)
003723bd T CEventDamage::CEventDamage(CEntity*, unsigned int, eWeaponType, ePedPieceTypes, unsigned char, bool, bool)
003724d1 T CEventDamage::CEventDamage(CEventDamage const&)
0037247d T CEventDamage::~CEventDamage()
00372455 T CEventDamage::~CEventDamage()
00372455 T CEventDamage::~CEventDamage()
00372651 T CEventDamage::operator=(CEventDamage const&)
00377e7d T CEventDanger::CEventDanger(CEntity*, float)
00377e7d T CEventDanger::CEventDanger(CEntity*, float)
00377ef5 T CEventDanger::~CEventDanger()
00377ecd T CEventDanger::~CEventDanger()
00377ecd T CEventDanger::~CEventDanger()
00378945 W CEventOnFire::~CEventOnFire()
0037b1c1 T CEventSource::ComputeEventSourceType(CEvent const&, CPed const&)
003f2ca5 T CFireManager::ExtinguishPoint(CVector, float)
003f27d5 T CFireManager::FindNearestFire(CVector const&, bool, bool)
003f12e3 T CFireManager::GetNextFreeFire(unsigned char)
003f30f9 T CFireManager::StartScriptFire(CVector const&, CEntity*, float, unsigned char, signed char, int)
003f3411 T CFireManager::RemoveScriptFire(short)
003f3599 T CFireManager::GetNumFiresInArea(float, float, float, float, float, float)
003f354d T CFireManager::GetNumFiresInRange(CVector*, float)
003f3527 T CFireManager::SetScriptFireAudio(short, bool)
003f3541 T CFireManager::GetScriptFireCoords(short)
003f2b8d T CFireManager::PlentyFiresAvailable()
003f348b T CFireManager::RemoveAllScriptFires()
003f137f T CFireManager::GetNumOfNonScriptFires()
003f3513 T CFireManager::ClearAllScriptFireFlags()
003f2d75 T CFireManager::ExtinguishPointWithWater(CVector, float, float)
003f3401 T CFireManager::IsScriptFireExtinguished(short)
003f11ad T CFireManager::Init()
003f1629 T CFireManager::Update()
003f1203 T CFireManager::Shutdown()
003f2619 T CFireManager::StartFire(CVector, float, unsigned char, CEntity*, unsigned int, signed char, unsigned char)
003f28f5 T CFireManager::StartFire(CEntity*, CEntity*, float, unsigned char, unsigned int, signed char)
003f1113 T CFireManager::CFireManager()
003f1113 T CFireManager::CFireManager()
003f1201 T CFireManager::~CFireManager()
003f1201 T CFireManager::~CFireManager()
0028d489 T CHIDJoystick::AddMapping(int, HIDMapping)
0028d23d T CHIDJoystick::GetButtonID(HIDMapping)
0028d311 T CHIDJoystick::InternalUpdate()
0028ce69 T CHIDJoystick::InternalReplaces(HIDMapping)
0028d12d T CHIDJoystick::InternalIsPressed(HIDMapping, float*)
0028ce3b T CHIDJoystick::InternalImplements(HIDMapping)
0028d271 T CHIDJoystick::InternalIsReleased(HIDMapping)
0028d513 T CHIDJoystick::MappingHasButtonID(int)
0028cd51 T CHIDJoystick::InternalDrawHelpIcon(char const*, HIDMapping, float, float, float, int, bool)
0028d56b W CHIDJoystick::InternalGetInputType()
0028cdfb T CHIDJoystick::InternalGetHelpSprite(char const*, HIDMapping, CVector2D*, CVector2D*)
0028d0c9 T CHIDJoystick::InternalIsJustPressed(HIDMapping)
0028cfd9 T CHIDJoystick::InternalIsDoubleTapped(HIDMapping)
006e0030 B CHIDJoystick::m_bInstanceEverCreated
0028d53d T CHIDJoystick::InternalMappingIsAnalog(HIDMapping)
0028cedd T CHIDJoystick::InternalCacheAnalogValues(unsigned int)
0028d43f T CHIDJoystick::InternalIsPressedNegative(HIDMapping)
0028d3f5 T CHIDJoystick::InternalIsPressedPositive(HIDMapping)
0028d315 T CHIDJoystick::InternalIsReleasedNegative(HIDMapping)
0028d385 T CHIDJoystick::InternalIsReleasedPositive(HIDMapping)
0028cce9 T CHIDJoystick::CHIDJoystick(char const*)
0028d5a1 W CHIDJoystick::~CHIDJoystick()
0028d571 W CHIDJoystick::~CHIDJoystick()
002954ab T CHIDKeyboard::AddMapping(OSKeyboardKey, HIDMapping, bool, MouseButtons)
00295619 T CHIDKeyboard::GetTagName(OSKeyboardKey)
006e0034 B CHIDKeyboard::m_KeyPairs
0029554b T CHIDKeyboard::ReplaceMapping(HIDMapping, OSKeyboardKey, bool, MouseButtons)
00294ec5 T CHIDKeyboard::QueueTextRender(HIDMapping, float, float, float, int, bool)
00295669 T CHIDKeyboard::GetMappingString(HIDMapping, bool)
00295109 T CHIDKeyboard::GetMappingString(OSKeyboardKey)
002951dd T CHIDKeyboard::InternalReplaces(HIDMapping)
00295c9b W CHIDKeyboard::DoDefaultMappings()
00295301 T CHIDKeyboard::InternalIsPressed(HIDMapping, float*)
002951af T CHIDKeyboard::InternalImplements(HIDMapping)
002953d1 T CHIDKeyboard::InternalIsReleased(HIDMapping)
00295751 T CHIDKeyboard::SaveMappingsToDisk()
00294d91 T CHIDKeyboard::InternalDrawHelpIcon(char const*, HIDMapping, float, float, float, int, bool)
00295c63 W CHIDKeyboard::InternalGetInputType()
002959a5 T CHIDKeyboard::LoadMappingsFromDisk(bool)
0029516f T CHIDKeyboard::InternalGetHelpSprite(char const*, HIDMapping, CVector2D*, CVector2D*)
002952f9 T CHIDKeyboard::InternalIsJustPressed(HIDMapping)
00295249 T CHIDKeyboard::InternalIsDoubleTapped(HIDMapping)
00295c11 T CHIDKeyboard::RestoreDefaultMappings()
00294f0d T CHIDKeyboard::InternalFlushQueuedText()
0029545b T CHIDKeyboard::InternalGetMappingWeight(HIDMapping)
00295169 T CHIDKeyboard::InternalRemoveQueuedText()
0029559b T CHIDKeyboard::InternalCacheAnalogValues(unsigned int)
00290691 T CHIDKeyboard::CHIDKeyboard(char const*)
00295c99 W CHIDKeyboard::~CHIDKeyboard()
00295c69 W CHIDKeyboard::~CHIDKeyboard()
003f4fb7 T CLoadMonitor::BeginFrame()
003f4fc7 T CLoadMonitor::StartTimer(ELoadType)
003f535d T CLoadMonitor::Render()
003f4ff1 T CLoadMonitor::EndFrame()
003f4fd7 T CLoadMonitor::EndTimer(ELoadType)
003f4f51 T CLoadMonitor::CLoadMonitor()
003f4f51 T CLoadMonitor::CLoadMonitor()
003f4fb5 T CLoadMonitor::~CLoadMonitor()
003f4fb5 T CLoadMonitor::~CLoadMonitor()
004bedd1 T CMentalState::Process(CPed const&)
004359a5 T CMenuManager::CheckHover(int, int, int, int)
00432bb5 T CMenuManager::DrawWindow(CRect const&, char*, unsigned char, CRGBA, unsigned char, unsigned char)
0042e561 T CMenuManager::Initialise()
0043197b T CMenuManager::PrintBrief()
00431979 T CMenuManager::PrintStats()
0042ebed T CMenuManager::DrawFrontEnd()
004359c9 T CMenuManager::LoadSettings()
004345bd T CMenuManager::SaveSettings()
004315b1 T CMenuManager::DisplaySlider(float, float, float, float, float, float, int)
004314d1 T CMenuManager::MessageScreen(char*, bool, bool)
00435fe5 T CMenuManager::SetHelperText(int)
00431b31 T CMenuManager::ChangeLanguage(signed char)
0042ec7d T CMenuManager::DrawBackground()
0042e445 T CMenuManager::UnloadTextures()
0042e5fd T CMenuManager::LoadAllTextures()
00435ff7 T CMenuManager::ResetHelperText()
004359cd T CMenuManager::SaveStatsToFile()
00432cd5 T CMenuManager::DrawWindowedText(float, float, float, char*, char*, unsigned char)
00432bb3 T CMenuManager::ProcessStreaming(unsigned char)
00431fad T CMenuManager::ProcessUserInput(unsigned char, unsigned char, unsigned char, unsigned char, signed char)
00435281 T CMenuManager::DisplayHelperText(char*)
0042f199 T CMenuManager::DrawStandardMenus(unsigned char)
0042e899 T CMenuManager::SwapTexturesRound(unsigned char)
004319f1 T CMenuManager::SwitchToNewScreen(signed char)
004359c7 T CMenuManager::CentreMousePointer()
00434561 T CMenuManager::DrawQuitGameScreen()
00432b9d T CMenuManager::HasLanguageChanged()
00431b91 T CMenuManager::ProcessFileActions()
004323e5 T CMenuManager::ProcessMenuOptions(signed char, unsigned char*, unsigned char)
00433041 T CMenuManager::SmallMessageScreen(char const*)
004329e5 T CMenuManager::SwitchMenuOnAndOff()
004328a5 T CMenuManager::CheckSliderMovement(signed char)
00433dc5 T CMenuManager::DrawControllerBound(unsigned short, bool)
004329e9 T CMenuManager::ScrollRadioStations(signed char)
00432a35 T CMenuManager::CheckFrontEndUpInput()
0043600d T CMenuManager::ProcessPCMenuOptions(signed char, unsigned char)
00432b05 T CMenuManager::AdditionalOptionInput(unsigned char*, unsigned char*)
004356e1 T CMenuManager::CheckCodesForControls(int)
0043177d T CMenuManager::PrintRadioStationList()
0042e239 T CMenuManager::SetDefaultPreferences(signed char)
00432a69 T CMenuManager::CheckFrontEndDownInput()
00432a9d T CMenuManager::CheckFrontEndLeftInput()
00432185 T CMenuManager::GetNumberOfMenuOptions()
00432ad1 T CMenuManager::CheckFrontEndRightInput()
00433aad T CMenuManager::RedefineScreenUserInput(unsigned char*, unsigned char*)
0042ec79 T CMenuManager::SetFrontEndRenderStates()
00436901 T CMenuManager::CheckMissionPackValidMenu()
004364c5 T CMenuManager::CheckRedefineControlInput()
004345c1 T CMenuManager::DrawControllerSetupScreen()
004366e1 T CMenuManager::ProcessMissionPackNewGame()
0043197d T CMenuManager::JumpToGenericMessageScreen(signed char, char const*, char const*)
00435009 T CMenuManager::DrawContollerScreenExtraText(int)
004329e7 T CMenuManager::DoSettingsBeforeStartingAGame()
0042eaf5 T CMenuManager::InitialiseChangedLanguageSettings(bool)
00435969 T CMenuManager::SaveLoadFileError_SetUpErrorScreen()
00431b3d T CMenuManager::Process()
0042f195 T CMenuManager::PrintMap()
0042f12d T CMenuManager::StretchX(float)
0042f161 T CMenuManager::StretchY(float)
0043331d T CMenuManager::UserInput()
0042dfa1 T CMenuManager::CMenuManager()
0042dfa1 T CMenuManager::CMenuManager()
0042e36d T CMenuManager::~CMenuManager()
0042e36d T CMenuManager::~CMenuManager()
0045caa9 T COctTreeBase::InsertTree(unsigned char, unsigned char, unsigned char)
0045ce59 T COctTreeBase::FillPalette(unsigned char*)
0045cd31 T COctTreeBase::ReduceBranches(int)
0045c9f1 T COctTreeBase::Init(int)
0045cad5 T COctTreeBase::Insert(unsigned char, unsigned char, unsigned char)
0045c9c1 T COctTreeBase::COctTreeBase()
0045c9c1 T COctTreeBase::COctTreeBase()
00526b25 W CPatrolRoute::Reverse()
00526b21 W CPatrolRoute::~CPatrolRoute()
003272a9 T CPatrolRoute::operator delete(void*)
00327245 T CPatrolRoute::operator new(unsigned int)
004a8595 T CPedTaskPair::Flush()
005a6edb T CPlaneBanner::RegisterPoint(CVector)
005a6ed5 T CPlaneBanner::Init()
005a6ed7 T CPlaneBanner::Render()
005a6ed9 T CPlaneBanner::Update()
005a6ebd T CPlaneTrails::RegisterPoint(CVector, unsigned int)
005a62f9 T CPlaneTrails::Init()
005a6ae5 T CPlaneTrails::Render()
005a6765 T CPlaneTrails::Update()
00a294ac B CPlaneTrails::aArray
002cebe1 T CPlantLocTri::Add(RwV3d const&, RwV3d const&, RwV3d const&, unsigned char, unsigned char, unsigned char, unsigned char)
002ceb01 T CPlantLocTri::Release()
00a47674 B CPointLights::NextCachedValue
005b19d1 T CPointLights::RenderFogEffect()
00a47474 B CPointLights::aCachedMapReads
005b1839 T CPointLights::GetLightMultiplier(CVector const*)
00a475f4 B CPointLights::aCachedMapReadResults
005b19bd T CPointLights::RemoveLightsAffectingObject()
005b1579 T CPointLights::GenerateLightsAffectingObject(CVector const*, float*, CEntity*)
005b2199 T CPointLights::ProcessVerticalLineUsingCache(CVector, float*)
005b1369 T CPointLights::Init()
00a46e74 B CPointLights::aLights
005b13d5 T CPointLights::AddLight(unsigned char, CVector, CVector, float, float, float, float, unsigned char, bool, CEntity*)
00a46e70 B CPointLights::NumLights
005b5075 T CPostEffects::HeatHazeFX(float, bool)
005b28d5 T CPostEffects::Initialise()
006b21d8 D CPostEffects::m_bSpeedFX
00a47847 B CPostEffects::m_waterCol
005b4cc9 T CPostEffects::NightVision(RwRGBA)
006b2214 D CPostEffects::m_waterFreq
005b3f99 T CPostEffects::ColourFilter(RwRGBA, RwRGBA)
005b5f79 T CPostEffects::MobileRender()
00a47834 B CPostEffects::m_bRadiosity
006b2210 D CPostEffects::m_waterSpeed
00a47805 B CPostEffects::m_bHeatHazeFX
00a477eb B CPostEffects::m_bInCutscene
00a47844 B CPostEffects::m_bRainEnable
00a47846 B CPostEffects::m_waterEnable
005b40dd T CPostEffects::DarknessFilter(int)
005b2b59 T CPostEffects::DrawQuadSetUVs(float, float, float, float, float, float, float, float)
005b25e5 T CPostEffects::HeatHazeFXInit()
005b4e75 T CPostEffects::InfraredVision(RwRGBA, RwRGBA)
006b21dc D CPostEffects::m_SpeedFXAlpha
006b2248 D CPostEffects::m_bColorEnable
00a477e8 B CPostEffects::m_bGrainEnable
00a477ec B CPostEffects::m_bNightVision
006b2170 D CPostEffects::m_bSeamRemover
00a477ea B CPostEffects::m_hilightMblur
006b2184 D CPostEffects::m_hilightScale
00a47845 B CPostEffects::m_smokeyEnable
006b217c D CPostEffects::m_grainStrength
006b2188 D CPostEffects::m_hilightOffset
006b2204 D CPostEffects::m_waterStrength
005b6f15 T CPostEffects::IsVisionFXActive()
005b2d59 T CPostEffects::ScriptCCTVSwitch(bool)
005b5a55 T CPostEffects::UnderWaterRipple(RwRGBA, float, float, int, float, float)
00a47808 B CPostEffects::m_HeatHazeFXType
00a477e9 B CPostEffects::m_bHilightEnable
00a47850 B CPostEffects::m_defScreenXPosn
00a47854 B CPostEffects::m_defScreenYPosn
006b2200 D CPostEffects::m_smokeyDistance
006b21fc D CPostEffects::m_smokeyStrength
006b2174 D CPostEffects::m_SeamRemoverMode
00a47820 B CPostEffects::m_bDarknessFilter
00a477fc B CPostEffects::m_bInfraredVision
00a47840 B CPostEffects::m_bRadiosityDebug
006b2180 D CPostEffects::m_hilightStrength
00a47838 B CPostEffects::m_RadiosityPixelsX
00a4783c B CPostEffects::m_RadiosityPixelsY
00a4782e B CPostEffects::m_bSpeedFXTestMode
006b21e0 D CPostEffects::m_bSpeedFXUserFlag
006b222c D CPostEffects::m_colourTopVOffset
00a47858 B CPostEffects::pRasterFrontBuffer
005b2b91 T CPostEffects::DrawQuadSetPixelUVs(float, float, float, float, float, float, float, float)
005b6c7d T CPostEffects::SetFilterMainColour(RwRaster*, RwRGBA)
00a477fd B CPostEffects::m_InfraredVisionCol
006b2234 D CPostEffects::m_colour1Multiplier
006b2238 D CPostEffects::m_colour2Multiplier
006b2224 D CPostEffects::m_colourLeftUOffset
005b6c55 T CPostEffects::NightVisionSetLights()
006b21cc D CPostEffects::m_HeatHazeFXSpeedMax
006b21c8 D CPostEffects::m_HeatHazeFXSpeedMin
006b21c0 D CPostEffects::m_HeatHazeFXTypeLast
00a477ed B CPostEffects::m_NightVisionMainCol
006b21f0 D CPostEffects::m_RadiosityIntensity
006b2228 D CPostEffects::m_colourRightUOffset
005b2925 T CPostEffects::DrawQuadSetDefaultUVs()
005b2c4d T CPostEffects::ScriptResetForEffects()
005b22b1 T CPostEffects::SetupBackBufferVertex()
00a47824 B CPostEffects::m_DarknessFilterAlpha
006b21c4 D CPostEffects::m_HeatHazeFXIntensity
00a47810 B CPostEffects::m_HeatHazeFXScanSizeX
00a47814 B CPostEffects::m_HeatHazeFXScanSizeY
006b2218 D CPostEffects::m_bWaterDepthDarkness
006b2230 D CPostEffects::m_colourBottomVOffset
005b2d11 T CPostEffects::ScriptHeatHazeFXSwitch(bool)
00a47843 B CPostEffects::m_bSavePhotoFromScript
006b21b8 D CPostEffects::m_fHeatHazeFXFadeSpeed
005b2291 T CPostEffects::RasterCreatePostEffects(RwRect)
005b2cb1 T CPostEffects::ScriptNightVisionSwitch(bool)
00a4780c B CPostEffects::m_HeatHazeFXRandomShift
00a47818 B CPostEffects::m_HeatHazeFXRenderSizeX
00a4781c B CPostEffects::m_HeatHazeFXRenderSizeY
00a47801 B CPostEffects::m_InfraredVisionMainCol
006b21e4 D CPostEffects::m_RadiosityFilterPasses
006b21e8 D CPostEffects::m_RadiosityRenderPasses
00a47842 B CPostEffects::m_bDisableAllPostEffect
00a47806 B CPostEffects::m_bHeatHazeMaskModeTest
00a47689 B CPostEffects::m_bSeamRemoverDebugMode
005b6f4d T CPostEffects::UnderWaterRippleFadeToFX()
006b21b4 D CPostEffects::m_HeatHazeFXHourOfDayEnd
006b21e2 D CPostEffects::m_bRadiosityLinearFilter
006b21ec D CPostEffects::m_RadiosityIntensityLimit
00a4768c B CPostEffects::m_SeamRemoverShiftTopLeft
006b218c D CPostEffects::m_VisionFXDayNightBalance
006b21e3 D CPostEffects::m_bRadiosityStripCopyMode
006b221c D CPostEffects::m_fWaterFullDarknessDepth
006b2240 D CPostEffects::SCREEN_EXTRA_MULT_BASE_CAP
005b2d21 T CPostEffects::ScriptDarknessFilterSwitch(bool, int)
005b2ce1 T CPostEffects::ScriptInfraredVisionSwitch(bool)
006b21b0 D CPostEffects::m_HeatHazeFXHourOfDayStart
006b2190 D CPostEffects::m_NightVisionGrainStrength
006b2244 D CPostEffects::SCREEN_EXTRA_MULT_BASE_MULT
005b29c1 T CPostEffects::ImmediateModeRenderStatesSet()
006b21d0 D CPostEffects::m_DarknessFilterAlphaDefault
006b21f4 D CPostEffects::m_RadiosityFilterUCorrection
006b21f8 D CPostEffects::m_RadiosityFilterVCorrection
00a47688 B CPostEffects::m_bSeamRemoverSeamSearchMode
006b2194 D CPostEffects::m_fNightVisionSwitchOnFXTime
006b223c D CPostEffects::SCREEN_EXTRA_MULT_CHANGE_RATE
006b2198 D CPostEffects::m_InfraredVisionGrainStrength
006b2178 D CPostEffects::m_SeamRemoverShiftBottomRight
006b219c D CPostEffects::m_fInfraredVisionFilterRadius
00a477f4 B CPostEffects::m_fNightVisionSwitchOnFXCount
006b2220 D CPostEffects::m_fWaterFXStartUnderWaterness
005b2949 T CPostEffects::ImmediateModeRenderStatesStore()
006b21e1 D CPostEffects::m_bSpeedFXUserFlagCurrentFrame
006b21a0 D CPostEffects::m_fInfraredVisionHeatObjectCol
005b6ee9 T CPostEffects::FilterFX_RestoreDayNightBalance()
005b2a19 T CPostEffects::ImmediateModeRenderStatesReStore()
00a477f8 B CPostEffects::m_fInfraredVisionSwitchOnFXCount
00a47830 B CPostEffects::m_fSpeedFXManualSpeedCurrentFrame
005b2421 T CPostEffects::ImmediateModeFilterStuffInitialize()
005b6eb1 T CPostEffects::FilterFX_StoreAndSetDayNightBalance()
005b2915 T CPostEffects::DoScreenModeDependentInitializations()
006b21bc D CPostEffects::m_fHeatHazeFXInsideBuildingFadeSpeed
005b6d71 T CPostEffects::InfraredVisionSetLightsForHeatObjects()
006b21d4 D CPostEffects::m_DarknessFilterRadiosityIntensityLimit
005b3bb1 T CPostEffects::Fog()
005b6e89 T CPostEffects::InfraredVisionSetLightsForDefaultObjects()
005b6e61 T CPostEffects::InfraredVisionRestoreLightsForHeatObjects()
00a47841 B CPostEffects::m_bRadiosityBypassTimeCycleIntensityLimit
005b6d99 T CPostEffects::InfraredVisionStoreAndSetLightsForHeatObjects(CPed*)
005b5da9 T CPostEffects::CCTV()
00490dc1 T CPostEffects::Load()
0048ffb9 T CPostEffects::Save()
005b2c1d T CPostEffects::Close()
005b4e71 T CPostEffects::Grain(int, bool)
005b2d69 T CPostEffects::Render()
005b28d9 T CPostEffects::Update()
00a4782d B CPostEffects::m_bFog
00a47690 B CPostEffects::ms_imf
005b48c9 T CPostEffects::SpeedFX(float)
00a47828 B CPostEffects::m_bCCTV
005b2a91 T CPostEffects::DrawQuad(float, float, float, float, unsigned char, unsigned char, unsigned char, unsigned char, RwRaster*)
005b4195 T CPostEffects::Radiosity(int, int, int, int)
00a47829 B CPostEffects::m_CCTVcol
00a4784c B CPostEffects::m_pDmaPkt
006b2208 D CPostEffects::m_xoffset
006b220c D CPostEffects::m_yoffset
004d6b53 T CTaskComplex::SetSubTask(CTask*)
0035f63f W CTaskComplex::MakeAbortable(CPed*, int, CEvent const*)
004d6b11 T CTaskComplex::CTaskComplex()
004d6b51 T CTaskComplex::~CTaskComplex()
004d6b29 T CTaskComplex::~CTaskComplex()
004d6b29 T CTaskComplex::~CTaskComplex()
005342cd T CTaskManager::StopTimers(CEvent const*)
00533a33 T CTaskManager::AddSubTasks(CTask*)
00533e23 T CTaskManager::ManageTasks()
00533dab T CTaskManager::SetNextSubTask(CTask*)
00533a85 T CTaskManager::GetSimplestTask(CTask*)
0053411f T CTaskManager::FlushImmediately()
00533cab T CTaskManager::SetTaskSecondary(CTask*, int)
00533d7d T CTaskManager::ClearTaskEventResponse()
00533fc9 T CTaskManager::ParentsControlChildren(CTask*)
00534071 T CTaskManager::Flush()
0053397b T CTaskManager::SetTask(CTask*, int, bool)
005338b1 T CTaskManager::CTaskManager(CPed*)
005338b1 T CTaskManager::CTaskManager(CPed*)
005338cb T CTaskManager::~CTaskManager()
005338cb T CTaskManager::~CTaskManager()
0096b540 B CUserDisplay::OnscnTimer
0096b694 B CUserDisplay::CurrentVehicle
004213cd T CUserDisplay::Init()
004213fd T CUserDisplay::Process()
0096b538 B CUserDisplay::PlaceName
005cb0e9 T CWaterCannon::Update_NewInput(CVector*, CVector*)
005cac49 T CWaterCannon::Update_OncePerFrame(short)
005cabd1 T CWaterCannon::Init()
005cb129 T CWaterCannon::Render()
005cad6d T CWaterCannon::PushPeds()
002bf87d T CWidgetRadar::IsHeldDown()
002bf809 T CWidgetRadar::Update()
002bf915 W CWidgetRadar::GetName()
002bf771 T CWidgetRadar::CWidgetRadar(char const*, WidgetPosition const&)
002bf771 T CWidgetRadar::CWidgetRadar(char const*, WidgetPosition const&)
002bf8e9 W CWidgetRadar::~CWidgetRadar()
002bf8c1 W CWidgetRadar::~CWidgetRadar()
002c9491 T CWidgetWager::RenderRowText(unsigned short*, unsigned short*, CRect, int, float)
002c9701 T CWidgetWager::SetWidgetInfo2(int, int, int, int, char*, char*)
002c97a9 W CWidgetWager::SetWidgetValue(float)
002c95e9 T CWidgetWager::RenderTitleText(CRect, float)
002c8d59 T CWidgetWager::Draw()
002c8d45 T CWidgetWager::Update()
002c979d W CWidgetWager::GetName()
002c8c55 T CWidgetWager::CWidgetWager(char const*, WidgetPosition const&)
002c8c55 T CWidgetWager::CWidgetWager(char const*, WidgetPosition const&)
002c978d W CWidgetWager::~CWidgetWager()
002a7ab9 W DeleteScreen::DeleteScreenSelection::HandleInput(SelectScreen*, float)
002a7c29 W DeleteScreen::DeleteScreenSelection::ConfirmDelete(void*)
002a7ab3 W DeleteScreen::DeleteScreenSelection::~DeleteScreenSelection()
002a7aa3 W DeleteScreen::~DeleteScreen()
0036b6f5 T FxInfoFlat_c::Load(unsigned int, int)
0036b6fb T FxInfoFlat_c::GetValue(float, float, float, float, unsigned char, void*)
0036b6b5 T FxInfoFlat_c::FxInfoFlat_c()
0036b6b5 T FxInfoFlat_c::FxInfoFlat_c()
0036c2a5 W FxInfoFlat_c::~FxInfoFlat_c()
0036c281 W FxInfoFlat_c::~FxInfoFlat_c()
0036b4e9 T FxInfoSize_c::Load(unsigned int, int)
0036b4f9 T FxInfoSize_c::GetValue(float, float, float, float, unsigned char, void*)
0036b4a9 T FxInfoSize_c::FxInfoSize_c()
0036b4a9 T FxInfoSize_c::FxInfoSize_c()
0036c175 W FxInfoSize_c::~FxInfoSize_c()
0036c151 W FxInfoSize_c::~FxInfoSize_c()
0036b0ed T FxInfoWind_c::Load(unsigned int, int)
0036b0f5 T FxInfoWind_c::GetValue(float, float, float, float, unsigned char, void*)
0036b0ad T FxInfoWind_c::FxInfoWind_c()
0036b0ad T FxInfoWind_c::FxInfoWind_c()
0036bfad W FxInfoWind_c::~FxInfoWind_c()
0036bf89 W FxInfoWind_c::~FxInfoWind_c()
0036e015 T FxSystemBP_c::FreePrtFromSystem(FxSystem_c*)
0036e055 T FxSystemBP_c::GetBoundingSphere()
0036e059 T FxSystemBP_c::SetBoundingSphere(RwV3d*, float)
0046db65 T FxSystemBP_c::Load(char*, unsigned int, int)
0036dfd1 T FxSystemBP_c::Render(RwCamera*, float, unsigned char)
0036df99 T FxSystemBP_c::Unload()
0036df9b T FxSystemBP_c::Update(float)
0036df73 T FxSystemBP_c::FxSystemBP_c()
0036df73 T FxSystemBP_c::FxSystemBP_c()
0036df81 T FxSystemBP_c::~FxSystemBP_c()
0036df81 T FxSystemBP_c::~FxSystemBP_c()
0036df85 T FxSystemBP_c::operator new(unsigned int)
005bbb25 T RenderBuffer::StopStoring()
005bba81 T RenderBuffer::StartStoring(int, int, unsigned short**, RxObjSpace3DVertex**)
005bade5 T RenderBuffer::ClearRenderBuffer()
00a53754 B RenderBuffer::IndicesToBeStored
00a53758 B RenderBuffer::VerticesToBeStored
005bb2a9 T RenderBuffer::RenderStuffInBuffer()
0029ee4d W SelectScreen::GetScrollY()
0029f861 W SelectScreen::GetMenuLeft()
0029eeb5 W SelectScreen::IsScrolling()
0029ede1 W SelectScreen::GetMenuRight()
002a4ac9 W SelectScreen::OnSocialClub(SelectScreen*, int)
002a3ab3 W SelectScreen::MenuSelection::Deselected()
002a3ab1 W SelectScreen::MenuSelection::SetDefault()
002a39dd W SelectScreen::MenuSelection::GetTextPercent()
002a3ab5 W SelectScreen::MenuSelection::Render(SelectScreen*, CVector2D, CVector2D, float)
002a39e7 W SelectScreen::MenuSelection::GetColor()
002a3a01 W SelectScreen::MenuSelection::GetTitle()
002a75b9 W SelectScreen::MenuSelection::~MenuSelection()
0029eeab W SelectScreen::GetScissorRect()
0029ee49 W SelectScreen::LoopSelections()
002a4241 W SelectScreen::ActionSelection::HandleInput(SelectScreen*, float)
002a4239 W SelectScreen::ActionSelection::GetTextPercent()
002a4235 W SelectScreen::ActionSelection::~ActionSelection()
002a490d W SelectScreen::SettingSelection::Deselected()
002a48ed W SelectScreen::SettingSelection::SetDefault()
002a44bd W SelectScreen::SettingSelection::HandleInput(SelectScreen*, float)
002a42ad W SelectScreen::SettingSelection::Render(SelectScreen*, CVector2D, CVector2D, float)
002a42a9 W SelectScreen::SettingSelection::~SettingSelection()
0029e9fd W SelectScreen::OnRestoreDefaults(SelectScreen*, int)
0029f349 W SelectScreen::Render(int)
0029eed9 W SelectScreen::Update(float)
0029e8cd W SelectScreen::AddItem(SelectScreen::MenuSelection*)
0029eea3 W SelectScreen::GetEndY()
0029ee59 W SelectScreen::GetYSize(int)
0029ee51 W SelectScreen::GetStartY()
0029eec9 W SelectScreen::~SelectScreen()
002a7d8d W SelectScreen::~SelectScreen()
0027cb49 W ANDThreadData::Destroy(void*)
004521e5 T BreakObject_c::DoCollision(BreakGroup_t*, float)
004515f5 T BreakObject_c::SetBreakInfo(BreakInfo_t*, int)
004513d9 T BreakObject_c::SetGroupData(RwMatrixTag*, RwV3d*, float)
00451181 T BreakObject_c::CalcGroupCenter(BreakGroup_t*)
00451e41 T BreakObject_c::DoCollisionResponse(BreakGroup_t*, float, RwV3d*, float)
00451de1 T BreakObject_c::Exit()
00451bd1 T BreakObject_c::Init(CObject*, RwV3d*, float, int)
004524b9 T BreakObject_c::Render(unsigned char)
00452219 T BreakObject_c::Update(float)
00451175 T BreakObject_c::BreakObject_c()
00451175 T BreakObject_c::BreakObject_c()
0045117d T BreakObject_c::~BreakObject_c()
0045117d T BreakObject_c::~BreakObject_c()
0027d54d T CAEBankLoader::Initialise()
0027d7c9 T CAEBankLoader::GetBankLookup(unsigned short)
0027d575 T CAEBankLoader::LoadBankSlotFile()
0027d641 T CAEBankLoader::LoadBankLookupFile()
0027d705 T CAEBankLoader::LoadSFXPakLookupFile()
0027d525 T CAEBankLoader::CAEBankLoader()
0027d525 T CAEBankLoader::CAEBankLoader()
0027d52b T CAEBankLoader::~CAEBankLoader()
0027d52b T CAEBankLoader::~CAEBankLoader()
003953b9 T CAEDataStream::FillBuffer(void*, unsigned int)
00395453 T CAEDataStream::Initialise()
00395405 T CAEDataStream::GetCurrentPosition()
00395417 T CAEDataStream::Seek(long, int)
003953a5 T CAEDataStream::Close()
0039535d T CAEDataStream::CAEDataStream(int, char*, int, int, bool)
0039535d T CAEDataStream::CAEDataStream(int, char*, int, int, bool)
00395381 T CAEDataStream::~CAEDataStream()
00395381 T CAEDataStream::~CAEDataStream()
0027ef05 T CAEMP3Decoder::FillBuffer(void*, unsigned long, int*)
0027efb9 T CAEMP3Decoder::Initialise()
0027f119 W CAEMP3Decoder::GetStreamID()
0027f0b1 T CAEMP3Decoder::GetSampleRate()
0027eddd T CAEMP3Decoder::DecodeEntireFile(unsigned char*, unsigned int, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
0027f0bf T CAEMP3Decoder::GetStreamLengthMs()
0027f0cd T CAEMP3Decoder::GetStreamPlayTimeMs()
0027ef93 T CAEMP3Decoder::Feed(unsigned int)
0027f0db T CAEMP3Decoder::SetCursor(unsigned long)
0027ecf1 T CAEMP3Decoder::CAEMP3Decoder(CAEDataStream*, bool)
0027ecf1 T CAEMP3Decoder::CAEMP3Decoder(CAEDataStream*, bool)
0027ed8d T CAEMP3Decoder::~CAEMP3Decoder()
0027ed41 T CAEMP3Decoder::~CAEMP3Decoder()
0027ed41 T CAEMP3Decoder::~CAEMP3Decoder()
004c33a9 T CAcquaintance::SetAcquaintances(int, unsigned int)
004c34cf T CAcquaintance::SetAsAcquaintance(int, unsigned int)
004c3549 T CAcquaintance::ClearAcquaintances(int)
004c3537 T CAcquaintance::ClearAsAcquaintance(int, unsigned int)
005c2cf5 T CBrightLights::RegisterOne(CVector, CVector, CVector, CVector, unsigned char, unsigned char, unsigned char, unsigned char)
00a56754 B CBrightLights::aBrightLights
00a56750 B CBrightLights::NumBrightLights
005c2c79 T CBrightLights::RenderOutGeometryBuffer()
005bfb41 T CBrightLights::Init()
005c24c5 T CBrightLights::Render()
005bfad9 T CBulletTraces::Init()
005c0c55 T CBulletTraces::Render()
005c06b1 T CBulletTraces::Update()
00a56340 B CBulletTraces::aTraces
005c1df9 T CBulletTraces::AddTrace(CVector*, CVector*, float, unsigned int, unsigned char)
005c1bb5 T CBulletTraces::AddTrace(CVector*, CVector*, int, CEntity*)
00509181 T CCarEnterExit::AddInCarAnim(CVehicle const&, CPed*, bool)
00508813 T CCarEnterExit::IsPedHealthy(CPed const&)
00508695 T CCarEnterExit::IsCarDoorInUse(CVehicle const&, int, int)
00508735 T CCarEnterExit::IsCarDoorReady(CVehicle const&, int)
00508589 T CCarEnterExit::ComputeDoorFlag(CVehicle const&, int, bool)
0050a9cd T CCarEnterExit::QuitEnteringCar(CPed*, CVehicle*, int, bool)
0050875f T CCarEnterExit::CarHasDoorToOpen(CVehicle const&, int)
00508669 T CCarEnterExit::IsDriverDoorFlag(CVehicle const&, unsigned char, bool)
00508801 T CCarEnterExit::IsVehicleHealthy(CVehicle const&)
0050910f T CCarEnterExit::RemoveCarSitAnim(CPed const&)
00509153 T CCarEnterExit::RemoveGetInAnims(CPed const&)
0050878b T CCarEnterExit::CarHasDoorToClose(CVehicle const&, int)
0050807d T CCarEnterExit::GetNearestCarDoor(CPed const&, CVehicle const&, CVector&, int&)
0050aac9 T CCarEnterExit::SetPedInCarDirect(CPed*, CVehicle*, int, bool)
005087b7 T CCarEnterExit::CarHasOpenableDoor(CVehicle const&, int, CPed const&)
00508b09 T CCarEnterExit::IsClearToDriveAway(CVehicle const&)
00508975 T CCarEnterExit::IsVehicleStealable(CVehicle const&, CPed const&)
0061e440 R CCarEnterExit::ms_fSmallTurnAmount
0050890d T CCarEnterExit::ComputeSlowJackedPed(CVehicle const&, int)
005088f1 T CCarEnterExit::ComputeQuickJackedPed(CVehicle const&, int)
00508871 T CCarEnterExit::IsCarSlowJackRequired(CVehicle const&, int, CPed const&)
006b03f8 D CCarEnterExit::ms_fPlayerMinQuitTime
0050882b T CCarEnterExit::IsCarQuickJackPossible(CVehicle const&, int, CPed const&)
00508c99 T CCarEnterExit::IsPlayerToQuitCarEnter(CPed const&, CVehicle const&, int, CTask*)
00507951 T CCarEnterExit::IsRoomForPedToLeaveCar(CVehicle const&, int, CVector*)
005087c9 T CCarEnterExit::CarHasPartiallyOpenDoor(CVehicle const&, int)
005085f9 T CCarEnterExit::ComputeOppositeDoorFlag(CVehicle const&, int, bool)
00508bbd T CCarEnterExit::ComputeTargetDoorToExit(CVehicle const&, CPed const&)
009fef80 B CCarEnterExit::ms_vecPedBedLAnimOffset
009fef8c B CCarEnterExit::ms_vecPedBedRAnimOffset
009fef98 B CCarEnterExit::ms_vecPedDeskAnimOffset
00507cf1 T CCarEnterExit::GetPositionToOpenCarDoor(CVehicle const&, int)
009fef7c B CCarEnterExit::ms_bPedOffsetsCalculated
009fefa4 B CCarEnterExit::ms_vecPedChairAnimOffset
009fef64 B CCarEnterExit::ms_vecPedGetUpAnimOffset
00507561 T CCarEnterExit::GetNearestCarPassengerDoor(CPed const&, CVehicle const&, CVector&, int&, bool, bool, bool)
0061e44c R CCarEnterExit::ms_fMaxSpeed_CanDragPedOut
005090df T CCarEnterExit::MakeUndraggedDriverPedLeaveCar(CVehicle const&, CPed const&)
0061e448 R CCarEnterExit::ms_fMinSpeedPlayerCanJumpOutCar
0061e444 R CCarEnterExit::ms_fMinSpeedPlayerCanStepOutCar
00508c5d T CCarEnterExit::ComputePassengerIndexFromCarDoor(CVehicle const&, int)
0061e450 R CCarEnterExit::ms_fMaxSpeed_PlayerCanDragPedOut
0050901d T CCarEnterExit::MakeUndraggedPassengerPedsLeaveCar(CVehicle const&, CPed const*, CPed const*)
00509229 T CCarEnterExit::SetAnimOffsetForEnterOrExitVehicle()
00508c17 T CCarEnterExit::ComputeTargetDoorToEnterAsPassenger(CVehicle const&, int)
009fef70 B CCarEnterExit::ms_vecPedQuickDraggedOutCarAnimOffset
0050849d T CCarEnterExit::IsPathToDoorBlockedByVehicleCollisionModel(CPed const&, CVehicle&, CVector const&)
0056d589 T CCarGenerator::CalcNextGen()
0056de01 T CCarGenerator::CheckForBlockage(int)
0056d599 T CCarGenerator::DoInternalProcessing()
0056e069 T CCarGenerator::CheckIfWithinRangeOfAnyPlayers()
0056e291 T CCarGenerator::Setup(float, float, float, float, int, short, short, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short, unsigned char, unsigned char)
0056dfad T CCarGenerator::Process()
0056d571 T CCarGenerator::SwitchOn()
0056d569 T CCarGenerator::SwitchOff()
00959164 B CCreepingFire::m_aFireStatus
003f3629 T CCreepingFire::SetReadyToBurn()
003f2bb5 T CCreepingFire::TryToStartFireAtCoors(CVector, signed char, bool, bool, float)
003f3641 T CCreepingFire::Update()
0049edf9 T CEmergencyPed::ProcessControl()
0049ee4d T CEmergencyPed::InRange(CPed*)
0049edc9 T CEmergencyPed::CEmergencyPed(unsigned int, unsigned int)
0049edc9 T CEmergencyPed::CEmergencyPed(unsigned int, unsigned int)
0049eeb1 W CEmergencyPed::~CEmergencyPed()
0060ffd4 R CEventDeadPed::ms_fNoticeDeadPedRange
0060ffd8 R CEventDeadPed::ms_fNoticeStealthDeadPedRange
00373b31 T CEventDeadPed::CEventDeadPed(CPed*, bool, int)
00373b31 T CEventDeadPed::CEventDeadPed(CPed*, bool, int)
00373ba1 T CEventDeadPed::~CEventDeadPed()
00373b79 T CEventDeadPed::~CEventDeadPed()
00373b79 T CEventDeadPed::~CEventDeadPed()
006867a8 D CEventGunShot::ms_fGunShotSenseRangeForRiot2
00370b7d T CEventGunShot::CEventGunShot(CEntity*, CVector, CVector, bool)
00370b7d T CEventGunShot::CEventGunShot(CEntity*, CVector, CVector, bool)
00370c0d T CEventGunShot::~CEventGunShot()
00370be5 T CEventGunShot::~CEventGunShot()
00370be5 T CEventGunShot::~CEventGunShot()
0037b819 T CEventHandler::HandleEvents()
003843dd T CEventHandler::RegisterKill(CPed const*, CEntity const*, eWeaponType, bool)
0037c6c9 T CEventHandler::FlushImmediately()
0037b451 T CEventHandler::IsTemporaryEvent(CEvent const&)
003844a3 T CEventHandler::RecordActiveEvent(CEvent const&)
003844a1 T CEventHandler::RecordPassiveEvent(CEvent const&)
0037f82d T CEventHandler::ComputeDeathResponse(CEvent*, CTask*, CTask*)
0037f01d T CEventHandler::ComputeDamageResponse(CEvent*, CTask*, CTask*, CTask*)
00383b41 T CEventHandler::ComputeDangerResponse(CEvent*, CTask*, CTask*)
00382a25 T CEventHandler::ComputeOnFireResponse(CEvent*, CTask*, CTask*)
00380609 T CEventHandler::ComputeReviveResponse(CEvent*, CTask*, CTask*)
00383c2b T CEventHandler::IsKillTaskAppropriate(CPed*, CPed*, CEvent const&)
0037f851 T CEventHandler::ComputeDeadPedResponse(CEvent*, CTask*, CTask*)
00382b59 T CEventHandler::ComputeInWaterResponse(CEvent*, CTask*, CTask*)
003826a9 T CEventHandler::ComputeSeenCopResponse(CEvent*, CTask*, CTask*)
0038077d T CEventHandler::ComputeSexyPedResponse(CEvent*, CTask*, CTask*)
00383351 T CEventHandler::ComputeSpecialResponse(CEvent*, CTask*, CTask*)
00383aed T CEventHandler::ComputeAreaCodesResponse(CEvent*, CTask*, CTask*)
0038094d T CEventHandler::ComputeAttractorResponse(CEvent*, CTask*, CTask*)
0037bb61 T CEventHandler::ComputeEventResponseTask(CEvent*, CTask*)
0037c55d T CEventHandler::ComputeEventResponseTask(CPed const&, CEvent const&)
003827d5 T CEventHandler::ComputeLowHealthResponse(CEvent*, CTask*, CTask*)
00381a5d T CEventHandler::ComputePedFriendResponse(CEvent*, CTask*, CTask*)
00381b15 T CEventHandler::ComputePedThreatResponse(CEvent*, CTask*, CTask*)
003808e9 T CEventHandler::ComputePedToFleeResponse(CEvent*, CTask*, CTask*)
00380245 T CEventHandler::ComputeShotFiredResponse(CEvent*, CTask*, CTask*)
003839c9 T CEventHandler::ComputeFireNearbyResponse(CEvent*, CTask*, CTask*)
003812e1 T CEventHandler::ComputeGunAimedAtResponse(CEvent*, CTask*, CTask*)
00382bad T CEventHandler::ComputePassObjectResponse(CEvent*, CTask*, CTask*)
00380851 T CEventHandler::ComputePedToChaseResponse(CEvent*, CTask*, CTask*)
00380715 T CEventHandler::ComputeChatPartnerResponse(CEvent*, CTask*, CTask*)
00383b0d T CEventHandler::ComputeOnEscalatorResponse(CEvent*, CTask*, CTask*)
003807bd T CEventHandler::ComputeSexyVehicleResponse(CEvent*, CTask*, CTask*)
00382b91 T CEventHandler::ComputeSignalAtPedResponse(CEvent*, CTask*, CTask*)
003819eb T CEventHandler::ComputeVehicleDiedResponse(CEvent*, CTask*, CTask*)
00382a69 T CEventHandler::ComputeWaterCannonResponse(CEvent*, CTask*, CTask*)
00380d39 T CEventHandler::ComputeKnockOffBikeResponse(CEvent*, CTask*, CTask*)
003837a5 T CEventHandler::ComputeCarUpsideDownResponse(CEvent*, CTask*, CTask*)
00383c15 T CEventHandler::ComputeDontJoinGroupResponse(CEvent*, CTask*, CTask*)
0037e9c1 T CEventHandler::ComputeDraggedOutCarResponse(CEvent*, CTask*, CTask*)
00382781 T CEventHandler::ComputePedSoundQuietResponse(CEvent*, CTask*, CTask*)
00381911 T CEventHandler::ComputeScriptCommandResponse(CEvent*, CTask*, CTask*)
00382fc5 T CEventHandler::ComputeVehicleDamageResponse(CEvent*, CTask*, CTask*)
00382c5d T CEventHandler::ComputeVehicleOnFireResponse(CEvent*, CTask*, CTask*)
00380d11 T CEventHandler::ComputeVehicleToStealResponse(CEvent*, CTask*, CTask*)
00382b6d T CEventHandler::ComputeInteriorUseInfoResponse(CEvent*, CTask*, CTask*)
0037e565 T CEventHandler::ComputeObjectCollisionResponse(CEvent*, CTask*, CTask*)
00382821 T CEventHandler::ComputeReallyLowHealthResponse(CEvent*, CTask*, CTask*)
003839f5 T CEventHandler::ComputeSeenPanickedPedResponse(CEvent*, CTask*, CTask*)
0038286d T CEventHandler::ComputeLowAngerAtPlayerResponse(CEvent*, CTask*, CTask*)
0037c701 T CEventHandler::ComputeVehicleCollisionResponse(CEvent*, CTask*, CTask*)
00380243 T CEventHandler::ComputeVehicleHitAndRunResponse(CEvent*, CTask*, CTask*)
0037e5b5 T CEventHandler::ComputeBuildingCollisionResponse(CEvent*, CTask*, CTask*)
00382f51 T CEventHandler::ComputeCopCarBeingStolenResponse(CEvent*, CTask*, CTask*)
00382bc9 T CEventHandler::ComputeCreatePartnerTaskResponse(CEvent*, CTask*, CTask*)
00382949 T CEventHandler::ComputeHighAngerAtPlayerResponse(CEvent*, CTask*, CTask*)
00380b09 T CEventHandler::ComputePedEnteredVehicleResponse(CEvent*, CTask*, CTask*)
00382745 T CEventHandler::ComputePedThreatBadlyLitResponse(CEvent*, CTask*, CTask*)
00382c49 T CEventHandler::ComputePlayerWantedLevelResponse(CEvent*, CTask*, CTask*)
003838f1 T CEventHandler::ComputeShotFiredWhizzedByResponse(CEvent*, CTask*, CTask*)
003835dd T CEventHandler::ComputeGotKnockedOverByCarResponse(CEvent*, CTask*, CTask*)
0037cafd T CEventHandler::ComputePedCollisionWithPedResponse(CEvent*, CTask*, CTask*)
00383c71 T CEventHandler::ComputePersonalityResponseToDamage(CEventDamage*, CEntity*)
003809a5 T CEventHandler::ComputePotentialPedCollideResponse(CEvent*, CTask*, CTask*)
00383825 T CEventHandler::ComputePotentialWalkIntoFireResponse(CEvent*, CTask*, CTask*)
00383759 T CEventHandler::ComputeObjectCollisionPassiveResponse(CEvent*, CTask*, CTask*)
0037d5b1 T CEventHandler::ComputePedCollisionWithPlayerResponse(CEvent*, CTask*, CTask*)
0037dfc9 T CEventHandler::ComputePlayerCollisionWithPedResponse(CEvent*, CTask*, CTask*)
00382a65 T CEventHandler::ComputeBuildingCollisionPassiveResponse(CEvent*, CTask*, CTask*)
0037fa45 T CEventHandler::ComputeVehiclePotentialCollisionResponse(CEvent*, CTask*, CTask*)
003801c1 T CEventHandler::ComputeVehiclePotentialPassiveCollisionResponse(CEvent*, CTask*, CTask*)
0037c647 T CEventHandler::Flush()
0037b5ed T CEventHandler::CEventHandler(CPed*)
0037b5ed T CEventHandler::CEventHandler(CPed*)
0037b60f T CEventHandler::~CEventHandler()
0037b60f T CEventHandler::~CEventHandler()
00376c69 T CEventInWater::CEventInWater(float)
00376c69 T CEventInWater::CEventInWater(float)
00376c85 T CEventInWater::~CEventInWater()
00378119 T CEventInWater::~CEventInWater()
00378119 T CEventInWater::~CEventInWater()
003746e9 T CEventRevived::CEventRevived()
003746e9 T CEventRevived::CEventRevived()
00374701 T CEventRevived::~CEventRevived()
00378119 T CEventRevived::~CEventRevived()
00378119 T CEventRevived::~CEventRevived()
004bfbc1 T CEventScanner::ScanForEvents(CPed&)
004bfb95 T CEventScanner::ScanForEventsNow(CPed const&, int)
009efb88 B CEventScanner::m_sDeadPedWalkingTimer
004bffc1 T CEventScanner::Clear()
004bfaa5 T CEventScanner::CEventScanner()
004bfaa5 T CEventScanner::CEventScanner()
004bfb91 T CEventScanner::~CEventScanner()
004bfb91 T CEventScanner::~CEventScanner()
0037828d W CEventSeenCop::~CEventSeenCop()
0037481d T CEventSexyPed::CEventSexyPed(CPed*)
0037481d T CEventSexyPed::CEventSexyPed(CPed*)
00374885 T CEventSexyPed::~CEventSexyPed()
0037485d T CEventSexyPed::~CEventSexyPed()
0037485d T CEventSexyPed::~CEventSexyPed()
00377201 T CEventSpecial::CEventSpecial()
00377201 T CEventSpecial::CEventSpecial()
00377225 T CEventSpecial::~CEventSpecial()
00378119 T CEventSpecial::~CEventSpecial()
00378119 T CEventSpecial::~CEventSpecial()
003f5425 T CLocalisation::FrenchGame()
003f5411 T CLocalisation::GermanGame()
003f5361 T CLocalisation::Initialise()
003f54b1 T CLocalisation::KillFrenzy()
003f54ed T CLocalisation::PedsOnFire()
003f5489 T CLocalisation::ShootLimbs()
0095989c B CLocalisation::frenchGame
0095989d B CLocalisation::germanGame
003f5471 T CLocalisation::Prostitutes()
003f549d T CLocalisation::KnockDownPeds()
003f53b9 T CLocalisation::SetFrenchGame()
003f53e5 T CLocalisation::SetGermanGame()
003f538d T CLocalisation::SetNormalGame()
003f5475 T CLocalisation::KickingWhenDown()
003f5459 T CLocalisation::ScreamsFromKills()
003f54c5 T CLocalisation::StealFromDeadPed()
003f5455 T CLocalisation::Porn()
003f5451 T CLocalisation::Blood()
003f5439 T CLocalisation::Metric()
003f54d9 T CLocalisation::KillPeds()
0095989e B CLocalisation::nastyGame
00574865 T CMonsterTruck::ProcessControl()
0057483d T CMonsterTruck::ResetSuspension()
00574b5d T CMonsterTruck::ExtendSuspension()
00574f01 T CMonsterTruck::ProcessSuspension()
005758eb W CMonsterTruck::SetUpWheelColModel(CColModel*)
006b1230 D CMonsterTruck::DUMPER_COL_ANGLEMULT
00574595 T CMonsterTruck::SetupSuspensionLines()
00575671 T CMonsterTruck::ProcessEntityCollision(CEntity*, CColPoint*)
00574ca5 T CMonsterTruck::ProcessControlCollisionCheck(bool)
005758ef W CMonsterTruck::BurstTyre(unsigned char, bool)
00575521 T CMonsterTruck::PreRender()
0057453d T CMonsterTruck::CMonsterTruck(int, unsigned char)
0057453d T CMonsterTruck::CMonsterTruck(int, unsigned char)
00574585 T CMonsterTruck::~CMonsterTruck()
00574581 T CMonsterTruck::~CMonsterTruck()
00574581 T CMonsterTruck::~CMonsterTruck()
005a6ae1 T CMovingThings::Render_BeforeClouds()
005a627d T CMovingThings::Init()
005a6bc9 T CMovingThings::Render()
005a6721 T CMovingThings::Update()
005a6531 T CMovingThings::Shutdown()
004a8a87 T CPedAttractor::RegisterPed(CPed*)
004a91b1 T CPedAttractor::AbortPedTasks()
004a912b T CPedAttractor::DeRegisterPed(CPed*)
004a87ed T CPedAttractor::SetTaskForPed(CPed*, CTask*)
004a8d51 T CPedAttractor::BroadcastArrival(CPed*)
004a8f6d T CPedAttractor::BroadcastDeparture(CPed*)
009ee2bc B CPedAttractor::ms_tasks
004a85b5 T CPedAttractor::CPedAttractor(C2dEffect*, CEntity*, int, int, float, float, float, float, float, float, float)
004ac38d W CPedAttractor::~CPedAttractor()
004ac4ad W CPedAttractor::~CPedAttractor()
004a9259 T CPedAttractor::operator delete(void*)
004a91f5 T CPedAttractor::operator new(unsigned int)
00386cd1 W CPedModelInfo::GetModelType()
00386935 T CPedModelInfo::AddXtraAtomics(RpClump*)
0038687d T CPedModelInfo::DeleteRwObject()
00386c49 T CPedModelInfo::IncrementVoice()
00386937 T CPedModelInfo::SetFaceTexture(RwTexture*)
00686850 D CPedModelInfo::m_pColNodeInfos
00386711 T CPedModelInfo::CreateHitColModelSkinned(RpClump*)
00386959 T CPedModelInfo::AnimatePedColModelSkinned(RpClump*)
00386b25 T CPedModelInfo::AnimatePedColModelSkinnedWorld(RpClump*)
003866c5 T CPedModelInfo::SetClump(RpClump*)
006867b4 D CPedModelInfo::m_pPedIds
00386ca5 W CPedModelInfo::~CPedModelInfo()
00386c81 W CPedModelInfo::~CPedModelInfo()
004c296d T CPedPlacement::FindZCoorForPed(CVector*)
004c2805 T CPedPlacement::IsPositionClearForPed(CVector const&, float, int, CEntity**, unsigned char, unsigned char, unsigned char)
004c28b1 T CPedPlacement::IsPositionClearOfCars(CPed const*)
004c2881 T CPedPlacement::IsPositionClearOfCars(CVector const*)
005a6ee3 T CPlaneBanners::RegisterPoint(CVector, unsigned int)
005a6edd T CPlaneBanners::Init()
005a6edf T CPlaneBanners::Render()
005a6ee1 T CPlaneBanners::Update()
0040e479 T CQuadTreeNode::DeleteItem(void*)
0040e4f5 T CQuadTreeNode::DeleteItem(void*, CRect const&)
0040e215 T CQuadTreeNode::FindSector(CRect const&)
0040e031 T CQuadTreeNode::FindSector(CVector2D const&)
0040e095 T CQuadTreeNode::ForAllMatching(CRect const&, void (*)(CRect const&, void*))
0040e187 T CQuadTreeNode::ForAllMatching(CVector2D const&, void (*)(CVector2D const&, void*))
0040ddd1 T CQuadTreeNode::GetAllMatching(CRect const&, CPtrListSingleLink&)
0040df99 T CQuadTreeNode::GetAllMatching(CVector2D const&, CPtrListSingleLink&)
0095ad44 B CQuadTreeNode::ms_pQuadTreeNodePool
0040dd65 T CQuadTreeNode::GetAll(CPtrListSingleLink&)
0040e29d T CQuadTreeNode::AddItem(void*, CRect const&)
0040ded1 T CQuadTreeNode::InSector(CRect const&, int)
0040db3d T CQuadTreeNode::InitPool()
0040dc59 T CQuadTreeNode::CQuadTreeNode(CRect const&, int)
0040dc59 T CQuadTreeNode::CQuadTreeNode(CRect const&, int)
0040dc79 T CQuadTreeNode::~CQuadTreeNode()
0040dc79 T CQuadTreeNode::~CQuadTreeNode()
0040dc29 T CQuadTreeNode::operator delete(void*)
0040dbc5 T CQuadTreeNode::operator new(unsigned int)
00581691 T CRideAnimData::CRideAnimData()
00581691 T CRideAnimData::CRideAnimData()
005816a3 T CRideAnimData::~CRideAnimData()
005816a3 T CRideAnimData::~CRideAnimData()
005b7b11 T CShadowCamera::RasterBlur(RwRaster*, int)
005b7059 T CShadowCamera::SetFrustum(float)
005b73a9 T CShadowCamera::InvertRaster()
005b7029 T CShadowCamera::ReInitRasters()
005b7b1b T CShadowCamera::RasterGradient(RwRaster*)
005b7a01 T CShadowCamera::RasterResample(RwRaster*)
005b7485 T CShadowCamera::DrawOutlineBorder(RwRGBA const&)
005b77f1 T CShadowCamera::GetRwRenderRaster()
005b79fb T CShadowCamera::GetRwRenderTexture()
005b76a5 T CShadowCamera::MakeGradientRaster()
005b784d T CShadowCamera::ShadowRasterRender(RwV2d*)
005b77f7 T CShadowCamera::ApplyAlphaMapToRaster()
005b6fb5 T CShadowCamera::Create(int)
005b717d T CShadowCamera::Update(RpClump*, bool, CPed*)
005b7625 T CShadowCamera::Update(RpAtomic*)
005b6f67 T CShadowCamera::Destroy()
005b70ad T CShadowCamera::SetLight(RpLight*)
005b70ef T CShadowCamera::SetCenter(RwV3d*)
005b6f51 T CShadowCamera::CShadowCamera()
005b6f51 T CShadowCamera::CShadowCamera()
005b6f59 T CShadowCamera::~CShadowCamera()
005b6f59 T CShadowCamera::~CShadowCamera()
005b9045 T CStaticShadow::Free()
005cb811 T CWaterCannons::Init()
005cbbad T CWaterCannons::Render()
005cbb21 T CWaterCannons::Update()
00a7c360 B CWaterCannons::aCannons
005cb971 T CWaterCannons::UpdateOne(unsigned int, CVector*, CVector*)
002b44c7 T CWidgetButton::DrawHelpIcon(char const*, float, float, float, int)
002b44b5 T CWidgetButton::SetFillSprite(char const*, float, float)
006fa2ec B CWidgetButton::m_StaticSprite
002b4595 T CWidgetButton::DrawHelpIconExplicit(HIDMapping, char const*, float, float, float, int)
002b420d T CWidgetButton::Draw()
002b41bd T CWidgetButton::Update()
002b4685 W CWidgetButton::GetName()
002b4395 T CWidgetButton::Pulsate()
002b468d W CWidgetButton::IsButton()
002b4175 T CWidgetButton::CWidgetButton(char const*, WidgetPosition const&, unsigned int, unsigned int, HIDMapping)
002b4175 T CWidgetButton::CWidgetButton(char const*, WidgetPosition const&, unsigned int, unsigned int, HIDMapping)
002b4659 W CWidgetButton::~CWidgetButton()
002b4631 W CWidgetButton::~CWidgetButton()
002bf609 T CWidgetRacing::RenderRowText(char const*, CRect, char const*, float)
002bf715 T CWidgetRacing::SetWidgetValue2(float, float)
002bf72f T CWidgetRacing::SetWidgetValue3(float, float, float)
002bf2c5 T CWidgetRacing::Draw()
002bf295 T CWidgetRacing::Update()
002bf765 W CWidgetRacing::GetName()
002bf261 T CWidgetRacing::CWidgetRacing(char const*, WidgetPosition const&)
002bf261 T CWidgetRacing::CWidgetRacing(char const*, WidgetPosition const&)
002bf755 W CWidgetRacing::~CWidgetRacing()
002bf949 T CWidgetRegion::Draw()
002bf945 T CWidgetRegion::Update()
002bfc01 W CWidgetRegion::GetName()
002bfc09 W CWidgetRegion::IsRegion()
002bf969 T CWidgetRegion::StretchX(float)
002bf99d T CWidgetRegion::StretchY(float)
002bf9d1 T CWidgetRegion::DrawFrame(float, CRect, float)
002bf921 T CWidgetRegion::CWidgetRegion(char const*, WidgetPosition const&, int, HIDMapping)
002bf921 T CWidgetRegion::CWidgetRegion(char const*, WidgetPosition const&, int, HIDMapping)
002bfbf1 W CWidgetRegion::~CWidgetRegion()
002c6521 T CWidgetReplay::OnReleasedTouch()
002c64f5 T CWidgetReplay::ForceStopRecording()
002c6615 T CWidgetReplay::Draw()
002c647d T CWidgetReplay::Update()
002c669d W CWidgetReplay::GetName()
002c640d T CWidgetReplay::CWidgetReplay(char const*, WidgetPosition const&)
002c640d T CWidgetReplay::CWidgetReplay(char const*, WidgetPosition const&)
002c6671 W CWidgetReplay::~CWidgetReplay()
002c6649 W CWidgetReplay::~CWidgetReplay()
002c6dbd T CWidgetSlider::SetupNotches(int, float, float)
002c77dd W CWidgetSlider::GetWidgetValue()
002c7705 T CWidgetSlider::SetSliderRange(float, float)
002c7693 T CWidgetSlider::SetWidgetValue(float)
002c766d T CWidgetSlider::GetNotchedValue()
002c75ed T CWidgetSlider::GetTweenedValue()
002c7041 T CWidgetSlider::Draw()
002c6e09 T CWidgetSlider::Update()
002c77d1 W CWidgetSlider::GetName()
002c6c61 T CWidgetSlider::CWidgetSlider(char const*, WidgetPosition const&, unsigned int, unsigned int, unsigned int, CTouchInterface::WidgetIDs, CTouchInterface::WidgetIDs)
002c6c61 T CWidgetSlider::CWidgetSlider(char const*, WidgetPosition const&, unsigned int, unsigned int, unsigned int, CTouchInterface::WidgetIDs, CTouchInterface::WidgetIDs)
002c779d W CWidgetSlider::~CWidgetSlider()
002c776d W CWidgetSlider::~CWidgetSlider()
002a4b05 W DisplayScreen::DisplayScreen()
002a4c95 W DisplayScreen::~DisplayScreen()
0046df1d T FxEmitterBP_c::LoadTextures(FxName32_t*, int)
00366d55 T FxEmitterBP_c::CreateInstance()
00368061 T FxEmitterBP_c::RenderHeatHaze(RwCamera*, unsigned int, float)
00366dfd T FxEmitterBP_c::UpdateParticle(float, FxEmitterPrt_c*)
003689f1 T FxEmitterBP_c::FreePrtFromPrim(FxSystem_c*)
00368035 T FxEmitterBP_c::IsFxInfoPresent(int)
0046e039 T FxEmitterBP_c::Load(unsigned int, int, FxName32_t*)
003670dd T FxEmitterBP_c::Render(RwCamera*, unsigned int, float, unsigned char)
00366d75 T FxEmitterBP_c::Update(float)
00366d11 T FxEmitterBP_c::FxEmitterBP_c()
00366d11 T FxEmitterBP_c::FxEmitterBP_c()
00366d31 T FxEmitterBP_c::~FxEmitterBP_c()
00366d2d T FxEmitterBP_c::~FxEmitterBP_c()
00366d2d T FxEmitterBP_c::~FxEmitterBP_c()
00366d41 T FxEmitterBP_c::operator new(unsigned int)
0036a5bd T FxInfoEmDir_c::Load(unsigned int, int)
0036a5c3 T FxInfoEmDir_c::GetValue(float, float, float, float, unsigned char, void*)
0036a57d T FxInfoEmDir_c::FxInfoEmDir_c()
0036a57d T FxInfoEmDir_c::FxInfoEmDir_c()
0036bc1d W FxInfoEmDir_c::~FxInfoEmDir_c()
0036bbf9 W FxInfoEmDir_c::~FxInfoEmDir_c()
0036a6e9 T FxInfoEmPos_c::Load(unsigned int, int)
0036a6ef T FxInfoEmPos_c::GetValue(float, float, float, float, unsigned char, void*)
0036a6a9 T FxInfoEmPos_c::FxInfoEmPos_c()
0036a6a9 T FxInfoEmPos_c::FxInfoEmPos_c()
0036bd01 W FxInfoEmPos_c::~FxInfoEmPos_c()
0036bcdd W FxInfoEmPos_c::~FxInfoEmPos_c()
0036b3ad T FxInfoFloat_c::Load(unsigned int, int)
0036b3b3 T FxInfoFloat_c::GetValue(float, float, float, float, unsigned char, void*)
0036b381 T FxInfoFloat_c::FxInfoFloat_c()
0036b381 T FxInfoFloat_c::FxInfoFloat_c()
0036c091 W FxInfoFloat_c::~FxInfoFloat_c()
0036c06d W FxInfoFloat_c::~FxInfoFloat_c()
0036a9e5 T FxInfoForce_c::Load(unsigned int, int)
0036a9eb T FxInfoForce_c::GetValue(float, float, float, float, unsigned char, void*)
0036a9a5 T FxInfoForce_c::FxInfoForce_c()
0036a9a5 T FxInfoForce_c::FxInfoForce_c()
0036be31 W FxInfoForce_c::~FxInfoForce_c()
0036be0d W FxInfoForce_c::~FxInfoForce_c()
0036a819 T FxInfoNoise_c::Load(unsigned int, int)
0036a821 T FxInfoNoise_c::GetValue(float, float, float, float, unsigned char, void*)
0036a7d9 T FxInfoNoise_c::FxInfoNoise_c()
0036a7d9 T FxInfoNoise_c::FxInfoNoise_c()
0036bde5 W FxInfoNoise_c::~FxInfoNoise_c()
0036bdc1 W FxInfoNoise_c::~FxInfoNoise_c()
0036bab5 T FxInfoSmoke_c::Load(unsigned int, int)
0036babb T FxInfoSmoke_c::GetValue(float, float, float, float, unsigned char, void*)
0036ba75 T FxInfoSmoke_c::FxInfoSmoke_c()
0036ba75 T FxInfoSmoke_c::FxInfoSmoke_c()
0036c46d W FxInfoSmoke_c::~FxInfoSmoke_c()
0036c449 W FxInfoSmoke_c::~FxInfoSmoke_c()
0036b659 T FxInfoTrail_c::Load(unsigned int, int)
0036b661 T FxInfoTrail_c::GetValue(float, float, float, float, unsigned char, void*)
0036b619 T FxInfoTrail_c::FxInfoTrail_c()
0036b619 T FxInfoTrail_c::FxInfoTrail_c()
0036c259 W FxInfoTrail_c::~FxInfoTrail_c()
0036c235 W FxInfoTrail_c::~FxInfoTrail_c()
005d2391 T HeapBlockDesc::InsertHeapBlock(HeapBlockDesc*)
001d2ded T RQIndexBuffer::Set(void const*, unsigned int)
001d2d11 T RQIndexBuffer::Set(RQIndexBuffer*)
001cb955 T RQIndexBuffer::Create(RQIndexBufferFormat, void const*, unsigned int)
001d2fd5 T RQIndexBuffer::Delete(RQIndexBuffer*)
001d2bc1 T RQIndexBuffer::Update(void const*, unsigned int)
001cba39 T RQIndexBuffer::SetSafe()
006bcc60 B RQIndexBuffer::curBuffer
001cc0dd W RQIndexBuffer::~RQIndexBuffer()
001d2775 T RQVertexState::Apply(RQVertexState*)
001cbbf5 T RQVertexState::Create(RQVertexBuffer*, RQIndexBuffer*, RQVertexBufferDescription*)
001d3255 T RQVertexState::Delete(RQVertexState*)
006bcc5c B RQVertexState::curState
001cc0e7 W RQVertexState::~RQVertexState()
00581169 T cTransmission::InitGearRatios()
00581689 T cTransmission::DisplayGearRatios()
00581641 T cTransmission::CalculateGearForSimpleCar(float, unsigned char&)
00581261 T cTransmission::CalculateDriveAcceleration(float const&, unsigned char&, float&, float const&, float*, float*, unsigned char, unsigned char)
00581165 T cTransmission::cTransmission()
00581165 T cTransmission::cTransmission()
00452733 T BreakManager_c::GetFirstFreeSlot()
004526f9 T BreakManager_c::Add(CObject*, RwV3d*, float, int)
0045267b T BreakManager_c::Exit()
00452677 T BreakManager_c::Init()
004526a7 T BreakManager_c::Render(unsigned char)
0045267d T BreakManager_c::Update(float)
0045274b T BreakManager_c::ResetAll()
00452661 T BreakManager_c::BreakManager_c()
00452661 T BreakManager_c::BreakManager_c()
00452675 T BreakManager_c::~BreakManager_c()
00452675 T BreakManager_c::~BreakManager_c()
00391d29 T CAEAudioEntity::UpdateParameters(CAESound*, short)
009ba280 B CAEAudioEntity::m_pAudioEventVolumes
005ceb29 W CAEAudioEntity::~CAEAudioEntity()
003b987d T CAEWaveDecoder::FillBuffer(void*, unsigned long, int*)
003b9883 T CAEWaveDecoder::Initialise()
003b99b5 W CAEWaveDecoder::GetStreamID()
003b98c9 T CAEWaveDecoder::GetSampleRate()
003b98d9 T CAEWaveDecoder::GetStreamLengthMs()
003b9915 T CAEWaveDecoder::GetStreamPlayTimeMs()
003b995d T CAEWaveDecoder::SetCursor(unsigned long)
003b9849 T CAEWaveDecoder::CAEWaveDecoder(CAEDataStream*)
003b9849 T CAEWaveDecoder::CAEWaveDecoder(CAEDataStream*)
003b986d T CAEWaveDecoder::~CAEWaveDecoder()
003b9869 T CAEWaveDecoder::~CAEWaveDecoder()
003b9869 T CAEWaveDecoder::~CAEWaveDecoder()
002849e5 T CAdjustableHUD::SaveToDisk()
002856e1 T CAdjustableHUD::SetTextures()
006dfe54 B CAdjustableHUD::m_pInstance
002854d9 T CAdjustableHUD::EnableButtons()
00285c25 T CAdjustableHUD::IsValidPosition(CVector2D const&, float, CVector2D*)
00285e49 T CAdjustableHUD::RestoreDefaults()
00286f3d T CAdjustableHUD::GetTopAreaHeight()
00285d15 T CAdjustableHUD::RestoreButtonPositions()
00285b45 T CAdjustableHUD::ConstrainToDraggableRegion(CVector2D&, float)
0028620d T CAdjustableHUD::Draw()
00282101 T CAdjustableHUD::Toggle()
0028269d T CAdjustableHUD::Update()
00282141 T CAdjustableHUD::CAdjustableHUD()
00282141 T CAdjustableHUD::CAdjustableHUD()
002848a5 T CAdjustableHUD::~CAdjustableHUD()
002848a5 T CAdjustableHUD::~CAdjustableHUD()
0038ad79 T CAnimBlendNode::CalcDeltas()
0038a935 T CAnimBlendNode::UpdateTime()
0038af89 T CAnimBlendNode::FindKeyFrame(float)
0038ac1d T CAnimBlendNode::NextKeyFrame()
0038b1d9 T CAnimBlendNode::UpdateCompressed(CVector&, CQuaternion&, float)
0038af21 T CAnimBlendNode::GetEndTranslation(CVector&, float)
0038a9ef T CAnimBlendNode::NextKeyFrameNoCalc()
0038b4bd T CAnimBlendNode::CalcDeltasCompressed()
0038ae35 T CAnimBlendNode::GetCurrentTranslation(CVector&, float)
0038b3fd T CAnimBlendNode::NextKeyFrameCompressed()
0038b63d T CAnimBlendNode::SetupKeyFrameCompressed()
0038b7dd T CAnimBlendNode::GetEndTranslationCompressed(CVector&, float)
0038b695 T CAnimBlendNode::GetCurrentTranslationCompressed(CVector&, float)
0038a925 T CAnimBlendNode::Init()
0038aa95 T CAnimBlendNode::Update(CVector&, CQuaternion&, float)
003851d1 T CBaseModelInfo::Add2dEffect(C2dEffect*)
00385141 T CBaseModelInfo::Get2dEffect(int)
00384fbf W CBaseModelInfo::GetTimeInfo()
00384fc7 W CBaseModelInfo::SetAnimFile(char const*)
003850e5 T CBaseModelInfo::SetColModel(CColModel*, bool)
00385131 T CBaseModelInfo::Init2dEffects()
00384fcb W CBaseModelInfo::GetAnimFileIndex()
0038507b T CBaseModelInfo::SetTexDictionary(char const*, char const*)
003850ad T CBaseModelInfo::ClearTexDictionary()
003850b5 T CBaseModelInfo::AddTexDictionaryRef()
00385205 W CBaseModelInfo::AsAtomicModelInfoPtr()
00384fc9 W CBaseModelInfo::ConvertAnimFileIndex()
0038505b T CBaseModelInfo::DeleteCollisionModel()
003850bd T CBaseModelInfo::RemoveTexDictionaryRef()
00384fb7 W CBaseModelInfo::AsLodAtomicModelInfoPtr()
00384fb3 W CBaseModelInfo::AsDamageAtomicModelInfoPtr()
00384ff5 T CBaseModelInfo::Init()
003850c5 T CBaseModelInfo::AddRef()
0038501d T CBaseModelInfo::Shutdown()
003850d5 T CBaseModelInfo::RemoveRef()
00384fd9 T CBaseModelInfo::CBaseModelInfo()
00385203 W CBaseModelInfo::~CBaseModelInfo()
00384fab W CBaseModelInfo::~CBaseModelInfo()
0056f48b T CBouncingPanel::ResetPanel()
0056f4ad T CBouncingPanel::ProcessPanel(CVehicle*, RwFrame*, CVector, CVector, float, float)
006b05cc D CBouncingPanel::BOUNCE_SPRING_DAMP_MULT
006b05d4 D CBouncingPanel::BOUNCE_VEL_CHANGE_LIMIT
006b05d8 D CBouncingPanel::BOUNCE_HANGING_DAMP_MULT
006b05d0 D CBouncingPanel::BOUNCE_SPRING_RETURN_MULT
006b05dc D CBouncingPanel::BOUNCE_HANGING_RETURN_MULT
0056f493 T CBouncingPanel::SetPanel(short, short, float)
002c9dd9 T CCarFXRenderer::Initialise()
002ca005 T CCarFXRenderer::PreRenderUpdate()
002c9ff5 T CCarFXRenderer::RegisterPlugins()
0070bee4 B CCarFXRenderer::ms_aDirtTextures
002ca1c5 T CCarFXRenderer::AtomicRemapDirtCB(RpAtomic*, void*)
002ca17d T CCarFXRenderer::MaterialRemapDirtCB(RpMaterial*, void*)
002ca061 T CCarFXRenderer::GetFxEnvMapLightMult()
002ca051 T CCarFXRenderer::SetFxEnvMapLightMult(float)
002ca071 T CCarFXRenderer::InitialiseDirtTexture()
002ca037 T CCarFXRenderer::IsCCPCPipelineAttached(RpAtomic*)
002ca00d T CCarFXRenderer::CustomCarPipeClumpSetup(RpClump*)
002ca009 T CCarFXRenderer::CustomCarPipeAtomicSetup(RpAtomic*)
002ca029 T CCarFXRenderer::SetCustomFXAtomicRenderPipelinesVMICB(RpAtomic*, void*)
002c9de9 T CCarFXRenderer::Shutdown()
002ca1e1 T CCarFXRenderer::RemapDirt(CVehicleModelInfo*, unsigned int)
002e176d T CCollisionData::GetLinkPtr()
002e1755 T CCollisionData::SetLinkPtr(CLink<CCollisionData*>*)
002e173f T CCollisionData::RemoveTrianglePlanes()
002e11db T CCollisionData::RemoveCollisionVolumes()
002e1699 T CCollisionData::CalculateTrianglePlanes()
002e1249 T CCollisionData::Copy(CCollisionData const&)
002e11b1 T CCollisionData::CCollisionData()
002e11b1 T CCollisionData::CCollisionData()
00300da9 T CConversations::AwkwardSay(int, CPed*)
007a0d78 B CConversations::m_aTempNodes
003012e1 T CConversations::FindFreeNodeSlot()
007a0f88 B CConversations::m_aConversations
00301861 T CConversations::EnableConversation(CPed*, bool)
007a111c B CConversations::m_AwkwardSayStatus
003013e5 T CConversations::IsConversationAtNode(char*, CPed*)
0030198d T CConversations::GetConversationStatus(CPed*)
00301ab9 T CConversations::IsConversationGoingOn()
00301311 T CConversations::SetUpConversationNode(char*, char*, char*, int, int, int)
0030156d T CConversations::FindConversationForPed(CPed*)
003011b1 T CConversations::FindFreeConversationSlot()
003016ad T CConversations::RemoveConversationForPed(CPed*)
007a1110 B CConversations::m_bSettingUpConversation
00300e81 T CConversations::DoneSettingUpConversation(bool)
00300e4d T CConversations::StartSettingUpConversation(CPed*)
007a1114 B CConversations::m_pSettingUpConversationPed
007a1118 B CConversations::m_SettingUpConversationNumNodes
0030171d T CConversations::IsPlayerInPositionForConversation(CPed*, bool)
00300655 T CConversations::Clear()
003006c5 T CConversations::Update()
007a08c8 B CConversations::m_aNodes
0056e925 T CDamageManager::ApplyDamage(CAutomobile*, tComponent, float, float)
0056e7a5 T CDamageManager::SetDoorStatus(eDoors, unsigned int)
0056e7b1 T CDamageManager::SetDoorStatus(int, unsigned int)
0056e749 T CDamageManager::SetLightStatus(eLights, unsigned int)
0056e771 T CDamageManager::SetPanelStatus(int, unsigned int)
0056e799 T CDamageManager::SetWheelStatus(int, unsigned int)
0056e7f5 T CDamageManager::SetEngineStatus(unsigned int)
0056eac9 T CDamageManager::FuckCarCompletely(bool)
0056e6e5 T CDamageManager::GetComponentGroup(tComponent, tComponentGroup*, unsigned char*)
0056e739 T CDamageManager::ResetDamageStatus()
0056e835 T CDamageManager::ProgressDoorDamage(unsigned char, CAutomobile*)
0056e887 T CDamageManager::ProgressPanelDamage(unsigned char)
0056e8dd T CDamageManager::ProgressWheelDamage(unsigned char)
0056e883 T CDamageManager::ProgressEngineDamage(float)
0056e803 T CDamageManager::SetAeroplaneCompStatus(int, unsigned int)
0056ec71 T CDamageManager::GetCarNodeIndexFromDoor(eDoors)
0056e8f1 T CDamageManager::ProgressAeroplaneDamage(unsigned char)
0056ec45 T CDamageManager::GetCarNodeIndexFromPanel(ePanels)
0032eaed W CDecisionMaker::CDecisionMaker()
0061dba8 R CEntityScanner::ms_iScanPeriod
004ba721 T CEntityScanner::ScanForEntitiesInRange(int, CPed const&)
004ba6dd T CEntityScanner::Clear()
004ba6a1 T CEntityScanner::CEntityScanner()
004ba6a1 T CEntityScanner::CEntityScanner()
004c02dd T CEntityScanner::~CEntityScanner()
004c02dd T CEntityScanner::~CEntityScanner()
003eeefd T CEntryInfoList::Flush()
003eeecd T CEntryInfoNode::operator delete(void*)
003eee69 T CEntryInfoNode::operator new(unsigned int)
002cf3b5 T CGrassRenderer::Initialise()
002ccf61 T CGrassRenderer::AddTriPlant(PPTriPlant*, unsigned int)
0070bf88 B CGrassRenderer::m_closeDist
002cd311 T CGrassRenderer::DrawTriPlants(PPTriPlant*, int, RpAtomic**, RwMatrixTag*)
0070bf84 B CGrassRenderer::m_windBending
0070bf78 B CGrassRenderer::m_vecCameraPos
002cd2a1 T CGrassRenderer::GetPlantModelsTab(unsigned int)
002cd271 T CGrassRenderer::SetPlantModelsTab(unsigned int, RpAtomic**)
002ccf5f T CGrassRenderer::SetCurrentScanCode(unsigned short)
002cd2cd T CGrassRenderer::SetGlobalCameraPos(CVector const&)
002cd1b5 T CGrassRenderer::FlushTriPlantBuffer()
002cd2e5 T CGrassRenderer::SetCloseFarAlphaDist(float, float)
002cd301 T CGrassRenderer::SetGlobalWindBending(float)
002ccf5d T CGrassRenderer::Shutdown()
00685f98 D CGrassRenderer::m_farDist
002ccf59 T CGrassRenderer::CGrassRenderer()
002ccf59 T CGrassRenderer::CGrassRenderer()
002ccf5b T CGrassRenderer::~CGrassRenderer()
002ccf5b T CGrassRenderer::~CGrassRenderer()
00295ccd T CHIDKeyboardPC::DoDefaultMappings()
00296251 T CHIDKeyboardPC::FindUVsFromMapping(char const*, HIDMapping, bool)
00295ca1 T CHIDKeyboardPC::CHIDKeyboardPC(char const*)
00295ca1 T CHIDKeyboardPC::CHIDKeyboardPC(char const*)
00296309 W CHIDKeyboardPC::~CHIDKeyboardPC()
003f8325 T CKeyboardState::Clear()
0043ba61 T CLoadingScreen::StartFading()
009920b0 B CLoadingScreen::m_FadeAlpha
009920bc B CLoadingScreen::m_PauseTime
009920a4 B CLoadingScreen::m_aSplashes
0043add5 T CLoadingScreen::GetClockTime(bool)
0043abed T CLoadingScreen::LoadSplashes(unsigned char, unsigned char)
0043aff1 T CLoadingScreen::RenderSplash()
0043b67d T CLoadingScreen::DisplayMessage(char const*)
0043af0d T CLoadingScreen::NewChunkLoaded()
0099220c B CLoadingScreen::m_PopUpMessage
009920ad B CLoadingScreen::m_bLegalScreen
009920a1 B CLoadingScreen::m_bWantToPause
0043af79 T CLoadingScreen::DisplayPCScreen()
0043b205 T CLoadingScreen::DoPCTitleFadeIn()
0043b31d T CLoadingScreen::SetChunksToLoad(int, bool)
009920c0 B CLoadingScreen::m_PercentLoaded
009920b4 B CLoadingScreen::m_StartFadeTime
00992216 B CLoadingScreen::m_bSignalDelete
006ab478 D CLoadingScreen::m_nChunksToLoad
0043b331 T CLoadingScreen::DoPCScreenChange(unsigned int, unsigned int)
0043b289 T CLoadingScreen::DoPCTitleFadeOut()
0043b461 T CLoadingScreen::RenderLoadingBar()
0043b68d T CLoadingScreen::SetLoadingBarMsg(char const*, char const*)
009920cc B CLoadingScreen::m_LoadingGxtMsg1
0099216c B CLoadingScreen::m_LoadingGxtMsg2
009920a3 B CLoadingScreen::m_bForceShutdown
00992217 B CLoadingScreen::m_bReadyToDelete
0043b5fd T CLoadingScreen::DisplayNextSplash()
009920c8 B CLoadingScreen::m_TimeBarAppeared
006ab474 D CLoadingScreen::m_numChunksLoaded
009920b8 B CLoadingScreen::m_ClockTimeOnPause
006ab47c D CLoadingScreen::m_chunkBarAppeared
009920c4 B CLoadingScreen::m_TimeStartedLoading
006ab470 D CLoadingScreen::m_currDisplayedSplash
00992218 B CLoadingScreen::m_timeSinceLastScreen
009920af B CLoadingScreen::m_bFadeOutCurrSplashToBlack
009920ae B CLoadingScreen::m_bFadeInNextSplashFromBlack
0043ab81 T CLoadingScreen::Init(bool, bool)
0043ae85 T CLoadingScreen::Pause()
0043b6dd T CLoadingScreen::Update()
0043ae89 T CLoadingScreen::Continue()
0043ae15 T CLoadingScreen::Shutdown(bool)
009920a0 B CLoadingScreen::m_bActive
009920ac B CLoadingScreen::m_bFading
009920a2 B CLoadingScreen::m_bPaused
004baee5 T CObjectScanner::ScanForObjectsInRange(CPed const&)
00315123 T COnscreenTimer::AddCounter(unsigned int, unsigned short, char*, unsigned short)
003151a9 T COnscreenTimer::ClearClock(unsigned int)
003151c3 T COnscreenTimer::ClearCounter(unsigned int)
00315167 T COnscreenTimer::AddCounterCounter(unsigned int, unsigned int, char*, unsigned short)
00314e01 T COnscreenTimer::ProcessForDisplay()
00315267 T COnscreenTimer::SetCounterColourID(unsigned int, unsigned char)
0031525d T COnscreenTimer::SetClockBeepCountdownSecs(unsigned int, unsigned int)
0031522d T COnscreenTimer::SetCounterFlashWhenFirstDisplayed(unsigned int, unsigned char)
00314d8d T COnscreenTimer::Init()
0048a771 T COnscreenTimer::Load()
00489739 T COnscreenTimer::Save()
00315025 T COnscreenTimer::Process()
003150fd T COnscreenTimer::AddClock(unsigned int, char*, bool)
0040c881 T CPlayerPedData::AllocateData()
0040c8d5 T CPlayerPedData::DeAllocateData()
0040c7bb T CPlayerPedData::SetInitialState()
0040c711 T CPlayerPedData::CPlayerPedData()
0040c711 T CPlayerPedData::CPlayerPedData()
0040c855 T CPlayerPedData::~CPlayerPedData()
0040c855 T CPlayerPedData::~CPlayerPedData()
0034d7dd T CRunningScript::GetPadState(unsigned short, unsigned short)
0032abd9 T CRunningScript::AddScriptToList(CRunningScript**)
003296ed T CRunningScript::StoreParameters(short)
0034b9c9 T CRunningScript::LocateCarCommand(int)
00329435 T CRunningScript::CollectParameters(short)
0034a965 T CRunningScript::LocateCharCommand(int)
0032b709 T CRunningScript::ProcessOneCommand()
0034a905 T CRunningScript::UpdateCompareFlag(unsigned char)
0034d715 T CRunningScript::DoDeatharrestCheck()
0032e83d T CRunningScript::SetCharCoordinates(CPed*, float, float, float, bool, bool)
0032abf1 T CRunningScript::ShutdownThisScript()
0032b52d T CRunningScript::GivePedScriptedTask(int, CTask*, int)
0034bd55 T CRunningScript::LocateObjectCommand(int)
0034b359 T CRunningScript::LocateCharCarCommand(int)
0032b775 T CRunningScript::ProcessCommands0To99(int)
00328f79 T CRunningScript::ReadArrayInformation(int, unsigned short*, int*)
0032ad05 T CRunningScript::RemoveScriptFromList(CRunningScript**)
003293f1 T CRunningScript::CanAllowMissionReplay()
0034d11d T CRunningScript::CarInAreaCheckCommand(int)
0034affd T CRunningScript::LocateCharCharCommand(int)
00334e11 T CRunningScript::PlayAnimScriptCommand(int)
0034e285 T CRunningScript::ThisIsAValidRandomCop(unsigned int, int, int, int, int, int)
0034e2cd T CRunningScript::ThisIsAValidRandomPed(unsigned int, int, int, int)
0034cdb9 T CRunningScript::CharInAreaCheckCommand(int)
0032ee05 T CRunningScript::ScriptTaskPickUpObject(int)
0034b691 T CRunningScript::LocateCharObjectCommand(int)
0032c3e9 T CRunningScript::ProcessCommands100To199(int)
0032d939 T CRunningScript::ProcessCommands200To299(int)
00341c69 T CRunningScript::ProcessCommands300To399(int)
00342d7d T CRunningScript::ProcessCommands400To499(int)
00343a29 T CRunningScript::ProcessCommands500To599(int)
0034495d T CRunningScript::ProcessCommands600To699(int)
00344f75 T CRunningScript::ProcessCommands700To799(int)
00346505 T CRunningScript::ProcessCommands800To899(int)
003485ed T CRunningScript::ProcessCommands900To999(int)
00328fd5 T CRunningScript::ReadTextLabelFromScript(char*, unsigned char)
00329a05 T CRunningScript::GetIndexOfGlobalVariable()
0034d44d T CRunningScript::ObjectInAreaCheckCommand(int)
00328f29 T CRunningScript::GetPointerToLocalVariable(unsigned int)
0034e315 T CRunningScript::ProcessCommands1000To1099(int)
0034f2a5 T CRunningScript::ProcessCommands1100To1199(int)
003507b9 T CRunningScript::ProcessCommands1200To1299(int)
00351d75 T CRunningScript::ProcessCommands1300To1399(int)
00352fe1 T CRunningScript::ProcessCommands1400To1499(int)
0035543d T CRunningScript::ProcessCommands1500To1599(int)
00358ab9 T CRunningScript::ProcessCommands1600To1699(int)
0035b131 T CRunningScript::ProcessCommands1700To1799(int)
00330085 T CRunningScript::ProcessCommands1800To1899(int)
003323c1 T CRunningScript::ProcessCommands1900To1999(int)
003357a9 T CRunningScript::ProcessCommands2000To2099(int)
003377a5 T CRunningScript::ProcessCommands2100To2199(int)
00339415 T CRunningScript::ProcessCommands2200To2299(int)
0033adbd T CRunningScript::ProcessCommands2300To2399(int)
0033c6ed T CRunningScript::ProcessCommands2400To2499(int)
0033e631 T CRunningScript::ProcessCommands2500To2599(int)
00340241 T CRunningScript::ProcessCommands2600To2699(int)
00329a7d T CRunningScript::GetPointerToScriptVariable(unsigned char)
0034c02d T CRunningScript::CharInAngledAreaCheckCommand(int)
0034ca01 T CRunningScript::FlameInAngledAreaCheckCommand(int)
00328f4d T CRunningScript::GetPointerToLocalArrayElement(unsigned int, unsigned short, unsigned char)
0034c69d T CRunningScript::ObjectInAngledAreaCheckCommand(int)
00329865 T CRunningScript::ReadParametersForNewlyStartedScript(CRunningScript*)
003295ad T CRunningScript::CollectNextParameterWithoutIncreasingPC()
0032e7f9 T CRunningScript::GetCorrectPedModelIndexForEmergencyServiceType(int, int*)
00329c35 T CRunningScript::Init()
0032b309 T CRunningScript::Process()
0032b6e9 T CRunningScript::UpdatePC(int)
0032b511 T CRunningScript::IsPedDead(CPed*)
00712330 B CStreamingInfo::ms_pArrayBase
002cf485 T CStreamingInfo::RemoveFromList()
002cf591 T CStreamingInfo::GetCdPosnAndSize(unsigned int&, unsigned int&)
002cf5c9 T CStreamingInfo::SetCdPosnAndSize(unsigned int, unsigned int)
002cf425 T CStreamingInfo::Init()
002cf561 T CStreamingInfo::InList()
002cf4c1 T CStreamingInfo::GetNext()
002cf4e5 T CStreamingInfo::GetPrev()
002cf509 T CStreamingInfo::SetNext(CStreamingInfo*)
002cf535 T CStreamingInfo::SetPrev(CStreamingInfo*)
002cf43d T CStreamingInfo::AddToList(CStreamingInfo*)
002cf571 T CStreamingInfo::GetCdPosn()
002cf58d T CStreamingInfo::GetCdSize()
00328b05 T CStuckCarCheck::AddCarToCheck(int, float, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char, signed char)
003286b1 T CStuckCarCheck::ResetArrayElement(unsigned short)
00328cc1 T CStuckCarCheck::RemoveCarFromCheck(int)
003286e1 T CStuckCarCheck::AttemptToWarpVehicle(CVehicle*, CVector&, float)
00328dcf T CStuckCarCheck::ClearStuckFlagForCar(int)
00328ea7 T CStuckCarCheck::IsCarInStuckCarArray(int)
00328d03 T CStuckCarCheck::HasCarBeenStuckForAWhile(int)
0032829b T CStuckCarCheck::Init()
003287c1 T CStuckCarCheck::Process()
0054a1f5 T CTaskAllocator::IsFinished(CPedGroupIntelligence*)
0054b457 W CTaskAllocator::ProcessGroup(CPedGroupIntelligence*)
0054b45b W CTaskAllocator::Abort()
0054b455 W CTaskAllocator::~CTaskAllocator()
0054b4e5 W CTaskAllocator::~CTaskAllocator()
005499c1 T CTaskAllocator::operator delete(void*)
00549961 T CTaskAllocator::operator new(unsigned int)
009fdc14 B CTaskSequences::ms_bIsOpened
009fdc54 B CTaskSequences::ms_taskSequence
004eeb99 T CTaskSequences::GetAvailableSlot(unsigned char)
004eeb5d T CTaskSequences::CleanUpForShutdown()
006b03bc D CTaskSequences::ms_iActiveSequence
004eeb11 T CTaskSequences::Init()
004eea81 T CTaskSequences::Load()
004ee9b9 T CTaskSequences::Save()
004eaeb3 T CTaskSimpleDie::ProcessPed(CPed*)
004eae29 T CTaskSimpleDie::MakeAbortable(CPed*, int, CEvent const*)
004eaffd T CTaskSimpleDie::FinishAnimDieCB(CAnimBlendAssociation*, void*)
004eaf85 T CTaskSimpleDie::StartAnim(CPed*)
004eacbd T CTaskSimpleDie::CTaskSimpleDie(AssocGroupId, AnimationId, float, float)
004ead69 T CTaskSimpleDie::CTaskSimpleDie(CAnimBlendHierarchy*, int, float, float)
004ead05 T CTaskSimpleDie::CTaskSimpleDie(char const*, char const*, int, float, float)
004eacbd T CTaskSimpleDie::CTaskSimpleDie(AssocGroupId, AnimationId, float, float)
004ead69 T CTaskSimpleDie::CTaskSimpleDie(CAnimBlendHierarchy*, int, float, float)
004ead05 T CTaskSimpleDie::CTaskSimpleDie(char const*, char const*, int, float, float)
004eadf1 T CTaskSimpleDie::~CTaskSimpleDie()
004eadbd T CTaskSimpleDie::~CTaskSimpleDie()
004eadbd T CTaskSimpleDie::~CTaskSimpleDie()
00491dc9 W CTaskSimpleSay::CreateTask()
0035761d W CTaskSimpleSay::ProcessPed(CPed*)
0035754b W CTaskSimpleSay::MakeAbortable(CPed*, int, CEvent const*)
00357551 W CTaskSimpleSay::Serialize()
00357505 W CTaskSimpleSay::~CTaskSimpleSay()
004701c1 T CTempColModels::Initialise()
00796130 B CTempColModels::ms_colModelBBox
00796520 B CTempColModels::ms_colModelPed1
00796550 B CTempColModels::ms_colModelPed2
00796640 B CTempColModels::ms_colModelBoot1
00796580 B CTempColModels::ms_colModelDoor1
00796160 B CTempColModels::ms_colModelCutObj
007965e0 B CTempColModels::ms_colModelPanel1
00796700 B CTempColModels::ms_colModelWeapon
00796670 B CTempColModels::ms_colModelWheel1
00796610 B CTempColModels::ms_colModelBonnet1
007965b0 B CTempColModels::ms_colModelBumper1
007966a0 B CTempColModels::ms_colModelBodyPart1
007966d0 B CTempColModels::ms_colModelBodyPart2
002e341d T CTempColModels::Shutdown()
00386485 W CTimeModelInfo::GetTimeInfo()
00386481 W CTimeModelInfo::GetModelType()
0038647d W CTimeModelInfo::~CTimeModelInfo()
00362b8d T CTrafficLights::LightForPeds()
003629f5 T CTrafficLights::LightForCars1()
00362a45 T CTrafficLights::LightForCars2()
0036395d T CTrafficLights::IsMITrafficLight(int)
00362bb5 T CTrafficLights::DisplayActualLight(CEntity*)
00363739 T CTrafficLights::FindTrafficLightType(CEntity*)
00362aa1 T CTrafficLights::LightForCars1_Visual()
00362b11 T CTrafficLights::LightForCars2_Visual()
00362461 T CTrafficLights::ShouldCarStopForLight(CVehicle*, bool)
003637f1 T CTrafficLights::ShouldCarStopForBridge(CVehicle*)
003638f9 T CTrafficLights::FindOrientationForTrafficLightType(CEntity*)
0036389d T CTrafficLights::FindTrafficLightTypeFromOrientation(float)
005e3275 T CWeaponEffects::IsLockedOn(int)
005e3295 T CWeaponEffects::MarkTarget(int, CVector, unsigned char, unsigned char, unsigned char, unsigned char, float, unsigned char)
005e32f9 T CWeaponEffects::ClearCrossHair(int)
005e331d T CWeaponEffects::ClearCrossHairs()
005e3369 T CWeaponEffects::ClearAllCrosshairs()
005e3331 T CWeaponEffects::ClearCrossHairImmediately(int)
005e3159 T CWeaponEffects::Init()
005e3391 T CWeaponEffects::Render()
005e3239 T CWeaponEffects::Shutdown()
005e3155 T CWeaponEffects::CWeaponEffects()
005e3155 T CWeaponEffects::CWeaponEffects()
005e3157 T CWeaponEffects::~CWeaponEffects()
005e3157 T CWeaponEffects::~CWeaponEffects()
005ceb4d T CWindModifiers::RegisterOne(CVector, int, float)
005cec11 T CWindModifiers::FindWindModifier(CVector, float*, float*)
00a7d230 B CWindModifiers::Array
00a7d22c B CWindModifiers::Number
0029e9f9 W ControlsScreen::DoAdjustableHUD(SelectScreen*, int)
0029e991 W ControlsScreen::OnKeyboardControls(SelectScreen*, int)
0029e4c5 W ControlsScreen::ControlsScreen()
0029ea79 W ControlsScreen::~ControlsScreen()
002a8135 W DownloadScreen::RetryDownload(void*)
002a815d W DownloadScreen::CancelDownload(void*)
002a8125 W DownloadScreen::OnBack()
002a7e11 W DownloadScreen::Render(int)
0029b769 W DownloadScreen::DownloadScreen()
002a7e01 W DownloadScreen::~DownloadScreen()
006b8b04 B ES2IndexBuffer::curCPUSize
006b8b0c B ES2IndexBuffer::safeCPUSize
006b8b00 B ES2IndexBuffer::curCPUBuffer
006b8b08 B ES2IndexBuffer::safeCPUBuffer
001cc0df W ES2IndexBuffer::~ES2IndexBuffer()
001cc0e3 W ES2VertexState::~ES2VertexState()
00366cfd T FxEmitterPrt_c::operator new[](unsigned int)
0036b439 T FxInfoColour_c::Load(unsigned int, int)
0036b43f T FxInfoColour_c::GetValue(float, float, float, float, unsigned char, void*)
0036b3f9 T FxInfoColour_c::FxInfoColour_c()
0036b3f9 T FxInfoColour_c::FxInfoColour_c()
0036c129 W FxInfoColour_c::~FxInfoColour_c()
0036c105 W FxInfoColour_c::~FxInfoColour_c()
0036a685 T FxInfoEmLife_c::Load(unsigned int, int)
0036a68b T FxInfoEmLife_c::GetValue(float, float, float, float, unsigned char, void*)
0036a645 T FxInfoEmLife_c::FxInfoEmLife_c()
0036a645 T FxInfoEmLife_c::FxInfoEmLife_c()
0036bcb5 W FxInfoEmLife_c::~FxInfoEmLife_c()
0036bc91 W FxInfoEmLife_c::~FxInfoEmLife_c()
0036a3f1 T FxInfoEmRate_c::Load(unsigned int, int)
0036a3f7 T FxInfoEmRate_c::GetValue(float, float, float, float, unsigned char, void*)
0036a3b1 T FxInfoEmRate_c::FxInfoEmRate_c()
0036a3b1 T FxInfoEmRate_c::FxInfoEmRate_c()
0036bb39 W FxInfoEmRate_c::~FxInfoEmRate_c()
0036bb15 W FxInfoEmRate_c::~FxInfoEmRate_c()
0036a4dd T FxInfoEmSize_c::Load(unsigned int, int)
0036a4e3 T FxInfoEmSize_c::GetValue(float, float, float, float, unsigned char, void*)
0036a49d T FxInfoEmSize_c::FxInfoEmSize_c()
0036a49d T FxInfoEmSize_c::FxInfoEmSize_c()
0036bb85 W FxInfoEmSize_c::~FxInfoEmSize_c()
0036bb61 W FxInfoEmSize_c::~FxInfoEmSize_c()
0036b1cd T FxInfoJitter_c::Load(unsigned int, int)
0036b1d5 T FxInfoJitter_c::GetValue(float, float, float, float, unsigned char, void*)
0036b18d T FxInfoJitter_c::FxInfoJitter_c()
0036b18d T FxInfoJitter_c::FxInfoJitter_c()
0036bff9 W FxInfoJitter_c::~FxInfoJitter_c()
0036bfd5 W FxInfoJitter_c::~FxInfoJitter_c()
0036c495 T FxInterpInfo_c::FxInterpInfo_c()
0036c4af T FxInterpInfo_c::~FxInterpInfo_c()
0036c4ad T FxInterpInfo_c::~FxInterpInfo_c()
0036c4ad T FxInterpInfo_c::~FxInterpInfo_c()
0036db23 T FxMemoryPool_c::Exit()
0036daf9 T FxMemoryPool_c::Init()
0036db2f T FxMemoryPool_c::Reset()
0036db35 T FxMemoryPool_c::GetMem(int, int)
0036db67 T FxMemoryPool_c::Optimise()
0036daf5 T FxMemoryPool_c::FxMemoryPool_c()
0036daf5 T FxMemoryPool_c::FxMemoryPool_c()
0036daf7 T FxMemoryPool_c::~FxMemoryPool_c()
0036daf7 T FxMemoryPool_c::~FxMemoryPool_c()
002a5d99 W LanguageScreen::French(SelectScreen*, int)
002a5df9 W LanguageScreen::German(SelectScreen*, int)
002a5d39 W LanguageScreen::English(SelectScreen*, int)
002a5dc9 W LanguageScreen::Italian(SelectScreen*, int)
002a5e59 W LanguageScreen::Russian(SelectScreen*, int)
002a5e29 W LanguageScreen::Spanish(SelectScreen*, int)
002a5d69 W LanguageScreen::Japenese(SelectScreen*, int)
002a5b8d W LanguageScreen::LanguageScreen()
002a5e89 W LanguageScreen::~LanguageScreen()
0029da9d W MainMenuScreen::OnSettings()
0029ba45 W MainMenuScreen::AddAllItems()
0029db85 W MainMenuScreen::OnStartGame()
0029d225 W MainMenuScreen::OnBack()
0029def9 W MainMenuScreen::OnExit()
0029c06d W MainMenuScreen::Update(float)
0029d989 W MainMenuScreen::OnResume()
0029de51 W MainMenuScreen::HasCPSave()
0029c05d W MainMenuScreen::~MainMenuScreen()
002abea5 T MobileSettings::Initialize()
002ac0f1 T MobileSettings::SaveToFile(unsigned int)
002ac285 T MobileSettings::IsLockOnMode()
002ac1dd T MobileSettings::LoadFromFile(unsigned int)
002ac261 T MobileSettings::IsFreeAimMode()
002ac0ed T MobileSettings::GetMaxResWidth()
002ac131 T MobileSettings::SetRendererDefaults()
006e089c B MobileSettings::loaded
006e03fc B MobileSettings::settings
001d3c25 T RQRenderTarget::Clear(unsigned int, float*, float, int)
001d0711 T RQRenderTarget::Create(unsigned int, unsigned int, RQTargetColorType, RQTargetDepthType)
001d0841 T RQRenderTarget::Create(unsigned int, unsigned int, RQTargetColorType, RQRenderTarget*)
001d0b31 T RQRenderTarget::Delete(RQRenderTarget*)
001d0959 T RQRenderTarget::Select(RQRenderTarget*, bool)
001d3b39 T RQRenderTarget::Viewport(int, int, unsigned int, unsigned int)
006bcd00 B RQRenderTarget::selected
001d2865 T RQVertexBuffer::Set(void const*, unsigned int, void (*)())
001d268d T RQVertexBuffer::Set(RQVertexBuffer*)
001cb6b5 T RQVertexBuffer::Create(void const*, unsigned int)
001d2a65 T RQVertexBuffer::Delete(RQVertexBuffer*)
001d2549 T RQVertexBuffer::Update(void const*, unsigned int)
001cb795 T RQVertexBuffer::SetSafe()
006bcc58 B RQVertexBuffer::curBuffer
001cc0d7 W RQVertexBuffer::~RQVertexBuffer()
0029e2bd W SettingsScreen::OnGameOptions()
0029e395 W SettingsScreen::OnSoundOptions()
0029e251 W SettingsScreen::OnAdjustControls()
0029e329 W SettingsScreen::OnDisplayOptions()
0029e401 W SettingsScreen::OnLanguageOptions()
0029e47d W SettingsScreen::OnBack()
0029df09 W SettingsScreen::SettingsScreen()
0029e46d W SettingsScreen::~SettingsScreen()
0041dfc1 T SurfaceInfos_c::IsPavement(unsigned int)
0041dee9 T SurfaceInfos_c::GetBulletFx(unsigned int)
0041de63 T SurfaceInfos_c::GetTyreGrip(unsigned int)
0041e127 T SurfaceInfos_c::IsAudioSand(unsigned int)
0041e193 T SurfaceInfos_c::IsAudioTile(unsigned int)
0041e14b T SurfaceInfos_c::IsAudioWood(unsigned int)
0041dfaf T SurfaceInfos_c::IsSkateable(unsigned int)
0041e009 T SurfaceInfos_c::CantSprintOn(unsigned int)
0041dfd3 T SurfaceInfos_c::GetRoughness(unsigned int)
0041e115 T SurfaceInfos_c::IsAudioGrass(unsigned int)
0041e16f T SurfaceInfos_c::IsAudioMetal(unsigned int)
0041e15d T SurfaceInfos_c::IsAudioWater(unsigned int)
0041df0d T SurfaceInfos_c::IsSeeThrough(unsigned int)
0041df79 T SurfaceInfos_c::IsSteepSlope(unsigned int)
0041e0cd T SurfaceInfos_c::CreatesPlants(unsigned int)
0041dff7 T SurfaceInfos_c::CreatesSparks(unsigned int)
0041e139 T SurfaceInfos_c::IsAudioGravel(unsigned int)
0041defb T SurfaceInfos_c::IsSoftLanding(unsigned int)
0041e04f T SurfaceInfos_c::MakesCarClean(unsigned int)
0041e03f T SurfaceInfos_c::MakesCarDirty(unsigned int)
0041e0df T SurfaceInfos_c::CreatesObjects(unsigned int)
0041df55 T SurfaceInfos_c::IsShallowWater(unsigned int)
0041df1f T SurfaceInfos_c::IsShootThrough(unsigned int)
0041e085 T SurfaceInfos_c::CreatesWheelMud(unsigned int)
0041dfe5 T SurfaceInfos_c::GetFlammability(unsigned int)
0041dec5 T SurfaceInfos_c::GetSkidmarkType(unsigned int)
0041e103 T SurfaceInfos_c::IsAudioConcrete(unsigned int)
0041e01b T SurfaceInfos_c::LeavesFootsteps(unsigned int)
0041e097 T SurfaceInfos_c::CreatesWheelDust(unsigned int)
0041e0a9 T SurfaceInfos_c::CreatesWheelSand(unsigned int)
0041de51 T SurfaceInfos_c::GetAdhesionGroup(unsigned int)
0041e1a5 T SurfaceInfos_c::GetAdhesiveLimit(CColPoint&)
0041de85 T SurfaceInfos_c::GetWetMultiplier(unsigned int)
0041e181 T SurfaceInfos_c::IsAudioLongGrass(unsigned int)
0041c549 T SurfaceInfos_c::LoadSurfaceInfos()
0041e02d T SurfaceInfos_c::ProducesFootDust(unsigned int)
0041e061 T SurfaceInfos_c::CreatesWheelGrass(unsigned int)
0041e0bb T SurfaceInfos_c::CreatesWheelSpray(unsigned int)
0041ded7 T SurfaceInfos_c::GetFrictionEffect(unsigned int)
0041e073 T SurfaceInfos_c::CreatesWheelGravel(unsigned int)
0041c409 T SurfaceInfos_c::LoadAdhesiveLimits()
0041cbb9 T SurfaceInfos_c::GetSurfaceIdFromName(char*)
0041ca3d T SurfaceInfos_c::LoadSurfaceAudioInfos()
0041c3e1 T SurfaceInfos_c::Init()
0041df31 T SurfaceInfos_c::IsSand(unsigned int)
0041df67 T SurfaceInfos_c::IsBeach(unsigned int)
0041df8b T SurfaceInfos_c::IsGlass(unsigned int)
0041df43 T SurfaceInfos_c::IsWater(unsigned int)
0041e0f1 T SurfaceInfos_c::CanClimb(unsigned int)
0041df9d T SurfaceInfos_c::IsStairs(unsigned int)
0041c3dd T SurfaceInfos_c::SurfaceInfos_c()
0041c3dd T SurfaceInfos_c::SurfaceInfos_c()
0041c3df T SurfaceInfos_c::~SurfaceInfos_c()
0041c3df T SurfaceInfos_c::~SurfaceInfos_c()
0027cdbd W ButtonContainer<100>::Update(bool)
0027cbab W ButtonContainer<100>::~ButtonContainer()
0027d121 W ButtonContainer<16>::Update(bool)
0027cbcd W ButtonContainer<3>::Update(bool)
00391b33 T CAEAudioChannel::SetPosition(CVector*)
00391ccd T CAEAudioChannel::SetFrequency(unsigned int)
00391d27 T CAEAudioChannel::UpdateStatus()
00391af9 T CAEAudioChannel::IsBufferPlaying()
00391b89 T CAEAudioChannel::ConvertFromBytesToMS(unsigned int)
00391b9d T CAEAudioChannel::ConvertFromMsToBytes(unsigned int)
00391d1b T CAEAudioChannel::SetOriginalFrequency(unsigned int)
00391ba9 T CAEAudioChannel::SetFrequencyScalingFactor(float)
00391b63 T CAEAudioChannel::GetCurrentPlaybackPosition()
00391b5f T CAEAudioChannel::GetVolume()
00391a0d T CAEAudioChannel::SetVolume(float)
003918d9 T CAEAudioChannel::CAEAudioChannel(unsigned short, unsigned int, unsigned short)
00391a09 T CAEAudioChannel::~CAEAudioChannel()
0039190d T CAEAudioChannel::~CAEAudioChannel()
0039190d T CAEAudioChannel::~CAEAudioChannel()
003935e9 T CAEAudioUtility::AudioLog10(float)
009443dc B CAEAudioUtility::m_sfLogLookup
0046d511 T CAEAudioUtility::StaticInitialise()
00393509 T CAEAudioUtility::GetPiecewiseLinear(float, short, float (*) [2])
003933f1 T CAEAudioUtility::ResolveProbability(float)
003935a5 T CAEAudioUtility::FindVehicleOfPlayer()
00393619 T CAEAudioUtility::ConvertFromBytesToMS(unsigned int, unsigned int, unsigned short)
00393655 T CAEAudioUtility::ConvertFromMSToBytes(unsigned int, unsigned int, unsigned short)
003933b5 T CAEAudioUtility::GetRandomNumberInRange(float, float)
00393375 T CAEAudioUtility::GetRandomNumberInRange(int, int)
0039360d T CAEAudioUtility::GetCurrentTimeInMilliseconds()
0039344d T CAEAudioUtility::GetBankAndSoundFromScriptSlotAudioEvent(int*, int*, int*, int)
0046d369 T CAESoundManager::Initialise()
003a8121 T CAESoundManager::PauseManually(unsigned char)
003a8ca5 T CAESoundManager::RequestNewSound(CAESound*)
003a8f41 T CAESoundManager::CancelSoundsInBankSlot(short, unsigned char)
003a8d8d T CAESoundManager::AreSoundsPlayingInBankSlot(short)
003a8fad T CAESoundManager::CancelSoundsOwnedByAudioEntity(CAEAudioEntity*, unsigned char)
003a9019 T CAESoundManager::GetVirtualChannelForPhysicalChannel(short)
003a8dc9 T CAESoundManager::AreSoundsOfThisEventPlayingForThisEntity(short, CAEAudioEntity*)
003a8e61 T CAESoundManager::CancelSoundsOfThisEventPlayingForThisEntity(short, CAEAudioEntity*)
003a8e0f T CAESoundManager::AreSoundsOfThisEventPlayingForThisEntityAndPhysical(short, CAEAudioEntity*, CPhysical*)
003a8ec9 T CAESoundManager::CancelSoundsOfThisEventPlayingForThisEntityAndPhysical(short, CAEAudioEntity*, CPhysical*)
003a80e3 T CAESoundManager::Reset()
003a8129 T CAESoundManager::Service()
003a8099 T CAESoundManager::Terminate()
003a9047 W CAESoundManager::~CAESoundManager()
003aa381 T CAEStreamThread::Initialise(CAEStreamingChannel*)
003aa753 T CAEStreamThread::IsUserTrack()
003aa4ed T CAEStreamThread::WaitForExit()
003aa771 T CAEStreamThread::GetActiveTrackID()
003aa76d T CAEStreamThread::GetTrackLengthMs()
003aa757 T CAEStreamThread::GetTrackPlayTime()
003aa775 T CAEStreamThread::GetPlayingTrackID()
003aa4b7 T CAEStreamThread::Stop()
003aa4f9 T CAEStreamThread::Check()
003aa4e1 T CAEStreamThread::Pause()
003aa4ab T CAEStreamThread::Start()
003aa4e7 T CAEStreamThread::Resume()
003aa51d T CAEStreamThread::Service()
003aa455 T CAEStreamThread::MainLoop(void*)
003aa6e7 T CAEStreamThread::PlayTrack(unsigned int, int, unsigned int, char, bool, bool)
003aa779 T CAEStreamThread::StopTrack()
003aa35d T CAEStreamThread::CAEStreamThread()
003aa35d T CAEStreamThread::CAEStreamThread()
003aa35f T CAEStreamThread::~CAEStreamThread()
003aa35f T CAEStreamThread::~CAEStreamThread()
005b01a9 T CActiveOccluder::IsPointBehindOccluder(CVector, float)
005b0149 T CActiveOccluder::IsPointWithinOcclusionArea(float, float, float)
00459895 T CClothesBuilder::CopyTexture(RwTexture*)
0045be8d T CClothesBuilder::FillPalette(RwRGBA*)
0045b915 T CClothesBuilder::CopyGeometry(RpClump*, char const*, char const*)
00459735 T CClothesBuilder::PutOnClothes(RwTexture*, RwTexture*, bool)
00459e31 T CClothesBuilder::BlendGeometry(RpClump*, char const*, char const*, char const*, float, float, float)
0045ae69 T CClothesBuilder::BlendGeometry(RpClump*, char const*, char const*, float, float)
00459af5 T CClothesBuilder::BlendTextures(RwTexture*, RwTexture*, RwTexture*, float, float, float, int)
00459909 T CClothesBuilder::BlendTextures(RwTexture*, RwTexture*, RwTexture*, float, float, float, int, RwTexture*)
00459c61 T CClothesBuilder::BlendTextures(RwTexture*, RwTexture*, float, float, int)
00459dad T CClothesBuilder::StoreBoneArray(RpClump*, int)
004581c1 T CClothesBuilder::LoadCdDirectory()
00459717 T CClothesBuilder::ReleaseGeometry(int)
004581f1 T CClothesBuilder::RequestGeometry(int, unsigned int)
00458e55 T CClothesBuilder::ConstructTextures(RwTexDictionary*, unsigned int*, float, float, float)
004596f9 T CClothesBuilder::DestroySkinArrays(RwMatrixWeights*, unsigned int*)
0045be9d T CClothesBuilder::FindNearestColour(RwRGBA*)
00459751 T CClothesBuilder::GetClothesTexture(unsigned int, char const*)
0045bc95 T CClothesBuilder::ReducePaletteSize(RwTexture*, int)
004588bd T CClothesBuilder::CreateSkinnedClump(RpClump*, RwTexDictionary*, CPedClothesDesc&, CPedClothesDesc const*, bool)
0045be25 T CClothesBuilder::InitPaletteOctTree(int)
009a7a70 B CClothesBuilder::ms_pOldClothesState
0045be7d T CClothesBuilder::ReducePaletteOctTree(int)
006ae538 D CClothesBuilder::ms_ratiosHaveChanged
006ae53a D CClothesBuilder::ms_textureHasChanged
00458329 T CClothesBuilder::PreprocessClothesDesc(CPedClothesDesc&, bool)
006ae539 D CClothesBuilder::ms_geometryHasChanged
0045921d T CClothesBuilder::ConstructGeometryArray(RpGeometry**, unsigned int*, float, float, float)
0045bebd T CClothesBuilder::ShutdownPaletteOctTree()
0045bb51 T CClothesBuilder::PlaceTextureOnTopOfTexture(RwTexture*, RwTexture*, bool)
0045bb0d T CClothesBuilder::BuildBoneIndexConversionTable(unsigned char*, RpHAnimHierarchy*, int)
00459401 T CClothesBuilder::ConstructGeometryAndSkinArrays(RpHAnimHierarchy*, RpGeometry**, RwMatrixWeights**, unsigned int**, unsigned int, RpGeometry**, RpMaterial**)
0045be55 T CClothesBuilder::AddColour(RwRGBA*)
0038556d T CClumpModelInfo::SetAnimFile(char const*)
0038572d T CClumpModelInfo::SetFrameIds(RwObjectNameIdAssocation*)
00385791 W CClumpModelInfo::GetModelType()
00385471 T CClumpModelInfo::CreateInstance(RwMatrixTag*)
003854c5 T CClumpModelInfo::CreateInstance()
00385221 T CClumpModelInfo::DeleteRwObject()
00385719 T CClumpModelInfo::FillFrameArray(RpClump*, RwFrame**)
0038579d W CClumpModelInfo::GetBoundingBox()
003856d1 T CClumpModelInfo::GetFrameFromId(RpClump*, int)
00385795 W CClumpModelInfo::GetRwModelType()
003856a5 T CClumpModelInfo::FillFrameArrayCB(RwFrame*, void*)
00385799 W CClumpModelInfo::GetAnimFileIndex()
003856f5 T CClumpModelInfo::GetFrameFromName(RpClump*, char const*)
00385665 T CClumpModelInfo::FindFrameFromIdCB(RwFrame*, void*)
003855d5 T CClumpModelInfo::FindFrameFromNameCB(RwFrame*, void*)
003855c7 T CClumpModelInfo::SetAtomicRendererCB(RpAtomic*, void*)
003855a5 T CClumpModelInfo::ConvertAnimFileIndex()
00385619 T CClumpModelInfo::FindFrameFromNameWithoutIdCB(RwFrame*, void*)
0038520b T CClumpModelInfo::Init()
00385295 T CClumpModelInfo::SetClump(RpClump*)
0038521d T CClumpModelInfo::Shutdown()
0038578d W CClumpModelInfo::~CClumpModelInfo()
0042131f T CCurrentVehicle::Init()
00421391 T CCurrentVehicle::Display()
00421325 T CCurrentVehicle::Process()
00421319 T CCurrentVehicle::CCurrentVehicle()
00421319 T CCurrentVehicle::CCurrentVehicle()
00465a8d T CCutsceneObject::SetModelIndex(unsigned int)
004107dd T CCutsceneObject::SetupLighting()
00465be9 T CCutsceneObject::ProcessControl()
0041088d T CCutsceneObject::RemoveLighting(bool)
00465d65 T CCutsceneObject::PreRender()
004659e5 T CCutsceneObject::CCutsceneObject()
004659e5 T CCutsceneObject::CCutsceneObject()
00465a6d T CCutsceneObject::~CCutsceneObject()
00465a59 T CCutsceneObject::~CCutsceneObject()
00465a59 T CCutsceneObject::~CCutsceneObject()
004bddb3 T CDecisionSimple::SetDefault()
004bdc79 T CDecisionSimple::Set(int*, unsigned char*, int)
00377ac5 T CEventAreaCodes::CEventAreaCodes(CPed*)
00377ac5 T CEventAreaCodes::CEventAreaCodes(CPed*)
00377af9 T CEventAreaCodes::~CEventAreaCodes()
003780c9 T CEventAreaCodes::~CEventAreaCodes()
003780c9 T CEventAreaCodes::~CEventAreaCodes()
00374cc1 T CEventAttractor::IsEffectActive(CEntity const*, C2dEffect const*)
00374bfd T CEventAttractor::CEventAttractor(C2dEffect*, CEntity*, unsigned char)
00374bfd T CEventAttractor::CEventAttractor(C2dEffect*, CEntity*, unsigned char)
00374c6d T CEventAttractor::~CEventAttractor()
00374c45 T CEventAttractor::~CEventAttractor()
00374c45 T CEventAttractor::~CEventAttractor()
003793f9 W CEventEscalator::~CEventEscalator()
00378391 W CEventHealthLow::~CEventHealthLow()
00374b45 T CEventPedToFlee::CEventPedToFlee(CPed*)
00374b45 T CEventPedToFlee::CEventPedToFlee(CPed*)
00374ba1 T CEventPedToFlee::~CEventPedToFlee()
00374b79 T CEventPedToFlee::~CEventPedToFlee()
00374b79 T CEventPedToFlee::~CEventPedToFlee()
00378f6d W CEventSoundLoud::~CEventSoundLoud()
00378f45 W CEventSoundLoud::~CEventSoundLoud()
0028f781 T CHIDJoystickPS3::FindUVsFromMapping(char const*, HIDMapping, bool)
0028f3e1 T CHIDJoystickPS3::CHIDJoystickPS3(char const*)
0028f3e1 T CHIDJoystickPS3::CHIDJoystickPS3(char const*)
0028f9a5 W CHIDJoystickPS3::~CHIDJoystickPS3()
004d1aaf T CLoadedCarGroup::CountMembers()
004d191f T CLoadedCarGroup::RemoveMember(int)
004d1545 T CLoadedCarGroup::PickRandomCar(bool, bool)
004d1bc9 T CLoadedCarGroup::SortBasedOnUsage()
004d1c41 T CLoadedCarGroup::PickLeastUsedModel(int)
004d1821 T CLoadedCarGroup::Clear()
004d182f T CLoadedCarGroup::AddMember(int)
004d17f1 T CLoadedCarGroup::GetMember(int)
004080ed T CMatrixLinkList::AddToList1()
00408119 T CMatrixLinkList::AddToList2()
004081b1 T CMatrixLinkList::GetNumFree()
004081c9 T CMatrixLinkList::GetNumUsed1()
004081df T CMatrixLinkList::GetNumUsed2()
0040814f T CMatrixLinkList::MoveToList1(CMatrixLink*)
00408169 T CMatrixLinkList::MoveToList2(CMatrixLink*)
0040818d T CMatrixLinkList::MoveToFreeList(CMatrixLink*)
00407fd5 T CMatrixLinkList::Init(int)
004080ad T CMatrixLinkList::Shutdown()
00408da5 W CMatrixLinkList::~CMatrixLinkList()
00327559 T CMissionCleanup::AddEntityToList(int, unsigned char)
00328221 T CMissionCleanup::DoFadeScrewUpCheck()
0032759d T CMissionCleanup::RemoveEntityFromList(int, unsigned char)
003273b9 T CMissionCleanup::CheckIfCollisionHasLoadedForMissionObjects()
00327387 T CMissionCleanup::Init()
003276b5 T CMissionCleanup::Process()
003273a1 T CMissionCleanup::FindFree()
0032736d T CMissionCleanup::CMissionCleanup()
0032736d T CMissionCleanup::CMissionCleanup()
0045738f T CPedClothesDesc::Initialise()
00457521 T CPedClothesDesc::HasVisibleTattoo()
0045741d T CPedClothesDesc::SetTextureAndModel(char const*, char const*, int)
004573cd T CPedClothesDesc::SetTextureAndModel(unsigned int, unsigned int, int)
004574c5 T CPedClothesDesc::HasVisibleNewHairCut(int)
004574a5 T CPedClothesDesc::GetIsWearingBalaclava()
0045748b T CPedClothesDesc::SetModel(char const*, int)
00457485 T CPedClothesDesc::SetModel(unsigned int, int)
00457351 T CPedClothesDesc::CPedClothesDesc()
00457351 T CPedClothesDesc::CPedClothesDesc()
0061dba0 R CPedGroupPlacer::ms_maxGangSize
0061db9c R CPedGroupPlacer::ms_minGangSize
005d9205 T CProjectileInfo::Initialise()
005d9eb5 T CProjectileInfo::RemoveNotAdd(CEntity*, eWeaponType, CVector)
005d9305 T CProjectileInfo::AddProjectile(CEntity*, eWeaponType, CVector, float, CVector*, CEntity*)
005d9275 T CProjectileInfo::RemoveFXSystem(unsigned char)
00a84fc0 B CProjectileInfo::ms_apProjectile
005d9d19 T CProjectileInfo::RemoveProjectile(CProjectileInfo*, CProjectile*)
005d92f1 T CProjectileInfo::GetProjectileInfo(int)
005dad49 T CProjectileInfo::IsProjectileInRange(float, float, float, float, float, float, bool)
005daead T CProjectileInfo::RemoveAllProjectiles()
005daf69 T CProjectileInfo::RemoveIfThisIsAProjectile(CObject*)
005d9c55 T CProjectileInfo::RemoveDetonatorProjectiles()
005d9f39 T CProjectileInfo::Update()
005d92a5 T CProjectileInfo::Shutdown()
005b8009 T CRealTimeShadow::GetShadowCamera()
005b7dd1 T CRealTimeShadow::SetShadowedObject(CPhysical*)
005b81c9 T CRealTimeShadow::GetShadowRwTexture()
005b7f69 T CRealTimeShadow::SetLightProperties(float, float, bool)
005b81cf T CRealTimeShadow::DrawBorderAroundTexture(RwRGBA const&)
005b7cc1 T CRealTimeShadow::Create(int, bool, int, bool)
005b81e1 T CRealTimeShadow::Render(int, float)
005b800d T CRealTimeShadow::Update()
005b7c6d T CRealTimeShadow::Destroy()
005b7c0b T CRealTimeShadow::CRealTimeShadow()
005b7c0b T CRealTimeShadow::CRealTimeShadow()
005b7c23 T CRealTimeShadow::~CRealTimeShadow()
005b7c23 T CRealTimeShadow::~CRealTimeShadow()
0061dbf8 R CSexyPedScanner::ms_iScanPeriod
0061dc00 R CSexyPedScanner::ms_fSexyPedRange
004bcecd T CSexyPedScanner::ScanForSexyPedEvents(CPed const&, CEntity**, int)
0061dbfc R CSexyPedScanner::ms_iSexyPedLatencyPeriod
005482b1 T CTaskCategories::IsFleePedTask(CTask const*, bool&, bool&)
00548289 T CTaskCategories::IsKillPedTask(CTask const*, bool&, bool&)
005482a9 T CTaskCategories::IsFollowPedTask(CTask const*, bool&, bool&)
00548245 T CTaskCategories::ComputeTaskCategory(CTask const*)
00491135 W CTaskComplexDie::CreateTask()
004eb659 T CTaskComplexDie::MakeAbortable(CPed*, int, CEvent const*)
004eb909 T CTaskComplexDie::ControlSubTask(CPed*)
004eb6f9 T CTaskComplexDie::CreateNextSubTask(CPed*)
004eb761 T CTaskComplexDie::CreateFirstSubTask(CPed*)
004f2a55 W CTaskComplexDie::Serialize()
004eb5e1 T CTaskComplexDie::CTaskComplexDie(eWeaponType, AssocGroupId, AnimationId, float, float, bool, bool, int, bool)
004eb5e1 T CTaskComplexDie::CTaskComplexDie(eWeaponType, AssocGroupId, AnimationId, float, float, bool, bool, int, bool)
004eb649 T CTaskComplexDie::~CTaskComplexDie()
004eb645 T CTaskComplexDie::~CTaskComplexDie()
004eb645 T CTaskComplexDie::~CTaskComplexDie()
004d6ba9 T CTaskSimpleAnim::MakeAbortable(CPed*, int, CEvent const*)
004d6c99 T CTaskSimpleAnim::FinishRunAnimCB(CAnimBlendAssociation*, void*)
004d6b79 T CTaskSimpleAnim::CTaskSimpleAnim(bool)
004d6ba5 T CTaskSimpleAnim::~CTaskSimpleAnim()
004d7e0d T CTaskSimpleAnim::~CTaskSimpleAnim()
004d7e0d T CTaskSimpleAnim::~CTaskSimpleAnim()
00497f7d W CTaskSimpleChat::Serialize()
00497f1d W CTaskSimpleChat::~CTaskSimpleChat()
0049127d W CTaskSimpleDead::CreateTask()
004eb951 T CTaskSimpleDead::ProcessPed(CPed*)
004f2c0d W CTaskSimpleDead::MakeAbortable(CPed*, int, CEvent const*)
004f2c11 W CTaskSimpleDead::Serialize()
004eb90d T CTaskSimpleDead::CTaskSimpleDead(int, bool)
004eb90d T CTaskSimpleDead::CTaskSimpleDead(int, bool)
004eb941 T CTaskSimpleDead::~CTaskSimpleDead()
004eb93d T CTaskSimpleDead::~CTaskSimpleDead()
004eb93d T CTaskSimpleDead::~CTaskSimpleDead()
00543731 T CTaskSimpleDuck::CanPedDuck(CPed*)
00492161 W CTaskSimpleDuck::CreateTask()
005431cd T CTaskSimpleDuck::ProcessPed(CPed*)
00543161 T CTaskSimpleDuck::RestartTask(CPed*)
005434c1 T CTaskSimpleDuck::SetMoveAnim(CPed*)
00543715 T CTaskSimpleDuck::SetDuckTimer(unsigned short)
005436c1 T CTaskSimpleDuck::ForceStopMove()
00542f39 T CTaskSimpleDuck::MakeAbortable(CPed*, int, CEvent const*)
005436e1 T CTaskSimpleDuck::SetControlType(unsigned char)
005436cb T CTaskSimpleDuck::StartCountDown(unsigned char, bool)
00543601 T CTaskSimpleDuck::ControlDuckMove(CVector2D)
00543475 T CTaskSimpleDuck::DeleteDuckAnimCB(CAnimBlendAssociation*, void*)
0061e700 R CTaskSimpleDuck::ms_nLengthOfDuck
00543119 T CTaskSimpleDuck::AbortBecauseOfOtherDuck(CPed*)
00543fd5 W CTaskSimpleDuck::Serialize()
00542e3d T CTaskSimpleDuck::CTaskSimpleDuck(unsigned char, unsigned short, short)
00542e3d T CTaskSimpleDuck::CTaskSimpleDuck(unsigned char, unsigned short, short)
00542f29 T CTaskSimpleDuck::~CTaskSimpleDuck()
00542e91 T CTaskSimpleDuck::~CTaskSimpleDuck()
00542e91 T CTaskSimpleDuck::~CTaskSimpleDuck()
0052b771 T CTaskSimpleFall::ProcessPed(CPed*)
0052b941 T CTaskSimpleFall::ProcessFall(CPed*)
0052b64d T CTaskSimpleFall::MakeAbortable(CPed*, int, CEvent const*)
0052bab9 T CTaskSimpleFall::FinishAnimFallCB(CAnimBlendAssociation*, void*)
0061e680 R CTaskSimpleFall::ms_fFallingLoopEnd
0061e67c R CTaskSimpleFall::ms_fFallingLoopStart
0052b86d T CTaskSimpleFall::StartAnim(CPed*)
0052b5ad T CTaskSimpleFall::CTaskSimpleFall(AnimationId, AssocGroupId, unsigned int)
0052b5ad T CTaskSimpleFall::CTaskSimpleFall(AnimationId, AssocGroupId, unsigned int)
0052b615 T CTaskSimpleFall::~CTaskSimpleFall()
0052b5e1 T CTaskSimpleFall::~CTaskSimpleFall()
0052b5e1 T CTaskSimpleFall::~CTaskSimpleFall()
0051c857 T CTaskSimpleGoTo::HasCircledTarget(CPed*)
0061e5d8 R CTaskSimpleGoTo::ms_fTargetRadius
0051cac5 T CTaskSimpleGoTo::QuitIK(CPed*)
0051c901 T CTaskSimpleGoTo::SetUpIK(CPed*)
0051c811 T CTaskSimpleGoTo::CTaskSimpleGoTo(int, CVector const&, float)
0051c855 T CTaskSimpleGoTo::~CTaskSimpleGoTo()
0051c851 T CTaskSimpleGoTo::~CTaskSimpleGoTo()
0051c851 T CTaskSimpleGoTo::~CTaskSimpleGoTo()
0052d7d9 T CTaskSimpleJump::ProcessPed(CPed*)
0052d92d T CTaskSimpleJump::HasPedHitHead(CPed*)
0052d7b9 T CTaskSimpleJump::MakeAbortable(CPed*, int, CEvent const*)
0052de45 T CTaskSimpleJump::StartLaunchAnim(CPed*)
0061e684 R CTaskSimpleJump::ms_fMinJumpSpeed
0061e690 R CTaskSimpleJump::ms_fPedJumpForce
0061e688 R CTaskSimpleJump::ms_fRunJumpSpeed
0052dfe9 T CTaskSimpleJump::FinishAnimLaunchCB(CAnimBlendAssociation*, void*)
0061e68c R CTaskSimpleJump::ms_fSprintJumpSpeed
0061e694 R CTaskSimpleJump::ms_fPlayerPedJumpForce
0052dad1 T CTaskSimpleJump::Launch(CPed*)
005331b5 W CTaskSimpleJump::Serialize()
0052d709 T CTaskSimpleJump::CTaskSimpleJump(bool)
0052d709 T CTaskSimpleJump::CTaskSimpleJump(bool)
0052d775 T CTaskSimpleJump::~CTaskSimpleJump()
0052d735 T CTaskSimpleJump::~CTaskSimpleJump()
0052d735 T CTaskSimpleJump::~CTaskSimpleJump()
0052cd05 T CTaskSimpleLand::ProcessPed(CPed*)
0052cc9d T CTaskSimpleLand::MakeAbortable(CPed*, int, CEvent const*)
0052cee5 T CTaskSimpleLand::LeftFootLanded()
0052cea9 T CTaskSimpleLand::RightFootLanded()
0052ce7d T CTaskSimpleLand::FinishAnimLandCB(CAnimBlendAssociation*, void*)
00532f59 W CTaskSimpleLand::Serialize()
0052cbf9 T CTaskSimpleLand::CTaskSimpleLand(AnimationId)
0052cbf9 T CTaskSimpleLand::CTaskSimpleLand(AnimationId)
0052cc65 T CTaskSimpleLand::~CTaskSimpleLand()
0052cc31 T CTaskSimpleLand::~CTaskSimpleLand()
0052cc31 T CTaskSimpleLand::~CTaskSimpleLand()
0032ed01 W CTaskSimpleNone::ProcessPed(CPed*)
0032ec8b W CTaskSimpleNone::MakeAbortable(CPed*, int, CEvent const*)
004b8d3d W CTaskSimpleNone::~CTaskSimpleNone()
00496f65 W CTaskSimpleSwim::CreateTask()
0053a2a1 T CTaskSimpleSwim::ProcessPed(CPed*)
0053a1f1 T CTaskSimpleSwim::MakeAbortable(CPed*, int, CEvent const*)
0053c6b5 T CTaskSimpleSwim::CreateFxSystem(CPed*, RwMatrixTag*)
0053c079 T CTaskSimpleSwim::ProcessEffects(CPed*)
006b04c0 D CTaskSimpleSwim::SWIM_STOP_TIME
0053a287 T CTaskSimpleSwim::DestroyFxSystem()
0053a5d5 T CTaskSimpleSwim::ProcessControlAI(CPed*)
0053b3f1 T CTaskSimpleSwim::ProcessSwimAnims(CPed*)
006b04bc D CTaskSimpleSwim::SWIM_CRAWL_FORCE
0053c615 T CTaskSimpleSwim::ApplyRollAndPitch(CPed*)
006b04b8 D CTaskSimpleSwim::SWIM_BREAST_FORCE
006b04cc D CTaskSimpleSwim::SWIM_CRAWL_TAPADD
006b04d0 D CTaskSimpleSwim::SWIM_CRAWL_HOLDSUB
006b04dc D CTaskSimpleSwim::SWIM_UWATER_TAPADD
0053a959 T CTaskSimpleSwim::ProcessControlInput(CPlayerPed*)
006b04e0 D CTaskSimpleSwim::SWIM_UWATER_HOLDSUB
006b04c8 D CTaskSimpleSwim::SWIM_CRAWL_THRESHOLD
006b04d4 D CTaskSimpleSwim::SWIM_CRAWL_RELEASESUB
006b04c4 D CTaskSimpleSwim::SWIM_DIVE_UNDER_ANGLE
006b04d8 D CTaskSimpleSwim::SWIM_UWATER_THRESHOLD
006b04e4 D CTaskSimpleSwim::SWIM_UWATER_RELEASESUB
0053ba29 T CTaskSimpleSwim::ProcessSwimmingResistance(CPed*)
0053c85d W CTaskSimpleSwim::Serialize()
0053a091 T CTaskSimpleSwim::CTaskSimpleSwim(CVector const*, CPed*)
0053a091 T CTaskSimpleSwim::CTaskSimpleSwim(CVector const*, CPed*)
0053a189 T CTaskSimpleSwim::~CTaskSimpleSwim()
0053a125 T CTaskSimpleSwim::~CTaskSimpleSwim()
0053a125 T CTaskSimpleSwim::~CTaskSimpleSwim()
002b10e1 T CTouchInterface::IsHeldDown(CTouchInterface::WidgetIDs, int)
002b0dcd T CTouchInterface::IsReleased(CTouchInterface::WidgetIDs, CVector2D*, int)
002b1045 T CTouchInterface::IsSwipedUp(CTouchInterface::WidgetIDs, int)
006f379c B CTouchInterface::m_pWidgets
002b28e5 T CTouchInterface::DebugReload()
002b0aa9 T CTouchInterface::IsTouchDown(int)
002b2861 T CTouchInterface::DeleteWidget(CTouchInterface::WidgetIDs)
002b1231 T CTouchInterface::DrawHelpIcon(char const*, float, float, float, int)
002b117d T CTouchInterface::IsSwipedDown(CTouchInterface::WidgetIDs, int)
002b0f0d T CTouchInterface::IsSwipedLeft(CTouchInterface::WidgetIDs, int)
002ad5e5 T CTouchInterface::LoadFromFile(char const*, bool)
002b0cf1 T CTouchInterface::VisualizeAll(bool)
006f4334 B CTouchInterface::m_bPinchZoom
006f4335 B CTouchInterface::m_bTouchDown
002b2591 T CTouchInterface::AddButtonFlag(CTouchInterface::WidgetIDs, int)
002b2551 T CTouchInterface::AddWidgetFlag(CTouchInterface::WidgetIDs, int)
002b0ae1 T CTouchInterface::GetNumTouches()
002b2699 T CTouchInterface::GetTouchDelta(int)
002b0fa9 T CTouchInterface::IsSwipedRight(CTouchInterface::WidgetIDs, int)
002afbe9 T CTouchInterface::LoadTextureDB()
002b28f9 T CTouchInterface::MarketingHack(int)
002b23f5 T CTouchInterface::SetWidgetInfo(CTouchInterface::WidgetIDs, char*, float, bool, bool, bool, bool, int)
00685d3c D CTouchInterface::m_nMaxTouches
002b21cd T CTouchInterface::GetWidgetValue(CTouchInterface::WidgetIDs)
002b20d9 T CTouchInterface::IsDoubleTapped(CTouchInterface::WidgetIDs, bool, int)
002b0e6d T CTouchInterface::IsPinchZooming(CTouchInterface::WidgetIDs, CVector2D*, int)
002b24e1 T CTouchInterface::SetSliderRange(CTouchInterface::WidgetIDs, float, float)
002b2455 T CTouchInterface::SetWidgetInfo2(CTouchInterface::WidgetIDs, int, int, int, int, char*, char*)
002b22ad T CTouchInterface::SetWidgetValue(CTouchInterface::WidgetIDs, float)
006f433c B CTouchInterface::m_vecCachedPos
002b1219 T CTouchInterface::ClearTapHistory(CTouchInterface::WidgetIDs)
002b2229 T CTouchInterface::GetWidgetValue2(CTouchInterface::WidgetIDs, float*, float*)
002b24c5 T CTouchInterface::SetEquippedItem(CTouchInterface::WidgetIDs, int)
002b2311 T CTouchInterface::SetWidgetValue2(CTouchInterface::WidgetIDs, float, float)
002b2381 T CTouchInterface::SetWidgetValue3(CTouchInterface::WidgetIDs, float, float, float)
002b00c1 T CTouchInterface::UnloadTextureDB(TextureDatabaseRuntime*)
002b27e5 T CTouchInterface::CreateShopWidget(char const*, char const**, int, WidgetPosition&, bool)
002b0ac5 T CTouchInterface::GetTouchPosition(int)
002b25d1 T CTouchInterface::RemoveButtonFlag(CTouchInterface::WidgetIDs, int)
002b2571 T CTouchInterface::RemoveWidgetFlag(CTouchInterface::WidgetIDs, int)
002b24a5 T CTouchInterface::SetWidgetTexture(CTouchInterface::WidgetIDs, char*)
006f3a94 B CTouchInterface::m_WidgetPosition
006f435c B CTouchInterface::m_vecCachedDelta
002b2665 T CTouchInterface::GetWidgetPosition(CTouchInterface::WidgetPositionIDs, float&, float&, float&, float&)
002b2611 T CTouchInterface::GetWidgetPosition(CTouchInterface::WidgetIDs, float&, float&, float&, float&)
002b2895 T CTouchInterface::LoadAllTextureDBs()
002adb21 T CTouchInterface::LoadTouchControls()
002afed5 T CTouchInterface::SetupSteeringMode()
002afd05 T CTouchInterface::SetupLayoutObjects()
002b28bd T CTouchInterface::UnloadAllTextureDBs()
006f437c B CTouchInterface::m_pszWidgetTextures
002b2765 T CTouchInterface::CreateListTextWidget(char const**, int, CTouchInterface::WidgetIDs, WidgetPosition&, bool, bool, bool)
002b26b5 T CTouchInterface::CreateListTextWidget(char const**, int, CTouchInterface::WidgetIDs, bool, bool, bool)
002afca5 T CTouchInterface::CreateTapMeterWidget()
002ad581 T CTouchInterface::LoadDefaultConfigFile()
002b2925 T CTouchInterface::AnyWidgetsUsingAltBack()
002afc45 T CTouchInterface::CreateThumbCircleWidget()
00685d40 D CTouchInterface::m_pszWidgetPositionNames
002b00d1 T CTouchInterface::RepositionAdjustableWidgets()
002b03f9 T CTouchInterface::Clear()
002b0b71 T CTouchInterface::Update()
002b0bd9 T CTouchInterface::DrawAll(bool)
002ae571 T CTouchInterface::CreateAll()
002afc05 T CTouchInterface::DeleteAll()
002b0d2d T CTouchInterface::IsTouched(CTouchInterface::WidgetIDs, CVector2D*, int)
004bae55 T CVehicleScanner::ScanForVehiclesInRange(CPed const&)
002b85c5 T CWidgetHelpText::ClearQueue(bool)
002b7d85 T CWidgetHelpText::RenderStat(float, float, bool, float)
002b726d T CWidgetHelpText::UseTopStyle()
006fa30c B CWidgetHelpText::m_pInstance
002b8119 T CWidgetHelpText::SetFontProps(unsigned short*)
002b7191 T CWidgetHelpText::IsStringQueued(unsigned short*)
002b8231 T CWidgetHelpText::RenderTopStyle()
002b7339 T CWidgetHelpText::ProcessTopStyle()
002b7071 T CWidgetHelpText::AddMessageToQueue(unsigned short*, bool, unsigned short, float, float, unsigned int)
002b8415 T CWidgetHelpText::ConditionSatisfied(unsigned int)
002b8367 T CWidgetHelpText::GetNumQueuedMessages()
002b77b1 T CWidgetHelpText::ProcessMidScreenStyle()
002b84f5 T CWidgetHelpText::ConditionSatisfiedInstance(unsigned int)
002b879d T CWidgetHelpText::Update()
002b87d5 W CWidgetHelpText::GetName()
002b724f T CWidgetHelpText::Process()
002b831d T CWidgetHelpText::Visualize()
002b6e01 T CWidgetHelpText::CWidgetHelpText(char const*, WidgetPosition const&)
002b6e01 T CWidgetHelpText::CWidgetHelpText(char const*, WidgetPosition const&)
002b7045 T CWidgetHelpText::~CWidgetHelpText()
002b7025 T CWidgetHelpText::~CWidgetHelpText()
002b7025 T CWidgetHelpText::~CWidgetHelpText()
002bba6d T CWidgetListShop::AssignImage(int)
006fa31c B CWidgetListShop::m_FileEntry
002bae4d T CWidgetListShop::AssignImages()
002bb741 T CWidgetListShop::LoadFromFile()
002baef9 T CWidgetListShop::Draw()
002bae7f T CWidgetListShop::Update()
002bbb0d T CWidgetListShop::AddItem(char const*, char const*)
002bbb95 W CWidgetListShop::GetName()
002bac01 T CWidgetListShop::CWidgetListShop(char const*, char const*, WidgetPosition const&, char const**, int, bool)
002bac01 T CWidgetListShop::CWidgetListShop(char const*, char const*, WidgetPosition const&, char const**, int, bool)
002bbb5d W CWidgetListShop::~CWidgetListShop()
0070b61c B CWidgetListText::m_fLastScroll
002bbc55 T CWidgetListText::Draw()
002bbc31 T CWidgetListText::Update()
002bbfb9 W CWidgetListText::GetName()
002bbba5 T CWidgetListText::CWidgetListText(char const*, WidgetPosition const&, char const**, int, bool, bool, bool)
002bbba5 T CWidgetListText::CWidgetListText(char const*, WidgetPosition const&, char const**, int, bool, bool, bool)
002bbf81 W CWidgetListText::~CWidgetListText()
002c7cd5 T CWidgetTapMeter::IsReleased(CVector2D*)
002c7c7d T CWidgetTapMeter::RespondToTap()
002c7d51 T CWidgetTapMeter::SetWidgetValue(float)
002c7a29 T CWidgetTapMeter::Draw()
002c7921 T CWidgetTapMeter::Update()
002c7d7d W CWidgetTapMeter::GetName()
002c7881 T CWidgetTapMeter::CWidgetTapMeter(char const*, WidgetPosition const&)
002c7881 T CWidgetTapMeter::CWidgetTapMeter(char const*, WidgetPosition const&)
002c7d6b W CWidgetTapMeter::~CWidgetTapMeter()
002a85bd W CloudWaitScreen::Render(int)
002a88c9 W CloudWaitScreen::SaveDone(void*)
002a85ab W CloudWaitScreen::~CloudWaitScreen()
0067a3c8 D ES2RenderTarget::backBuffer
006b8af4 B ES2VertexBuffer::curCPUSize
006b8afc B ES2VertexBuffer::safeCPUSize
006b8af0 B ES2VertexBuffer::curCPUBuffer
006b8af8 B ES2VertexBuffer::safeCPUBuffer
001cc0d9 W ES2VertexBuffer::~ES2VertexBuffer()
0036de1f T FxFrustumInfo_c::IsCollision(FxSphere_c*)
0036a621 T FxInfoEmAngle_c::Load(unsigned int, int)
0036a627 T FxInfoEmAngle_c::GetValue(float, float, float, float, unsigned char, void*)
0036a5e1 T FxInfoEmAngle_c::FxInfoEmAngle_c()
0036a5e1 T FxInfoEmAngle_c::FxInfoEmAngle_c()
0036bc69 W FxInfoEmAngle_c::~FxInfoEmAngle_c()
0036bc45 W FxInfoEmAngle_c::~FxInfoEmAngle_c()
0036a559 T FxInfoEmSpeed_c::Load(unsigned int, int)
0036a55f T FxInfoEmSpeed_c::GetValue(float, float, float, float, unsigned char, void*)
0036a519 T FxInfoEmSpeed_c::FxInfoEmSpeed_c()
0036a519 T FxInfoEmSpeed_c::FxInfoEmSpeed_c()
0036bbd1 W FxInfoEmSpeed_c::~FxInfoEmSpeed_c()
0036bbad W FxInfoEmSpeed_c::~FxInfoEmSpeed_c()
0036a2e1 T FxInfoManager_c::ProcessRenderInfo(float, float, float, float, unsigned char, RenderInfo_t*)
0036a191 T FxInfoManager_c::ProcessEmissionInfo(float, float, float, unsigned char, EmissionInfo_t*)
0036a261 T FxInfoManager_c::ProcessMovementInfo(float, float, float, float, unsigned char, MovementInfo_t*)
0046e4cd T FxInfoManager_c::Load(unsigned int, int)
003697d9 T FxInfoManager_c::AddFxInfo(int)
003697d5 T FxInfoManager_c::~FxInfoManager_c()
003697d5 T FxInfoManager_c::~FxInfoManager_c()
0036b9a5 T FxInfoSelfLit_c::Load(unsigned int, int)
0036b9a7 T FxInfoSelfLit_c::GetValue(float, float, float, float, unsigned char, void*)
0036b979 T FxInfoSelfLit_c::FxInfoSelfLit_c()
0036b979 T FxInfoSelfLit_c::FxInfoSelfLit_c()
0036c3d5 W FxInfoSelfLit_c::~FxInfoSelfLit_c()
0036c3b1 W FxInfoSelfLit_c::~FxInfoSelfLit_c()
00448d41 T InteriorGroup_c::SetupPaths()
00449a51 T InteriorGroup_c::UpdatePeds()
00449b09 T InteriorGroup_c::AddInterior(Interior_c*)
00448cf5 T InteriorGroup_c::CalcIsVisible()
0044a405 T InteriorGroup_c::SetupShopPeds()
0044a121 T InteriorGroup_c::ArePathsLoaded()
00449ab1 T InteriorGroup_c::ReferenceAnims()
00449b67 T InteriorGroup_c::RemoveInterior(Interior_c*)
0044a219 T InteriorGroup_c::SetupHousePeds()
0044a89d T InteriorGroup_c::UpdateShopPeds()
0044a025 T InteriorGroup_c::GetEntryExitPtr()
0044a58d T InteriorGroup_c::SetupOfficePeds()
0044a687 T InteriorGroup_c::UpdateHousePeds()
00448b6d T InteriorGroup_c::DereferenceAnims()
00449ce9 T InteriorGroup_c::FindInteriorInfo(int, InteriorInfo_t**, Interior_c**)
0044a689 T InteriorGroup_c::UpdateOfficePeds()
00449c01 T InteriorGroup_c::GetRandomInterior()
00449f79 T InteriorGroup_c::MarkPedForRemoval(CPed*)
00449c99 T InteriorGroup_c::GetNumInteriorInfos(int)
0044a0b9 T InteriorGroup_c::ContainsInteriorType(int)
00449dd5 T InteriorGroup_c::FindClosestInteriorInfo(int, CVector, float, InteriorInfo_t**, Interior_c**, float*)
004489d5 T InteriorGroup_c::Exit()
00448965 T InteriorGroup_c::Init(CEntity*, int)
0044a029 T InteriorGroup_c::Setup()
00449f71 T InteriorGroup_c::GetPed(int)
00448ba1 T InteriorGroup_c::Update()
0044a021 T InteriorGroup_c::GetEntity()
0044a5a7 T InteriorGroup_c::RemovePed(CPed*)
004499f9 T InteriorGroup_c::SetupPeds()
00456f0d T ProcObjectMan_c::LoadDataFile()
0045684d T ProcObjectMan_c::GetEntityFromPool()
00456339 T ProcObjectMan_c::ReturnEntityToPool(EntityItem_c*)
004571a3 T ProcObjectMan_c::ProcessTriangleAdded(CPlantLocTri*)
004571f1 T ProcObjectMan_c::ProcessTriangleRemoved(CPlantLocTri*)
0045710d T ProcObjectMan_c::Exit()
00456ec7 T ProcObjectMan_c::Init()
004571a1 T ProcObjectMan_c::Update()
00456e41 T ProcObjectMan_c::ProcObjectMan_c()
00456e41 T ProcObjectMan_c::ProcObjectMan_c()
00456e85 T ProcObjectMan_c::~ProcObjectMan_c()
00456e85 T ProcObjectMan_c::~ProcObjectMan_c()
002a7305 W StartGameScreen::OnLoadGame()
002a7385 W StartGameScreen::OnDeleteGame()
002a7271 W StartGameScreen::OnNewGameCheck()
002a74a5 W StartGameScreen::~StartGameScreen()
001e86f9 T TextureDatabase::LoadThumbs(TextureDatabaseFormat, bool)
001e80e5 T TextureDatabase::LoadEntries(bool, bool)
001e83a5 T TextureDatabase::LoadDataFile(char const*, TDBArray<TextureListingContainer>&)
001e8809 T TextureDatabase::GetPNGFilename(char*, char const*)
001e8839 T TextureDatabase::LoadDataOffsets(TextureDatabaseFormat, TDBArray<unsigned int>&, void*&, bool)
001e79e1 T TextureDatabase::LoadEntry(char*, bool)
001e79d1 T TextureDatabase::~TextureDatabase()
001e787d T TextureDatabase::~TextureDatabase()
001e787d T TextureDatabase::~TextureDatabase()
005922dd T WaterCreature_c::Exit()
00591fa1 T WaterCreature_c::Init(int, CVector*, WaterCreature_c*, float, float)
0059232d T WaterCreature_c::Update(float)
00591f8d T WaterCreature_c::WaterCreature_c()
00591f8d T WaterCreature_c::WaterCreature_c()
00591f9b T WaterCreature_c::~WaterCreature_c()
00591f9b T WaterCreature_c::~WaterCreature_c()
00392465 T CAEAudioHardware::Initialise()
00392da5 T CAEAudioHardware::GetBeatInfo(tBeatInfo*)
00392617 T CAEAudioHardware::PauseOpenAL(int)
003932ab T CAEAudioHardware::EnableBassEq()
0039329f T CAEAudioHardware::DisableBassEq()
00392d2d T CAEAudioHardware::IsSoundLoaded(unsigned short, unsigned short, short)
00392c3b T CAEAudioHardware::LoadSoundBank(unsigned short, short)
0039331b T CAEAudioHardware::PauseAllSounds()
0039328d T CAEAudioHardware::SetBassSetting(signed char, float)
00393355 T CAEAudioHardware::ResumeAllSounds()
003932bd T CAEAudioHardware::SetChannelFlags(short, unsigned short, short)
0046cf35 T CAEAudioHardware::AllocateChannels(unsigned short)
00392d93 T CAEAudioHardware::GetActiveTrackID()
00392ccd T CAEAudioHardware::GetSoundHeadroom(unsigned short, short)
00392d8b T CAEAudioHardware::GetTrackLengthMs()
00392d83 T CAEAudioHardware::GetTrackPlayTime()
00392c19 T CAEAudioHardware::SetChannelVolume(short, unsigned short, float, unsigned char)
00393313 T CAEAudioHardware::GetDVDDriveLetter()
00392d9b T CAEAudioHardware::GetPlayingTrackID()
00392c4b T CAEAudioHardware::IsSoundBankLoaded(unsigned short, short)
0039256d T CAEAudioHardware::InitOpenALListener()
0039330f T CAEAudioHardware::IsStreamingFromDVD()
00392c81 T CAEAudioHardware::SetChannelPosition(short, unsigned short, CVector*, unsigned char)
00392d63 T CAEAudioHardware::StartTrackPlayback()
00392bdb T CAEAudioHardware::GetChannelPlayTimes(short, short*)
00392cd5 T CAEAudioHardware::EnableEffectsLoading()
00392cdb T CAEAudioHardware::DisableEffectsLoading()
00392d35 T CAEAudioHardware::GetSoundLoadingStatus(unsigned short, unsigned short, short)
0039273d T CAEAudioHardware::RescaleChannelVolumes()
00392bd5 T CAEAudioHardware::GetNumAvailableChannels()
00392ccb T CAEAudioHardware::UpdateReverbEnvironment()
00392c53 T CAEAudioHardware::GetSoundBankLoadingStatus(unsigned short, short)
003932e5 T CAEAudioHardware::SetMusicFaderScalingFactor(float)
003932f7 T CAEAudioHardware::GetMusicMasterScalingFactor()
003932d9 T CAEAudioHardware::SetMusicMasterScalingFactor(float)
00393303 T CAEAudioHardware::SetStreamFaderScalingFactor(float)
003932fd T CAEAudioHardware::GetEffectsFaderScalingFactor()
003932eb T CAEAudioHardware::SetEffectsFaderScalingFactor(float)
003932f1 T CAEAudioHardware::GetEffectsMasterScalingFactor()
00392cf9 T CAEAudioHardware::GetVirtualChannelSoundLengths(short*)
003932df T CAEAudioHardware::SetEffectsMasterScalingFactor(float)
00392ce1 T CAEAudioHardware::RequestVirtualChannelSoundInfo(unsigned short, unsigned short, unsigned short)
00393309 T CAEAudioHardware::SetNonStreamFaderScalingFactor(float)
00392ca9 T CAEAudioHardware::SetChannelFrequencyScalingFactor(short, unsigned short, float)
00392461 T CAEAudioHardware::GetActualNumberOfHardwareChannels()
00392d09 T CAEAudioHardware::GetVirtualChannelSoundLoopStartTimes(short*)
003926bd T CAEAudioHardware::Service()
00392609 T CAEAudioHardware::SetHRTF(int)
00393317 T CAEAudioHardware::CheckDVD()
00392d19 T CAEAudioHardware::LoadSound(unsigned short, unsigned short, short)
00392ab9 T CAEAudioHardware::PlaySound(short, unsigned short, unsigned short, unsigned short, short, short, float)
00392d3d T CAEAudioHardware::PlayTrack(unsigned int, int, unsigned int, char, bool, bool)
00392c5b T CAEAudioHardware::StopSound(short, unsigned short)
00392d7b T CAEAudioHardware::StopTrack()
00392625 T CAEAudioHardware::Terminate()
00392201 T CAEAudioHardware::CAEAudioHardware()
00392201 T CAEAudioHardware::CAEAudioHardware()
00393361 W CAEAudioHardware::~CAEAudioHardware()
0027dce9 T CAEMP3BankLoader::Initialise()
0027e355 T CAEMP3BankLoader::LoadRequest(ZIPFile*, int, int, int)
0027e5e9 T CAEMP3BankLoader::GetLoopOffset(unsigned short, short)
0027e521 T CAEMP3BankLoader::IsSoundLoaded(unsigned short, unsigned short, short)
0027e401 T CAEMP3BankLoader::LoadSoundBank(unsigned short, short)
0027e321 T CAEMP3BankLoader::GetSoundBuffer(unsigned short, short, unsigned short*)
0027e565 T CAEMP3BankLoader::GetSoundHeadroom(unsigned short, short)
0027e469 T CAEMP3BankLoader::IsSoundBankLoaded(unsigned short, short)
0027e62d T CAEMP3BankLoader::GetSoundLoadingStatus(unsigned short, unsigned short, short)
0027e671 T CAEMP3BankLoader::UpdateVirtualChannels(tVirtualChannelSettings*, short*, short*)
0027e5b5 T CAEMP3BankLoader::GetSoundBankLoadingStatus(unsigned short, short)
0027e04d T CAEMP3BankLoader::Service()
0027e49d T CAEMP3BankLoader::LoadSound(unsigned short, unsigned short, short)
0027db05 T CAEMP3BankLoader::CAEMP3BankLoader()
0027db05 T CAEMP3BankLoader::CAEMP3BankLoader()
0027dcd9 T CAEMP3BankLoader::~CAEMP3BankLoader()
0027dbad T CAEMP3BankLoader::~CAEMP3BankLoader()
0027dbad T CAEMP3BankLoader::~CAEMP3BankLoader()
003a9559 T CAEStaticChannel::GetPlayTime()
003a9191 T CAEStaticChannel::SetAudioData(void*, unsigned int, unsigned short, short, short, unsigned short)
003a9419 T CAEStaticChannel::SynchPlayback()
003a950d T CAEStaticChannel::IsSoundPlaying()
003a9351 T CAEStaticChannel::SetAudioBuffer(OALBuffer*, unsigned short, short, short, unsigned short)
003a9125 T CAEStaticChannel::Play(short, signed char, float)
003a958d T CAEStaticChannel::Stop()
003a94ad T CAEStaticChannel::Service()
003a957f T CAEStaticChannel::GetLength()
003a9085 T CAEStaticChannel::CAEStaticChannel(unsigned short, unsigned int, unsigned short)
003a9085 T CAEStaticChannel::CAEStaticChannel(unsigned short, unsigned int, unsigned short)
003a90e5 T CAEStaticChannel::~CAEStaticChannel()
003a90a9 T CAEStaticChannel::~CAEStaticChannel()
003a90a9 T CAEStaticChannel::~CAEStaticChannel()
003befa3 T CAccidentManager::ReportAccident(CPed*)
003bf149 T CAccidentManager::GetNearestFreeAccident(CVector const&, bool)
003bf1fd T CAccidentManager::GetNearestFreeAccidentExceptThisOne(CVector const&, CAccident*, bool)
003bef4d T CAccidentManager::CAccidentManager()
003bef4d T CAccidentManager::CAccidentManager()
003befa1 T CAccidentManager::~CAccidentManager()
003befa1 T CAccidentManager::~CAccidentManager()
00384fbb W CAtomicModelInfo::GetModelType()
00384a59 T CAtomicModelInfo::CreateInstance(RwMatrixTag*)
00384acf T CAtomicModelInfo::CreateInstance()
003849c1 T CAtomicModelInfo::DeleteRwObject()
00384fc3 W CAtomicModelInfo::GetRwModelType()
00384fb1 W CAtomicModelInfo::AsAtomicModelInfoPtr()
00384a2d T CAtomicModelInfo::GetAtomicFromDistance(float)
00384b05 T CAtomicModelInfo::SetupVehicleUpgradeFlags(char const*)
003849bd T CAtomicModelInfo::Init()
0038490d T CAtomicModelInfo::SetAtomic(RpAtomic*)
00384fad W CAtomicModelInfo::~CAtomicModelInfo()
002e1035 T CCollisionPlugin::PluginAttach()
002e1175 T CCollisionPlugin::SetModelInfo(CClumpModelInfo*)
003f82a7 T CControllerState::CheckForInput()
003f8291 T CControllerState::Clear()
00377581 T CEventFireNearby::CEventFireNearby(CVector const&)
00377581 T CEventFireNearby::CEventFireNearby(CVector const&)
003775b1 T CEventFireNearby::~CEventFireNearby()
00378119 T CEventFireNearby::~CEventFireNearby()
00378119 T CEventFireNearby::~CEventFireNearby()
00373d01 T CEventGroupEvent::CEventGroupEvent(CPed*, CEvent*)
00373d01 T CEventGroupEvent::CEventGroupEvent(CPed*, CEvent*)
00373d69 T CEventGroupEvent::~CEventGroupEvent()
00373d35 T CEventGroupEvent::~CEventGroupEvent()
00373d35 T CEventGroupEvent::~CEventGroupEvent()
00376319 T CEventGunAimedAt::AddGunAimedAtEventToVehicleOccupants(CVehicle const&, CPed*)
0037614d T CEventGunAimedAt::CEventGunAimedAt(CPed*)
0037614d T CEventGunAimedAt::CEventGunAimedAt(CPed*)
003761b5 T CEventGunAimedAt::~CEventGunAimedAt()
0037618d T CEventGunAimedAt::~CEventGunAimedAt()
0037618d T CEventGunAimedAt::~CEventGunAimedAt()
00378e59 W CEventPassObject::~CEventPassObject()
00378e31 W CEventPassObject::~CEventPassObject()
00374a8d T CEventPedToChase::CEventPedToChase(CPed*)
00374a8d T CEventPedToChase::CEventPedToChase(CPed*)
00374ae9 T CEventPedToChase::~CEventPedToChase()
00374ac1 T CEventPedToChase::~CEventPedToChase()
00374ac1 T CEventPedToChase::~CEventPedToChase()
00379099 W CEventSoundQuiet::~CEventSoundQuiet()
00379071 W CEventSoundQuiet::~CEventSoundQuiet()
00376d4d T CEventStuckInAir::CEventStuckInAir(CPed*)
00376d4d T CEventStuckInAir::CEventStuckInAir(CPed*)
00376da9 T CEventStuckInAir::~CEventStuckInAir()
00376d81 T CEventStuckInAir::~CEventStuckInAir()
00376d81 T CEventStuckInAir::~CEventStuckInAir()
003e2df1 T CHeliCamSettings::SetDefault()
003e2cd5 T CHeliCamSettings::RandomiseABit()
003e2db9 T CHeliCamSettings::Reset()
0044ec3d T CMatrixSerialize::operator=(CMatrix const&)
0061da40 R CPedAtmAttractor::ms_fSpacing
0061da54 R CPedAtmAttractor::ms_fDeltaPos
0061da3c R CPedAtmAttractor::ms_iMaxSlots
0061da4c R CPedAtmAttractor::ms_fArriveRange
0061da58 R CPedAtmAttractor::ms_fDeltaHeading
0061da50 R CPedAtmAttractor::ms_fHeadingRange
0061da44 R CPedAtmAttractor::ms_fAchieveQueueTime
0061da48 R CPedAtmAttractor::ms_fAchieveQueueShuffleTime
004ac421 W CPedAtmAttractor::~CPedAtmAttractor()
004c144b T CPedIntelligence::AreFriends(CPed const&, CPed const&)
004c095d T CPedIntelligence::ClearTasks(bool, bool)
004c0cb5 T CPedIntelligence::ProcessFirst()
004c0cad T CPedIntelligence::SetEffectInUse(C2dEffect*)
004c0343 T CPedIntelligence::SetSeeingRange(float)
0061dc18 R CPedIntelligence::ms_fSenseRange
004c033d T CPedIntelligence::SetHearingRange(float)
004c0ab5 T CPedIntelligence::FlushImmediately(bool)
004c1509 T CPedIntelligence::FlushIntelligence()
004c1611 T CPedIntelligence::TestForStealthKill(CPed*, bool)
004c051b T CPedIntelligence::AddTaskPhysResponse(CTask*, bool)
004c184b T CPedIntelligence::IsInterestingEntity(CEntity*)
004c10f9 T CPedIntelligence::ProcessAfterProcCol()
004c1375 T CPedIntelligence::ProcessEventHandler()
004c186d T CPedIntelligence::AddInterestingEntity(CEntity*)
004c19ad T CPedIntelligence::IsPedGoingForCarDoor()
004c0da9 T CPedIntelligence::ProcessStaticCounter()
004c1811 T CPedIntelligence::RecordEventForScript(int, int)
004c07b1 T CPedIntelligence::SetTaskDuckSecondary(unsigned short)
006af93c D CPedIntelligence::ms_iDesiredMoveState
004c182b T CPedIntelligence::HasInterestingEntites()
004c1411 T CPedIntelligence::IsInACarOrEnteringOne()
004c11bd T CPedIntelligence::ProcessAfterPreRender()
004c08a9 T CPedIntelligence::ClearTaskDuckSecondary()
004c18eb T CPedIntelligence::RemoveInterestingEntity(CEntity*)
004be305 T CPedIntelligence::SetPedDecisionMakerType(int)
004c0525 T CPedIntelligence::AddTaskEventResponseTemp(CTask*, bool)
0061dc20 R CPedIntelligence::ms_fSenseRangeOfGangPeds
004c0f3d T CPedIntelligence::LookAtInterestingEntities()
004c0539 T CPedIntelligence::AddTaskPrimaryMaybeInGroup(CTask*, bool)
004c052f T CPedIntelligence::AddTaskEventResponseNonTemp(CTask*, bool)
004c032b T CPedIntelligence::RestorePedDecisionMakerType()
0061dc1c R CPedIntelligence::ms_fSenseRangeOfMissionPeds
0061dc28 R CPedIntelligence::ms_iStaticCounterStuckCount
004c1965 T CPedIntelligence::RemoveAllInterestingEntities()
004c0325 T CPedIntelligence::SetPedDecisionMakerTypeInGroup(int)
0061dc24 R CPedIntelligence::ms_fFollowNodeThresholdDistance
0061dc3c R CPedIntelligence::ms_iNumCollisionFramesTolerance
004bcdb9 T CPedIntelligence::FindRespectedFriendInInformRange()
0061dc40 R CPedIntelligence::ms_iStaticCountColPosToleranceSqr
004c19f5 T CPedIntelligence::SortAndStaggerAllPedsEventScannerTimers()
0048559d T CPedIntelligence::Load()
00485265 T CPedIntelligence::Save()
004c0ec5 T CPedIntelligence::Process()
004c0029 T CPedIntelligence::CPedIntelligence(CPed*)
004c0029 T CPedIntelligence::CPedIntelligence(CPed*)
004c0231 T CPedIntelligence::~CPedIntelligence()
004c0231 T CPedIntelligence::~CPedIntelligence()
004c24f9 T CPedIntelligence::operator delete(void*)
004c2529 T CPedIntelligence::operator delete(void*, int)
004c2441 T CPedIntelligence::operator new(unsigned int)
004c24a5 T CPedIntelligence::operator new(unsigned int, int)
004b9e69 T CPedStuckChecker::TestPedStuck(CPed*, CEventGroup*)
004b9e61 T CPedStuckChecker::CPedStuckChecker()
004b9e61 T CPedStuckChecker::CPedStuckChecker()
0040c319 T CPlayerCrossHair::Render(int)
0040b695 T CPlayerCrossHair::Update(int, CPad*)
0040869b T CSimpleTransform::Invert(CSimpleTransform const&)
0033528d T CStreamedScripts::Initialise()
003352b7 T CStreamedScripts::ReInitialise()
003352c9 T CStreamedScripts::RegisterScript(char const*)
00335325 T CStreamedScripts::FindStreamedScript(char const*)
0033544d T CStreamedScripts::LoadStreamedScript(RwStream*, int)
00335359 T CStreamedScripts::ReadStreamedScriptData()
0033549d T CStreamedScripts::StartNewStreamedScript(int)
003352f1 T CStreamedScripts::FindStreamedScriptQuiet(char const*)
00335525 T CStreamedScripts::GetStreamedScriptFilename(unsigned short)
00335509 T CStreamedScripts::RemoveStreamedScriptFromMemory(int)
0033542d T CStreamedScripts::GetProperIndexFromIndexUsedByScript(short)
0033552d T CStreamedScripts::GetStreamedScriptWithThisStartAddress(unsigned char*)
00535a6d T CTaskComplexChat::ControlSubTask(CPed*)
005358fd T CTaskComplexChat::CreateNextSubTask(CPed*)
00535901 T CTaskComplexChat::CreateFirstSubTask(CPed*)
005357f5 T CTaskComplexChat::CTaskComplexChat(unsigned char, CPed*, int, short)
005357f5 T CTaskComplexChat::CTaskComplexChat(unsigned char, CPed*, int, short)
0053586d T CTaskComplexChat::~CTaskComplexChat()
00535841 T CTaskComplexChat::~CTaskComplexChat()
00535841 T CTaskComplexChat::~CTaskComplexChat()
0052e139 T CTaskComplexJump::CreateSubTask(int, CPed*)
0052e029 T CTaskComplexJump::MakeAbortable(CPed*, int, CEvent const*)
0052e399 T CTaskComplexJump::ControlSubTask(CPed*)
0052e09d T CTaskComplexJump::CreateNextSubTask(CPed*)
0052e33d T CTaskComplexJump::CreateFirstSubTask(CPed*)
0053326d W CTaskComplexJump::Serialize()
0052dff5 T CTaskComplexJump::CTaskComplexJump(int)
0052dff5 T CTaskComplexJump::CTaskComplexJump(int)
0052e019 T CTaskComplexJump::~CTaskComplexJump()
0052e015 T CTaskComplexJump::~CTaskComplexJump()
0052e015 T CTaskComplexJump::~CTaskComplexJump()
004dfd99 T CTaskSimpleBeHit::ProcessPed(CPed*)
004dfc65 T CTaskSimpleBeHit::MakeAbortable(CPed*, int, CEvent const*)
004dfcbd T CTaskSimpleBeHit::FinishAnimBeHitCB(CAnimBlendAssociation*, void*)
004dfcc9 T CTaskSimpleBeHit::StartAnim(CPed*)
004dfb79 T CTaskSimpleBeHit::CTaskSimpleBeHit(CPed*, ePedPieceTypes, int, int)
004dfb79 T CTaskSimpleBeHit::CTaskSimpleBeHit(CPed*, ePedPieceTypes, int, int)
004dfc15 T CTaskSimpleBeHit::~CTaskSimpleBeHit()
004dfbc9 T CTaskSimpleBeHit::~CTaskSimpleBeHit()
004dfbc9 T CTaskSimpleBeHit::~CTaskSimpleBeHit()
00491715 W CTaskSimpleClimb::CreateTask()
0052e5bd T CTaskSimpleClimb::ProcessPed(CPed*)
0052f751 T CTaskSimpleClimb::ScanToGrab(CPed*, CVector&, float&, unsigned char&, bool, bool, bool, CVector*)
0052cac1 T CTaskSimpleClimb::TestForClimb(CPed*, CVector&, float&, unsigned char&, bool)
0052f12d T CTaskSimpleClimb::TestForVault(CPed*, CVector&, float)
0052e509 T CTaskSimpleClimb::MakeAbortable(CPed*, int, CEvent const*)
0052fb3d T CTaskSimpleClimb::CreateColModel()
0052f1f5 T CTaskSimpleClimb::TestForStandUp(CPed*, CVector&, float)
009ff744 B CTaskSimpleClimb::ms_ClimbColModel
009ff7a4 B CTaskSimpleClimb::ms_VaultColModel
0052f2a5 T CTaskSimpleClimb::DeleteAnimClimbCB(CAnimBlendAssociation*, void*)
0052f2ad T CTaskSimpleClimb::GetCameraTargetPos(CPed*, CVector&)
009ff774 B CTaskSimpleClimb::ms_StandupColModel
009ff7d4 B CTaskSimpleClimb::ms_FindEdgeColModel
006b0444 D CTaskSimpleClimb::ms_fVaultOffsetHorz
009ff808 B CTaskSimpleClimb::ms_fVaultOffsetVert
005303fd T CTaskSimpleClimb::ScanToGrabSectorList(CPtrList&, CPed*, CVector&, float&, unsigned char&, bool, bool, bool)
006b0438 D CTaskSimpleClimb::ms_fAtEdgeOffsetHorz
009ff804 B CTaskSimpleClimb::ms_fAtEdgeOffsetVert
006b0430 D CTaskSimpleClimb::ms_fHangingOffsetHorz
006b0434 D CTaskSimpleClimb::ms_fHangingOffsetVert
006b0408 D CTaskSimpleClimb::ms_fMinForStretchGrab
006b043c D CTaskSimpleClimb::ms_fStandUpOffsetHorz
006b0440 D CTaskSimpleClimb::ms_fStandUpOffsetVert
0052f4a5 T CTaskSimpleClimb::GetCameraStickModifier(CPed*, float&, float&, float&, float&)
0052e4c9 T CTaskSimpleClimb::Shutdown()
005333ad W CTaskSimpleClimb::Serialize()
0052ef7d T CTaskSimpleClimb::StartAnim(CPed*)
0052e39d T CTaskSimpleClimb::CTaskSimpleClimb(CEntity*, CVector const&, float, unsigned char, signed char, bool)
0052e39d T CTaskSimpleClimb::CTaskSimpleClimb(CEntity*, CVector const&, float, unsigned char, signed char, bool)
0052e481 T CTaskSimpleClimb::~CTaskSimpleClimb()
0052e43d T CTaskSimpleClimb::~CTaskSimpleClimb()
0052e43d T CTaskSimpleClimb::~CTaskSimpleClimb()
003576e9 W CTaskSimpleCower::Serialize()
00357695 W CTaskSimpleCower::~CTaskSimpleCower()
004eb4f5 T CTaskSimpleDrown::ProcessPed(CPed*)
004f28f9 W CTaskSimpleDrown::Serialize()
004eb475 T CTaskSimpleDrown::CTaskSimpleDrown()
004eb475 T CTaskSimpleDrown::CTaskSimpleDrown()
004eb4bd T CTaskSimpleDrown::~CTaskSimpleDrown()
004eadbd T CTaskSimpleDrown::~CTaskSimpleDrown()
004eadbd T CTaskSimpleDrown::~CTaskSimpleDrown()
004d8a95 T CTaskSimpleFight::ProcessPed(CPed*)
004daa59 T CTaskSimpleFight::FightHitCar(CPed*, CVehicle*, CVector&, CVector&, short, unsigned char)
004dad29 T CTaskSimpleFight::FightHitObj(CPed*, CObject*, CVector&, CVector&, short, unsigned char)
004da465 T CTaskSimpleFight::FightHitPed(CPed*, CPed*, CVector&, CVector&, short)
004d9b4d T CTaskSimpleFight::FightStrike(CPed*, CVector&)
004751f5 T CTaskSimpleFight::GetHitLevel(char const*)
00475269 T CTaskSimpleFight::GetHitSound(int)
004da255 T CTaskSimpleFight::ControlFight(CEntity*, signed char)
004db431 T CTaskSimpleFight::GetComboType(char*)
009fd460 B CTaskSimpleFight::m_aComboData
009fdb48 B CTaskSimpleFight::m_aHitOffset
004daf61 T CTaskSimpleFight::FightSetUpCol(float)
00472901 T CTaskSimpleFight::LoadMeleeData()
004d8831 T CTaskSimpleFight::MakeAbortable(CPed*, int, CEvent const*)
004d9a59 T CTaskSimpleFight::ChooseAttackAI(CPed*)
004da3cd T CTaskSimpleFight::GetStrikeDamage(CPed*)
009fdbcc B CTaskSimpleFight::m_sStrikeColData
009fdc00 B CTaskSimpleFight::m_sStrikeSpheres
004d931d T CTaskSimpleFight::FinishMeleeAnimCB(CAnimBlendAssociation*, void*)
004d8919 T CTaskSimpleFight::SetPlayerMoveAnim(CPlayerPed*)
009fdb9c B CTaskSimpleFight::m_sStrikeColModel
004da2c1 T CTaskSimpleFight::BeHitWhileBlocking(CPed*, CPed*, signed char, signed char)
004d978d T CTaskSimpleFight::ChooseAttackPlayer(CPed*)
004db009 T CTaskSimpleFight::FindTargetOnGround(CPed*)
004d9169 T CTaskSimpleFight::GetAvailableComboSet(CPed*, signed char)
004d9365 T CTaskSimpleFight::StartAnim(CPed*, int)
004d8721 T CTaskSimpleFight::CTaskSimpleFight(CEntity*, int, unsigned int)
004d8721 T CTaskSimpleFight::CTaskSimpleFight(CEntity*, int, unsigned int)
004d8821 T CTaskSimpleFight::~CTaskSimpleFight()
004d8795 T CTaskSimpleFight::~CTaskSimpleFight()
004d8795 T CTaskSimpleFight::~CTaskSimpleFight()
0052b211 T CTaskSimpleGetUp::ProcessPed(CPed*)
0052b0e5 T CTaskSimpleGetUp::MakeAbortable(CPed*, int, CEvent const*)
0052b4b5 T CTaskSimpleGetUp::FinishAnimGetUpCB(CAnimBlendAssociation*, void*)
0053298d W CTaskSimpleGetUp::Serialize()
0052b2a5 T CTaskSimpleGetUp::StartAnim(CPed*)
0052b059 T CTaskSimpleGetUp::CTaskSimpleGetUp()
0052b059 T CTaskSimpleGetUp::CTaskSimpleGetUp()
0052b0ad T CTaskSimpleGetUp::~CTaskSimpleGetUp()
0052b079 T CTaskSimpleGetUp::~CTaskSimpleGetUp()
0052b079 T CTaskSimpleGetUp::~CTaskSimpleGetUp()
004915a5 W CTaskSimpleInAir::CreateTask()
0052c4cd T CTaskSimpleInAir::ProcessPed(CPed*)
0052c441 T CTaskSimpleInAir::MakeAbortable(CPed*, int, CEvent const*)
0052cbf5 T CTaskSimpleInAir::ApplyRollAndPitch(CPed*)
0052caad T CTaskSimpleInAir::DeleteInAirAnimCB(CAnimBlendAssociation*, void*)
006b0410 D CTaskSimpleInAir::ms_fMaxStuckVelocity
006b040c D CTaskSimpleInAir::ms_iNumStuckFallingFramesBeforeQuitting
00532e29 W CTaskSimpleInAir::Serialize()
0052c351 T CTaskSimpleInAir::CTaskSimpleInAir(bool, bool, bool)
0052c351 T CTaskSimpleInAir::CTaskSimpleInAir(bool, bool, bool)
0052c3fd T CTaskSimpleInAir::~CTaskSimpleInAir()
0052c3bd T CTaskSimpleInAir::~CTaskSimpleInAir()
0052c3bd T CTaskSimpleInAir::~CTaskSimpleInAir()
003574b5 W CTaskSimplePause::ProcessPed(CPed*)
00357401 W CTaskSimplePause::MakeAbortable(CPed*, int, CEvent const*)
0035741d W CTaskSimplePause::Serialize()
003573c1 W CTaskSimplePause::~CTaskSimplePause()
004ebe8d T CTaskSimpleTired::ProcessPed(CPed*)
004ebf9d T CTaskSimpleTired::MakeAbortable(CPed*, int, CEvent const*)
004f2d09 W CTaskSimpleTired::Serialize()
004ebf3d T CTaskSimpleTired::StartAnim(CPed*)
004ebe51 T CTaskSimpleTired::CTaskSimpleTired(int)
004ebe51 T CTaskSimpleTired::CTaskSimpleTired(int)
004ebe7d T CTaskSimpleTired::~CTaskSimpleTired()
004ebe79 T CTaskSimpleTired::~CTaskSimpleTired()
004ebe79 T CTaskSimpleTired::~CTaskSimpleTired()
003891a9 W CWeaponModelInfo::GetModelType()
00389135 T CWeaponModelInfo::Init()
00389145 T CWeaponModelInfo::SetClump(RpClump*)
003891a5 W CWeaponModelInfo::~CWeaponModelInfo()
006fa310 B CWidgetInfoFrame::m_pChainHead
006fa314 B CWidgetInfoFrame::m_pChainTail
002b944d T CWidgetInfoFrame::RenderRowText(CRect, char const*, float)
002b9659 T CWidgetInfoFrame::SetWidgetInfo(char*, float, bool, bool, bool, bool, int)
002b96b5 T CWidgetInfoFrame::AnyObjectEnabled()
002b9225 T CWidgetInfoFrame::Draw()
002b91f5 T CWidgetInfoFrame::Update()
002b96e5 W CWidgetInfoFrame::GetName()
002b90f1 T CWidgetInfoFrame::CWidgetInfoFrame(char const*, WidgetPosition const&)
002b90f1 T CWidgetInfoFrame::CWidgetInfoFrame(char const*, WidgetPosition const&)
002b919d T CWidgetInfoFrame::~CWidgetInfoFrame()
002b9149 T CWidgetInfoFrame::~CWidgetInfoFrame()
002b9149 T CWidgetInfoFrame::~CWidgetInfoFrame()
0029edd9 W CharSelectScreen::GetMenuLeft()
0029eb71 W CharSelectScreen::Render(int)
0029ea89 W CharSelectScreen::Update(float)
0029e7ad W CharSelectScreen::CharSelectScreen(char const*, bool)
0029eeb9 W CharSelectScreen::~CharSelectScreen()
001cdc9d W ES2VectorBinding::Apply(unsigned int)
00444775 T FurnitureGroup_c::AddSubGroup(int, int, int, int, int, unsigned char, unsigned char, unsigned char)
004447f5 T FurnitureGroup_c::GetRandomId(int, unsigned char)
00475cf1 T FurnitureGroup_c::AddFurniture(int, unsigned short, short, unsigned char, unsigned char, unsigned char)
004447d9 T FurnitureGroup_c::GetFurniture(int, short, unsigned char)
00444751 T FurnitureGroup_c::Exit()
0044474d T FurnitureGroup_c::Init()
0036aaa1 T FxInfoFriction_c::Load(unsigned int, int)
0036aaa9 T FxInfoFriction_c::GetValue(float, float, float, float, unsigned char, void*)
0036aa61 T FxInfoFriction_c::FxInfoFriction_c()
0036aa61 T FxInfoFriction_c::FxInfoFriction_c()
0036be7d W FxInfoFriction_c::~FxInfoFriction_c()
0036be59 W FxInfoFriction_c::~FxInfoFriction_c()
0036b609 T FxInfoHeatHaze_c::Load(unsigned int, int)
0036b60f T FxInfoHeatHaze_c::GetValue(float, float, float, float, unsigned char, void*)
0036b5dd T FxInfoHeatHaze_c::FxInfoHeatHaze_c()
0036b5dd T FxInfoHeatHaze_c::FxInfoHeatHaze_c()
0036c20d W FxInfoHeatHaze_c::~FxInfoHeatHaze_c()
0036c1e9 W FxInfoHeatHaze_c::~FxInfoHeatHaze_c()
0036b33d T FxInfoRotSpeed_c::Load(unsigned int, int)
0036b343 T FxInfoRotSpeed_c::GetValue(float, float, float, float, unsigned char, void*)
0036b2fd T FxInfoRotSpeed_c::FxInfoRotSpeed_c()
0036b2fd T FxInfoRotSpeed_c::FxInfoRotSpeed_c()
0036c045 W FxInfoRotSpeed_c::~FxInfoRotSpeed_c()
0036c021 W FxInfoRotSpeed_c::~FxInfoRotSpeed_c()
0046f145 T FxInterpInfo32_c::Load(unsigned int)
0036c9dd T FxInterpInfo32_c::GetVal(float*, float)
0036c9c1 T FxInterpInfo32_c::FxInterpInfo32_c()
0036c9c1 T FxInterpInfo32_c::FxInterpInfo32_c()
0036c9d9 T FxInterpInfo32_c::~FxInterpInfo32_c()
0036c4ad T FxInterpInfo32_c::~FxInterpInfo32_c()
0036c4ad T FxInterpInfo32_c::~FxInterpInfo32_c()
004d33f5 T IKChainManager_c::AddIKChain(char*, int, CPed*, int, RwV3d, int, CEntity*, int, RwV3d, float, int)
004d36bb T IKChainManager_c::AbortLookAt(CPed*, int)
004d3a6b T IKChainManager_c::AbortPointArm(int, CPed*, int)
004d3a45 T IKChainManager_c::IsArmPointing(int, CPed*)
004d3479 T IKChainManager_c::RemoveIKChain(IKChain_c*)
004d3a95 T IKChainManager_c::IsFacingTarget(CPed*, int)
004d3581 T IKChainManager_c::CanAcceptLookAt(CPed*)
004d383f T IKChainManager_c::GetLookAtEntity(CPed*)
004d3867 T IKChainManager_c::GetLookAtOffset(CPed*, CVector*)
004d326d T IKChainManager_c::Exit()
004d3243 T IKChainManager_c::Init()
004d32d9 T IKChainManager_c::Reset()
004d36e3 T IKChainManager_c::LookAt(char*, CPed*, CEntity*, int, int, RwV3d*, unsigned char, float, int, int, unsigned char)
004d3359 T IKChainManager_c::Update(float)
004d38b5 T IKChainManager_c::PointArm(char*, int, CPed*, CEntity*, int, RwV3d*, float, int, float)
004d34d5 T IKChainManager_c::CanAccept(CPed*, float)
004d3695 T IKChainManager_c::IsLooking(CPed*)
004d3015 T IKChainManager_c::IKChainManager_c()
004d3015 T IKChainManager_c::IKChainManager_c()
004d312b T IKChainManager_c::~IKChainManager_c()
004d312b T IKChainManager_c::~IKChainManager_c()
002a75c1 W SaveSelectScreen::SaveSelection::GetColor()
002a7601 W SaveSelectScreen::SaveSelection::GetTitle()
002a75a5 W SaveSelectScreen::IsSaveLoadDeleteScreen()
002a75a1 W SaveSelectScreen::Render(int)
002a75a9 W SaveSelectScreen::~SaveSelectScreen()
00470dd1 T cHandlingDataMgr::Initialise()
00570c71 T cHandlingDataMgr::FindExactWord(char*, char*, int, int)
00570d29 T cHandlingDataMgr::GetHandlingId(char const*)
0057109f T cHandlingDataMgr::GetBoatPointer(unsigned char)
00571081 T cHandlingDataMgr::GetFlyingPointer(unsigned char)
00473249 T cHandlingDataMgr::LoadHandlingData()
00570dc9 T cHandlingDataMgr::ConvertDataToGameUnits(tHandlingData*)
00570d5d T cHandlingDataMgr::ConvertDataToWorldUnits(tHandlingData*)
00571009 T cHandlingDataMgr::ConvertBikeDataToGameUnits(tBikeHandlingData*)
00570f95 T cHandlingDataMgr::ConvertBikeDataToWorldUnits(tBikeHandlingData*)
00570d05 T cHandlingDataMgr::cHandlingDataMgr()
00570d05 T cHandlingDataMgr::cHandlingDataMgr()
004d2701 T BoneNodeManager_c::GetBoneNode()
006afc1c D BoneNodeManager_c::ms_boneInfos
004d2709 T BoneNodeManager_c::ReturnBoneNode(BoneNode_c*)
004d2711 T BoneNodeManager_c::GetNumBoneNodesLeft()
004d26cd T BoneNodeManager_c::Exit()
004d26a5 T BoneNodeManager_c::Init()
004d26d5 T BoneNodeManager_c::Reset()
004d2649 T BoneNodeManager_c::BoneNodeManager_c()
004d2649 T BoneNodeManager_c::BoneNodeManager_c()
004d2671 T BoneNodeManager_c::~BoneNodeManager_c()
004d2671 T BoneNodeManager_c::~BoneNodeManager_c()
0027f171 T CAEMP3TrackLoader::Initialise()
0027f35d T CAEMP3TrackLoader::GetDataStream(unsigned int)
0027f205 T CAEMP3TrackLoader::LoadStreamPackTable()
0027f305 T CAEMP3TrackLoader::LoadTrackLookupTable()
0027f12f T CAEMP3TrackLoader::CAEMP3TrackLoader()
0027f12f T CAEMP3TrackLoader::CAEMP3TrackLoader()
0027f13b T CAEMP3TrackLoader::~CAEMP3TrackLoader()
0027f13b T CAEMP3TrackLoader::~CAEMP3TrackLoader()
00399a51 T CAEPedAudioEntity::Initialise(CEntity*)
00398ed9 T CAEPedAudioEntity::HandlePedHit(int, CPhysical*, unsigned char, float, unsigned int)
0039a221 T CAEPedAudioEntity::PlayWindRush(float, float)
003982b1 T CAEPedAudioEntity::AddAudioEvent(int, float, float, CPhysical*, unsigned char, int, unsigned int)
00399e05 T CAEPedAudioEntity::PlayShirtFlap(float, float)
00399eb1 T CAEPedAudioEntity::TurnOnJetPack()
0039a045 T CAEPedAudioEntity::UpdateJetPack(float, float)
00398d01 T CAEPedAudioEntity::HandlePedSwing(int, int, unsigned int)
003997ed T CAEPedAudioEntity::HandleSwimWake(int)
0039a005 T CAEPedAudioEntity::TurnOffJetPack()
00399479 T CAEPedAudioEntity::HandlePedJacked(int)
00398a99 T CAEPedAudioEntity::HandleSkateEvent(int, float, float)
00399711 T CAEPedAudioEntity::HandleSwimSplash(int)
0046d599 T CAEPedAudioEntity::StaticInitialise()
00399ae9 T CAEPedAudioEntity::StopJetPackSound()
003998f5 T CAEPedAudioEntity::UpdateParameters(CAESound*, short)
00398bb1 T CAEPedAudioEntity::HandleLandingEvent(int)
0039852d T CAEPedAudioEntity::HandleFootstepEvent(int, float, float, unsigned char)
00399b25 T CAEPedAudioEntity::Service()
00399a81 T CAEPedAudioEntity::Terminate()
0028026f W CAnimatedBuilding::ProcessControl()
00280271 W CAnimatedBuilding::ProcessCollision()
00280205 T CAnimatedBuilding::PreRender()
00280229 W CAnimatedBuilding::~CAnimatedBuilding()
0061dbac R CAttractorScanner::ms_iScanPeriod
0061dbb0 R CAttractorScanner::ms_iScanLatency
004baff9 T CAttractorScanner::ScanForAttractorsInRange(CPed const&)
004bba11 T CAttractorScanner::GetClosestAttractorOfType(CVector const&, float, int, int, char const*, bool, C2dEffect const*, C2dEffect*&, CEntity*&)
004bb441 T CAttractorScanner::ScanForAttractorsInPtrList(CPtrList&, CPed const&)
004bb7c5 T CAttractorScanner::GetNearestPedNotUsingAttractor(C2dEffect const&)
004baf91 T CAttractorScanner::Clear()
004bb4e9 T CAttractorScanner::AddEffect(C2dEffect*, CEntity*, CPed const&)
004baf1d T CAttractorScanner::CAttractorScanner()
004baf1d T CAttractorScanner::CAttractorScanner()
004baff5 T CAttractorScanner::~CAttractorScanner()
004baff5 T CAttractorScanner::~CAttractorScanner()
003bec5d T CBugstarInterface::ParseParameterLine(char*)
003bebe5 T CBugstarInterface::Init()
003bebe7 T CBugstarInterface::Term()
003be615 T CBugstarInterface::SendMsg(unsigned int, void*, unsigned int)
003bebe9 T CBugstarInterface::RecvData(void**, unsigned int*)
003be6b9 T CBugstarInterface::SendData(void*, unsigned int)
003be701 T CBugstarInterface::CreateBug(float, float, float, char*, char*, void*, unsigned int)
003be5fd T CBugstarInterface::CBugstarInterface(CBugstarNetwork*)
003be613 T CBugstarInterface::~CBugstarInterface()
003be611 T CBugstarInterface::~CBugstarInterface()
003be611 T CBugstarInterface::~CBugstarInterface()
002e32d9 T CColTrianglePlane::Set(CVector const*, CColTriangle&)
003005c9 T CConversationNode::ClearRecursively()
003005b5 T CConversationNode::Clear()
003061e1 T CEntryExitManager::SetEnabled(int, bool)
007a1e18 B CEntryExitManager::mp_QuadTree
007a1eb0 B CEntryExitManager::ms_bDisabled
003067b1 T CEntryExitManager::GotoEntryExit(CEntryExit*)
003065b5 T CEntryExitManager::LinkEntryExit(CEntryExit*)
007a1ea8 B CEntryExitManager::ms_oldAreaCode
00306bfd T CEntryExitManager::FindNearestDoor(CEntryExit const&, float)
003068c1 T CEntryExitManager::GotoEntryExitVC(char const*)
003060d5 T CEntryExitManager::SetEnabledByName(char const*, bool)
00306151 T CEntryExitManager::SetEntryExitFlag(char const*, unsigned int, bool)
0030664d T CEntryExitManager::GetEntryExitIndex(char const*, unsigned short, unsigned short)
00306935 T CEntryExitManager::GotoNextEntryExit()
007a1e20 B CEntryExitManager::mp_poolEntryExits
007a1eb4 B CEntryExitManager::ms_entryExitStack
007a1eac B CEntryExitManager::ms_exitEnterState
00304c11 T CEntryExitManager::ShutdownForRestart()
00306a49 T CEntryExitManager::AddEntryExitToStack(CEntryExit*)
00304e3d T CEntryExitManager::EnableBurglaryHouses(bool)
00307661 T CEntryExitManager::FindNearestEntryExit(CVector2D const&, float, int)
007a1e24 B CEntryExitManager::ms_visibleEntityList
003069b1 T CEntryExitManager::GotoPreviousEntryExit()
007a1ec4 B CEntryExitManager::ms_entryExitStackPosn
007a1ea4 B CEntryExitManager::ms_numVisibleEntities
003066c5 T CEntryExitManager::PostEntryExitsCreation()
00306209 T CEntryExitManager::SetEntryExitFlagWithIndex(int, unsigned int, bool)
00306a35 T CEntryExitManager::WeAreInInteriorTransition()
007a1eb1 B CEntryExitManager::ms_bBurglaryHousesEnabled
00306d69 T CEntryExitManager::SetAreaCodeForVisibleObjects()
00304eb5 T CEntryExitManager::ResetAreaCodeForVisibleObjects()
00306ac1 T CEntryExitManager::GetPositionRelativeToOutsideWorld(CVector&)
00304a31 T CEntryExitManager::Init()
0048ecc1 T CEntryExitManager::Load()
0048eb45 T CEntryExitManager::Save()
00306245 T CEntryExitManager::AddOne(float, float, float, float, float, float, float, float, float, float, float, int, int, int, int, int, int, char const*)
00304f11 T CEntryExitManager::Update()
00304b39 T CEntryExitManager::Shutdown()
00304dd1 T CEntryExitManager::DeleteOne(int)
007a1e1c B CEntryExitManager::mp_Active
0037474d T CEventChatPartner::CEventChatPartner(bool, CPed*)
0037474d T CEventChatPartner::CEventChatPartner(bool, CPed*)
003747a9 T CEventChatPartner::~CEventChatPartner()
00374781 T CEventChatPartner::~CEventChatPartner()
00374781 T CEventChatPartner::~CEventChatPartner()
0036fac5 T CEventGlobalGroup::GetSoundLevel(CEntity*, CVector&)
0036fa2d T CEventGlobalGroup::AddEventsToPed(CPed*)
0036fa7b T CEventGlobalGroup::AddEventsToGroup(CPedGroup*)
0036f9a5 T CEventGlobalGroup::CEventGlobalGroup()
0036f9a5 T CEventGlobalGroup::CEventGlobalGroup()
0036f9dd T CEventGlobalGroup::~CEventGlobalGroup()
0036f41d T CEventGlobalGroup::~CEventGlobalGroup()
0036f41d T CEventGlobalGroup::~CEventGlobalGroup()
003749bd T CEventSexyVehicle::CEventSexyVehicle(CVehicle*)
003749bd T CEventSexyVehicle::CEventSexyVehicle(CVehicle*)
00374a19 T CEventSexyVehicle::~CEventSexyVehicle()
003749f1 T CEventSexyVehicle::~CEventSexyVehicle()
003749f1 T CEventSexyVehicle::~CEventSexyVehicle()
00378c1d W CEventSignalAtPed::~CEventSignalAtPed()
00378bf5 W CEventSignalAtPed::~CEventSignalAtPed()
00376771 T CEventVehicleDied::CEventVehicleDied(CVehicle*)
00376771 T CEventVehicleDied::CEventVehicleDied(CVehicle*)
003767c9 T CEventVehicleDied::~CEventVehicleDied()
003767a1 T CEventVehicleDied::~CEventVehicleDied()
003767a1 T CEventVehicleDied::~CEventVehicleDied()
005ab8a9 T CFallingGlassPane::Render()
005ab4f5 T CFallingGlassPane::Update()
00370209 T CInformGroupEvent::Set(CPed*, CPedGroup*, CEvent*, int)
003701df T CInformGroupEvent::Flush()
00370245 T CInformGroupEvent::Process()
003701a5 T CInformGroupEvent::CInformGroupEvent()
003701a5 T CInformGroupEvent::CInformGroupEvent()
003701b3 T CInformGroupEvent::~CInformGroupEvent()
003701b3 T CInformGroupEvent::~CInformGroupEvent()
00386491 W CLodTimeModelInfo::GetTimeInfo()
0038648d W CLodTimeModelInfo::GetModelType()
00386489 W CLodTimeModelInfo::~CLodTimeModelInfo()
004ac9f9 T CMoveStateStrings::GetMoveStateString(int)
002cd101 T CPPTriPlantBuffer::GetPPTriPlantPtr(int)
002cd2bd T CPPTriPlantBuffer::GetPlantModelsTab(unsigned int)
002cd28d T CPPTriPlantBuffer::SetPlantModelsTab(unsigned int, RpAtomic**)
002cd159 T CPPTriPlantBuffer::IncreaseBufferIndex(int, int)
002cd0ad T CPPTriPlantBuffer::ChangeCurrentPlantModelsSet(int)
002cd221 T CPPTriPlantBuffer::Flush()
002cd6f9 T CPPTriPlantBuffer::CPPTriPlantBuffer()
002cd6f9 T CPPTriPlantBuffer::CPPTriPlantBuffer()
002cd70f T CPPTriPlantBuffer::~CPPTriPlantBuffer()
002cd70f T CPPTriPlantBuffer::~CPPTriPlantBuffer()
0061db40 R CPedParkAttractor::ms_fSpacing
0061db54 R CPedParkAttractor::ms_fDeltaPos
0061db3c R CPedParkAttractor::ms_iMaxSlots
0061db4c R CPedParkAttractor::ms_fArriveRange
0061db58 R CPedParkAttractor::ms_fDeltaHeading
0061db50 R CPedParkAttractor::ms_fHeadingRange
0061db44 R CPedParkAttractor::ms_fAchieveQueueTime
0061db48 R CPedParkAttractor::ms_fAchieveQueueShuffleTime
004ac859 W CPedParkAttractor::~CPedParkAttractor()
00484831 T CPedSaveStructure::Extract(CPed*)
00484761 T CPedSaveStructure::Construct(CPed*)
0061da60 R CPedSeatAttractor::ms_fSpacing
0061da74 R CPedSeatAttractor::ms_fDeltaPos
0061da5c R CPedSeatAttractor::ms_iMaxSlots
0061da6c R CPedSeatAttractor::ms_fArriveRange
0061da78 R CPedSeatAttractor::ms_fDeltaHeading
0061da70 R CPedSeatAttractor::ms_fHeadingRange
0061da64 R CPedSeatAttractor::ms_fAchieveQueueTime
0061da68 R CPedSeatAttractor::ms_fAchieveQueueShuffleTime
004ac509 W CPedSeatAttractor::~CPedSeatAttractor()
0061db60 R CPedStepAttractor::ms_fSpacing
0061db74 R CPedStepAttractor::ms_fDeltaPos
0061db5c R CPedStepAttractor::ms_iMaxSlots
0061db6c R CPedStepAttractor::ms_fArriveRange
0061db78 R CPedStepAttractor::ms_fDeltaHeading
0061db70 R CPedStepAttractor::ms_fHeadingRange
0061db64 R CPedStepAttractor::ms_fAchieveQueueTime
0061db68 R CPedStepAttractor::ms_fAchieveQueueShuffleTime
004ac8e5 W CPedStepAttractor::~CPedStepAttractor()
0061da80 R CPedStopAttractor::ms_fSpacing
0061da94 R CPedStopAttractor::ms_fDeltaPos
0061da7c R CPedStopAttractor::ms_iMaxSlots
0061da8c R CPedStopAttractor::ms_fArriveRange
0061da98 R CPedStopAttractor::ms_fDeltaHeading
0061da90 R CPedStopAttractor::ms_fHeadingRange
0061da84 R CPedStopAttractor::ms_fAchieveQueueTime
0061da88 R CPedStopAttractor::ms_fAchieveQueueShuffleTime
004ac595 W CPedStopAttractor::~CPedStopAttractor()
002cdac1 T CPlantColEntEntry::ReleaseEntry()
002ce36d T CPlantColEntEntry::AddEntry(CEntity*)
002cf249 T CPlantSurfPropMgr::Initialise()
002cf3b1 T CPlantSurfPropMgr::LoadPlantsDat(char const*)
00a1df78 B CPlantSurfPropMgr::m_SurfPropTab
00a1dcb0 B CPlantSurfPropMgr::m_SurfPropPtrTab
0059c571 T CPlantSurfPropMgr::GetSurfProperties(unsigned short)
002cf345 T CPlantSurfPropMgr::AllocSurfProperties(unsigned short, unsigned char)
00a1fb14 B CPlantSurfPropMgr::m_countSurfPropsAllocated
0059c56d T CPlantSurfPropMgr::Shutdown()
0059c569 T CPlantSurfPropMgr::CPlantSurfPropMgr()
0059c569 T CPlantSurfPropMgr::CPlantSurfPropMgr()
0059c56b T CPlantSurfPropMgr::~CPlantSurfPropMgr()
0059c56b T CPlantSurfPropMgr::~CPlantSurfPropMgr()
005a209d T CRegisteredCorona::Update()
0032f667 T CScriptsForBrains::AddNewScriptBrain(short, short, unsigned short, signed char, signed char, float)
0032f74d T CScriptsForBrains::CheckIfNewEntityNeedsScript(CEntity*, signed char, CPedGenerator*)
0032f9c5 T CScriptsForBrains::StartNewStreamedScriptBrain(unsigned char, CEntity*, unsigned char)
0032f63d T CScriptsForBrains::SwitchAllObjectBrainsWithThisID(signed char, bool)
0032fbad T CScriptsForBrains::GetIndexOfScriptBrainWithThisName(char const*, signed char)
0032fdb7 T CScriptsForBrains::IsObjectWithinBrainActivationRange(CObject*, CVector const&)
0032f6e1 T CScriptsForBrains::AddNewStreamedScriptBrainForCodeUse(short, char*, signed char)
0032f7ed T CScriptsForBrains::StartOrRequestNewStreamedScriptBrain(unsigned char, CEntity*, signed char, unsigned char)
0032fd65 T CScriptsForBrains::StartAttractorScriptBrainWithThisName(char const*, CEntity*, unsigned char)
0032fc35 T CScriptsForBrains::RequestAttractorScriptBrainWithThisName(char const*)
0032fd05 T CScriptsForBrains::HasAttractorScriptBrainWithThisNameLoaded(char const*)
0032fbe5 T CScriptsForBrains::StartOrRequestNewStreamedScriptBrainWithThisName(char const*, CEntity*, signed char)
0032f60b T CScriptsForBrains::Init()
0032fcb1 T CScriptsForBrains::MarkAttractorScriptBrainWithThisNameAsNoLongerNeeded(char const*)
0032f5d9 T CScriptsForBrains::CScriptsForBrains()
0032f5d9 T CScriptsForBrains::CScriptsForBrains()
0082000c B CStuntJumpManager::m_iNumJumps
00820008 B CStuntJumpManager::m_jumpState
00820001 B CStuntJumpManager::m_bHitReward
00820010 B CStuntJumpManager::m_iNumCompleted
0081fff8 B CStuntJumpManager::mp_poolStuntJumps
00361635 T CStuntJumpManager::ShutdownForRestart()
00361561 T CStuntJumpManager::Init()
0048eaad T CStuntJumpManager::Load()
0048ea2d T CStuntJumpManager::Save()
00361ca5 T CStuntJumpManager::AddOne(CBoundBox const&, CBoundBox const&, CVector const&, int)
00361ca1 T CStuntJumpManager::Render()
003616c5 T CStuntJumpManager::Update()
003615e1 T CStuntJumpManager::Shutdown()
00820004 B CStuntJumpManager::m_iTimer
00361d99 T CStuntJumpManager::SetActive(bool)
00820000 B CStuntJumpManager::m_bActive
0081fffc B CStuntJumpManager::mp_Active
0035f595 W CTaskComplexBeCop::~CTaskComplexBeCop()
00333e15 W CTaskComplexClimb::Serialize()
00333dd5 W CTaskComplexClimb::~CTaskComplexClimb()
00498329 W CTaskSimpleAbseil::Serialize()
004982d9 W CTaskSimpleAbseil::~CTaskSimpleAbseil()
00491e59 W CTaskSimpleFacial::CreateTask()
00540d85 T CTaskSimpleFacial::ProcessPed(CPed*)
00540d35 T CTaskSimpleFacial::MakeAbortable(CPed*, int, CEvent const*)
00540d6d T CTaskSimpleFacial::GetAnimId(int)
00543a5d W CTaskSimpleFacial::Serialize()
00540cf9 T CTaskSimpleFacial::CTaskSimpleFacial(int, int)
00540cf9 T CTaskSimpleFacial::CTaskSimpleFacial(int, int)
00540d25 T CTaskSimpleFacial::~CTaskSimpleFacial()
00540d21 T CTaskSimpleFacial::~CTaskSimpleFacial()
00540d21 T CTaskSimpleFacial::~CTaskSimpleFacial()
003578b1 W CTaskSimpleUseAtm::Serialize()
00357861 W CTaskSimpleUseAtm::~CTaskSimpleUseAtm()
004dda6d T CTaskSimpleUseGun::ControlGun(CPed*, CEntity*, signed char)
00496609 W CTaskSimpleUseGun::CreateTask()
004dc141 T CTaskSimpleUseGun::ProcessPed(CPed*)
004dd659 T CTaskSimpleUseGun::SetMoveAnim(CPed*)
004dbf11 T CTaskSimpleUseGun::MakeAbortable(CPed*, int, CEvent const*)
004ddae9 T CTaskSimpleUseGun::ControlGunMove(CVector2D*)
004ddb71 T CTaskSimpleUseGun::SetPedPosition(CPed*)
004ddd71 T CTaskSimpleUseGun::StartCountDown(unsigned char, bool)
004ddfa1 T CTaskSimpleUseGun::FinishGunAnimCB(CAnimBlendAssociation*, void*)
004dbf95 T CTaskSimpleUseGun::RemoveStanceAnims(CPed*, float)
004ddde5 T CTaskSimpleUseGun::RequirePistolWhip(CPed*, CEntity*)
006b0398 D CTaskSimpleUseGun::WEAPON_RE_AIM_RATE
004ddac9 T CTaskSimpleUseGun::PlayerPassiveControlGun()
004dbe0d T CTaskSimpleUseGun::Reset(CPed*, CEntity*, CVector, signed char, short)
004dcfc9 T CTaskSimpleUseGun::AimGun(CPed*)
004dbe6d T CTaskSimpleUseGun::AbortIK(CPed*)
004ddbd9 T CTaskSimpleUseGun::FireGun(CPed*, bool)
004ddd89 T CTaskSimpleUseGun::ClearAnim(CPed*)
004e95cd W CTaskSimpleUseGun::Serialize()
004dcca5 T CTaskSimpleUseGun::StartAnim(CPed*)
004dbcfd T CTaskSimpleUseGun::CTaskSimpleUseGun(CEntity*, CVector, signed char, short, unsigned char)
004dbcfd T CTaskSimpleUseGun::CTaskSimpleUseGun(CEntity*, CVector, signed char, short, unsigned char)
004dbdc9 T CTaskSimpleUseGun::~CTaskSimpleUseGun()
004dbd89 T CTaskSimpleUseGun::~CTaskSimpleUseGun()
004dbd89 T CTaskSimpleUseGun::~CTaskSimpleUseGun()
00a064c4 B CTheCarGenerators::ProcessCounter
00a02640 B CTheCarGenerators::CarGeneratorArray
0056e445 T CTheCarGenerators::CreateCarGenerator(float, float, float, float, int, short, short, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short, unsigned char, unsigned char)
00a064c0 B CTheCarGenerators::NumOfCarGenerators
0056e5b9 T CTheCarGenerators::RemoveCarGenerators(unsigned char)
00a064c8 B CTheCarGenerators::m_SpecialPlateHandler
00a064c5 B CTheCarGenerators::GenerateEvenIfPlayerIsCloseCounter
0056e60d T CTheCarGenerators::Init()
0048dad5 T CTheCarGenerators::Load()
0048d9a5 T CTheCarGenerators::Save()
0056e3c1 T CTheCarGenerators::Process()
00591e8d T CVehicleAnimGroup::ComputeAnimDoorOffsets(int)
00591e35 T CVehicleAnimGroup::ComputeCriticalBlendTime(int)
00591de9 T CVehicleAnimGroup::GetGroup(int)
00386ee1 T CVehicleModelInfo::SetAnimFile(char const*)
00931874 B CVehicleModelInfo::ms_lightsOn
00389105 W CVehicleModelInfo::GetModelType()
00388d75 T CVehicleModelInfo::GetNumRemaps()
0038852d T CVehicleModelInfo::GetWheelPosn(int, CVector&, bool)
009317e8 B CVehicleModelInfo::ms_compsUsed
00387db9 T CVehicleModelInfo::DisableEnvMap()
00386e39 T CVehicleModelInfo::FindTextureCB(char const*)
00387ef9 T CVehicleModelInfo::MoveObjectsCB(RwObject*, void*)
006869a0 D CVehicleModelInfo::ms_compsToUse
009317ea B CVehicleModelInfo::ms_currentCol
00387a29 T CVehicleModelInfo::CreateInstance()
00387e35 T CVehicleModelInfo::DeleteRwObject()
00387dd5 T CVehicleModelInfo::SetEnvMapCoeff(float)
00388db1 T CVehicleModelInfo::AddWheelUpgrade(int, int)
00387b91 T CVehicleModelInfo::ChooseComponent()
00388df5 T CVehicleModelInfo::GetWheelUpgrade(int, int)
00388389 T CVehicleModelInfo::SetAtomicFlagCB(RwObject*, void*)
00468b69 T CVehicleModelInfo::SetupCommonData()
003890d9 T CVehicleModelInfo::SetupLightFlags(CVehicle*)
00687c7c D CVehicleModelInfo::ms_vehicleDescs
00387ec1 T CVehicleModelInfo::CollapseFramesCB(RwFrame*, void*)
0038912d W CVehicleModelInfo::GetAnimFileIndex()
00388f21 T CVehicleModelInfo::SetEnvMapCoeffCB(RpMaterial*, void*)
00388c15 T CVehicleModelInfo::SetVehicleColour(unsigned char, unsigned char, unsigned char, unsigned char)
009317f0 B CVehicleModelInfo::ms_pRemapTexture
00931770 B CVehicleModelInfo::ms_upgradeWheels
0093155c B CVehicleModelInfo::CVehicleStructure::m_pInfoPool
00386cd5 T CVehicleModelInfo::CVehicleStructure::CVehicleStructure()
00386cd5 T CVehicleModelInfo::CVehicleStructure::CVehicleStructure()
00386d57 T CVehicleModelInfo::CVehicleStructure::~CVehicleStructure()
00386d57 T CVehicleModelInfo::CVehicleStructure::~CVehicleStructure()
00388399 T CVehicleModelInfo::ClearAtomicFlagCB(RwObject*, void*)
003879b9 T CVehicleModelInfo::SetCarCustomPlate()
009317f4 B CVehicleModelInfo::ms_linkedUpgrades
00931760 B CVehicleModelInfo::ms_pLightsTexture
00386de9 T CVehicleModelInfo::CLinkedUpgradeList::AddUpgradeLink(short, short)
00387f69 T CVehicleModelInfo::HasAlphaMaterialCB(RpMaterial*, void*)
003888b9 T CVehicleModelInfo::IsUpgradeAvailable(VehicleUpgradePosn)
0046c431 T CVehicleModelInfo::LoadVehicleColours()
00387171 T CVehicleModelInfo::SetRenderPipelines()
00388c4d T CVehicleModelInfo::ChooseVehicleColour(unsigned char&, unsigned char&, unsigned char&, unsigned char&, int)
00388de5 T CVehicleModelInfo::GetNumWheelUpgrades(int)
00387f09 T CVehicleModelInfo::HideDamagedAtomicCB(RpAtomic*, void*)
00388e11 T CVehicleModelInfo::LoadEnvironmentMaps()
0046c87d T CVehicleModelInfo::LoadVehicleUpgrades()
003871d1 T CVehicleModelInfo::PreprocessHierarchy()
00387f79 T CVehicleModelInfo::SetAtomicRendererCB(RpAtomic*, void*)
00388ec9 T CVehicleModelInfo::SetEnvironmentMapCB(RpMaterial*, void*)
00931768 B CVehicleModelInfo::ms_numWheelUpgrades
00931764 B CVehicleModelInfo::ms_pLightsOnTexture
00386f21 T CVehicleModelInfo::ConvertAnimFileIndex()
00388b55 T CVehicleModelInfo::SetEditableMaterials(RpClump*)
00388f55 T CVehicleModelInfo::SetRenderPipelinesCB(RpAtomic*, void*)
00386d9d T CVehicleModelInfo::ShutdownLightTexture()
00387c7d T CVehicleModelInfo::ChooseSecondComponent()
00388f69 T CVehicleModelInfo::GetCustomCarPlateText()
00388f57 T CVehicleModelInfo::SetCustomCarPlateText(char*)
00931560 B CVehicleModelInfo::ms_vehicleColourTable
00388b81 T CVehicleModelInfo::ResetEditableMaterials(RpClump*)
003888d1 T CVehicleModelInfo::SetEditableMaterialsCB(RpMaterial*, void*)
00388b11 T CVehicleModelInfo::SetEditableMaterialsCB(RpAtomic*, void*)
00387e19 T CVehicleModelInfo::SetEnvMapCoeffAtomicCB(RpAtomic*, void*)
003885ed T CVehicleModelInfo::GetOriginalCompPosition(CVector&, int)
00388e75 T CVehicleModelInfo::ShutdownEnvironmentMaps()
0038787d T CVehicleModelInfo::FindEditableMaterialList()
00388ead T CVehicleModelInfo::GetMatFXEffectMaterialCB(RpMaterial*, void*)
00387789 T CVehicleModelInfo::ReduceMaterialsInVehicle()
00387115 T CVehicleModelInfo::SetAtomicRenderCallbacks()
003881cd T CVehicleModelInfo::SetAtomicRendererCB_Boat(RpAtomic*, void*)
0038828d T CVehicleModelInfo::SetAtomicRendererCB_Heli(RpAtomic*, void*)
003883d5 T CVehicleModelInfo::SetVehicleComponentFlags(RwFrame*, unsigned int)
00388ba9 T CVehicleModelInfo::GetEditableMaterialListCB(RpMaterial*, void*)
00388bf9 T CVehicleModelInfo::GetEditableMaterialListCB(RpAtomic*, void*)
00387f4d T CVehicleModelInfo::HideAllComponentsAtomicCB(RpAtomic*, void*)
003882e9 T CVehicleModelInfo::SetAtomicRendererCB_Train(RpAtomic*, void*)
00387d9d T CVehicleModelInfo::SetEnvironmentMapAtomicCB(RpAtomic*, void*)
00388e0d T CVehicleModelInfo::DeleteVehicleColourTextures()
00388039 T CVehicleModelInfo::SetAtomicRendererCB_RealHeli(RpAtomic*, void*)
0038812d T CVehicleModelInfo::SetAtomicRendererCB_BigVehicle(RpAtomic*, void*)
00386e59 T CVehicleModelInfo::UseCommonVehicleTexDicationary()
00386e81 T CVehicleModelInfo::StopUsingCommonVehicleTexDicationary()
00388f75 T CVehicleModelInfo::GetMaximumNumberOfPassengersFromNumberOfDoors(int)
00389109 W CVehicleModelInfo::Init()
00388d8f T CVehicleModelInfo::AddRemap(char const*)
00386f49 T CVehicleModelInfo::SetClump(RpClump*)
00386e99 T CVehicleModelInfo::CVehicleModelInfo()
00386e99 T CVehicleModelInfo::CVehicleModelInfo()
00389101 W CVehicleModelInfo::~CVehicleModelInfo()
007b4f64 B CVehicleRecording::DisplayMode
007b4e24 B CVehicleRecording::PlaybackIndex
007b4ee4 B CVehicleRecording::PlaybackSpeed
007b4fb4 B CVehicleRecording::StreamingArray
003243fd T CVehicleRecording::SmoothRecording(int)
007b4f34 B CVehicleRecording::bPlaybackLooped
007b4f44 B CVehicleRecording::bPlaybackPaused
007b4de4 B CVehicleRecording::pPlaybackBuffer
007b6d64 B CVehicleRecording::NumPlayBackFiles
00322811 T CVehicleRecording::SetPlaybackSpeed(CVehicle*, float)
007b4f24 B CVehicleRecording::bPlaybackGoingOn
00321b85 T CVehicleRecording::InitAtStartOfGame()
003241fd T CVehicleRecording::RenderLineSegment(int&)
003235f1 T CVehicleRecording::RestoreInfoForCar(CVehicle*, CVehicleStateEachFrame*, bool)
007b4e64 B CVehicleRecording::PlaybackBufferSize
007b4ea4 B CVehicleRecording::PlaybackRunningTime
00324315 T CVehicleRecording::RemoveRecordingFile(int)
007b4da4 B CVehicleRecording::pVehicleForPlayback
00322075 T CVehicleRecording::RequestRecordingFile(int)
00323e05 T CVehicleRecording::RestoreInfoForMatrix(CMatrix&, CVehicleStateEachFrame*)
00323b7d T CVehicleRecording::InterpolateInfoForCar(CVehicle*, CVehicleStateEachFrame*, float)
00324265 T CVehicleRecording::RegisterRecordingFile(char const*)
00322549 T CVehicleRecording::StopPlaybackWithIndex(int)
0032280d T CVehicleRecording::IsPlaybackPausedForCar(CVehicle*)
007b4f74 B CVehicleRecording::PlayBackStreamingIndex
00323eb5 T CVehicleRecording::SkipForwardInRecording(CVehicle*, float)
00322615 T CVehicleRecording::IsPlaybackGoingOnForCar(CVehicle*)
00322151 T CVehicleRecording::StopPlaybackRecordedCar(CVehicle*)
00322eb9 T CVehicleRecording::ChangeCarPlaybackToUseAI(CVehicle*)
00322a49 T CVehicleRecording::PausePlaybackRecordedCar(CVehicle*)
00321cfd T CVehicleRecording::StartPlaybackRecordedCar(CVehicle*, unsigned int, bool, bool)
003242cd T CVehicleRecording::HasRecordingFileBeenLoaded(int)
00322c81 T CVehicleRecording::UnpausePlaybackRecordedCar(CVehicle*)
00322041 T CVehicleRecording::FindIndexWithFileNameNumber(int)
003237a5 T CVehicleRecording::SaveOrRetrieveDataForThisFrame()
00324461 T CVehicleRecording::RemoveAllRecordingsThatArentUsed()
003220b1 T CVehicleRecording::SetRecordingToPointClosestToCoors(int, CVector)
003231ad T CVehicleRecording::SkipToEndAndStopPlaybackRecordedCar(CVehicle*)
00321c2d T CVehicleRecording::Init()
00324369 T CVehicleRecording::Load(RwStream*, int, int)
00324261 T CVehicleRecording::Render()
00321cb9 T CVehicleRecording::ShutDown()
007b4f54 B CVehicleRecording::bUseCarAI
002b6065 W CWidgetButtonDrop::GetName()
002b6011 T CWidgetButtonDrop::CWidgetButtonDrop(char const*, WidgetPosition const&, HIDMapping)
002b6011 T CWidgetButtonDrop::CWidgetButtonDrop(char const*, WidgetPosition const&, HIDMapping)
002b6039 W CWidgetButtonDrop::~CWidgetButtonDrop()
002b669d T CWidgetButtonHorn::SetupPositionAndScale()
002b66e5 T CWidgetButtonHorn::Update()
002b67a9 W CWidgetButtonHorn::GetName()
002b6639 T CWidgetButtonHorn::CWidgetButtonHorn(char const*, WidgetPosition const&)
002b6639 T CWidgetButtonHorn::CWidgetButtonHorn(char const*, WidgetPosition const&)
002b677d W CWidgetButtonHorn::~CWidgetButtonHorn()
002b6bcd T CWidgetButtonSwim::Update()
002b6c61 W CWidgetButtonSwim::GetName()
002b6b81 T CWidgetButtonSwim::CWidgetButtonSwim(char const*, WidgetPosition const&)
002b6b81 T CWidgetButtonSwim::CWidgetButtonSwim(char const*, WidgetPosition const&)
002b6c35 W CWidgetButtonSwim::~CWidgetButtonSwim()
002b6d91 T CWidgetButtonZoom::Update()
002b6de9 W CWidgetButtonZoom::GetName()
002b6d69 T CWidgetButtonZoom::CWidgetButtonZoom(char const*, WidgetPosition const&, HIDMapping)
002b6d69 T CWidgetButtonZoom::CWidgetButtonZoom(char const*, WidgetPosition const&, HIDMapping)
002b6dbd W CWidgetButtonZoom::~CWidgetButtonZoom()
002bdfb9 T CWidgetPlayerInfo::DrawWanted()
002be38d T CWidgetPlayerInfo::IsHeldDown()
002be439 T CWidgetPlayerInfo::DrawHelpIcon(char const*, float, float, float, int)
002be3b1 T CWidgetPlayerInfo::IsSwipedLeft()
002be3ed T CWidgetPlayerInfo::IsSwipedRight()
002bdb01 T CWidgetPlayerInfo::DrawWeaponIcon(CPed*, CRect, float)
002bd839 T CWidgetPlayerInfo::RenderArmorBar(int, float)
002bd9cd T CWidgetPlayerInfo::RenderBreathBar(int, float)
002bd681 T CWidgetPlayerInfo::RenderHealthBar(int, float)
002bccad T CWidgetPlayerInfo::CoordsAreInsideWidget(CVector2D const&, bool)
002be2d9 T CWidgetPlayerInfo::PassesDisplayConditions()
002bccf9 T CWidgetPlayerInfo::Draw()
002bcb91 T CWidgetPlayerInfo::Update()
002be515 W CWidgetPlayerInfo::GetName()
002bdcb9 T CWidgetPlayerInfo::DrawAmmo(CPed*, CRect, float)
002bcad1 T CWidgetPlayerInfo::CWidgetPlayerInfo(char const*, WidgetPosition const&)
002bcad1 T CWidgetPlayerInfo::CWidgetPlayerInfo(char const*, WidgetPosition const&)
002be4e9 W CWidgetPlayerInfo::~CWidgetPlayerInfo()
002be4c1 W CWidgetPlayerInfo::~CWidgetPlayerInfo()
002c0a0d T CWidgetRegionGang::BuildRects()
002c0c5d T CWidgetRegionGang::Draw()
002c0b99 T CWidgetRegionGang::Update()
002c0d9d W CWidgetRegionGang::GetName()
002c0971 T CWidgetRegionGang::CWidgetRegionGang(char const*, WidgetPosition const&)
002c0971 T CWidgetRegionGang::CWidgetRegionGang(char const*, WidgetPosition const&)
002c0d69 W CWidgetRegionGang::~CWidgetRegionGang()
002c0d39 W CWidgetRegionGang::~CWidgetRegionGang()
002c139d T CWidgetRegionLook::IsHeldDown()
002c14a1 T CWidgetRegionLook::DrawHelpIcon(char const*, float, float, float, int)
002c1427 T CWidgetRegionLook::IsSwipedLeft()
002c1463 T CWidgetRegionLook::IsSwipedRight()
002c1351 T CWidgetRegionLook::IsPinchZooming(CVector2D*)
002c115d T CWidgetRegionLook::OnInitialTouch()
002c1321 T CWidgetRegionLook::GetWidgetValue2(float*, float*)
002c123d T CWidgetRegionLook::OnReleasedTouch()
002c0e15 T CWidgetRegionLook::Update()
002c1509 W CWidgetRegionLook::GetName()
002c103d T CWidgetRegionLook::IsTouched(CVector2D*)
002c0da9 T CWidgetRegionLook::CWidgetRegionLook(char const*, WidgetPosition const&)
002c0da9 T CWidgetRegionLook::CWidgetRegionLook(char const*, WidgetPosition const&)
002c14f9 W CWidgetRegionLook::~CWidgetRegionLook()
002c1a15 T CWidgetRegionMove::DrawHelpIcon(char const*, float, float, float, int)
002c19c9 T CWidgetRegionMove::IsDoubleTapped()
002c1b51 T CWidgetRegionMove::OnInitialTouch()
002c1bc9 T CWidgetRegionMove::GetWidgetValue2(float*, float*)
002c179d T CWidgetRegionMove::ClampInternalTouchAnchor()
002c1801 T CWidgetRegionMove::Draw()
002c157d T CWidgetRegionMove::Update()
002c1c81 W CWidgetRegionMove::GetName()
002c18e1 T CWidgetRegionMove::IsTouched(CVector2D*)
002c1515 T CWidgetRegionMove::CWidgetRegionMove(char const*, WidgetPosition const&)
002c1515 T CWidgetRegionMove::CWidgetRegionMove(char const*, WidgetPosition const&)
002c1c55 W CWidgetRegionMove::~CWidgetRegionMove()
002c1c2d W CWidgetRegionMove::~CWidgetRegionMove()
002c855d T CWidgetVitalStats::Draw()
002c8549 T CWidgetVitalStats::Update()
002c8c45 W CWidgetVitalStats::GetName()
002c8521 T CWidgetVitalStats::CWidgetVitalStats(char const*, WidgetPosition const&)
002c8521 T CWidgetVitalStats::CWidgetVitalStats(char const*, WidgetPosition const&)
002c8c35 W CWidgetVitalStats::~CWidgetVitalStats()
0036ab61 T FxInfoAttractPt_c::Load(unsigned int, int)
0036ab69 T FxInfoAttractPt_c::GetValue(float, float, float, float, unsigned char, void*)
0036ab21 T FxInfoAttractPt_c::FxInfoAttractPt_c()
0036ab21 T FxInfoAttractPt_c::FxInfoAttractPt_c()
0036bec9 W FxInfoAttractPt_c::~FxInfoAttractPt_c()
0036bea5 W FxInfoAttractPt_c::~FxInfoAttractPt_c()
0036a74d T FxInfoEmWeather_c::Load(unsigned int, int)
0036a753 T FxInfoEmWeather_c::GetValue(float, float, float, float, unsigned char, void*)
0036a70d T FxInfoEmWeather_c::FxInfoEmWeather_c()
0036a70d T FxInfoEmWeather_c::FxInfoEmWeather_c()
0036bd4d W FxInfoEmWeather_c::~FxInfoEmWeather_c()
0036bd29 W FxInfoEmWeather_c::~FxInfoEmWeather_c()
0046f345 T FxInterpInfo255_c::Load(unsigned int)
0036cb69 T FxInterpInfo255_c::GetVal(float*, float)
0036cb4d T FxInterpInfo255_c::FxInterpInfo255_c()
0036cb4d T FxInterpInfo255_c::FxInterpInfo255_c()
0036cb65 T FxInterpInfo255_c::~FxInterpInfo255_c()
0036c4ad T FxInterpInfo255_c::~FxInterpInfo255_c()
0036c4ad T FxInterpInfo255_c::~FxInterpInfo255_c()
005d2383 T HeapFreeBlockDesc::InsertHeapFreeBlock(HeapFreeBlockDesc*)
005d2361 T HeapFreeBlockDesc::RemoveHeapFreeBlock()
005d23b7 T HeapFreeBlockDesc::ReplaceHeapFreeBlock(HeapFreeBlockDesc*)
005d2393 T HeapFreeBlockDesc::FindSmallestFreeBlock(int)
005d239d T HeapFreeBlockDesc::InsertOrderedHeapFreeBlock(HeapFreeBlockDesc*)
0044c63b T InteriorManager_c::ActivatePeds(unsigned char)
0044c82f T InteriorManager_c::IsGroupActive(int)
0044c70d T InteriorManager_c::AreAnimsLoaded(int)
0044c643 T InteriorManager_c::GetBoundingBox(CEntity*, CVector*)
0044c975 T InteriorManager_c::GetPedsInterior(CPed*)
0044c73d T InteriorManager_c::SetEntryExitPtr(CEntryExit*)
0044c269 T InteriorManager_c::GetVisibleEffects(InteriorEffectInfo_t*, int)
0044caf5 T InteriorManager_c::GetVectorsInterior(CVector*)
0044c621 T InteriorManager_c::GetInteriorFromPool()
0044c45d T InteriorManager_c::PruneVisibleEffects(InteriorEffectInfo_t*, int, int, float)
0044c7f7 T InteriorManager_c::GetPedsInteriorGroup(CPed*)
0044ced1 T InteriorManager_c::ReturnInteriorToPool(Interior_c*)
0044c911 T InteriorManager_c::FindStealableObjectId(CEntity*)
0044c88b T InteriorManager_c::FindStealableObjectId(int, int, CVector)
0044ce61 T InteriorManager_c::AddSameGroupEffectInfos(InteriorEffectInfo_t*, int)
0044cbd9 T InteriorManager_c::IsInteriorEffectVisible(C2dEffect*, CEntity*)
0044c93d T InteriorManager_c::SetStealableObjectStolen(CEntity*, unsigned char)
0044c857 T InteriorManager_c::HasInteriorHadStealDataSetup(Interior_c*)
0044bfc1 T InteriorManager_c::Exit()
00475299 T InteriorManager_c::Init()
0044c62b T InteriorManager_c::Freeze(unsigned char)
0044c011 T InteriorManager_c::Update()
0044c633 T InteriorManager_c::Activate(unsigned char)
0044cee1 W InteriorManager_c::InteriorManager_c()
0044cfc1 W InteriorManager_c::~InteriorManager_c()
00456939 T ProcSurfaceInfo_c::AddObjects(CPlantLocTri*)
00456857 T ProcSurfaceInfo_c::IsPtInTriangle2D(float, float, CVector, CVector, CVector, CVector, float*)
004562d5 T ProcSurfaceInfo_c::Exit()
004561e5 T ProcSurfaceInfo_c::Init(char*, char*, float, float, int, int, float, float, float, float, float, float, unsigned char, unsigned char)
00456345 T ProcSurfaceInfo_c::AddObject(CVector, CVector, unsigned char)
004561c1 T ProcSurfaceInfo_c::ProcSurfaceInfo_c()
004561c1 T ProcSurfaceInfo_c::ProcSurfaceInfo_c()
004561d3 T ProcSurfaceInfo_c::~ProcSurfaceInfo_c()
004561d3 T ProcSurfaceInfo_c::~ProcSurfaceInfo_c()
001bcbf3 T SharedGPUResource::GetCurrentSize()
001bcc21 T SharedGPUResource::Construct()
001bd471 W SharedGPUResource::SharedGPUResource()
00395785 T CAEDoorAudioEntity::AddAudioEvent(int, CPhysical*)
003954c1 T CAEDoorAudioEntity::AddAudioEvent(int, CVector&, float, float)
0039564d T CAEDoorAudioEntity::PlayDoorSound(short, int, CVector&, float, float)
0046d86d T CAEDoorAudioEntity::StaticInitialise()
003957f1 T CAEDoorAudioEntity::UpdateParameters(CAESound*, short)
003954a9 T CAEDoorAudioEntity::Reset()
00395bc9 T CAEFireAudioEntity::Initialise(FxSystem_c*)
00395bf5 T CAEFireAudioEntity::AddAudioEvent(int, CVector&)
00395d2d T CAEFireAudioEntity::PlayFireSounds(int, CVector&)
00395c2d T CAEFireAudioEntity::PlayWaterSounds(int, CVector&)
0046d881 T CAEFireAudioEntity::StaticInitialise()
00395ea5 T CAEFireAudioEntity::UpdateParameters(CAESound*, short)
0094457c B CAEFireAudioEntity::m_snLastFireFrequencyIndex
00395bd5 T CAEFireAudioEntity::Terminate()
0038bdad T CAnimBlendSequence::MoveMemory()
0038b8b1 T CAnimBlendSequence::SetBoneTag(int)
0038ba01 T CAnimBlendSequence::Uncompress(unsigned char*)
0038b8c1 T CAnimBlendSequence::GetDataSize(bool)
0038b8ed T CAnimBlendSequence::SetNumFrames(int, bool, bool, unsigned char*)
0038bbdd T CAnimBlendSequence::CompressKeyframes(unsigned char*)
0038b945 T CAnimBlendSequence::RemoveQuaternionFlips()
0038bbd1 T CAnimBlendSequence::RemoveUncompressedData(unsigned char*)
0038bdd1 T CAnimBlendSequence::Print()
0038b8a1 T CAnimBlendSequence::SetName(char const*)
0038b879 T CAnimBlendSequence::CAnimBlendSequence()
0038b879 T CAnimBlendSequence::CAnimBlendSequence()
0038b887 T CAnimBlendSequence::~CAnimBlendSequence()
0038b887 T CAnimBlendSequence::~CAnimBlendSequence()
005a4f3d T CCustomCarPlateMgr::Initialise()
005a5201 T CCustomCarPlateMgr::SetupClump(RpClump*, char*, unsigned char)
00a26a50 B CCustomCarPlateMgr::pCharsetTex
00a26a60 B CCustomCarPlateMgr::pPalette1555Tab
00a26a54 B CCustomCarPlateMgr::pPlatebackTexTab
005a500d T CCustomCarPlateMgr::GeneratePlateText(char*, int)
005a5345 T CCustomCarPlateMgr::CreatePlateTexture(char*, unsigned char)
005a5545 T CCustomCarPlateMgr::LoadPlatecharsetDat(char const*, unsigned char*, int, int)
005a52f1 T CCustomCarPlateMgr::GetMapRegionPlateDesign()
005a5319 T CCustomCarPlateMgr::SetupMaterialPlateTexture(RpMaterial*, char*, unsigned char)
005a5251 T CCustomCarPlateMgr::SetupClumpAfterVehicleUpgrade(RpClump*, RpMaterial*, unsigned char)
005a52a9 T CCustomCarPlateMgr::SetupMaterialPlatebackTexture(RpMaterial*, unsigned char)
005a5151 T CCustomCarPlateMgr::Shutdown()
005a57b1 T CCustomRoadsignMgr::Initialise()
005a5879 T CCustomRoadsignMgr::RenderTest(CVector const&)
00a26a78 B CCustomRoadsignMgr::pCharsetTex
005a5c7d T CCustomRoadsignMgr::SetAtomicAlpha(RpAtomic*, unsigned char)
005a5c41 T CCustomRoadsignMgr::SetupRoadsignAtomic(RpAtomic*, char*, int)
005a60c5 T CCustomRoadsignMgr::CreateRoadsignAtomic(float, float, int, char*, char*, char*, char*, int, unsigned char)
005a614d T CCustomRoadsignMgr::RenderRoadsignAtomic(RpAtomic*, CVector const&)
005a5ca1 T CCustomRoadsignMgr::CreateRoadsignAtomicA(float, float, int, char*, char*, char*, char*, int, unsigned char)
005a5881 T CCustomRoadsignMgr::CreateRoadsignTexture(char*, int)
005a587d T CCustomRoadsignMgr::DebugDrawInternalTexture()
005a5821 T CCustomRoadsignMgr::Shutdown()
003757bf T CEventKnockOffBike::SetPedOutCar(CPed*)
00375841 T CEventKnockOffBike::CalcForcesAndAnims(CPed*)
00375d45 T CEventKnockOffBike::SetPedSafePosition(CPed*)
0037557d T CEventKnockOffBike::From(CEventKnockOffBike const&)
0037543d T CEventKnockOffBike::CEventKnockOffBike(CVehicle*, CVector const&, CVector const&, float, float, eWeaponType, signed char, int, CPed*, bool, bool)
003754e5 T CEventKnockOffBike::CEventKnockOffBike(CEventKnockOffBike const&)
00375405 T CEventKnockOffBike::CEventKnockOffBike()
0037543d T CEventKnockOffBike::CEventKnockOffBike(CVehicle*, CVector const&, CVector const&, float, float, eWeaponType, signed char, int, CPed*, bool, bool)
003754e5 T CEventKnockOffBike::CEventKnockOffBike(CEventKnockOffBike const&)
00375405 T CEventKnockOffBike::CEventKnockOffBike()
003756dd T CEventKnockOffBike::~CEventKnockOffBike()
003756a9 T CEventKnockOffBike::~CEventKnockOffBike()
003756a9 T CEventKnockOffBike::~CEventKnockOffBike()
0037560f T CEventKnockOffBike::operator=(CEventKnockOffBike const&)
004b64c5 T CGroupEventHandler::ComputeGreetResponse(CPedGroup*, CPed*, CPed*)
004b5eb5 T CGroupEventHandler::ComputeStareResponse(CPedGroup*, CPed*, CPed*, int, int)
004b6269 T CGroupEventHandler::ComputeDoDealResponse(CPedGroup*, CPed*, CPed*)
004b55a1 T CGroupEventHandler::ComputeResponseDamage(CEvent const&, CPedGroup*, CPed*)
004b5cad T CGroupEventHandler::ComputeResponseDanger(CEvent const&, CPedGroup*, CPed*)
004b6a01 T CGroupEventHandler::ComputeResponseGather(CEvent const&, CPedGroup*, CPed*)
004b6b41 T CGroupEventHandler::IsKillTaskAppropriate(CPedGroup*, CPed*)
004b6251 T CGroupEventHandler::ComputeDrivebyResponse(CPedGroup*, CPed*, CPed*)
004b5d99 T CGroupEventHandler::ComputeFleePedResponse(CPedGroup*, CPed*, CPed*, unsigned char)
004b619d T CGroupEventHandler::ComputeMemberResponses(CEvent const&, CPedGroup*, CPed*)
004b5521 T CGroupEventHandler::ComputeResponseSeenCop(CEvent const&, CPedGroup*, CPed*)
004b5685 T CGroupEventHandler::ComputeResponseSexyPed(CEvent const&, CPedGroup*, CPed*)
004b53c9 T CGroupEventHandler::ComputeResponsePedFriend(CEvent const&, CPedGroup*, CPed*)
004b52c9 T CGroupEventHandler::ComputeResponsePedThreat(CEvent const&, CPedGroup*, CPed*)
004b58f5 T CGroupEventHandler::ComputeResponseShotFired(CEvent const&, CPedGroup*, CPed*)
004b4549 T CGroupEventHandler::ComputeEventResponseTasks(CEventGroupEvent const&, CPedGroup*)
004b674d T CGroupEventHandler::ComputeHandSignalResponse(CPedGroup*, CPed*, CPed*)
004b5819 T CGroupEventHandler::ComputeResponseGunAimedAt(CEvent const&, CPedGroup*, CPed*)
004b5fd9 T CGroupEventHandler::ComputeHassleThreatResponse(CPedGroup*, CPed*, CPed*, bool)
004b67d9 T CGroupEventHandler::ComputeHassleSexyPedResponse(CPedGroup*, CPed*, CPed*)
004b5ce5 T CGroupEventHandler::ComputeLeanOnVehicleResponse(CEvent const&, CPedGroup*, CPed*)
004b5981 T CGroupEventHandler::ComputeResponseDraggedOutCar(CEvent const&, CPedGroup*, CPed*)
004b5aed T CGroupEventHandler::ComputeResponseNewGangMember(CEvent const&, CPedGroup*, CPed*)
004b5c05 T CGroupEventHandler::ComputeResponsePlayerCommand(CEvent const&, CPedGroup*, CPed*)
004b5a39 T CGroupEventHandler::ComputeResponseVehicleDamage(CEvent const&, CPedGroup*, CPed*)
004b6c51 T CGroupEventHandler::ComputeWalkAlongsideResponse(CPedGroup*, CPed*, CPed*)
004b68a1 T CGroupEventHandler::ComputeKillPlayerBasicResponse(CPedGroup*, CPed*, CPed*, unsigned char)
004b5205 T CGroupEventHandler::ComputeResponseLeaderEnterExit(CEvent const&, CPedGroup*, CPed*)
004b4e09 T CGroupEventHandler::ComputeResponseLeaderExitedCar(CEvent const&, CPedGroup*, CPed*)
004b5d45 T CGroupEventHandler::ComputeKillThreatsBasicResponse(CPedGroup*, CPed*, CPed*, unsigned char)
004b477d T CGroupEventHandler::ComputeResponseLeaderEnteredCar(CEvent const&, CPedGroup*, CPed*)
004b50d5 T CGroupEventHandler::ComputeResponsLeaderQuitEnteringCar(CEvent const&, CPedGroup*, CPed*)
0028d931 T CHIDJoystickAmazon::FindUVsFromMapping(char const*, HIDMapping, bool)
0028d5a5 T CHIDJoystickAmazon::CHIDJoystickAmazon(char const*)
0028d5a5 T CHIDJoystickAmazon::CHIDJoystickAmazon(char const*)
0028db4d W CHIDJoystickAmazon::~CHIDJoystickAmazon()
004c230d T CInterestingEvents::InvalidateEvent(TInterestingEvent const*)
0061dc44 R CInterestingEvents::ms_iScanFrequency
004c2255 T CInterestingEvents::GetInterestingEvent()
004c1ec1 T CInterestingEvents::ScanForNearbyEntities()
004c23a5 T CInterestingEvents::InvalidateNonVisibleEvents()
004bd0e1 T CInterestingEvents::Add(CInterestingEvents::EType, CEntity*)
004c1bd1 T CInterestingEvents::CInterestingEvents()
004c1bd1 T CInterestingEvents::CInterestingEvents()
004c1e25 T CInterestingEvents::~CInterestingEvents()
004c1e25 T CInterestingEvents::~CInterestingEvents()
005c02a1 T CMotionBlurStreaks::RegisterStreak(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char, CVector, CVector)
005bfb25 T CMotionBlurStreaks::Init()
005c0ba9 T CMotionBlurStreaks::Render()
005c04ad T CMotionBlurStreaks::Update()
00a56600 B CMotionBlurStreaks::aStreaks
0061dc04 R CNearbyFireScanner::ms_iLatencyPeriod
004bd379 T CNearbyFireScanner::ScanForNearbyFires(CPed const&)
0061dc08 R CNearbyFireScanner::ms_fNearbyFireRange
0061dc0c R CNearbyFireScanner::ms_fPotentialWalkIntoFireRange
0061daa0 R CPedPizzaAttractor::ms_fSpacing
0061dab4 R CPedPizzaAttractor::ms_fDeltaPos
0061da9c R CPedPizzaAttractor::ms_iMaxSlots
0061daac R CPedPizzaAttractor::ms_fArriveRange
0061dab8 R CPedPizzaAttractor::ms_fDeltaHeading
0061dab0 R CPedPizzaAttractor::ms_fHeadingRange
0061dabc R CPedPizzaAttractor::ms_fPizzaOrderTime
0061daa4 R CPedPizzaAttractor::ms_fAchieveQueueTime
004ac6a9 W CPedPizzaAttractor::GetHeadOfQueueWaitTime()
0061daa8 R CPedPizzaAttractor::ms_fAchieveQueueShuffleTime
004ac621 W CPedPizzaAttractor::~CPedPizzaAttractor()
0040daa1 T CPtrListDoubleLink::Flush()
0042cd3d W CPtrListDoubleLink::~CPtrListDoubleLink()
0040da41 T CPtrListSingleLink::Flush()
0040da11 T CPtrNodeDoubleLink::operator delete(void*)
0040d9ad T CPtrNodeDoubleLink::operator new(unsigned int)
0040d985 T CPtrNodeSingleLink::operator delete(void*)
0040d925 T CPtrNodeSingleLink::operator new(unsigned int)
00a205dc B CScripted2dEffects::ms_effects
00a1fb1c B CScripted2dEffects::ms_activated
00a1fcdc B CScripted2dEffects::ms_userLists
0059c8f1 T CScripted2dEffects::GetEffectPairs(C2dEffect const*)
00a215dc B CScripted2dEffects::ms_effectPairs
00a23adc B CScripted2dEffects::ms_useAgainFlags
0059c791 T CScripted2dEffects::AddScripted2DEffect(float)
00a1fb5c B CScripted2dEffects::ScriptReferenceIndex
0059c88d T CScripted2dEffects::ReturnScripted2DEffect(int)
00a1fbdc B CScripted2dEffects::ms_effectSequenceTaskIDs
0059c589 T CScripted2dEffects::Init()
0048ff2f T CScripted2dEffects::Load()
0048ff2d T CScripted2dEffects::Save()
0059c925 T CScripted2dEffects::GetIndex(C2dEffect const*)
00a23b1c B CScripted2dEffects::ms_radii
00541221 T CTaskComplexFacial::SetRequest(int, int, int, int)
00540f49 T CTaskComplexFacial::MakeAbortable(CPed*, int, CEvent const*)
0054108d T CTaskComplexFacial::ControlSubTask(CPed*)
00540f5d T CTaskComplexFacial::CreateNextSubTask(CPed*)
00541051 T CTaskComplexFacial::CreateFirstSubTask(CPed*)
0054122d T CTaskComplexFacial::StopAll()
00543b95 W CTaskComplexFacial::Serialize()
00540ed5 T CTaskComplexFacial::CTaskComplexFacial()
00540ed5 T CTaskComplexFacial::CTaskComplexFacial()
00540f39 T CTaskComplexFacial::~CTaskComplexFacial()
00540f35 T CTaskComplexFacial::~CTaskComplexFacial()
00540f35 T CTaskComplexFacial::~CTaskComplexFacial()
004ef72d T CTaskComplexOnFire::ControlSubTask(CPed*)
0061e33c R CTaskComplexOnFire::ms_fHealthRate
0061e334 R CTaskComplexOnFire::ms_iMaxFleeTime
0061e338 R CTaskComplexOnFire::ms_fSafeDistance
004ef88d T CTaskComplexOnFire::ComputeFireDamage(CPed*, CPedDamageResponse&)
004ef629 T CTaskComplexOnFire::CreateNextSubTask(CPed*)
004ef6d9 T CTaskComplexOnFire::CreateFirstSubTask(CPed*)
004f3bd9 W CTaskComplexOnFire::Serialize()
004ef5fd T CTaskComplexOnFire::CTaskComplexOnFire()
004ef5fd T CTaskComplexOnFire::CTaskComplexOnFire()
004ef619 T CTaskComplexOnFire::~CTaskComplexOnFire()
004ef615 T CTaskComplexOnFire::~CTaskComplexOnFire()
004ef615 T CTaskComplexOnFire::~CTaskComplexOnFire()
00520ce9 T CTaskComplexWander::ContinueFrom(CTaskComplexWander const&)
00520d81 T CTaskComplexWander::CreateSubTask(CPed const*, int)
00521469 T CTaskComplexWander::ControlSubTask(CPed*)
00521989 T CTaskComplexWander::UpdatePathNodes(CPed const*, unsigned char, CNodeAddress&, CNodeAddress&, unsigned char&)
0061e610 R CTaskComplexWander::ms_fTargetRadius
00520f7d T CTaskComplexWander::CreateNextSubTask(CPed*)
00520d25 T CTaskComplexWander::CreateFirstSubTask(CPed*)
00521641 T CTaskComplexWander::ScanForBlockedNodes(CPed*)
0061e618 R CTaskComplexWander::ms_iCrossRoadLookTime
005208a1 T CTaskComplexWander::GetWanderTaskByPedType(CPed const&)
00520a95 T CTaskComplexWander::GetWanderTaskByPedType(int)
0061e61c R CTaskComplexWander::ms_fBlockedNodeDistance
0061e614 R CTaskComplexWander::ms_iTrafficLightWaitTime
00520cd3 T CTaskComplexWander::SetDir(int)
0052189d T CTaskComplexWander::UpdateDir(CPed const*)
00520c85 T CTaskComplexWander::CTaskComplexWander(int, unsigned char, bool, float)
00520cd1 T CTaskComplexWander::~CTaskComplexWander()
00526b1d T CTaskComplexWander::~CTaskComplexWander()
00526b1d T CTaskComplexWander::~CTaskComplexWander()
0051960d T CTaskGangHasslePed::ControlSubTask(CPed*)
00519429 T CTaskGangHasslePed::CreateNextSubTask(CPed*)
005194f5 T CTaskGangHasslePed::CreateFirstSubTask(CPed*)
0051934d T CTaskGangHasslePed::CTaskGangHasslePed(CPed*, int, int, int)
0051934d T CTaskGangHasslePed::CTaskGangHasslePed(CPed*, int, int, int)
005193e1 T CTaskGangHasslePed::~CTaskGangHasslePed()
0051939d T CTaskGangHasslePed::~CTaskGangHasslePed()
0051939d T CTaskGangHasslePed::~CTaskGangHasslePed()
0051ab19 T CTaskLeanOnVehicle::ProcessPed(CPed*)
0051ad09 T CTaskLeanOnVehicle::FinishAnimCB(CAnimBlendAssociation*, void*)
0051aac5 T CTaskLeanOnVehicle::MakeAbortable(CPed*, int, CEvent const*)
0051a989 T CTaskLeanOnVehicle::CTaskLeanOnVehicle(CEntity*, int, unsigned char)
0051a989 T CTaskLeanOnVehicle::CTaskLeanOnVehicle(CEntity*, int, unsigned char)
0051aa21 T CTaskLeanOnVehicle::~CTaskLeanOnVehicle()
0051a9e1 T CTaskLeanOnVehicle::~CTaskLeanOnVehicle()
0051a9e1 T CTaskLeanOnVehicle::~CTaskLeanOnVehicle()
00491929 W CTaskSimpleChoking::CreateTask()
004df865 T CTaskSimpleChoking::ProcessPed(CPed*)
004dfa7d T CTaskSimpleChoking::UpdateChoke(CPed*, CPed*, unsigned char)
004df7e1 T CTaskSimpleChoking::MakeAbortable(CPed*, int, CEvent const*)
004df859 T CTaskSimpleChoking::DeleteAnimChokeCB(CAnimBlendAssociation*, void*)
004e9bfd W CTaskSimpleChoking::Serialize()
004df6c1 T CTaskSimpleChoking::CTaskSimpleChoking(CPed*, unsigned char)
004df6c1 T CTaskSimpleChoking::CTaskSimpleChoking(CPed*, unsigned char)
004df791 T CTaskSimpleChoking::~CTaskSimpleChoking()
004df745 T CTaskSimpleChoking::~CTaskSimpleChoking()
004df745 T CTaskSimpleChoking::~CTaskSimpleChoking()
00490f31 W CTaskSimpleGiveCPR::CreateTask()
00510339 T CTaskSimpleGiveCPR::ProcessPed(CPed*)
0051045d T CTaskSimpleGiveCPR::MakeAbortable(CPed*, int, CEvent const*)
0051044d T CTaskSimpleGiveCPR::FinishGiveCPRAnimCB(CAnimBlendAssociation*, void*)
005122f5 W CTaskSimpleGiveCPR::Serialize()
00510421 T CTaskSimpleGiveCPR::StartAnim(CPed*)
005102a1 T CTaskSimpleGiveCPR::CTaskSimpleGiveCPR(CAccident*)
005102a1 T CTaskSimpleGiveCPR::CTaskSimpleGiveCPR(CAccident*)
00510301 T CTaskSimpleGiveCPR::~CTaskSimpleGiveCPR()
005102cd T CTaskSimpleGiveCPR::~CTaskSimpleGiveCPR()
005102cd T CTaskSimpleGiveCPR::~CTaskSimpleGiveCPR()
003577bd W CTaskSimpleHandsUp::Serialize()
00357759 W CTaskSimpleHandsUp::~CTaskSimpleHandsUp()
0050ad1d T CTaskSimpleHitHead::ProcessPed(CPed*)
0050acd9 T CTaskSimpleHitHead::MakeAbortable(CPed*, int, CEvent const*)
0050ad8d T CTaskSimpleHitHead::FinishAnimHitHeadCB(CAnimBlendAssociation*, void*)
0050edcd W CTaskSimpleHitHead::Serialize()
0050ad61 T CTaskSimpleHitHead::StartAnim(CPed*)
0050ac4d T CTaskSimpleHitHead::CTaskSimpleHitHead()
0050ac4d T CTaskSimpleHitHead::CTaskSimpleHitHead()
0050aca1 T CTaskSimpleHitHead::~CTaskSimpleHitHead()
0050ac6d T CTaskSimpleHitHead::~CTaskSimpleHitHead()
0050ac6d T CTaskSimpleHitHead::~CTaskSimpleHitHead()
00497d01 W CTaskSimpleHitWall::Serialize()
00497cb1 W CTaskSimpleHitWall::~CTaskSimpleHitWall()
004f00b5 T CTaskSimpleIKChain::GetIKChain()
004f00b9 T CTaskSimpleIKChain::ProcessPed(CPed*)
004f0041 T CTaskSimpleIKChain::CreateIKChain(CPed*)
004f000d T CTaskSimpleIKChain::MakeAbortable(CPed*, int, CEvent const*)
004efe01 T CTaskSimpleIKChain::BlendOut(int)
004efe41 T CTaskSimpleIKChain::CTaskSimpleIKChain(char*, int, RwV3d, int, CEntity*, int, RwV3d, float, int, int)
004efe41 T CTaskSimpleIKChain::CTaskSimpleIKChain(char*, int, RwV3d, int, CEntity*, int, RwV3d, float, int, int)
004eff0d T CTaskSimpleIKChain::~CTaskSimpleIKChain()
004efec9 T CTaskSimpleIKChain::~CTaskSimpleIKChain()
004efec9 T CTaskSimpleIKChain::~CTaskSimpleIKChain()
00496dd1 W CTaskSimpleJetPack::CreateTask()
00530dbd T CTaskSimpleJetPack::ProcessPed(CPed*)
00531dc5 T CTaskSimpleJetPack::DropJetPack(CPed*)
006b044c D CTaskSimpleJetPack::THRUST_FULL
006b0454 D CTaskSimpleJetPack::THRUST_STOP
00530f91 T CTaskSimpleJetPack::ProcessAnims(CPed*)
00530d0d T CTaskSimpleJetPack::MakeAbortable(CPed*, int, CEvent const*)
00531795 T CTaskSimpleJetPack::ProcessThrust(CPed*)
00531f05 T CTaskSimpleJetPack::RenderJetPack(CPed*)
006b0450 D CTaskSimpleJetPack::THRUST_STRAFE
006b0448 D CTaskSimpleJetPack::THRUST_NOMINAL
00532245 T CTaskSimpleJetPack::DoJetPackEffect(CPed*)
00531791 T CTaskSimpleJetPack::ProcessControlAI(CPed*)
006b0458 D CTaskSimpleJetPack::THRUST_MAX_ANGLE
00531e35 T CTaskSimpleJetPack::ApplyRollAndPitch(CPed*)
006b0460 D CTaskSimpleJetPack::JETPACK_TURN_RATE
00530cd9 T CTaskSimpleJetPack::StopJetPackEffect()
006b0464 D CTaskSimpleJetPack::JETPACK_ANGLE_RATE
006b0474 D CTaskSimpleJetPack::LEG_SWING_DAMP_FRAC
006b0468 D CTaskSimpleJetPack::LEG_SWING_MAX_ANGLE
00531029 T CTaskSimpleJetPack::ProcessControlInput(CPlayerPed*)
006b045c D CTaskSimpleJetPack::THRUST_MOVE_DAMPING
006b046c D CTaskSimpleJetPack::LEG_SWING_DELTA_V_MULT
006b0470 D CTaskSimpleJetPack::LEG_SWING_GRAVITY_MULT
00533645 W CTaskSimpleJetPack::Serialize()
00530bcd T CTaskSimpleJetPack::CTaskSimpleJetPack(CVector const*, float, int, CEntity*)
00530bcd T CTaskSimpleJetPack::CTaskSimpleJetPack(CVector const*, float, int, CEntity*)
00530cfd T CTaskSimpleJetPack::~CTaskSimpleJetPack()
00530c5d T CTaskSimpleJetPack::~CTaskSimpleJetPack()
00530c5d T CTaskSimpleJetPack::~CTaskSimpleJetPack()
004d6d31 T CTaskSimpleRunAnim::ProcessPed(CPed*)
004d6d79 T CTaskSimpleRunAnim::StartAnim(CPed*)
004d6ca9 T CTaskSimpleRunAnim::CTaskSimpleRunAnim(AssocGroupId, AnimationId, float, bool)
004d6ced T CTaskSimpleRunAnim::CTaskSimpleRunAnim(AssocGroupId, AnimationId, float, int, char const*, bool)
004d6ca9 T CTaskSimpleRunAnim::CTaskSimpleRunAnim(AssocGroupId, AnimationId, float, bool)
004d6ced T CTaskSimpleRunAnim::CTaskSimpleRunAnim(AssocGroupId, AnimationId, float, int, char const*, bool)
004d806d W CTaskSimpleRunAnim::~CTaskSimpleRunAnim()
004ec0b5 T CTaskSimpleSitDown::ProcessPed(CPed*)
004ec055 T CTaskSimpleSitDown::MakeAbortable(CPed*, int, CEvent const*)
004ec135 T CTaskSimpleSitDown::FinishAnimSitDownCB(CAnimBlendAssociation*, void*)
004f2dd1 W CTaskSimpleSitDown::Serialize()
004ec0fd T CTaskSimpleSitDown::StartAnim(CPed*)
004ebfc5 T CTaskSimpleSitDown::CTaskSimpleSitDown(unsigned char)
004ebfc5 T CTaskSimpleSitDown::CTaskSimpleSitDown(unsigned char)
004ec01d T CTaskSimpleSitDown::~CTaskSimpleSitDown()
004ebfe9 T CTaskSimpleSitDown::~CTaskSimpleSitDown()
004ebfe9 T CTaskSimpleSitDown::~CTaskSimpleSitDown()
004912fd W CTaskSimpleSitIdle::CreateTask()
004ec221 T CTaskSimpleSitIdle::ProcessPed(CPed*)
004ec19d T CTaskSimpleSitIdle::MakeAbortable(CPed*, int, CEvent const*)
004ec185 T CTaskSimpleSitIdle::SetTimer(int)
004f2e95 W CTaskSimpleSitIdle::Serialize()
004ec609 T CTaskSimpleSitIdle::StartAnim(CPed*)
004ec141 T CTaskSimpleSitIdle::CTaskSimpleSitIdle(int, unsigned char)
004ec141 T CTaskSimpleSitIdle::CTaskSimpleSitIdle(int, unsigned char)
004ec175 T CTaskSimpleSitIdle::~CTaskSimpleSitIdle()
004ec171 T CTaskSimpleSitIdle::~CTaskSimpleSitIdle()
004ec171 T CTaskSimpleSitIdle::~CTaskSimpleSitIdle()
004ec771 T CTaskSimpleStandUp::ProcessPed(CPed*)
004ec711 T CTaskSimpleStandUp::MakeAbortable(CPed*, int, CEvent const*)
004ec7f1 T CTaskSimpleStandUp::FinishAnimStandUpCB(CAnimBlendAssociation*, void*)
004f2f7d W CTaskSimpleStandUp::Serialize()
004ec7b9 T CTaskSimpleStandUp::StartAnim(CPed*)
004ec681 T CTaskSimpleStandUp::CTaskSimpleStandUp(unsigned char)
004ec681 T CTaskSimpleStandUp::CTaskSimpleStandUp(unsigned char)
004ec6d9 T CTaskSimpleStandUp::~CTaskSimpleStandUp()
004ec6a5 T CTaskSimpleStandUp::~CTaskSimpleStandUp()
004ec6a5 T CTaskSimpleStandUp::~CTaskSimpleStandUp()
004eceb1 T CTaskSimpleTurn180::ProcessPed(CPed*)
004f33e5 W CTaskSimpleTurn180::MakeAbortable(CPed*, int, CEvent const*)
004ecf25 T CTaskSimpleTurn180::FinishAnimTurn180CB(CAnimBlendAssociation*, void*)
004f33e9 W CTaskSimpleTurn180::Serialize()
004ecef9 T CTaskSimpleTurn180::StartAnim(CPed*)
004ece25 T CTaskSimpleTurn180::CTaskSimpleTurn180()
004ece25 T CTaskSimpleTurn180::CTaskSimpleTurn180()
004ece79 T CTaskSimpleTurn180::~CTaskSimpleTurn180()
004ece45 T CTaskSimpleTurn180::~CTaskSimpleTurn180()
004ece45 T CTaskSimpleTurn180::~CTaskSimpleTurn180()
005d446d T CVisibilityPlugins::Initialise()
00a83f6c B CVisibilityPlugins::ms_pCamera
005d4b55 T CVisibilityPlugins::GetAtomicId(RpAtomic*)
005d60ad T CVisibilityPlugins::RenderPedCB(RpAtomic*)
005d4ac1 T CVisibilityPlugins::SetAtomicId(RpAtomic*, int)
00a83f74 B CVisibilityPlugins::m_alphaList
005d4a99 T CVisibilityPlugins::GetModelInfo(RpAtomic*)
005d4b7d T CVisibilityPlugins::GetUserValue(RpAtomic*)
005d439d T CVisibilityPlugins::PluginAttach()
005d6755 T CVisibilityPlugins::RenderAtomic(void*, float)
005d6891 T CVisibilityPlugins::RenderEntity(void*, float)
005d4b69 T CVisibilityPlugins::SetUserValue(RpAtomic*, unsigned short)
005d4fed T CVisibilityPlugins::GetClumpAlpha(RpClump*)
005d4ad5 T CVisibilityPlugins::SetAtomicFlag(RpAtomic*, unsigned short)
005d65e5 T CVisibilityPlugins::SetClumpAlpha(RpClump*, int)
00a84128 B CVisibilityPlugins::ms_pedLodDist
005d65d5 T CVisibilityPlugins::IsClumpVisible(RpClump*)
005d607d T CVisibilityPlugins::RenderPlayerCB(RpAtomic*)
005d61a1 T CVisibilityPlugins::RenderWeaponCB(RpAtomic*)
00a83f70 B CVisibilityPlugins::ms_pCameraPosn
00a8412c B CVisibilityPlugins::ms_pedFadeDist
005d4b15 T CVisibilityPlugins::ClearAtomicFlag(RpAtomic*, unsigned short)
005d4399 T CVisibilityPlugins::ClumpDestructor(void*, int, int)
005d4359 T CVisibilityPlugins::FrameDestructor(void*, int, int)
005d6411 T CVisibilityPlugins::FrustumSphereCB(RpClump*)
005d63a1 T CVisibilityPlugins::IsAtomicVisible(RpAtomic*)
005d432d T CVisibilityPlugins::AtomicDestructor(void*, int, int)
005d435d T CVisibilityPlugins::ClumpConstructor(void*, int, int)
005d4331 T CVisibilityPlugins::FrameConstructor(void*, int, int)
00a84130 B CVisibilityPlugins::ms_cullCompsDist
005d42ed T CVisibilityPlugins::AtomicConstructor(void*, int, int)
005d6221 T CVisibilityPlugins::GetClumpModelInfo(RpClump*)
005d4a89 T CVisibilityPlugins::GetModelInfoIndex(RpAtomic*)
005d4f1d T CVisibilityPlugins::RenderFadingClump(CBaseModelInfo*, RpClump*, int)
005d6d51 T CVisibilityPlugins::RenderOrderedList(CLinkList<CVisibilityPlugins::AlphaObjectInfo>&)
005d657d T CVisibilityPlugins::SetClumpModelInfo(RpClump*, CClumpModelInfo*)
005d4a79 T CVisibilityPlugins::SetModelInfoIndex(RpAtomic*, int)
00a8401c B CVisibilityPlugins::m_alphaEntityList
005d6d21 T CVisibilityPlugins::RenderAlphaAtomics()
005d4e81 T CVisibilityPlugins::RenderFadingAtomic(CBaseModelInfo*, RpAtomic*, int)
00a83f68 B CVisibilityPlugins::ms_defaultRenderer
00a8411c B CVisibilityPlugins::ms_vehicleLod0Dist
00a84120 B CVisibilityPlugins::ms_vehicleLod1Dist
00a84138 B CVisibilityPlugins::ms_weaponPedsForPC
005d4381 T CVisibilityPlugins::DefaultVisibilityCB(RpClump*)
005d6401 T CVisibilityPlugins::GetFrameHierarchyId(RwFrame*)
005d65f9 T CVisibilityPlugins::InitAlphaAtomicList()
005d6641 T CVisibilityPlugins::InitAlphaEntityList()
005d6151 T CVisibilityPlugins::RenderFadingClumpCB(RpAtomic*)
005d4c89 T CVisibilityPlugins::RenderWheelAtomicCB(RpAtomic*)
005d63f1 T CVisibilityPlugins::SetFrameHierarchyId(RwFrame*, unsigned int)
005d6249 T CVisibilityPlugins::SetRenderWareCamera(RwCamera*)
005d646d T CVisibilityPlugins::VehicleVisibilityCB(RpClump*)
00a84134 B CVisibilityPlugins::ms_cullBigCompsDist
005d4385 T CVisibilityPlugins::ClumpCopyConstructor(void*, void const*, int, int)
005d4345 T CVisibilityPlugins::FrameCopyConstructor(void*, void const*, int, int)
005d6dad T CVisibilityPlugins::RenderFadingEntities()
006b2c1c D CVisibilityPlugins::ms_clumpPluginOffset
006b2c18 D CVisibilityPlugins::ms_framePluginOffset
005d4309 T CVisibilityPlugins::AtomicCopyConstructor(void*, void const*, int, int)
005d4d4d T CVisibilityPlugins::RenderAtomicWithAlpha(RpAtomic*, int)
005d4c99 T CVisibilityPlugins::RenderObjNormalAtomic(RpAtomic*)
005d57ad T CVisibilityPlugins::RenderTrainHiDetailCB(RpAtomic*)
005d487d T CVisibilityPlugins::RenderWeaponPedsForPC()
005d4b91 T CVisibilityPlugins::SetupVehicleVariables(RpClump*)
00a83fc8 B CVisibilityPlugins::m_alphaBoatAtomicList
006b2c14 D CVisibilityPlugins::ms_atomicPluginOffset
00a84124 B CVisibilityPlugins::ms_bigVehicleLod0Dist
005d6d6d T CVisibilityPlugins::RenderBoatAlphaAtomics()
005d5521 T CVisibilityPlugins::RenderHeliRotorAlphaCB(RpAtomic*)
005d4ee5 T CVisibilityPlugins::RenderAtomicWithAlphaCB(RpAtomic*, void*)
005d5179 T CVisibilityPlugins::RenderVehicleHiDetailCB(RpAtomic*)
005d4e6f T CVisibilityPlugins::ResetRenderFadingAtomic(CBaseModelInfo*)
005d6235 T CVisibilityPlugins::SetAtomicRenderCallback(RpAtomic*, RpAtomic* (*)(RpAtomic*))
005d4e5d T CVisibilityPlugins::SetupRenderFadingAtomic(CBaseModelInfo*, int)
005d4aed T CVisibilityPlugins::SetClumpForAllAtomicsFlag(RpClump*, int)
00a840c4 B CVisibilityPlugins::m_alphaReallyDrawLastList
005d4d7d T CVisibilityPlugins::CalculateFadingAtomicAlpha(CBaseModelInfo*, CEntity*, float)
005d5485 T CVisibilityPlugins::InsertAtomicIntoSortedList(RpAtomic*, float)
005d6759 T CVisibilityPlugins::InsertEntityIntoSortedList(CEntity*, float)
005d6bf5 T CVisibilityPlugins::InsertObjectIntoSortedList(void*, float, void (*)(void*, float))
005d5655 T CVisibilityPlugins::RenderHeliTailRotorAlphaCB(RpAtomic*)
005d58c5 T CVisibilityPlugins::RenderTrainHiDetailAlphaCB(RpAtomic*)
005d4b2d T CVisibilityPlugins::ClearClumpForAllAtomicsFlag(RpClump*, int)
005d6ec5 T CVisibilityPlugins::RenderReallyDrawLastObjects()
00a84070 B CVisibilityPlugins::m_alphaUnderwaterEntityList
005d6f45 T CVisibilityPlugins::GetDistanceSquaredFromCamera(RwV3d*)
005d4c41 T CVisibilityPlugins::GetDistanceSquaredFromCamera(RwFrame*)
005d5291 T CVisibilityPlugins::RenderVehicleHiDetailAlphaCB(RpAtomic*)
005d5e65 T CVisibilityPlugins::RenderVehicleHiDetailCB_Boat(RpAtomic*)
005d5dd9 T CVisibilityPlugins::RenderVehicleLoDetailCB_Boat(RpAtomic*)
005d5001 T CVisibilityPlugins::GetDotProductWithCameraVector(RwMatrixTag*, RwMatrixTag*, unsigned int)
005d5fd1 T CVisibilityPlugins::InsertAtomicIntoBoatSortedList(RpAtomic*, float)
005d6b59 T CVisibilityPlugins::InsertEntityIntoUnderwaterList(CEntity*, float)
005d6e95 T CVisibilityPlugins::RenderFadingUnderwaterEntities()
005d4f61 T CVisibilityPlugins::RenderVehicleReallyLowDetailCB(RpAtomic*)
005d6521 T CVisibilityPlugins::VehicleVisibilityCB_BigVehicle(RpClump*)
005d5ecd T CVisibilityPlugins::RenderVehicleHiDetailAlphaCB_Boat(RpAtomic*)
00a84118 B CVisibilityPlugins::ms_vehicleLod0RenderMultiPassDist
005d6c85 T CVisibilityPlugins::InsertAtomicIntoReallyDrawLastList(RpAtomic*, float)
005d6abd T CVisibilityPlugins::InsertEntityIntoReallyDrawLastList(CEntity*, float)
005d5ae5 T CVisibilityPlugins::RenderVehicleHiDetailCB_BigVehicle(RpAtomic*)
005d5be5 T CVisibilityPlugins::RenderVehicleHiDetailAlphaCB_BigVehicle(RpAtomic*)
005d5aad T CVisibilityPlugins::RenderVehicleReallyLowDetailCB_BigVehicle(RpAtomic*)
005d47b1 T CVisibilityPlugins::Shutdown()
002bf1b1 T CWidgetRaceResults::SetWidgetInfo2(int, int, int, int, char*, char*)
002bf099 T CWidgetRaceResults::RenderTitleText(CRect, float)
002beb29 T CWidgetRaceResults::Draw()
002beb15 T CWidgetRaceResults::Update()
002bf24d W CWidgetRaceResults::GetName()
002bea81 T CWidgetRaceResults::CWidgetRaceResults(char const*, WidgetPosition const&)
002bea81 T CWidgetRaceResults::CWidgetRaceResults(char const*, WidgetPosition const&)
002bf23d W CWidgetRaceResults::~CWidgetRaceResults()
002c0701 T CWidgetRegionFlick::Draw()
002c0631 T CWidgetRegionFlick::Update()
002c0961 W CWidgetRegionFlick::GetName()
002c0871 T CWidgetRegionFlick::IsTouched(CVector2D*)
002c05e1 T CWidgetRegionFlick::CWidgetRegionFlick(char const*, WidgetPosition const&)
002c05e1 T CWidgetRegionFlick::CWidgetRegionFlick(char const*, WidgetPosition const&)
002c0935 W CWidgetRegionFlick::~CWidgetRegionFlick()
002c090d W CWidgetRegionFlick::~CWidgetRegionFlick()
002c331d T CWidgetRegionSteer::OnInitialTouch()
002c3041 T CWidgetRegionSteer::ClampInternalTouchAnchor()
002c30a5 T CWidgetRegionSteer::Draw()
002c2f1d T CWidgetRegionSteer::Update()
002c33e9 W CWidgetRegionSteer::GetName()
002c3191 T CWidgetRegionSteer::IsTouched(CVector2D*)
002c2eb5 T CWidgetRegionSteer::CWidgetRegionSteer(char const*, WidgetPosition const&)
002c2eb5 T CWidgetRegionSteer::CWidgetRegionSteer(char const*, WidgetPosition const&)
002c33bd W CWidgetRegionSteer::~CWidgetRegionSteer()
002c3395 W CWidgetRegionSteer::~CWidgetRegionSteer()
002c8475 T CWidgetThumbCircle::GetWidgetValue()
002c84f5 W CWidgetThumbCircle::OnInitialTouch()
002c847b T CWidgetThumbCircle::SetWidgetValue(float)
002c8099 T CWidgetThumbCircle::Draw()
002c7e35 T CWidgetThumbCircle::Update()
002c84e9 W CWidgetThumbCircle::GetName()
002c7d91 T CWidgetThumbCircle::CWidgetThumbCircle(char const*, WidgetPosition const&)
002c7d91 T CWidgetThumbCircle::CWidgetThumbCircle(char const*, WidgetPosition const&)
002c84bd W CWidgetThumbCircle::~CWidgetThumbCircle()
002c8495 W CWidgetThumbCircle::~CWidgetThumbCircle()
002a882d W ConfirmationScreen::Render(int)
002a8825 W ConfirmationScreen::GetStartY()
001cc57d T ES2RQShaderBinding::Setup(unsigned int, char const*)
004756fd T FurnitureManager_c::GetGroupId(char*)
00444945 T FurnitureManager_c::GetRandomId(int, int, unsigned char)
00444921 T FurnitureManager_c::GetFurniture(int, int, short, unsigned char)
004757a1 T FurnitureManager_c::GetSubGroupId(char*)
004754a5 T FurnitureManager_c::LoadFurniture()
0044480f T FurnitureManager_c::Exit()
00475415 T FurnitureManager_c::Init()
00444965 W FurnitureManager_c::FurnitureManager_c()
004449cf W FurnitureManager_c::~FurnitureManager_c()
0036a7b5 T FxInfoEmRotation_c::Load(unsigned int, int)
0036a7bb T FxInfoEmRotation_c::GetValue(float, float, float, float, unsigned char, void*)
0036a775 T FxInfoEmRotation_c::FxInfoEmRotation_c()
0036a775 T FxInfoEmRotation_c::FxInfoEmRotation_c()
0036bd99 W FxInfoEmRotation_c::~FxInfoEmRotation_c()
0036bd75 W FxInfoEmRotation_c::~FxInfoEmRotation_c()
0036b599 T FxInfoSpriteRect_c::Load(unsigned int, int)
0036b59f T FxInfoSpriteRect_c::GetValue(float, float, float, float, unsigned char, void*)
0036b559 T FxInfoSpriteRect_c::FxInfoSpriteRect_c()
0036b559 T FxInfoSpriteRect_c::FxInfoSpriteRect_c()
0036c1c1 W FxInfoSpriteRect_c::~FxInfoSpriteRect_c()
0036c19d W FxInfoSpriteRect_c::~FxInfoSpriteRect_c()
0036b3e9 T FxInfoUnderwater_c::Load(unsigned int, int)
0036b3ef T FxInfoUnderwater_c::GetValue(float, float, float, float, unsigned char, void*)
0036b3bd T FxInfoUnderwater_c::FxInfoUnderwater_c()
0036b3bd T FxInfoUnderwater_c::FxInfoUnderwater_c()
0036c0dd W FxInfoUnderwater_c::~FxInfoUnderwater_c()
0036c0b9 W FxInfoUnderwater_c::~FxInfoUnderwater_c()
0046ef4d T FxInterpInfoU255_c::Load(unsigned int)
0036c841 T FxInterpInfoU255_c::GetVal(float*, float)
0036c825 T FxInterpInfoU255_c::FxInterpInfoU255_c()
0036c825 T FxInterpInfoU255_c::FxInterpInfoU255_c()
0036c83d T FxInterpInfoU255_c::~FxInterpInfoU255_c()
0036c4ad T FxInterpInfoU255_c::~FxInterpInfoU255_c()
0036c4ad T FxInterpInfoU255_c::~FxInterpInfoU255_c()
00392045 T CAEAudioEnvironment::GetDistanceAttenuation(float)
00391d31 T CAEAudioEnvironment::GetDopplerRelativeFrequency(float, float, unsigned int, unsigned int, float)
00392035 T CAEAudioEnvironment::GetPositionRelativeToCamera(CVector*, CPlaceable*)
00391e01 T CAEAudioEnvironment::GetPositionRelativeToCamera(CVector*, CVector*)
0039212d T CAEAudioEnvironment::GetReverbEnvironmentAndDepth(signed char*, int*)
003920a5 T CAEAudioEnvironment::GetDirectionalMikeAttenuation(CVector const&)
003a74f5 T CAESmoothFadeThread::CancelFade(OALSource*)
003a7335 T CAESmoothFadeThread::Initialise()
003a7371 T CAESmoothFadeThread::RequestFade(OALSource*, float, short, bool)
003a7365 T CAESmoothFadeThread::WaitForExit()
003a759d T CAESmoothFadeThread::SmoothFadeProc(void*)
003a752d T CAESmoothFadeThread::SetBufferVolume(OALSource*, float)
003a7321 T CAESmoothFadeThread::InitialiseRequestSlots()
003a735d T CAESmoothFadeThread::Stop()
003a7355 T CAESmoothFadeThread::Start()
003a75c1 T CAESmoothFadeThread::Service()
003a7309 T CAESmoothFadeThread::CAESmoothFadeThread()
003a7309 T CAESmoothFadeThread::CAESmoothFadeThread()
003a731f T CAESmoothFadeThread::~CAESmoothFadeThread()
003a731f T CAESmoothFadeThread::~CAESmoothFadeThread()
003a9afd T CAEStreamingChannel::FillBuffer(void*, unsigned long)
003a9929 T CAEStreamingChannel::Initialise()
003a97ff T CAEStreamingChannel::GetPlayTime()
003a9959 T CAEStreamingChannel::PrepareStream(CAEStreamingDecoder*, signed char, bool)
003a9d6d T CAEStreamingChannel::SetNextStream(CAEStreamingDecoder*)
003aa29d W CAEStreamingChannel::SynchPlayback()
003aa125 T CAEStreamingChannel::IsSoundPlaying()
003a9787 T CAEStreamingChannel::UpdatePlayTime()
003a9869 T CAEStreamingChannel::GetActiveTrackID()
003a9883 T CAEStreamingChannel::GetPlayingTrackID()
003a9957 T CAEStreamingChannel::InitialiseSilence()
003aa149 T CAEStreamingChannel::SetFrequencyScalingFactor(float)
003a9cc5 T CAEStreamingChannel::Play(short, signed char, float)
003a98b1 T CAEStreamingChannel::Stop(bool)
003aa2a1 W CAEStreamingChannel::Stop()
003aa235 T CAEStreamingChannel::Pause()
003a9d95 T CAEStreamingChannel::Service()
003aa0b1 T CAEStreamingChannel::SetReady()
003a976d T CAEStreamingChannel::GetLength()
003aa0ad T CAEStreamingChannel::SetBassEQ(signed char, float)
003a9629 T CAEStreamingChannel::CAEStreamingChannel(unsigned short)
003a9629 T CAEStreamingChannel::CAEStreamingChannel(unsigned short)
003a975d T CAEStreamingChannel::~CAEStreamingChannel()
003a96a1 T CAEStreamingChannel::~CAEStreamingChannel()
003a96a1 T CAEStreamingChannel::~CAEStreamingChannel()
0027f11f W CAEStreamingDecoder::GetHeader()
003aa309 T CAEStreamingDecoder::CAEStreamingDecoder(CAEDataStream*)
003aa359 T CAEStreamingDecoder::~CAEStreamingDecoder()
003aa331 T CAEStreamingDecoder::~CAEStreamingDecoder()
003aa331 T CAEStreamingDecoder::~CAEStreamingDecoder()
0038a11b T CAnimBlendClumpData::ForAllFrames(void (*)(AnimBlendFrameData*, void*), void*)
0038a0ef T CAnimBlendClumpData::SetNumberOfBones(int)
0038a14d T CAnimBlendClumpData::ForAllFramesInSPR(void (*)(AnimBlendFrameData*, void*), void*, unsigned int)
0038a14b T CAnimBlendClumpData::LoadFramesIntoSPR()
0038a0b1 T CAnimBlendClumpData::CAnimBlendClumpData()
0038a0b1 T CAnimBlendClumpData::CAnimBlendClumpData()
0038a0c1 T CAnimBlendClumpData::~CAnimBlendClumpData()
0038a0c1 T CAnimBlendClumpData::~CAnimBlendClumpData()
0038a863 T CAnimBlendHierarchy::MoveMemory()
0038a541 T CAnimBlendHierarchy::Uncompress()
0038a2ad T CAnimBlendHierarchy::FindSequence(char*)
0038a2f1 T CAnimBlendHierarchy::CalcTotalTime()
0038a533 T CAnimBlendHierarchy::GetSequenceBlock()
0038a6fd T CAnimBlendHierarchy::CompressKeyframes()
0038a4ed T CAnimBlendHierarchy::AllocSequenceBlock(bool)
0038a1cf T CAnimBlendHierarchy::RemoveAnimSequences()
0038a4bd T CAnimBlendHierarchy::RemoveQuaternionFlips()
0038a7b1 T CAnimBlendHierarchy::RemoveUncompressedData()
0038a3d1 T CAnimBlendHierarchy::CalcTotalTimeCompressed()
0038a8ef T CAnimBlendHierarchy::Print()
0038a2df T CAnimBlendHierarchy::SetName(char const*)
0038a241 T CAnimBlendHierarchy::Shutdown()
0038a151 T CAnimBlendHierarchy::CAnimBlendHierarchy()
0038a151 T CAnimBlendHierarchy::CAnimBlendHierarchy()
0038a163 T CAnimBlendHierarchy::~CAnimBlendHierarchy()
0038a163 T CAnimBlendHierarchy::~CAnimBlendHierarchy()
00300c51 T CConversationForPed::IsPlayerInPositionForConversation(bool)
00300621 T CConversationForPed::Clear(bool)
003007b1 T CConversationForPed::Update()
009efb30 B CDecisionMakerTypes::m_bIsActive
004bdfb5 T CDecisionMakerTypes::AddDecisionMaker(CDecisionMaker const&, unsigned char, unsigned char, int)
004be441 T CDecisionMakerTypes::AddEventResponse(int, int, int, float*, int*)
004744ad T CDecisionMakerTypes::LoadEventIndices(int*, char const*)
004bde45 T CDecisionMakerTypes::LoadEventIndices()
004be339 T CDecisionMakerTypes::CopyDecisionMaker(int, int, unsigned char)
004be069 T CDecisionMakerTypes::RemoveDecisionMaker(int)
009ef9d0 B CDecisionMakerTypes::m_pPedDecisionTypes
009efb44 B CDecisionMakerTypes::ScriptReferenceIndex
004be3e1 T CDecisionMakerTypes::FlushDecisionMakerEventResponse(int, int)
0048a695 T CDecisionMakerTypes::Load()
0048969d T CDecisionMakerTypes::Save()
009efb6c B CDecisionMakerTypes::m_types
0032e9a9 W CDecisionMakerTypes::CDecisionMakerTypes()
00377341 T CEventCarUpsideDown::CEventCarUpsideDown(CVehicle*)
00377341 T CEventCarUpsideDown::CEventCarUpsideDown(CVehicle*)
0037739d T CEventCarUpsideDown::~CEventCarUpsideDown()
00377375 T CEventCarUpsideDown::~CEventCarUpsideDown()
00377375 T CEventCarUpsideDown::~CEventCarUpsideDown()
003719f9 T CEventDraggedOutCar::CEventDraggedOutCar(CVehicle const*, CPed const*, bool)
003719f9 T CEventDraggedOutCar::CEventDraggedOutCar(CVehicle const*, CPed const*, bool)
00371a85 T CEventDraggedOutCar::~CEventDraggedOutCar()
00371a51 T CEventDraggedOutCar::~CEventDraggedOutCar()
00371a51 T CEventDraggedOutCar::~CEventDraggedOutCar()
00378d3d W CEventLeanOnVehicle::~CEventLeanOnVehicle()
00378d15 W CEventLeanOnVehicle::~CEventLeanOnVehicle()
004ca709 W CEventNewGangMember::~CEventNewGangMember()
004ca6dd W CEventNewGangMember::~CEventNewGangMember()
00376465 T CEventScriptCommand::CEventScriptCommand(int, CTask*, bool)
00376465 T CEventScriptCommand::CEventScriptCommand(int, CTask*, bool)
003764b5 T CEventScriptCommand::~CEventScriptCommand()
00376491 T CEventScriptCommand::~CEventScriptCommand()
00376491 T CEventScriptCommand::~CEventScriptCommand()
0037705d T CEventVehicleDamage::CEventVehicleDamage(CVehicle*, CEntity*, eWeaponType)
003770e9 T CEventVehicleDamage::~CEventVehicleDamage()
003770b5 T CEventVehicleDamage::~CEventVehicleDamage()
003770b5 T CEventVehicleDamage::~CEventVehicleDamage()
003769d1 T CEventVehicleOnFire::CEventVehicleOnFire(CVehicle*)
003769d1 T CEventVehicleOnFire::CEventVehicleOnFire(CVehicle*)
00376a39 T CEventVehicleOnFire::~CEventVehicleOnFire()
00376a11 T CEventVehicleOnFire::~CEventVehicleOnFire()
00376a11 T CEventVehicleOnFire::~CEventVehicleOnFire()
00375341 T CEventVehicleThreat::CEventVehicleThreat(CVehicle*)
00375341 T CEventVehicleThreat::CEventVehicleThreat(CVehicle*)
003753a9 T CEventVehicleThreat::~CEventVehicleThreat()
00375381 T CEventVehicleThreat::~CEventVehicleThreat()
00375381 T CEventVehicleThreat::~CEventVehicleThreat()
009fc3f4 B CGenericGameStorage::ms_FilePos
009fc3fc B CGenericGameStorage::ms_bFailed
00482c19 T CGenericGameStorage::GenericLoad(bool&)
004825c5 T CGenericGameStorage::GenericSave(int)
0048328d T CGenericGameStorage::ReportError(CGenericGameStorage::eBlocks, CGenericGameStorage::eSaveLoadError)
009fa870 B CGenericGameStorage::ms_CheckSum
009fc3f8 B CGenericGameStorage::ms_FileSize
009fc3fd B CGenericGameStorage::ms_bLoading
009fc3f0 B CGenericGameStorage::ms_FileHandle
009fc3e4 B CGenericGameStorage::ms_WorkBuffer
00483829 T CGenericGameStorage::LoadWorkBuffer()
00482a69 T CGenericGameStorage::SaveWorkBuffer(bool)
009fc3e0 B CGenericGameStorage::_ms_WorkBuffer
009fbef0 B CGenericGameStorage::ms_LevelToLoad
006b0120 D CGenericGameStorage::ms_BlockTagName
009fbce8 B CGenericGameStorage::ms_LoadFileName
009faaa0 B CGenericGameStorage::ms_SlotFileName
009fbef4 B CGenericGameStorage::ms_SlotSaveDate
009fa874 B CGenericGameStorage::ms_ValidSaveName
009fc3ec B CGenericGameStorage::ms_WorkBufferPos
00483b89 T CGenericGameStorage::MakeValidSaveName(int)
006b0128 D CGenericGameStorage::ms_WorkBufferSize
00483955 T CGenericGameStorage::CheckSlotDataValid(int, bool)
00483c59 T CGenericGameStorage::GetNameOfSavedGame(int)
00483125 T CGenericGameStorage::OpenFileForReading(char*, unsigned int)
00482989 T CGenericGameStorage::OpenFileForWriting()
004839cd T CGenericGameStorage::CheckDataNotCorrupt(int, char*)
004d3d97 T CGenericGameStorage::RestoreForStartLoad()
00483581 T CGenericGameStorage::GetSavedVersionNumber(unsigned int)
00483675 T CGenericGameStorage::_SaveDataToWorkBuffer(void*, int)
00483c6d T CGenericGameStorage::GetCurrentVersionNumber()
00483745 T CGenericGameStorage::_LoadDataFromWorkBuffer(void*, int)
009fbdec B CGenericGameStorage::ms_LoadFileNameWithPath
004d3d95 T CGenericGameStorage::InitNewSettingsAfterLoad()
009fa978 B CGenericGameStorage::ms_SaveFileNameJustSaved
009fa86c B CGenericGameStorage::m_currentSlotVersionNumber
004d3bc3 T CGenericGameStorage::GetSavedRadioStationPosition(int)
004d3bc1 T CGenericGameStorage::InitRadioStationPositionList()
004d3d11 T CGenericGameStorage::DoGameSpecificStuffBeforeSave()
004d3c19 T CGenericGameStorage::DoGameSpecificStuffAfterSucessLoad()
004d3bc9 T CGenericGameStorage::DoAnytimeSavingStuffAfterSucessLoad()
009faa7c B CGenericGameStorage::ms_Slots
00482a19 T CGenericGameStorage::CloseFile()
0028f189 T CHIDJoystickMogaPro::FindUVsFromMapping(char const*, HIDMapping, bool)
0028ede9 T CHIDJoystickMogaPro::CHIDJoystickMogaPro(char const*)
0028ede9 T CHIDJoystickMogaPro::CHIDJoystickMogaPro(char const*)
0028f3ad W CHIDJoystickMogaPro::~CHIDJoystickMogaPro()
0028fddd T CHIDJoystickXbox360::FindUVsFromMapping(char const*, HIDMapping, bool)
0028f9d9 T CHIDJoystickXbox360::CHIDJoystickXbox360(char const*)
0028f9d9 T CHIDJoystickXbox360::CHIDJoystickXbox360(char const*)
00290001 W CHIDJoystickXbox360::~CHIDJoystickXbox360()
0036fe2d T CInformFriendsEvent::Set(CPed*, CEvent*, int)
0036fe03 T CInformFriendsEvent::Flush()
0036fe61 T CInformFriendsEvent::Process()
0036fdc9 T CInformFriendsEvent::CInformFriendsEvent()
0036fdc9 T CInformFriendsEvent::CInformFriendsEvent()
0036fdd7 T CInformFriendsEvent::~CInformFriendsEvent()
0036fdd7 T CInformFriendsEvent::~CInformFriendsEvent()
003857ab W CLodAtomicModelInfo::GetModelType()
003857a9 W CLodAtomicModelInfo::AsLodAtomicModelInfoPtr()
003857a1 T CLodAtomicModelInfo::Init()
003857a5 W CLodAtomicModelInfo::~CLodAtomicModelInfo()
0054d649 T CMissionTextOffsets::Load(unsigned int, unsigned int, unsigned int*, int)
00314bf1 T COnscreenTimerEntry::ProcessForDisplayClock()
00314cbd T COnscreenTimerEntry::Process()
004accf3 T CPedDebugVisualiser::SetRenderStates()
004acf37 T CPedDebugVisualiser::CTextDisplayFlags::CTextDisplayFlags()
004acf37 T CPedDebugVisualiser::CTextDisplayFlags::CTextDisplayFlags()
009ee2d8 B CPedDebugVisualiser::nDisplayDebugInfo
009ee2d9 B CPedDebugVisualiser::m_textDisplayFlags
004aca31 T CPedDebugVisualiser::VisualisePedsNearPlayer()
004b2215 T CPedGroupMembership::AddFollower(CPed*)
004b21c1 T CPedGroupMembership::RemoveMember(CPed*)
004b1d7d T CPedGroupMembership::RemoveMember(int)
004b2573 T CPedGroupMembership::AppointNewLeader()
004b1ef9 T CPedGroupMembership::RemoveNFollowers(int)
0061db94 R CPedGroupMembership::ms_fMaxSeparation
004b1e41 T CPedGroupMembership::RemoveAllFollowers(bool)
004b1ff9 T CPedGroupMembership::GetObjectForPedToHold()
0061db98 R CPedGroupMembership::ms_fPlayerGroupMaxSeparation
004b1bcb T CPedGroupMembership::From(CPedGroupMembership const&)
004b1d03 T CPedGroupMembership::Flush()
004b243f T CPedGroupMembership::Process()
004b1fc9 T CPedGroupMembership::AddMember(CPed*, int)
004b2051 T CPedGroupMembership::SetLeader(CPed*)
004b1bbd T CPedGroupMembership::CPedGroupMembership(CPedGroupMembership const&)
004b1ba1 T CPedGroupMembership::CPedGroupMembership()
004b1bbd T CPedGroupMembership::CPedGroupMembership(CPedGroupMembership const&)
004b1ba1 T CPedGroupMembership::CPedGroupMembership()
004b1cf5 T CPedGroupMembership::~CPedGroupMembership()
004b1cf5 T CPedGroupMembership::~CPedGroupMembership()
0061db00 R CPedLookAtAttractor::ms_fSpacing
0061db14 R CPedLookAtAttractor::ms_fDeltaPos
0061dafc R CPedLookAtAttractor::ms_iMaxSlots
0061db0c R CPedLookAtAttractor::ms_fArriveRange
0061db18 R CPedLookAtAttractor::ms_fDeltaHeading
0061db10 R CPedLookAtAttractor::ms_fHeadingRange
0061db04 R CPedLookAtAttractor::ms_fAchieveQueueTime
0061db08 R CPedLookAtAttractor::ms_fAchieveQueueShuffleTime
004ac741 W CPedLookAtAttractor::~CPedLookAtAttractor()
0059c71f T CScriptedEffectPair::Flush()
0059c705 T CScriptedEffectPair::CScriptedEffectPair()
0059c705 T CScriptedEffectPair::CScriptedEffectPair()
0059c739 T CScriptedEffectPair::~CScriptedEffectPair()
0059c739 T CScriptedEffectPair::~CScriptedEffectPair()
004eacb9 T CTaskComplexBeStill::ControlSubTask(CPed*)
004eac37 T CTaskComplexBeStill::CreateNextSubTask(CPed*)
004eac65 T CTaskComplexBeStill::CreateFirstSubTask(CPed*)
004f1edd W CTaskComplexBeStill::Serialize()
004f1ea5 W CTaskComplexBeStill::~CTaskComplexBeStill()
004f1579 T CTaskComplexInWater::ControlSubTask(CPed*)
004f13dd T CTaskComplexInWater::CreateNextSubTask(CPed*)
004f1475 T CTaskComplexInWater::CreateFirstSubTask(CPed*)
004f41b1 W CTaskComplexInWater::Serialize()
004f13b1 T CTaskComplexInWater::CTaskComplexInWater()
004f13b1 T CTaskComplexInWater::CTaskComplexInWater()
004f13cd T CTaskComplexInWater::~CTaskComplexInWater()
004f13c9 T CTaskComplexInWater::~CTaskComplexInWater()
004f13c9 T CTaskComplexInWater::~CTaskComplexInWater()
0053485f T CTaskComplexPartner::SetTargetPos(CVector*)
00534a5d T CTaskComplexPartner::ControlSubTask(CPed*)
00534833 T CTaskComplexPartner::GetPartnerState()
005343d5 T CTaskComplexPartner::CreateNextSubTask(CPed*)
005349fd T CTaskComplexPartner::CreateFirstSubTask(CPed*)
0053486d T CTaskComplexPartner::CalcTargetPositions(CPed*, CVector*, CVector*)
0053480d T CTaskComplexPartner::IsPartnerStillValid(CPed*)
00534b6d T CTaskComplexPartner::RemoveStreamedAnims()
00534b21 T CTaskComplexPartner::StreamRequiredAnims()
00534851 T CTaskComplexPartner::SetFirstToTargetFlag(unsigned char)
00534321 T CTaskComplexPartner::CTaskComplexPartner(char*, CPed*, unsigned char, float, unsigned char, int, CVector)
005343d1 T CTaskComplexPartner::~CTaskComplexPartner()
0053439d T CTaskComplexPartner::~CTaskComplexPartner()
0053439d T CTaskComplexPartner::~CTaskComplexPartner()
005008fd T CTaskSimpleCarAlign::FixHeading(CPed*)
00500829 T CTaskSimpleCarAlign::ProcessPed(CPed*)
0050080d T CTaskSimpleCarAlign::MakeAbortable(CPed*, int, CEvent const*)
00500b09 T CTaskSimpleCarAlign::SetPedPosition(CPed*)
00500b2f T CTaskSimpleCarAlign::FinishAnimCarAlignCB(CAnimBlendAssociation*, void*)
0061e404 R CTaskSimpleCarAlign::ms_fMinHeightForJump
00500a55 T CTaskSimpleCarAlign::StartAnim(CPed const*)
00500735 T CTaskSimpleCarAlign::CTaskSimpleCarAlign(CVehicle*, CVector const&, int, CTaskUtilityLineUpPedWithCar*)
00500735 T CTaskSimpleCarAlign::CTaskSimpleCarAlign(CVehicle*, CVector const&, int, CTaskUtilityLineUpPedWithCar*)
005007c9 T CTaskSimpleCarAlign::~CTaskSimpleCarAlign()
00500789 T CTaskSimpleCarAlign::~CTaskSimpleCarAlign()
00500789 T CTaskSimpleCarAlign::~CTaskSimpleCarAlign()
004fa285 T CTaskSimpleCarDrive::ProcessPed(CPed*)
004fad0b T CTaskSimpleCarDrive::StopBopping()
004faf39 T CTaskSimpleCarDrive::StartBopping(CPed*)
004fa1e5 T CTaskSimpleCarDrive::MakeAbortable(CPed*, int, CEvent const*)
004fb099 T CTaskSimpleCarDrive::UpdateBopping()
004faf15 T CTaskSimpleCarDrive::GetPedsBopInfo(CPed*, int*, int*)
004fabcd T CTaskSimpleCarDrive::ProcessBopping(CPed*, unsigned char)
004fad15 T CTaskSimpleCarDrive::SetPedPosition(CPed*)
004fb35d T CTaskSimpleCarDrive::ProcessArmBopping(CPed*, unsigned char, float)
004fb0dd T CTaskSimpleCarDrive::ProcessHeadBopping(CPed*, unsigned char, float)
004fab7d T CTaskSimpleCarDrive::StartAnimDoorCloseRolling(CPed const*)
004faea9 T CTaskSimpleCarDrive::FinishAnimCloseDoorRollingCB(CAnimBlendAssociation*, void*)
004fa1b5 T CTaskSimpleCarDrive::AbortIK(CPed*)
004facfd T CTaskSimpleCarDrive::IsBopping()
004fec35 W CTaskSimpleCarDrive::Serialize()
004fa02d T CTaskSimpleCarDrive::TriggerIK(CPed*)
004f9f71 T CTaskSimpleCarDrive::CTaskSimpleCarDrive(CVehicle*, CTaskUtilityLineUpPedWithCar*, bool)
004f9f71 T CTaskSimpleCarDrive::CTaskSimpleCarDrive(CVehicle*, CTaskUtilityLineUpPedWithCar*, bool)
004fa01d T CTaskSimpleCarDrive::~CTaskSimpleCarDrive()
004fd0dd T CTaskSimpleCarDrive::~CTaskSimpleCarDrive()
004fd0dd T CTaskSimpleCarDrive::~CTaskSimpleCarDrive()
00501d91 T CTaskSimpleCarGetIn::ProcessPed(CPed*)
00501d75 T CTaskSimpleCarGetIn::MakeAbortable(CPed*, int, CEvent const*)
00501f51 T CTaskSimpleCarGetIn::SetPedPosition(CPed*)
00501f7d T CTaskSimpleCarGetIn::GetPositionInAnim()
00501f63 T CTaskSimpleCarGetIn::FinishAnimCarGetInCB(CAnimBlendAssociation*, void*)
00501e9d T CTaskSimpleCarGetIn::StartAnim(CPed const*)
00501ca9 T CTaskSimpleCarGetIn::CTaskSimpleCarGetIn(CVehicle*, int, CTaskUtilityLineUpPedWithCar*)
00501ca9 T CTaskSimpleCarGetIn::CTaskSimpleCarGetIn(CVehicle*, int, CTaskUtilityLineUpPedWithCar*)
00501d31 T CTaskSimpleCarGetIn::~CTaskSimpleCarGetIn()
00501cf1 T CTaskSimpleCarGetIn::~CTaskSimpleCarGetIn()
00501cf1 T CTaskSimpleCarGetIn::~CTaskSimpleCarGetIn()
00498159 W CTaskSimpleDetonate::Serialize()
004980f9 W CTaskSimpleDetonate::~CTaskSimpleDetonate()
004910bd W CTaskSimpleDieInCar::CreateTask()
004eb089 T CTaskSimpleDieInCar::ProcessPed(CPed*)
004f2701 W CTaskSimpleDieInCar::Serialize()
004eb011 T CTaskSimpleDieInCar::CTaskSimpleDieInCar(AssocGroupId, AnimationId)
004eb011 T CTaskSimpleDieInCar::CTaskSimpleDieInCar(AssocGroupId, AnimationId)
004eb051 T CTaskSimpleDieInCar::~CTaskSimpleDieInCar()
004eadbd T CTaskSimpleDieInCar::~CTaskSimpleDieInCar()
004eadbd T CTaskSimpleDieInCar::~CTaskSimpleDieInCar()
00497041 W CTaskSimpleHailTaxi::Serialize()
00496ff5 W CTaskSimpleHailTaxi::~CTaskSimpleHailTaxi()
004f03ad T CTaskSimpleIKLookAt::CreateIKChain(CPed*)
004f0519 T CTaskSimpleIKLookAt::GetLookAtEntity()
004f051d T CTaskSimpleIKLookAt::GetLookAtOffset()
004f043d T CTaskSimpleIKLookAt::UpdateLookAtInfo(char*, CPed*, CEntity*, int, int, RwV3d, unsigned char, float, int, int)
004f0219 T CTaskSimpleIKLookAt::CTaskSimpleIKLookAt(char*, CEntity*, int, int, RwV3d, unsigned char, float, int, int)
004f0219 T CTaskSimpleIKLookAt::CTaskSimpleIKLookAt(char*, CEntity*, int, int, RwV3d, unsigned char, float, int, int)
004f02ad T CTaskSimpleIKLookAt::~CTaskSimpleIKLookAt()
004efec9 T CTaskSimpleIKLookAt::~CTaskSimpleIKLookAt()
004efec9 T CTaskSimpleIKLookAt::~CTaskSimpleIKLookAt()
00328431 T CUpsideDownCarCheck::UpdateTimers()
00328597 T CUpsideDownCarCheck::AddCarToCheck(int)
003283bd T CUpsideDownCarCheck::IsCarUpsideDown(CVehicle const*)
00328329 T CUpsideDownCarCheck::IsCarUpsideDown(int)
003285fd T CUpsideDownCarCheck::RemoveCarFromCheck(int)
00328539 T CUpsideDownCarCheck::AreAnyCarsUpsideDown()
0032865f T CUpsideDownCarCheck::HasCarBeenUpsideDownForAWhile(int)
00328285 T CUpsideDownCarCheck::Init()
002b5051 T CWidgetButtonAttack::GetTextureName()
002b4ea1 T CWidgetButtonAttack::Update()
002b51e5 W CWidgetButtonAttack::GetName()
002b4e75 T CWidgetButtonAttack::CWidgetButtonAttack(char const*, WidgetPosition const&)
002b4e75 T CWidgetButtonAttack::CWidgetButtonAttack(char const*, WidgetPosition const&)
002b51b9 W CWidgetButtonAttack::~CWidgetButtonAttack()
002b5a99 T CWidgetButtonRocket::Update()
002b5ac9 W CWidgetButtonRocket::GetName()
002b5a71 T CWidgetButtonRocket::CWidgetButtonRocket(char const*, WidgetPosition const&)
002b5a71 T CWidgetButtonRocket::CWidgetButtonRocket(char const*, WidgetPosition const&)
002b5a9d W CWidgetButtonRocket::~CWidgetButtonRocket()
002b5b31 T CWidgetButtonSchool::Draw()
002b5cd1 W CWidgetButtonSchool::GetName()
002b5ad1 T CWidgetButtonSchool::CWidgetButtonSchool(char const*, WidgetPosition const&, char const*, int, HIDMapping)
002b5ad1 T CWidgetButtonSchool::CWidgetButtonSchool(char const*, WidgetPosition const&, char const*, int, HIDMapping)
002b5ca5 W CWidgetButtonSchool::~CWidgetButtonSchool()
002b6aed T CWidgetButtonSprint::DrawHelpIcon(char const*, float, float, float, int)
002b6ac9 T CWidgetButtonSprint::IsDoubleTapped()
002b6a61 T CWidgetButtonSprint::Update()
002b6b71 W CWidgetButtonSprint::GetName()
002b6a15 T CWidgetButtonSprint::CWidgetButtonSprint(char const*, WidgetPosition const&)
002b6a15 T CWidgetButtonSprint::CWidgetButtonSprint(char const*, WidgetPosition const&)
002b6b45 W CWidgetButtonSprint::~CWidgetButtonSprint()
002b9041 T CWidgetHorseResults::SetWidgetInfo2(int, int, int, int, char*, char*)
002b889d T CWidgetHorseResults::Draw()
002b8889 T CWidgetHorseResults::Update()
002b90dd W CWidgetHorseResults::GetName()
002b87e1 T CWidgetHorseResults::CWidgetHorseResults(char const*, WidgetPosition const&)
002b87e1 T CWidgetHorseResults::CWidgetHorseResults(char const*, WidgetPosition const&)
002b90cd W CWidgetHorseResults::~CWidgetHorseResults()
002c2c53 T CWidgetRegionSprint::IsDoubleTapped()
002c2c1d T CWidgetRegionSprint::OnInitialTouch()
002c2c79 T CWidgetRegionSprint::Draw()
002c2a69 T CWidgetRegionSprint::Update()
002c2ea9 W CWidgetRegionSprint::GetName()
002c2c2f T CWidgetRegionSprint::IsTouched(CVector2D*)
002c29d9 T CWidgetRegionSprint::CWidgetRegionSprint(char const*, WidgetPosition const&)
002c29d9 T CWidgetRegionSprint::CWidgetRegionSprint(char const*, WidgetPosition const&)
002c2e75 W CWidgetRegionSprint::~CWidgetRegionSprint()
002c2e45 W CWidgetRegionSprint::~CWidgetRegionSprint()
002c6869 T CWidgetRouletteSpin::SetWidgetValue2(float, float)
002c674d T CWidgetRouletteSpin::Draw()
002c6739 T CWidgetRouletteSpin::Update()
002c6949 W CWidgetRouletteSpin::GetName()
002c66b1 T CWidgetRouletteSpin::CWidgetRouletteSpin()
002c66b1 T CWidgetRouletteSpin::CWidgetRouletteSpin()
002c691d W CWidgetRouletteSpin::~CWidgetRouletteSpin()
002c68f5 W CWidgetRouletteSpin::~CWidgetRouletteSpin()
001d129d W ES2TextureContainer::DeleteResource(unsigned int)
00444685 T FurnitureSubGroup_c::GetRandomId(unsigned char)
00475d35 T FurnitureSubGroup_c::AddFurniture(unsigned short, short, unsigned char, unsigned char, unsigned char)
004445a9 T FurnitureSubGroup_c::GetFurniture(short, unsigned char)
0036b849 T FxInfoAnimTexture_c::Load(unsigned int, int)
0036b84f T FxInfoAnimTexture_c::GetValue(float, float, float, float, unsigned char, void*)
0036b809 T FxInfoAnimTexture_c::FxInfoAnimTexture_c()
0036b809 T FxInfoAnimTexture_c::FxInfoAnimTexture_c()
0036c33d W FxInfoAnimTexture_c::~FxInfoAnimTexture_c()
0036c319 W FxInfoAnimTexture_c::~FxInfoAnimTexture_c()
0036ac99 T FxInfoAttractLine_c::Load(unsigned int, int)
0036aca1 T FxInfoAttractLine_c::GetValue(float, float, float, float, unsigned char, void*)
0036ac59 T FxInfoAttractLine_c::FxInfoAttractLine_c()
0036ac59 T FxInfoAttractLine_c::FxInfoAttractLine_c()
0036bf15 W FxInfoAttractLine_c::~FxInfoAttractLine_c()
0036bef1 W FxInfoAttractLine_c::~FxInfoAttractLine_c()
0036b8d9 T FxInfoColourRange_c::Load(unsigned int, int)
0036b8df T FxInfoColourRange_c::GetValue(float, float, float, float, unsigned char, void*)
0036b899 T FxInfoColourRange_c::FxInfoColourRange_c()
0036b899 T FxInfoColourRange_c::FxInfoColourRange_c()
0036c389 W FxInfoColourRange_c::~FxInfoColourRange_c()
0036c365 W FxInfoColourRange_c::~FxInfoColourRange_c()
0046ed7d T FxInterpInfoFloat_c::Load(unsigned int)
0036c4cd T FxInterpInfoFloat_c::GetVal(float*, float)
0036c609 T FxInterpInfoFloat_c::GetVal(int, float, float)
0036c4b1 T FxInterpInfoFloat_c::FxInterpInfoFloat_c()
0036c4b1 T FxInterpInfoFloat_c::FxInterpInfoFloat_c()
0036c4c9 T FxInterpInfoFloat_c::~FxInterpInfoFloat_c()
0036c4ad T FxInterpInfoFloat_c::~FxInterpInfoFloat_c()
0036c4ad T FxInterpInfoFloat_c::~FxInterpInfoFloat_c()
001bd525 W PreallocatedBuffers::ForceDeallocate(RQIndexBuffer*, RQVertexBuffer*)
0046cf81 T CAERadioTrackManager::Initialise(int)
003a2cb5 T CAERadioTrackManager::StartRadio(tVehicleAudioSettings*)
003a2289 T CAERadioTrackManager::StartRadio(signed char, signed char, float, unsigned char)
003a31d9 T CAERadioTrackManager::RetuneRadio(signed char)
003a17fd T CAERadioTrackManager::CheckForPause()
003a325d T CAERadioTrackManager::SetBassSetting(signed char, float)
003a2135 T CAERadioTrackManager::ResetStatistics()
003a3751 T CAERadioTrackManager::ChooseIdentIndex(signed char)
003a38cd T CAERadioTrackManager::ChooseAdvertIndex(signed char)
003a244d T CAERadioTrackManager::TrackRadioStation(signed char, unsigned char)
003a13b5 T CAERadioTrackManager::StartTrackPlayback()
003a18ad T CAERadioTrackManager::UpdateRadioVolumes()
00944f36 B CAERadioTrackManager::m_nStatsPassedCat1
003a3b09 T CAERadioTrackManager::ChooseDJBanterIndex(signed char)
003a3e59 T CAERadioTrackManager::ChooseTalkRadioShow()
003a32a1 T CAERadioTrackManager::GetRadioStationName(signed char)
003a3219 T CAERadioTrackManager::SetBassEnhanceOnOff(unsigned char)
00944f40 B CAERadioTrackManager::m_nStatsPassedRiot1
00944f47 B CAERadioTrackManager::m_nStatsStartedCat2
003a1391 T CAERadioTrackManager::IsVehicleRadioActive()
00945064 B CAERadioTrackManager::m_nIdentIndexHistory
00944f32 B CAERadioTrackManager::m_nStatsCitiesPassed
00944f3d B CAERadioTrackManager::m_nStatsPassedLAFin2
00944f3f B CAERadioTrackManager::m_nStatsPassedRyder2
00944f42 B CAERadioTrackManager::m_nStatsPassedStrap4
00944f43 B CAERadioTrackManager::m_nStatsPassedSweet2
00944f44 B CAERadioTrackManager::m_nStatsPassedTruth2
003a117d T CAERadioTrackManager::CheckForStationRetune()
003a35e9 T CAERadioTrackManager::ChooseMusicTrackIndex(signed char)
003a35e7 T CAERadioTrackManager::PlayRadioAnnouncement(unsigned int)
00945224 B CAERadioTrackManager::m_nAdvertIndexHistory
00944f33 B CAERadioTrackManager::m_nStatsPassedCasino3
00944f34 B CAERadioTrackManager::m_nStatsPassedCasino6
00944f37 B CAERadioTrackManager::m_nStatsPassedDesert1
00944f38 B CAERadioTrackManager::m_nStatsPassedDesert3
00944f39 B CAERadioTrackManager::m_nStatsPassedDesert5
00944f3a B CAERadioTrackManager::m_nStatsPassedDesert8
00944f3c B CAERadioTrackManager::m_nStatsPassedFarlie3
00944f41 B CAERadioTrackManager::m_nStatsPassedSCrash1
00944f45 B CAERadioTrackManager::m_nStatsPassedVCrash2
00944f48 B CAERadioTrackManager::m_nStatsStartedCrash1
003a16e5 T CAERadioTrackManager::AddIdentIndexToHistory(signed char, int)
003a29e9 T CAERadioTrackManager::ChooseTracksForStation(signed char)
003a3305 T CAERadioTrackManager::GetRadioStationNameKey(signed char, char*)
00944f35 B CAERadioTrackManager::m_nStatsPassedCasino10
00944f3b B CAERadioTrackManager::m_nStatsPassedDesert10
00944f3e B CAERadioTrackManager::m_nStatsPassedMansion2
003a1731 T CAERadioTrackManager::AddAdvertIndexToHistory(signed char, int)
003a334d T CAERadioTrackManager::DisplayRadioStationName()
003a13e1 T CAERadioTrackManager::QueueUpTracksForStation(signed char, signed char*, signed char, tRadioSettings*)
003a3215 T CAERadioTrackManager::SetRadioAutoRetuneOnOff(unsigned char)
00945ae4 B CAERadioTrackManager::m_nDJBanterIndexHistory
00944f31 B CAERadioTrackManager::m_nSpecialDJBanterIndex
00944f46 B CAERadioTrackManager::m_nStatsStartedBadlands
003a35d9 T CAERadioTrackManager::GetCurrentRadioStationID()
003a3291 T CAERadioTrackManager::InitialiseRadioStationID(signed char)
003a1789 T CAERadioTrackManager::AddDJBanterIndexToHistory(signed char, int)
003a329b T CAERadioTrackManager::HasRadioRetuneJustStarted()
00944f4c B CAERadioTrackManager::m_nMusicTrackIndexHistory
00944f30 B CAERadioTrackManager::m_nSpecialDJBanterPending
003a1b41 T CAERadioTrackManager::CheckForTrackConcatenation()
003a3349 T CAERadioTrackManager::GetRadioStationListenTimes()
003a1685 T CAERadioTrackManager::AddMusicTrackIndexToHistory(signed char, signed char)
0039ff85 T CAERadioTrackManager::CheckForMissionStatsChanges()
003a4485 T CAERadioTrackManager::ChooseDJBanterIndexFromList(signed char, int (*) [2])
00944f4b B CAERadioTrackManager::m_nStatsLastHitTimeOutHours
00944f49 B CAERadioTrackManager::m_nStatsLastHitGameClockDays
00944f4a B CAERadioTrackManager::m_nStatsLastHitGameClockHours
0039fdd5 T CAERadioTrackManager::CheckForStationRetuneDuringPause()
0048f1f5 T CAERadioTrackManager::Load()
0048ede9 T CAERadioTrackManager::Save()
003a1da1 T CAERadioTrackManager::Reset()
0039f7c1 T CAERadioTrackManager::Service(int)
003a242d T CAERadioTrackManager::IsRadioOn()
003a2dc1 T CAERadioTrackManager::StopRadio(tVehicleAudioSettings*, unsigned char)
0046d8f9 T CAEScriptAudioEntity::Initialise()
003a4869 T CAEScriptAudioEntity::AddAudioEvent(int)
003a486d T CAEScriptAudioEntity::UpdateParameters(CAESound*, short)
003a4655 T CAEScriptAudioEntity::ClearMissionAudio(unsigned char)
003a4d55 T CAEScriptAudioEntity::PreloadMissionAudio(unsigned char, int)
003a5041 T CAEScriptAudioEntity::GetMissionAudioEvent(unsigned char)
003a4b39 T CAEScriptAudioEntity::PlayMissionBankSound(unsigned short, CVector&, CPhysical*, short, unsigned char, unsigned char, float, float, float)
003a4e89 T CAEScriptAudioEntity::PlayLoadedMissionAudio(unsigned char)
003a46f9 T CAEScriptAudioEntity::PlayResidentSoundEvent(short, short, short, unsigned short, CVector&, CPhysical*, float, float, short, float)
003a504d T CAEScriptAudioEntity::GetMissionAudioPosition(unsigned char)
003a72dd T CAEScriptAudioEntity::ReportMissionAudioEvent(unsigned short, CPhysical*, float, float)
003a50f7 T CAEScriptAudioEntity::ReportMissionAudioEvent(unsigned short, CVector&)
003a50c9 T CAEScriptAudioEntity::SetMissionAudioPosition(unsigned char, CVector&)
003a5111 T CAEScriptAudioEntity::ProcessMissionAudioEvent(unsigned short, CVector&, CPhysical*, float, float)
003a50e3 T CAEScriptAudioEntity::AttachMissionAudioToPhysical(unsigned char, CPhysical*)
003a4e3d T CAEScriptAudioEntity::GetMissionAudioLoadingStatus(unsigned char)
003a4dfd T CAEScriptAudioEntity::IsMissionAudioSampleFinished(unsigned char)
003a45c9 T CAEScriptAudioEntity::Reset()
003a4691 T CAEScriptAudioEntity::Service()
003aa781 T CAEStreamTransformer::Initialise()
003aa7a1 T CAEStreamTransformer::TransformBuffer(void*, unsigned long, unsigned long)
003b9eb1 T CAEWeaponAudioEntity::Initialise()
003b9f35 T CAEWeaponAudioEntity::WeaponFire(eWeaponType, CPhysical*, int)
003baeed T CAEWeaponAudioEntity::WeaponReload(eWeaponType, CPhysical*, int)
003ba20d T CAEWeaponAudioEntity::PlayGunSounds(CPhysical*, short, short, short, short, short, int, float, float, float)
003bab3d T CAEWeaponAudioEntity::PlayCameraSound(CPhysical*, int, float)
003bad95 T CAEWeaponAudioEntity::PlayGoggleSound(short, int)
003b99bd T CAEWeaponAudioEntity::UpdateParameters(CAESound*, short)
003bb315 T CAEWeaponAudioEntity::ReportStealthKill(eWeaponType, CPhysical*, int)
003baa4d T CAEWeaponAudioEntity::PlayWeaponLoopSound(CPhysical*, short, int, float, float, int)
003bb109 T CAEWeaponAudioEntity::ReportChainsawEvent(CPhysical*, int)
003b9cc1 T CAEWeaponAudioEntity::PlayMiniGunStopSound(CPhysical*)
003b9de9 T CAEWeaponAudioEntity::PlayChainsawStopSound(CPhysical*)
003bac29 T CAEWeaponAudioEntity::PlayMiniGunFireSounds(CPhysical*, int)
003ba88d T CAEWeaponAudioEntity::PlayFlameThrowerSounds(CPhysical*, short, short, int, float, float)
003bb04d T CAEWeaponAudioEntity::PlayFlameThrowerIdleGasLoop(CPhysical*)
003bb0ed T CAEWeaponAudioEntity::StopFlameThrowerIdleGasLoop()
003b9efd T CAEWeaponAudioEntity::Reset()
003b9ee9 T CAEWeaponAudioEntity::Terminate()
00389837 T CAnimBlendAssocGroup::GetAnimation(char const*)
00389869 T CAnimBlendAssocGroup::GetAnimation(unsigned int)
00389879 T CAnimBlendAssocGroup::CopyAnimation(char const*)
003898c5 T CAnimBlendAssocGroup::CopyAnimation(unsigned int)
003898f1 T CAnimBlendAssocGroup::GetAnimationId(char const*)
003892e9 T CAnimBlendAssocGroup::CreateAssociations(char const*)
003895e5 T CAnimBlendAssocGroup::CreateAssociations(char const*, RpClump*)
003896f1 T CAnimBlendAssocGroup::CreateAssociations(char const*, RpClump*, char const**, int)
00389435 T CAnimBlendAssocGroup::CreateAssociations(char const*, char const*, char const*, int)
003891ff T CAnimBlendAssocGroup::DestroyAssociations()
00389801 T CAnimBlendAssocGroup::InitEmptyAssociations(RpClump*)
003891ad T CAnimBlendAssocGroup::CAnimBlendAssocGroup()
003891ad T CAnimBlendAssocGroup::CAnimBlendAssocGroup()
003891bf T CAnimBlendAssocGroup::~CAnimBlendAssocGroup()
003891bf T CAnimBlendAssocGroup::~CAnimBlendAssocGroup()
0038dc9d W CDefaultAnimCallback::DefaultAnimCB(CAnimBlendAssociation*, void*)
0037b27f T CEventHandlerHistory::ClearAllEvents()
0037b4cd T CEventHandlerHistory::ClearTempEvent()
0037b329 T CEventHandlerHistory::TickStoredEvent(CPed*)
0037b2f9 T CEventHandlerHistory::StoreActiveEvent()
0037b4e5 T CEventHandlerHistory::ClearNonTempEvent()
0037b341 T CEventHandlerHistory::RecordCurrentEvent(CPed*, CEvent const&)
0037b529 T CEventHandlerHistory::TakesPriorityOverCurrentEvent(CEvent const&)
0037b247 T CEventHandlerHistory::Flush()
0037b211 T CEventHandlerHistory::~CEventHandlerHistory()
0037b211 T CEventHandlerHistory::~CEventHandlerHistory()
00374f6d T CEventVehicleToSteal::CEventVehicleToSteal(CVehicle*)
00374f6d T CEventVehicleToSteal::CEventVehicleToSteal(CVehicle*)
00374fc9 T CEventVehicleToSteal::~CEventVehicleToSteal()
00374fa1 T CEventVehicleToSteal::~CEventVehicleToSteal()
00374fa1 T CEventVehicleToSteal::~CEventVehicleToSteal()
00544751 T CFollowLeaderOffSets::CFollowLeaderOffSets()
00544751 T CFollowLeaderOffSets::CFollowLeaderOffSets()
00484683 T CObjectSaveStructure::Extract(CObject*)
004845c9 T CObjectSaveStructure::Construct(CObject*)
004aa061 T CPedAttractorManager::RegisterPed(CPed*, C2dEffect*, CEntity*, int, SArray<CPedAttractor*>&)
004aaca9 T CPedAttractorManager::DeRegisterPed(CPed*, CPedAttractor*)
004aad31 T CPedAttractorManager::DeRegisterPed(CPed*, CPedAttractor*, SArray<CPedAttractor*>&)
004ac0b7 T CPedAttractorManager::IsApproachable(C2dEffect*, CMatrix const&, int, CPed*)
004aa779 T CPedAttractorManager::BroadcastArrival(CPed*, CPedAttractor*)
004aac6d T CPedAttractorManager::BroadcastArrival(CPed*, CPedAttractor*, SArray<CPedAttractor*>&)
004a86f1 T CPedAttractorManager::ComputeEffectPos(C2dEffect const*, CMatrix const&, CVector&)
004abac9 T CPedAttractorManager::GetPedUsingEffect(C2dEffect const*, CEntity const*)
004abb41 T CPedAttractorManager::GetPedUsingEffect(C2dEffect const*, CEntity const*, SArray<CPedAttractor*> const&)
004ab41d T CPedAttractorManager::BroadcastDeparture(CPed*, CPedAttractor*)
004ab957 T CPedAttractorManager::BroadcastDeparture(CPed*, CPedAttractor*, SArray<CPedAttractor*>&)
0061db7c R CPedAttractorManager::ms_fSearchDistance
004a8727 T CPedAttractorManager::ComputeEffectUseDir(C2dEffect const*, CMatrix const&, CVector&)
004a968d T CPedAttractorManager::RestoreStuffFromMem()
004a86fb T CPedAttractorManager::ComputeEffectQueueDir(C2dEffect const*, CMatrix const&, CVector&)
0061da38 R CPedAttractorManager::ms_fInfluenceCosTheta
0061db80 R CPedAttractorManager::ms_fInfluenceDistance
004ac08b T CPedAttractorManager::ComputeEffectForwardDir(C2dEffect const*, CMatrix const&, CVector&)
004a9b59 T CPedAttractorManager::RegisterPedWithAttractor(CPed*, C2dEffect*, CEntity*, int)
004ab365 T CPedAttractorManager::HasQueueTailArrivedAtSlot(C2dEffect const*, CEntity const*)
004b1401 T CPedGeometryAnalyser::GetNearestPed(CVector const&)
004b11d9 T CPedGeometryAnalyser::CanPedTargetPed(CPed&, CPed&, bool)
0061db8c R CPedGeometryAnalyser::ms_fInAirOffset
0061db88 R CPedGeometryAnalyser::ms_fTargetRange
004b1101 T CPedGeometryAnalyser::CanPedTargetPoint(CPed const&, CVector const&, bool)
004ae025 T CPedGeometryAnalyser::ComputeEntityDirs(CEntity const&, CVector*)
004adf19 T CPedGeometryAnalyser::ComputePedHitSide(CPed const&, CVector const&)
004adf15 T CPedGeometryAnalyser::ComputePedHitSide(CPed const&, CPhysical const&)
004b0af5 T CPedGeometryAnalyser::IsWanderPathClear(CVector const&, CVector const&, float, int)
004b1091 T CPedGeometryAnalyser::CanPedJumpObstacle(CPed const&, CEntity const&)
004b0e5d T CPedGeometryAnalyser::CanPedJumpObstacle(CPed const&, CEntity const&, CVector const&, CVector const&)
004b14a5 T CPedGeometryAnalyser::ComputeClearTarget(CPed const&, CVector const&, CVector&)
004ade8d T CPedGeometryAnalyser::ComputePedShotSide(CPed const&, CVector const&)
004ae0c5 T CPedGeometryAnalyser::ComputeEntityHitSide(CPed const&, CEntity&)
004ae299 T CPedGeometryAnalyser::ComputeEntityHitSide(CVector const&, CVector const*, float const*)
004ae0d5 T CPedGeometryAnalyser::ComputeEntityHitSide(CVector const&, CEntity&)
006af874 D CPedGeometryAnalyser::ms_fPedNominalRadius
004b084d T CPedGeometryAnalyser::GetIsLineOfSightClear(CPed const&, CVector const&, CEntity&, float&)
004b0aa5 T CPedGeometryAnalyser::GetIsLineOfSightClear(CVector const&, CVector const&, CEntity&)
004b186d T CPedGeometryAnalyser::LiesInsideBoundingBox(CPed const&, CVector const&, CEntity&)
004b1a05 T CPedGeometryAnalyser::IsEntityBlockingTarget(CEntity*, CVector const&, float)
004b02c1 T CPedGeometryAnalyser::ComputeRouteRoundSphere(CPed const&, CColSphere const&, CVector const&, CVector const&, CVector&, CVector&)
004b19d1 T CPedGeometryAnalyser::ComputeBuildingHitPoints(CVector const&, CVector const&)
0061db86 R CPedGeometryAnalyser::ms_bDisplayProfilingInfo
0061db85 R CPedGeometryAnalyser::ms_bUseLineOfSightCaching
004b053b T CPedGeometryAnalyser::ComputeClosestSurfacePoint(CPed const&, CEntity&, CVector&)
004b0599 T CPedGeometryAnalyser::ComputeClosestSurfacePoint(CVector const&, CVector const*, CVector&)
004b056f T CPedGeometryAnalyser::ComputeClosestSurfacePoint(CVector const&, CEntity&, CVector&)
0061db84 R CPedGeometryAnalyser::ms_bUseEntityBoundsCaching
004aeff5 T CPedGeometryAnalyser::ComputeEntityBoundingSphere(CPed const&, CEntity&, CColSphere&)
004b0d7f T CPedGeometryAnalyser::ComputeMoveDirToAvoidEntity(CPed const&, CEntity&, CVector&)
0061db90 R CPedGeometryAnalyser::ms_fClearTargetSearchDistance
004ae3c1 T CPedGeometryAnalyser::ComputeEntityBoundingBoxCentre(float, CEntity&, CVector&)
004aeb39 T CPedGeometryAnalyser::ComputeEntityBoundingBoxPlanes(float, CEntity&, CVector*, float*)
004ae4a9 T CPedGeometryAnalyser::ComputeEntityBoundingBoxCorners(float, CEntity&, CVector*)
004af141 T CPedGeometryAnalyser::ComputeRouteRoundEntityBoundingBox(CPed const&, CEntity&, CVector const&, CPointRoute&, int)
004af169 T CPedGeometryAnalyser::ComputeRouteRoundEntityBoundingBox(CPed const&, CVector const&, CEntity&, CVector const&, CPointRoute&, int)
004ae295 T CPedGeometryAnalyser::ComputeEntityBoundingBoxSegmentPlanes(float, CEntity&, CVector*, float*)
004ae4ad T CPedGeometryAnalyser::ComputeEntityBoundingBoxCentreUncached(float, CVector const*, CVector&)
004aeb89 T CPedGeometryAnalyser::ComputeEntityBoundingBoxPlanesUncached(float, CVector const*, CVector*, float*)
004ae531 T CPedGeometryAnalyser::ComputeEntityBoundingBoxCornersUncached(float, CEntity&, CVector*)
004ae435 T CPedGeometryAnalyser::ComputeEntityBoundingBoxCentreUncachedAll(float, CEntity&, CVector&)
004aeb61 T CPedGeometryAnalyser::ComputeEntityBoundingBoxPlanesUncachedAll(float, CEntity&, CVector*, float*)
004aeea5 T CPedGeometryAnalyser::ComputeEntityBoundingBoxSegmentPlanesUncached(CVector const*, CVector&, CVector*, float*)
004aed61 T CPedGeometryAnalyser::ComputeEntityBoundingBoxSegmentPlanesUncachedAll(float, CEntity&, CVector*, float*)
004b12f5 T CPedGeometryAnalyser::IsInAir(CPed const&)
0061dac0 R CPedShelterAttractor::ms_fSpacing
0061dad4 R CPedShelterAttractor::ms_fDeltaPos
0061da34 R CPedShelterAttractor::ms_iMaxSlots
004a92d5 T CPedShelterAttractor::GetDisplacement(int)
0061dacc R CPedShelterAttractor::ms_fArriveRange
009ee2c8 B CPedShelterAttractor::ms_displacements
0061dad8 R CPedShelterAttractor::ms_fDeltaHeading
0061dad0 R CPedShelterAttractor::ms_fHeadingRange
004a9511 T CPedShelterAttractor::BroadcastDeparture(CPed*)
0061dac4 R CPedShelterAttractor::ms_fAchieveQueueTime
0061dac8 R CPedShelterAttractor::ms_fAchieveQueueShuffleTime
004ac395 W CPedShelterAttractor::~CPedShelterAttractor()
0059c6b1 T CScriptedEffectPairs::Flush()
0059c8bd T CScriptedEffectPairs::AddPair(CScriptedEffectPair const&)
0059c73b T CScriptedEffectPairs::CScriptedEffectPairs()
0059c73b T CScriptedEffectPairs::CScriptedEffectPairs()
0059c78f T CScriptedEffectPairs::~CScriptedEffectPairs()
0059c78f T CScriptedEffectPairs::~CScriptedEffectPairs()
0056d4f7 T CSpecialPlateHandler::Add(int, char*)
0056d42d T CSpecialPlateHandler::Find(int, char*)
0056d3bd T CSpecialPlateHandler::Init()
0056d527 T CSpecialPlateHandler::Remove(int)
0054a0d5 T CTaskAllocatorAttack::ProcessGroup(CPedGroupIntelligence*)
0054a185 T CTaskAllocatorAttack::AllocateTasks(CPedGroupIntelligence*)
00549f35 T CTaskAllocatorAttack::TargetIsArmed()
00549e91 T CTaskAllocatorAttack::CTaskAllocatorAttack(CPed*, int, CPed*)
00549e91 T CTaskAllocatorAttack::CTaskAllocatorAttack(CPed*, int, CPed*)
00549edd T CTaskAllocatorAttack::~CTaskAllocatorAttack()
0054b3f9 T CTaskAllocatorAttack::~CTaskAllocatorAttack()
0054b3f9 T CTaskAllocatorAttack::~CTaskAllocatorAttack()
00493ef1 W CTaskComplexCarDrive::CreateTask()
004fbf09 T CTaskComplexCarDrive::ControlSubTask(CPed*)
004fb7d1 T CTaskComplexCarDrive::CreateNextSubTask(CPed*)
004fbcf9 T CTaskComplexCarDrive::CreateFirstSubTask(CPed*)
004fbff9 T CTaskComplexCarDrive::Drive(CPed*)
004fed3d W CTaskComplexCarDrive::Serialize()
004fb6dd T CTaskComplexCarDrive::CTaskComplexCarDrive(CVehicle*)
004fb689 T CTaskComplexCarDrive::CTaskComplexCarDrive(CVehicle*, float, int, int)
004fb6dd T CTaskComplexCarDrive::CTaskComplexCarDrive(CVehicle*)
004fb689 T CTaskComplexCarDrive::CTaskComplexCarDrive(CVehicle*, float, int, int)
004fb779 T CTaskComplexCarDrive::~CTaskComplexCarDrive()
004fb725 T CTaskComplexCarDrive::~CTaskComplexCarDrive()
004fb725 T CTaskComplexCarDrive::~CTaskComplexCarDrive()
0053fd4d T CTaskComplexCopInCar::MakeAbortable(CPed*, int, CEvent const*)
0054042d T CTaskComplexCopInCar::ControlSubTask(CPed*)
00540085 T CTaskComplexCopInCar::CreateNextSubTask(CPed*)
0053fdd5 T CTaskComplexCopInCar::CreateFirstSubTask(CPed*)
0053fc2d T CTaskComplexCopInCar::CTaskComplexCopInCar(CVehicle*, CPed*, CPed*, bool)
0053fc2d T CTaskComplexCopInCar::CTaskComplexCopInCar(CVehicle*, CPed*, CPed*, bool)
0053fd01 T CTaskComplexCopInCar::~CTaskComplexCopInCar()
0053fcb9 T CTaskComplexCopInCar::~CTaskComplexCopInCar()
0053fcb9 T CTaskComplexCopInCar::~CTaskComplexCopInCar()
004f27f5 W CTaskComplexDieInCar::MakeAbortable(CPed*, int, CEvent const*)
004eb331 T CTaskComplexDieInCar::ControlSubTask(CPed*)
004eb435 T CTaskComplexDieInCar::CreateNextSubTask(CPed*)
004eb109 T CTaskComplexDieInCar::CreateFirstSubTask(CPed*)
004f2811 W CTaskComplexDieInCar::Serialize()
004eb095 T CTaskComplexDieInCar::CTaskComplexDieInCar(eWeaponType)
004eb095 T CTaskComplexDieInCar::CTaskComplexDieInCar(eWeaponType)
004eb0bd T CTaskComplexDieInCar::~CTaskComplexDieInCar()
004eb0b9 T CTaskComplexDieInCar::~CTaskComplexDieInCar()
004eb0b9 T CTaskComplexDieInCar::~CTaskComplexDieInCar()
004f47bf T CTaskComplexEnterCar::GetTargetPos()
004f4fe5 T CTaskComplexEnterCar::CreateSubTask(int, CPed*)
004f4c1f T CTaskComplexEnterCar::MakeAbortable(CPed*, int, CEvent const*)
004f668d T CTaskComplexEnterCar::ControlSubTask(CPed*)
004f6533 T CTaskComplexEnterCar::SetVehicleFlags(CPed*)
004f56e5 T CTaskComplexEnterCar::CreateNextSubTask(CPed*)
004f4ce5 T CTaskComplexEnterCar::CreateFirstSubTask(CPed*)
004f4b5d T CTaskComplexEnterCar::GetCameraAvoidVehicle()
004f47fd T CTaskComplexEnterCar::GetCameraStickModifier(CPed*, float, float&, float&, float&, float&)
004f65e7 T CTaskComplexEnterCar::PreparePedForVehicleEnter(CPed*)
004f6591 T CTaskComplexEnterCar::PrepareVehicleForPedEnter(CPed*)
004f651d T CTaskComplexEnterCar::ComputeTargetDoorOppositeToFlag()
004f661f T CTaskComplexEnterCar::CreateTaskUtilityLineUpPedWithCar(CPed*)
004f6881 T CTaskComplexEnterCar::CreateNextSubTask_AfterSimpleCarAlign(CPed*)
004f46dd T CTaskComplexEnterCar::CTaskComplexEnterCar(CVehicle*, bool, bool, bool, bool)
004f47bd T CTaskComplexEnterCar::~CTaskComplexEnterCar()
004f4765 T CTaskComplexEnterCar::~CTaskComplexEnterCar()
004f4765 T CTaskComplexEnterCar::~CTaskComplexEnterCar()
004930b5 W CTaskComplexLeaveCar::CreateTask()
004f8cd9 T CTaskComplexLeaveCar::CreateSubTask(int, CPed*)
004f89f5 T CTaskComplexLeaveCar::MakeAbortable(CPed*, int, CEvent const*)
004f94ed T CTaskComplexLeaveCar::ControlSubTask(CPed*)
004f8cc1 T CTaskComplexLeaveCar::ComputeTargetDoor(CPed*)
004f8f1d T CTaskComplexLeaveCar::CreateNextSubTask(CPed*)
004f9419 T CTaskComplexLeaveCar::CreateFirstSubTask(CPed*)
004f93e7 T CTaskComplexLeaveCar::PreparePedForVehicleExit(CPed*)
004f9359 T CTaskComplexLeaveCar::PrepareVehicleForPedExit(CPed*)
004f93ef T CTaskComplexLeaveCar::CreateTaskUtilityLineUpPedWithCar(CPed*)
004fe429 W CTaskComplexLeaveCar::Serialize()
004f8975 T CTaskComplexLeaveCar::CTaskComplexLeaveCar(CVehicle*, int, int, bool, bool)
004f8975 T CTaskComplexLeaveCar::CTaskComplexLeaveCar(CVehicle*, int, int, bool, bool)
004f89e5 T CTaskComplexLeaveCar::~CTaskComplexLeaveCar()
004fd089 T CTaskComplexLeaveCar::~CTaskComplexLeaveCar()
004fd089 T CTaskComplexLeaveCar::~CTaskComplexLeaveCar()
004e7a41 T CTaskComplexRoadRage::MakeAbortable(CPed*, int, CEvent const*)
004e7f09 T CTaskComplexRoadRage::ControlSubTask(CPed*)
004e7e39 T CTaskComplexRoadRage::CreateNextSubTask(CPed*)
004e7a4d T CTaskComplexRoadRage::CreateFirstSubTask(CPed*)
004e79b5 T CTaskComplexRoadRage::CTaskComplexRoadRage(CPed*)
004e79b5 T CTaskComplexRoadRage::CTaskComplexRoadRage(CPed*)
004e7a11 T CTaskComplexRoadRage::~CTaskComplexRoadRage()
004e79e5 T CTaskComplexRoadRage::~CTaskComplexRoadRage()
004e79e5 T CTaskComplexRoadRage::~CTaskComplexRoadRage()
004f39cd W CTaskComplexSequence::MakeAbortable(CPed*, int, CEvent const*)
004ee915 T CTaskComplexSequence::ControlSubTask(CPed*)
004ee83d T CTaskComplexSequence::CreateNextSubTask(CPed*)
004ee88b T CTaskComplexSequence::CreateNextSubTask(CPed*, int&, int&)
004ee8e9 T CTaskComplexSequence::CreateFirstSubTask(CPed*)
004ee8ff T CTaskComplexSequence::CreateFirstSubTask(CPed*, int&, int&)
004ee789 T CTaskComplexSequence::Flush()
004ee919 T CTaskComplexSequence::AddTask(CTask*)
004ee987 T CTaskComplexSequence::AddTask(int, CTask*)
002e7301 W CTaskComplexSequence::Contains(int)
004ee72d T CTaskComplexSequence::CTaskComplexSequence()
004ee72d T CTaskComplexSequence::CTaskComplexSequence()
004ee811 T CTaskComplexSequence::~CTaskComplexSequence()
004ee765 T CTaskComplexSequence::~CTaskComplexSequence()
004ee765 T CTaskComplexSequence::~CTaskComplexSequence()
004f872d T CTaskComplexStealCar::CreateSubTask(int, CPed*)
004f88dd T CTaskComplexStealCar::ControlSubTask(CPed*)
0061e3c0 R CTaskComplexStealCar::ms_iStealCarTime
004f85dd T CTaskComplexStealCar::CreateNextSubTask(CPed*)
004f88b1 T CTaskComplexStealCar::CreateFirstSubTask(CPed*)
004fe2d9 W CTaskComplexStealCar::Serialize()
004f8525 T CTaskComplexStealCar::CTaskComplexStealCar(CVehicle*)
004f8525 T CTaskComplexStealCar::CTaskComplexStealCar(CVehicle*)
004f859d T CTaskComplexStealCar::~CTaskComplexStealCar()
004f8561 T CTaskComplexStealCar::~CTaskComplexStealCar()
004f8561 T CTaskComplexStealCar::~CTaskComplexStealCar()
004ed955 T CTaskComplexSunbathe::CanSunbathe()
004ed661 T CTaskComplexSunbathe::CreateSubTask(int, CPed*)
004ed289 T CTaskComplexSunbathe::MakeAbortable(CPed*, int, CEvent const*)
004edb3d T CTaskComplexSunbathe::ControlSubTask(CPed*)
004ed2d9 T CTaskComplexSunbathe::CreateNextSubTask(CPed*)
004ed991 T CTaskComplexSunbathe::CreateFirstSubTask(CPed*)
004ed5f5 T CTaskComplexSunbathe::ShouldLoadSunbatheAnims()
004ed161 T CTaskComplexSunbathe::CTaskComplexSunbathe(CObject*, bool)
004ed161 T CTaskComplexSunbathe::CTaskComplexSunbathe(CObject*, bool)
004ed235 T CTaskComplexSunbathe::~CTaskComplexSunbathe()
004ed1e5 T CTaskComplexSunbathe::~CTaskComplexSunbathe()
004ed1e5 T CTaskComplexSunbathe::~CTaskComplexSunbathe()
005298c9 T CTaskInteriorUseInfo::MakeAbortable(CPed*, int, CEvent const*)
00529bfd T CTaskInteriorUseInfo::ControlSubTask(CPed*)
005298ed T CTaskInteriorUseInfo::CreateNextSubTask(CPed*)
00529bb9 T CTaskInteriorUseInfo::CreateFirstSubTask(CPed*)
00529819 T CTaskInteriorUseInfo::CTaskInteriorUseInfo(InteriorInfo_t*, Interior_c*, int, unsigned char)
00529819 T CTaskInteriorUseInfo::CTaskInteriorUseInfo(InteriorInfo_t*, Interior_c*, int, unsigned char)
00529865 T CTaskInteriorUseInfo::~CTaskInteriorUseInfo()
00529849 T CTaskInteriorUseInfo::~CTaskInteriorUseInfo()
00529849 T CTaskInteriorUseInfo::~CTaskInteriorUseInfo()
0053cb61 T CTaskSimpleArrestPed::ProcessPed(CPed*)
0053ca1d T CTaskSimpleArrestPed::MakeAbortable(CPed*, int, CEvent const*)
0053ca95 T CTaskSimpleArrestPed::FinishAnimArrestPedCB(CAnimBlendAssociation*, void*)
0053caa1 T CTaskSimpleArrestPed::StartAnim(CPed*)
0053c969 T CTaskSimpleArrestPed::CTaskSimpleArrestPed(CPed*)
0053c969 T CTaskSimpleArrestPed::CTaskSimpleArrestPed(CPed*)
0053ca0d T CTaskSimpleArrestPed::~CTaskSimpleArrestPed()
0053c9a1 T CTaskSimpleArrestPed::~CTaskSimpleArrestPed()
0053c9a1 T CTaskSimpleArrestPed::~CTaskSimpleArrestPed()
00503275 T CTaskSimpleCarGetOut::ProcessPed(CPed*)
005034b1 T CTaskSimpleCarGetOut::ComputeAnimID(int&, int&)
00503259 T CTaskSimpleCarGetOut::MakeAbortable(CPed*, int, CEvent const*)
0050358d T CTaskSimpleCarGetOut::SetPedPosition(CPed*)
005035bb T CTaskSimpleCarGetOut::FinishAnimCarGetOutCB(CAnimBlendAssociation*, void*)
005033d5 T CTaskSimpleCarGetOut::StartAnim(CPed const*)
00503189 T CTaskSimpleCarGetOut::CTaskSimpleCarGetOut(CVehicle*, int, CTaskUtilityLineUpPedWithCar*)
00503189 T CTaskSimpleCarGetOut::CTaskSimpleCarGetOut(CVehicle*, int, CTaskUtilityLineUpPedWithCar*)
00503215 T CTaskSimpleCarGetOut::~CTaskSimpleCarGetOut()
005031d5 T CTaskSimpleCarGetOut::~CTaskSimpleCarGetOut()
005031d5 T CTaskSimpleCarGetOut::~CTaskSimpleCarGetOut()
0051cbed T CTaskSimpleGoToPoint::ProcessPed(CPed*)
0051cb71 T CTaskSimpleGoToPoint::MakeAbortable(CPed*, int, CEvent const*)
0051cafd T CTaskSimpleGoToPoint::CTaskSimpleGoToPoint(int, CVector const&, float, bool, bool)
0051cafd T CTaskSimpleGoToPoint::CTaskSimpleGoToPoint(int, CVector const&, float, bool, bool)
0051cb61 T CTaskSimpleGoToPoint::~CTaskSimpleGoToPoint()
0051c851 T CTaskSimpleGoToPoint::~CTaskSimpleGoToPoint()
0051c851 T CTaskSimpleGoToPoint::~CTaskSimpleGoToPoint()
004efcff T CTaskSimpleIKManager::ProcessPed(CPed*)
004efe29 T CTaskSimpleIKManager::IsSlotEmpty(int)
004efe39 T CTaskSimpleIKManager::GetTaskAtSlot(int)
004efcad T CTaskSimpleIKManager::MakeAbortable(CPed*, int, CEvent const*)
004efc59 T CTaskSimpleIKManager::AddIKChainTask(CTaskSimpleIKChain*, int)
004efdb3 T CTaskSimpleIKManager::RemoveIKChainTask(int)
004efdd1 T CTaskSimpleIKManager::BlendOut(int, int)
004efb29 T CTaskSimpleIKManager::CTaskSimpleIKManager()
004efb29 T CTaskSimpleIKManager::CTaskSimpleIKManager()
004efba1 T CTaskSimpleIKManager::~CTaskSimpleIKManager()
004efb51 T CTaskSimpleIKManager::~CTaskSimpleIKManager()
004efb51 T CTaskSimpleIKManager::~CTaskSimpleIKManager()
00357a45 W CTaskSimpleLookAbout::Serialize()
003579e5 W CTaskSimpleLookAbout::~CTaskSimpleLookAbout()
00540c55 T CTaskSimpleShakeFist::ProcessPed(CPed*)
00540c0d T CTaskSimpleShakeFist::MakeAbortable(CPed*, int, CEvent const*)
00540ced T CTaskSimpleShakeFist::FinishAnimShakeFistCB(CAnimBlendAssociation*, void*)
005439b9 W CTaskSimpleShakeFist::Serialize()
00540cad T CTaskSimpleShakeFist::StartAnim(CPed*)
00540b81 T CTaskSimpleShakeFist::CTaskSimpleShakeFist()
00540b81 T CTaskSimpleShakeFist::CTaskSimpleShakeFist()
00540bd5 T CTaskSimpleShakeFist::~CTaskSimpleShakeFist()
00540ba1 T CTaskSimpleShakeFist::~CTaskSimpleShakeFist()
00540ba1 T CTaskSimpleShakeFist::~CTaskSimpleShakeFist()
002b6c9d T CWidgetButtonVCShoot::Update()
002b6d59 W CWidgetButtonVCShoot::GetName()
002b6c71 T CWidgetButtonVCShoot::CWidgetButtonVCShoot(char const*, WidgetPosition const&)
002b6c71 T CWidgetButtonVCShoot::CWidgetButtonVCShoot(char const*, WidgetPosition const&)
002b6d2d W CWidgetButtonVCShoot::~CWidgetButtonVCShoot()
002bc159 T CWidgetMissionTimers::Draw()
002bc065 T CWidgetMissionTimers::Update()
002bcab9 W CWidgetMissionTimers::GetName()
002bc041 T CWidgetMissionTimers::CWidgetMissionTimers(char const*, WidgetPosition const&)
002bc041 T CWidgetMissionTimers::CWidgetMissionTimers(char const*, WidgetPosition const&)
002bcaa9 W CWidgetMissionTimers::~CWidgetMissionTimers()
001cfd21 T ES2ResourceContainer::GetResource(unsigned int)
001cfdaf T ES2ResourceContainer::PutResource(unsigned int, unsigned int)
001cfec3 T ES2ResourceContainer::Cleanup()
001cfef9 T ES2ResourceContainer::ES2ResourceContainer(unsigned int)
001d1161 W ES2ResourceContainer::~ES2ResourceContainer()
0036b9f1 T FxInfoColourBright_c::Load(unsigned int, int)
0036b9f7 T FxInfoColourBright_c::GetValue(float, float, float, float, unsigned char, void*)
0036b9b1 T FxInfoColourBright_c::FxInfoColourBright_c()
0036b9b1 T FxInfoColourBright_c::FxInfoColourBright_c()
0036c421 W FxInfoColourBright_c::~FxInfoColourBright_c()
0036c3fd W FxInfoColourBright_c::~FxInfoColourBright_c()
001e8e79 T TextureDatabaseEntry::LoadInstance(TextureListingContainer const&)
001e8fb1 T TextureDatabaseEntry::Delete()
001e8f31 T TextureDatabaseEntry::LoadPNG(char const*)
003ac641 T CAEVehicleAudioEntity::Initialise(CEntity*)
003b7dfd T CAEVehicleAudioEntity::GetHornState(unsigned char*, cVehicleParams&)
003b2731 T CAEVehicleAudioEntity::ProcessNitro(cVehicleParams&)
003abc65 T CAEVehicleAudioEntity::AddAudioEvent(int, CEntity*)
003aacf9 T CAEVehicleAudioEntity::AddAudioEvent(int, float)
003b7da9 T CAEVehicleAudioEntity::GetSirenState(unsigned char*, unsigned char*, cVehicleParams&)
003acbe1 T CAEVehicleAudioEntity::PlaySkidSound(short, float, float)
003b663d T CAEVehicleAudioEntity::ProcessAIHeli(cVehicleParams&)
003b5739 T CAEVehicleAudioEntity::ProcessAIProp(cVehicleParams&)
003ac609 T CAEVehicleAudioEntity::StaticService()
003ac515 T CAEVehicleAudioEntity::DemandBankSlot(short)
003b4911 T CAEVehicleAudioEntity::GetFreqForIdle(float)
003b3969 T CAEVehicleAudioEntity::IsAccInhibited(cVehicleParams&)
003ae429 T CAEVehicleAudioEntity::ProcessVehicle(CPhysical*)
003b7e89 T CAEVehicleAudioEntity::PlayHornOrSiren(unsigned char, unsigned char, unsigned char, cVehicleParams&)
003b21d9 T CAEVehicleAudioEntity::ProcessAircraft(cVehicleParams&)
003b5621 T CAEVehicleAudioEntity::ProcessDummyJet(cVehicleParams&)
003ac0e5 T CAEVehicleAudioEntity::RequestBankSlot(short)
003b82a9 T CAEVehicleAudioEntity::UpdateBoatSound(short, short, short, float, float)
0094eb20 B CAEVehicleAudioEntity::s_pPlayerDriver
003b48f5 T CAEVehicleAudioEntity::EnableHelicoptor()
003b3a6d T CAEVehicleAudioEntity::GetAccelAndBrake(cVehicleParams&)
003b7be9 T CAEVehicleAudioEntity::PlayBicycleSound(short, short, short, float, float)
003b4811 T CAEVehicleAudioEntity::PlayReverseSound(short, float, float)
003b6b29 T CAEVehicleAudioEntity::ProcessDummyHeli(cVehicleParams&)
003b5b29 T CAEVehicleAudioEntity::ProcessDummyProp(cVehicleParams&)
003b4ce1 T CAEVehicleAudioEntity::ProcessPlayerJet(cVehicleParams&)
0046d7b5 T CAEVehicleAudioEntity::StaticInitialise()
003abe15 T CAEVehicleAudioEntity::UpdateParameters(CAESound*, short)
003b8445 T CAEVehicleAudioEntity::UpdateTrainSound(short, short, short, float, float)
003b48ed T CAEVehicleAudioEntity::DisableHelicoptor()
003ac62d T CAEVehicleAudioEntity::EnableHelicoptors()
003b3a29 T CAEVehicleAudioEntity::InhibitAccForTime(unsigned int)
003b3a59 T CAEVehicleAudioEntity::InhibitCrzForTime(unsigned int)
003b7925 T CAEVehicleAudioEntity::PlayAircraftSound(short, short, short, float, float)
003b4ac9 T CAEVehicleAudioEntity::PlayFlatTyreSound(short, float, float)
003aebcd T CAEVehicleAudioEntity::ProcessBoatEngine(cVehicleParams&)
003b8909 T CAEVehicleAudioEntity::ProcessDummyRCCar(cVehicleParams&)
003b751d T CAEVehicleAudioEntity::ProcessGenericJet(unsigned char, cVehicleParams&, float, float, float, float, float)
003b6181 T CAEVehicleAudioEntity::ProcessPlayerHeli(cVehicleParams&)
003b4fd1 T CAEVehicleAudioEntity::ProcessPlayerProp(cVehicleParams&)
003ac61d T CAEVehicleAudioEntity::DisableHelicoptors()
003ad061 T CAEVehicleAudioEntity::JustWreckedVehicle()
003b49e5 T CAEVehicleAudioEntity::PlayRoadNoiseSound(short, float, float)
003b85e9 T CAEVehicleAudioEntity::ProcessDummyRCHeli(cVehicleParams&)
003b2429 T CAEVehicleAudioEntity::ProcessMovingParts(cVehicleParams&)
003b93d9 T CAEVehicleAudioEntity::ProcessPlayerRCCar(cVehicleParams&)
003b2649 T CAEVehicleAudioEntity::ProcessReverseGear(cVehicleParams&)
0094eaf0 B CAEVehicleAudioEntity::s_DummyEngineSlots
003accb9 T CAEVehicleAudioEntity::PlayTrainBrakeSound(short, float, float)
003b1f25 T CAEVehicleAudioEntity::ProcessDummyBicycle(cVehicleParams&)
003b8ab9 T CAEVehicleAudioEntity::ProcessDummyRCPlane(cVehicleParams&)
003b18b5 T CAEVehicleAudioEntity::ProcessEngineDamage(cVehicleParams&)
003b93d7 T CAEVehicleAudioEntity::ProcessPlayerRCHeli(cVehicleParams&)
003af6b1 T CAEVehicleAudioEntity::UpdateGasPedalAudio(CVehicle*, int)
003abda5 T CAEVehicleAudioEntity::GetFlyingMetalVolume(CPhysical*)
003b4551 T CAEVehicleAudioEntity::GetVolumeForDummyRev(float, float)
003b90d1 T CAEVehicleAudioEntity::ProcessDummyGolfCart(cVehicleParams&)
003b7381 T CAEVehicleAudioEntity::ProcessDummySeaPlane(cVehicleParams&)
003b1c29 T CAEVehicleAudioEntity::ProcessPlayerBicycle(cVehicleParams&)
003b28c1 T CAEVehicleAudioEntity::ProcessPlayerCombine(cVehicleParams&)
003b93d5 T CAEVehicleAudioEntity::ProcessPlayerRCPlane(cVehicleParams&)
003aeeb1 T CAEVehicleAudioEntity::ProcessRainOnVehicle(cVehicleParams&)
003ac4b9 T CAEVehicleAudioEntity::StoppedUsingBankSlot(short)
003b4369 T CAEVehicleAudioEntity::GetVolumeForDummyIdle(float, float)
003b3a0d T CAEVehicleAudioEntity::IsAccInhibitedForTime()
003b3a3d T CAEVehicleAudioEntity::IsCrzInhibitedForTime()
003b93dd T CAEVehicleAudioEntity::ProcessPlayerGolfCart(cVehicleParams&)
003b6f61 T CAEVehicleAudioEntity::ProcessPlayerSeaPlane(cVehicleParams&)
003aeaa9 T CAEVehicleAudioEntity::ProcessSpecialVehicle(cVehicleParams&)
003ae381 T CAEVehicleAudioEntity::TurnOnRadioForVehicle()
0094eb1e B CAEVehicleAudioEntity::s_HelicoptorsDisabled
0094eb1c B CAEVehicleAudioEntity::s_NextDummyEngineSlot
003acdb5 T CAEVehicleAudioEntity::GetVehicleTypeForAudio()
003b8dd9 T CAEVehicleAudioEntity::ProcessDummyHovercraft(cVehicleParams&)
003af075 T CAEVehicleAudioEntity::ProcessTrainTrackSound(cVehicleParams&)
003b1aa1 T CAEVehicleAudioEntity::ProcessVehicleFlatTyre(cVehicleParams&)
003af915 T CAEVehicleAudioEntity::ProcessVehicleSkidding(cVehicleParams&)
003b8281 T CAEVehicleAudioEntity::StopGenericEngineSound(short)
003ae3d9 T CAEVehicleAudioEntity::TurnOffRadioForVehicle()
003ac0b1 T CAEVehicleAudioEntity::GetAircraftNearPosition()
003b4669 T CAEVehicleAudioEntity::GetFrequencyForDummyRev(float, float)
003ac969 T CAEVehicleAudioEntity::GetVehicleAudioSettings(short)
003b39b9 T CAEVehicleAudioEntity::IsAccInhibitedBackwards(cVehicleParams&)
003af211 T CAEVehicleAudioEntity::ProcessDummyTrainEngine(cVehicleParams&)
003b93db T CAEVehicleAudioEntity::ProcessPlayerHovercraft(cVehicleParams&)
003af70d T CAEVehicleAudioEntity::ProcessVehicleRoadNoise(cVehicleParams&)
003b4751 T CAEVehicleAudioEntity::StartVehicleEngineSound(short, float, float)
003b3ac1 T CAEVehicleAudioEntity::CancelVehicleEngineSound(short)
003b447d T CAEVehicleAudioEntity::GetFrequencyForDummyIdle(float, float)
003ad33d T CAEVehicleAudioEntity::JustGotInVehicleAsDriver()
003af4bd T CAEVehicleAudioEntity::ProcessPlayerTrainBrakes(cVehicleParams&)
003b85e5 T CAEVehicleAudioEntity::ProcessPlayerTrainEngine(cVehicleParams&)
003b42fd T CAEVehicleAudioEntity::UpdateVehicleEngineSound(short, float, float)
003b39e1 T CAEVehicleAudioEntity::IsAccInhibitedForLowSpeed(cVehicleParams&)
003b178d T CAEVehicleAudioEntity::ProcessDummyVehicleEngine(cVehicleParams&)
003b9311 T CAEVehicleAudioEntity::UpdateGenericVehicleSound(short, short, short, short, float, float, float)
0094eb24 B CAEVehicleAudioEntity::s_pPlayerAttachedForRadio
003b3efd T CAEVehicleAudioEntity::GetVolForPlayerEngineSound(cVehicleParams&, short)
003aef89 T CAEVehicleAudioEntity::ProcessBoatMovingOverWater(cVehicleParams&)
003afe05 T CAEVehicleAudioEntity::ProcessPlayerVehicleEngine(cVehicleParams&)
003ac4e9 T CAEVehicleAudioEntity::DoesBankSlotContainThisBank(short, short)
003b7b19 T CAEVehicleAudioEntity::GetBaseVolumeForBicycleTyre(float)
003b3b7d T CAEVehicleAudioEntity::GetFreqForPlayerEngineSound(cVehicleParams&, short)
003ae01d T CAEVehicleAudioEntity::JustGotOutOfVehicleAsDriver()
003b2971 T CAEVehicleAudioEntity::ProcessDummyStateTransition(short, float, cVehicleParams&)
003b4325 T CAEVehicleAudioEntity::JustFinishedAccelerationLoop()
003afcb5 T CAEVehicleAudioEntity::ProcessVehicleSirenAlarmHorn(cVehicleParams&)
003b4bad T CAEVehicleAudioEntity::GetVehicleDriveWheelSkidValue(CVehicle*, int, float, cTransmission*, float)
003b3ff1 T CAEVehicleAudioEntity::RequestNewPlayerCarEngineSound(short, float, float)
0094eb18 B CAEVehicleAudioEntity::s_pVehicleAudioSettingsForRadio
003b4c59 T CAEVehicleAudioEntity::GetVehicleNonDriveWheelSkidValue(CVehicle*, int, cTransmission*, float)
003acffd T CAEVehicleAudioEntity::PlayerAboutToExitVehicleAsDriver()
003ac60d T CAEVehicleAudioEntity::StaticGetPlayerVehicleAudioSettingsForRadio()
003b48fd T CAEVehicleAudioEntity::CopHeli()
003ace05 T CAEVehicleAudioEntity::Service()
003ac99d T CAEVehicleAudioEntity::Terminate()
003aacc1 T CAEVehicleAudioEntity::CAEVehicleAudioEntity()
003aacc1 T CAEVehicleAudioEntity::CAEVehicleAudioEntity()
003bb4d1 T CAEWeatherAudioEntity::StaticReset()
003bc6d5 T CAEWeatherAudioEntity::AddAudioEvent(int)
0094eb34 B CAEWeatherAudioEntity::m_sRainSoundL
0094ebdc B CAEWeatherAudioEntity::m_sRainSoundR
006a9dd0 D CAEWeatherAudioEntity::m_sfRainVolume
0046d859 T CAEWeatherAudioEntity::StaticInitialise()
003bbc09 T CAEWeatherAudioEntity::UpdateParameters(CAESound*, short)
006a9dd4 D CAEWeatherAudioEntity::m_snLastRainDropSoundID
003bb52d T CAEWeatherAudioEntity::Service()
0038a07b T CAnimBlendAssociation::SetBlendTo(float, float)
0038be05 T CAnimBlendAssociation::UpdateTime(float, float)
0038be9d T CAnimBlendAssociation::UpdateBlend(float)
0038a047 T CAnimBlendAssociation::SyncAnimation(CAnimBlendAssociation*)
00389fab T CAnimBlendAssociation::SetCurrentTime(float)
0038bdd5 T CAnimBlendAssociation::UpdateTimeStep(float, float)
0038a09b T CAnimBlendAssociation::SetDeleteCallback(void (*)(CAnimBlendAssociation*, void*), void*)
0038a0a5 T CAnimBlendAssociation::SetFinishCallback(void (*)(CAnimBlendAssociation*, void*), void*)
00389d93 T CAnimBlendAssociation::ReferenceAnimBlock()
00389f05 T CAnimBlendAssociation::FreeAnimBlendNodeArray()
00389f65 T CAnimBlendAssociation::AllocateAnimBlendNodeArray(int)
00389ba5 T CAnimBlendAssociation::Init(RpClump*, CAnimBlendHierarchy*)
00389e25 T CAnimBlendAssociation::Init(CAnimBlendStaticAssociation&)
00389cf5 T CAnimBlendAssociation::Init(CAnimBlendAssociation&)
0038a071 T CAnimBlendAssociation::Start(float)
0038a065 T CAnimBlendAssociation::GetNode(int)
0038a095 T CAnimBlendAssociation::SetBlend(float, float)
00389b41 T CAnimBlendAssociation::CAnimBlendAssociation(RpClump*, CAnimBlendHierarchy*)
00389dc1 T CAnimBlendAssociation::CAnimBlendAssociation(CAnimBlendStaticAssociation&)
00389c91 T CAnimBlendAssociation::CAnimBlendAssociation(CAnimBlendAssociation&)
00389ae1 T CAnimBlendAssociation::CAnimBlendAssociation()
00389b41 T CAnimBlendAssociation::CAnimBlendAssociation(RpClump*, CAnimBlendHierarchy*)
00389dc1 T CAnimBlendAssociation::CAnimBlendAssociation(CAnimBlendStaticAssociation&)
00389c91 T CAnimBlendAssociation::CAnimBlendAssociation(CAnimBlendAssociation&)
00389ae1 T CAnimBlendAssociation::CAnimBlendAssociation()
00389f11 T CAnimBlendAssociation::~CAnimBlendAssociation()
00389eb9 T CAnimBlendAssociation::~CAnimBlendAssociation()
00389eb9 T CAnimBlendAssociation::~CAnimBlendAssociation()
003750c1 T CEventAcquaintancePed::CEventAcquaintancePed(CPed*)
00375101 T CEventAcquaintancePed::~CEventAcquaintancePed()
00378079 T CEventAcquaintancePed::~CEventAcquaintancePed()
00378079 T CEventAcquaintancePed::~CEventAcquaintancePed()
0037845d W CEventHealthReallyLow::~CEventHealthReallyLow()
00378b25 W CEventInteriorUseInfo::~CEventInteriorUseInfo()
003791ed W CEventLeaderEntryExit::~CEventLeaderEntryExit()
0060ffb0 R CEventObjectCollision::ms_fStraightAheadDotProduct
0037156d T CEventObjectCollision::CEventObjectCollision(unsigned short, float, CObject const*, CVector const&, CVector const&, int)
0037156d T CEventObjectCollision::CEventObjectCollision(unsigned short, float, CObject const*, CVector const&, CVector const&, int)
003715f9 T CEventObjectCollision::~CEventObjectCollision()
003715d1 T CEventObjectCollision::~CEventObjectCollision()
003715d1 T CEventObjectCollision::~CEventObjectCollision()
00377975 T CEventSeenPanickedPed::CEventSeenPanickedPed(CPed*)
00377975 T CEventSeenPanickedPed::CEventSeenPanickedPed(CPed*)
003779dd T CEventSeenPanickedPed::~CEventSeenPanickedPed()
003779b5 T CEventSeenPanickedPed::~CEventSeenPanickedPed()
003779b5 T CEventSeenPanickedPed::~CEventSeenPanickedPed()
0028df7d T CHIDJoystickAndroidTV::FindUVsFromMapping(char const*, HIDMapping, bool)
0028db81 T CHIDJoystickAndroidTV::CHIDJoystickAndroidTV(char const*)
0028db81 T CHIDJoystickAndroidTV::CHIDJoystickAndroidTV(char const*)
0028e195 W CHIDJoystickAndroidTV::~CHIDJoystickAndroidTV()
0028e901 T CHIDJoystickIOSSimple::FindUVsFromMapping(char const*, HIDMapping, bool)
0028e681 T CHIDJoystickIOSSimple::CHIDJoystickIOSSimple(char const*)
0028e681 T CHIDJoystickIOSSimple::CHIDJoystickIOSSimple(char const*)
0028e9e5 W CHIDJoystickIOSSimple::~CHIDJoystickIOSSimple()
0038657f T CModelInfoAccelerator::AddModelInfoId(unsigned short)
00386533 T CModelInfoAccelerator::EndOfLoadPhase()
00386569 T CModelInfoAccelerator::FreeModelInfoIds()
00386519 T CModelInfoAccelerator::AllocModelInfoIds()
003864b5 T CModelInfoAccelerator::GetModelInfoIdFile()
0038658f T CModelInfoAccelerator::GetNextModelInfoId()
00386651 T CModelInfoAccelerator::End(char*)
003864a3 T CModelInfoAccelerator::Init()
003865ed T CModelInfoAccelerator::Begin(char*)
0038659f T CModelInfoAccelerator::GetEntry(CBaseModelInfo**, int*, char*)
00386495 T CModelInfoAccelerator::CModelInfoAccelerator()
00386495 T CModelInfoAccelerator::CModelInfoAccelerator()
003864b1 T CModelInfoAccelerator::~CModelInfoAccelerator()
003864b1 T CModelInfoAccelerator::~CModelInfoAccelerator()
003f83a9 T CMouseControllerState::CheckForInput()
003f8359 T CMouseControllerState::Clear()
003f8399 T CMouseControllerState::CMouseControllerState()
003f8399 T CMouseControllerState::CMouseControllerState()
00314cb5 T COnscreenCounterEntry::SetColourID(unsigned char)
00314c6d T COnscreenCounterEntry::ProcessForDisplayCounter(unsigned short)
004b417d T CPedGroupIntelligence::FlushTasks(CPedTaskPair*, CPed*)
004b3621 T CPedGroupIntelligence::SetDefaultTask(CPed*, CTask const&)
004b3a79 T CPedGroupIntelligence::ReportFinishedTask(CPed const*, CTask const&)
004b3b99 T CPedGroupIntelligence::ReportFinishedTask(CPed const*, CTask const&, CPedTaskPair*)
004b3349 T CPedGroupIntelligence::ComputeDefaultTasks(CPed*)
004b347b T CPedGroupIntelligence::SetEventResponseTask(CPed*, bool, CTask const&, bool, CTask const&, int)
004b358f T CPedGroupIntelligence::SetScriptCommandTask(CPed*, CTask const&)
004b3c17 T CPedGroupIntelligence::ReportAllTasksFinished(CPedTaskPair*)
004b3bf7 T CPedGroupIntelligence::ReportAllTasksFinished()
004b331d T CPedGroupIntelligence::SetDefaultTaskAllocator(CPedGroupDefaultTaskAllocator const*)
004b3373 T CPedGroupIntelligence::SetPrimaryTaskAllocator(CTaskAllocator*)
004b3fe9 T CPedGroupIntelligence::ProcessIgnorePlayerGroup()
004b4523 T CPedGroupIntelligence::ComputeEventResponseTasks()
004b3e19 T CPedGroupIntelligence::ComputeScriptCommandTasks()
004b32d5 T CPedGroupIntelligence::SetGroupDecisionMakerType(int)
004b32dd T CPedGroupIntelligence::SetDefaultTaskAllocatorType(int)
004b338f T CPedGroupIntelligence::SetEventResponseTaskAllocator(CTaskAllocator*)
004b3c97 T CPedGroupIntelligence::ReportAllBarScriptTasksFinished()
004b3157 T CPedGroupIntelligence::Flush()
004b425f T CPedGroupIntelligence::Process()
004b34c7 T CPedGroupIntelligence::SetTask(CPed*, CTask const&, CPedTaskPair*, int, bool)
004b363f T CPedGroupIntelligence::SetTask(int, CTask const&, CPedTaskPair*, int, bool)
004b33ab T CPedGroupIntelligence::AddEvent(CEvent&)
004b2f31 T CPedGroupIntelligence::CPedGroupIntelligence()
004b2f31 T CPedGroupIntelligence::CPedGroupIntelligence()
004b3149 T CPedGroupIntelligence::~CPedGroupIntelligence()
004b3149 T CPedGroupIntelligence::~CPedGroupIntelligence()
0061db20 R CPedScriptedAttractor::ms_fSpacing
0061db34 R CPedScriptedAttractor::ms_fDeltaPos
0061db1c R CPedScriptedAttractor::ms_iMaxSlots
0061db2c R CPedScriptedAttractor::ms_fArriveRange
0061db38 R CPedScriptedAttractor::ms_fDeltaHeading
0061db30 R CPedScriptedAttractor::ms_fHeadingRange
0061db24 R CPedScriptedAttractor::ms_fAchieveQueueTime
0061db28 R CPedScriptedAttractor::ms_fAchieveQueueShuffleTime
004ac7cd W CPedScriptedAttractor::~CPedScriptedAttractor()
0054a231 T CTaskAllocatorRetreat::AllocateTasks(CPedGroupIntelligence*)
0054b45d W CTaskAllocatorRetreat::~CTaskAllocatorRetreat()
0053d031 T CTaskComplexArrestPed::CreateSubTask(int, CPed*)
0053cce1 T CTaskComplexArrestPed::MakeAbortable(CPed*, int, CEvent const*)
0053d349 T CTaskComplexArrestPed::ControlSubTask(CPed*)
0061e6f8 R CTaskComplexArrestPed::ms_fArrestRange
0053cced T CTaskComplexArrestPed::CreateNextSubTask(CPed*)
0053d285 T CTaskComplexArrestPed::CreateFirstSubTask(CPed*)
0061e6fc R CTaskComplexArrestPed::ms_fArrestAssistRange
0053cc51 T CTaskComplexArrestPed::CTaskComplexArrestPed(CPed*)
0053cc51 T CTaskComplexArrestPed::CTaskComplexArrestPed(CPed*)
0053ccb1 T CTaskComplexArrestPed::~CTaskComplexArrestPed()
0053cc85 T CTaskComplexArrestPed::~CTaskComplexArrestPed()
0053cc85 T CTaskComplexArrestPed::~CTaskComplexArrestPed()
00491669 W CTaskComplexBeInGroup::CreateTask()
004eec2d T CTaskComplexBeInGroup::MakeAbortable(CPed*, int, CEvent const*)
004eed79 T CTaskComplexBeInGroup::ControlSubTask(CPed*)
004eeca9 T CTaskComplexBeInGroup::CreateNextSubTask(CPed*)
004eed11 T CTaskComplexBeInGroup::CreateFirstSubTask(CPed*)
004eee79 T CTaskComplexBeInGroup::MonitorMainGroupTask(CPed*)
004eed91 T CTaskComplexBeInGroup::MonitorSecondaryGroupTask(CPed*)
004f3a19 W CTaskComplexBeInGroup::Serialize()
004eebe5 T CTaskComplexBeInGroup::CTaskComplexBeInGroup(int, bool)
004eebe5 T CTaskComplexBeInGroup::CTaskComplexBeInGroup(int, bool)
004eec1d T CTaskComplexBeInGroup::~CTaskComplexBeInGroup()
004eec19 T CTaskComplexBeInGroup::~CTaskComplexBeInGroup()
004eec19 T CTaskComplexBeInGroup::~CTaskComplexBeInGroup()
0061e524 R CTaskComplexFleePoint::ms_fMaxDist
0061e520 R CTaskComplexFleePoint::ms_fMinDist
0061e518 R CTaskComplexFleePoint::ms_iFleeTime
00512b25 T CTaskComplexFleePoint::CreateSubTask(int)
005129b9 T CTaskComplexFleePoint::MakeAbortable(CPed*, int, CEvent const*)
0051302d T CTaskComplexFleePoint::ControlSubTask(CPed*)
0061e51c R CTaskComplexFleePoint::ms_fThetaRange
005131fd T CTaskComplexFleePoint::SetFleePosition(CVector const&, float, bool)
0061e514 R CTaskComplexFleePoint::ms_fSafeDistance
0061e528 R CTaskComplexFleePoint::ms_iRecoveryTime
00512d39 T CTaskComplexFleePoint::CreateNextSubTask(CPed*)
00512c1d T CTaskComplexFleePoint::ComputeTargetPoint(CPed const*)
005129f1 T CTaskComplexFleePoint::CreateFirstSubTask(CPed*)
00512941 T CTaskComplexFleePoint::CTaskComplexFleePoint(CVector const&, bool, float, int)
00512941 T CTaskComplexFleePoint::CTaskComplexFleePoint(CVector const&, bool, float, int)
005129a9 T CTaskComplexFleePoint::~CTaskComplexFleePoint()
005129a5 T CTaskComplexFleePoint::~CTaskComplexFleePoint()
005129a5 T CTaskComplexFleePoint::~CTaskComplexFleePoint()
004938dd W CTaskComplexLeaveBoat::CreateTask()
004f964d T CTaskComplexLeaveBoat::ControlSubTask(CPed*)
004f960d T CTaskComplexLeaveBoat::CreateNextSubTask(CPed*)
004f9611 T CTaskComplexLeaveBoat::CreateFirstSubTask(CPed*)
004fe5ad W CTaskComplexLeaveBoat::Serialize()
004f9575 T CTaskComplexLeaveBoat::CTaskComplexLeaveBoat(CVehicle*, int)
004f9575 T CTaskComplexLeaveBoat::CTaskComplexLeaveBoat(CVehicle*, int)
004f95dd T CTaskComplexLeaveBoat::~CTaskComplexLeaveBoat()
004f95b1 T CTaskComplexLeaveBoat::~CTaskComplexLeaveBoat()
004f95b1 T CTaskComplexLeaveBoat::~CTaskComplexLeaveBoat()
004edd25 T CTaskComplexUseEffect::MakeAbortable(CPed*, int, CEvent const*)
004edee9 T CTaskComplexUseEffect::ControlSubTask(CPed*)
004ede1d T CTaskComplexUseEffect::CreateNextSubTask(CPed*)
004ede4d T CTaskComplexUseEffect::CreateFirstSubTask(CPed*)
004edc8d T CTaskComplexUseEffect::CTaskComplexUseEffect(C2dEffect*, CEntity*)
004edc8d T CTaskComplexUseEffect::CTaskComplexUseEffect(C2dEffect*, CEntity*)
004edcd9 T CTaskComplexUseEffect::~CTaskComplexUseEffect()
004f1d79 T CTaskComplexUseEffect::~CTaskComplexUseEffect()
004f1d79 T CTaskComplexUseEffect::~CTaskComplexUseEffect()
00523ce1 T CTaskComplexWanderCop::ScanForStuff(CPed*)
00523c11 T CTaskComplexWanderCop::ControlSubTask(CPed*)
0061e640 R CTaskComplexWanderCop::ms_iScanPeriod
00523dd1 T CTaskComplexWanderCop::LookForCarAlarms(CPed*)
00523ee1 T CTaskComplexWanderCop::LookForCriminals(CPed*)
00523b2d T CTaskComplexWanderCop::CreateNextSubTask(CPed*)
0061e644 R CTaskComplexWanderCop::ms_fCriminalRange
00523a4b T CTaskComplexWanderCop::CreateFirstSubTask(CPed*)
0061e648 R CTaskComplexWanderCop::ms_fHasslePedRange
00523e91 T CTaskComplexWanderCop::LookForStolenCopCars(CPed*)
0061e654 R CTaskComplexWanderCop::ms_iHasslePedFreeTime
0061e64c R CTaskComplexWanderCop::ms_fCrimeDetectionRange
0061e650 R CTaskComplexWanderCop::ms_iCriminalScanFreeTime
00526ec1 W CTaskComplexWanderCop::~CTaskComplexWanderCop()
0035f569 W CTaskComplexWanderCop::~CTaskComplexWanderCop()
005291fd T CTaskInteriorBeInShop::ScanForStuff(CPed*)
005290f9 T CTaskInteriorBeInShop::CTaskInteriorBeInShop(InteriorGroup_c*)
005290f9 T CTaskInteriorBeInShop::CTaskInteriorBeInShop(InteriorGroup_c*)
00529171 T CTaskInteriorBeInShop::~CTaskInteriorBeInShop()
0052916d T CTaskInteriorBeInShop::~CTaskInteriorBeInShop()
0052916d T CTaskInteriorBeInShop::~CTaskInteriorBeInShop()
0052980d T CTaskInteriorGoToInfo::ControlSubTask(CPed*)
0052958d T CTaskInteriorGoToInfo::CreateNextSubTask(CPed*)
00529695 T CTaskInteriorGoToInfo::CreateFirstSubTask(CPed*)
00529519 T CTaskInteriorGoToInfo::CTaskInteriorGoToInfo(InteriorInfo_t*, Interior_c*, unsigned char)
00529519 T CTaskInteriorGoToInfo::CTaskInteriorGoToInfo(InteriorInfo_t*, Interior_c*, unsigned char)
00529549 T CTaskInteriorGoToInfo::~CTaskInteriorGoToInfo()
00529545 T CTaskInteriorGoToInfo::~CTaskInteriorGoToInfo()
00529545 T CTaskInteriorGoToInfo::~CTaskInteriorGoToInfo()
0052a43d T CTaskInteriorLieInBed::ProcessPed(CPed*)
0052a829 T CTaskInteriorLieInBed::FinishAnimCB(CAnimBlendAssociation*, void*)
0052a3e5 T CTaskInteriorLieInBed::MakeAbortable(CPed*, int, CEvent const*)
0052a2c5 T CTaskInteriorLieInBed::CTaskInteriorLieInBed(int, InteriorInfo_t*, unsigned char, unsigned char)
0052a2c5 T CTaskInteriorLieInBed::CTaskInteriorLieInBed(int, InteriorInfo_t*, unsigned char, unsigned char)
0052a34d T CTaskInteriorLieInBed::~CTaskInteriorLieInBed()
0052a319 T CTaskInteriorLieInBed::~CTaskInteriorLieInBed()
0052a319 T CTaskInteriorLieInBed::~CTaskInteriorLieInBed()
005056b1 T CTaskSimpleBikeJacked::ProcessPed(CPed*)
00505695 T CTaskSimpleBikeJacked::MakeAbortable(CPed*, int, CEvent const*)
00505967 T CTaskSimpleBikeJacked::SetPedPosition(CPed*)
0050594d T CTaskSimpleBikeJacked::FinishAnimBikeHitCB(CAnimBlendAssociation*, void*)
005055bd T CTaskSimpleBikeJacked::CTaskSimpleBikeJacked(CVehicle*, int, int, CPed*, bool)
005055bd T CTaskSimpleBikeJacked::CTaskSimpleBikeJacked(CVehicle*, int, int, CPed*, bool)
00505685 T CTaskSimpleBikeJacked::~CTaskSimpleBikeJacked()
00505629 T CTaskSimpleBikeJacked::~CTaskSimpleBikeJacked()
00505629 T CTaskSimpleBikeJacked::~CTaskSimpleBikeJacked()
00505b01 T CTaskSimpleCarFallOut::ProcessPed(CPed*)
00505a35 T CTaskSimpleCarFallOut::MakeAbortable(CPed*, int, CEvent const*)
00505c49 T CTaskSimpleCarFallOut::SetPedPosition(CPed*)
00505c83 T CTaskSimpleCarFallOut::FinishAnimFallOutCB(CAnimBlendAssociation*, void*)
00505bd9 T CTaskSimpleCarFallOut::StartAnim(CPed const*)
00505991 T CTaskSimpleCarFallOut::CTaskSimpleCarFallOut(CVehicle*, int, CTaskUtilityLineUpPedWithCar*)
00505991 T CTaskSimpleCarFallOut::CTaskSimpleCarFallOut(CVehicle*, int, CTaskUtilityLineUpPedWithCar*)
00505a05 T CTaskSimpleCarFallOut::~CTaskSimpleCarFallOut()
005059d9 T CTaskSimpleCarFallOut::~CTaskSimpleCarFallOut()
005059d9 T CTaskSimpleCarFallOut::~CTaskSimpleCarFallOut()
0050372d T CTaskSimpleCarJumpOut::ProcessPed(CPed*)
00503aad T CTaskSimpleCarJumpOut::ComputeAnimID(int&, int&)
005036c1 T CTaskSimpleCarJumpOut::MakeAbortable(CPed*, int, CEvent const*)
00503af9 T CTaskSimpleCarJumpOut::SetPedPosition(CPed*)
00503bcd T CTaskSimpleCarJumpOut::FinishAnimCarJumpOutCB(CAnimBlendAssociation*, void*)
00503a45 T CTaskSimpleCarJumpOut::StartAnim(CPed const*)
005035c5 T CTaskSimpleCarJumpOut::CTaskSimpleCarJumpOut(CVehicle*, int, CTaskUtilityLineUpPedWithCar*)
005035c5 T CTaskSimpleCarJumpOut::CTaskSimpleCarJumpOut(CVehicle*, int, CTaskUtilityLineUpPedWithCar*)
0050367d T CTaskSimpleCarJumpOut::~CTaskSimpleCarJumpOut()
0050363d T CTaskSimpleCarJumpOut::~CTaskSimpleCarJumpOut()
0050363d T CTaskSimpleCarJumpOut::~CTaskSimpleCarJumpOut()
0050209d T CTaskSimpleCarShuffle::ProcessPed(CPed*)
00502081 T CTaskSimpleCarShuffle::MakeAbortable(CPed*, int, CEvent const*)
00502159 T CTaskSimpleCarShuffle::SetPedPosition(CPed*)
00502199 T CTaskSimpleCarShuffle::FinishAnimCarShuffleCB(CAnimBlendAssociation*, void*)
00502105 T CTaskSimpleCarShuffle::StartAnim(CPed const*)
00501fb5 T CTaskSimpleCarShuffle::CTaskSimpleCarShuffle(CVehicle*, int, CTaskUtilityLineUpPedWithCar*)
00501fb5 T CTaskSimpleCarShuffle::CTaskSimpleCarShuffle(CVehicle*, int, CTaskUtilityLineUpPedWithCar*)
0050203d T CTaskSimpleCarShuffle::~CTaskSimpleCarShuffle()
00501ffd T CTaskSimpleCarShuffle::~CTaskSimpleCarShuffle()
00501ffd T CTaskSimpleCarShuffle::~CTaskSimpleCarShuffle()
004eb56d T CTaskSimpleDrownInCar::ProcessPed(CPed*)
004f2985 W CTaskSimpleDrownInCar::MakeAbortable(CPed*, int, CEvent const*)
004f2989 W CTaskSimpleDrownInCar::Serialize()
004eb541 T CTaskSimpleDrownInCar::CTaskSimpleDrownInCar()
004eb541 T CTaskSimpleDrownInCar::CTaskSimpleDrownInCar()
004eb55d T CTaskSimpleDrownInCar::~CTaskSimpleDrownInCar()
004eb559 T CTaskSimpleDrownInCar::~CTaskSimpleDrownInCar()
004eb559 T CTaskSimpleDrownInCar::~CTaskSimpleDrownInCar()
004eaaf9 T CTaskSimpleDuckToggle::ProcessPed(CPed*)
004f2593 W CTaskSimpleDuckToggle::MakeAbortable(CPed*, int, CEvent const*)
004f2599 W CTaskSimpleDuckToggle::Serialize()
004eaac9 T CTaskSimpleDuckToggle::CTaskSimpleDuckToggle(int)
004eaac9 T CTaskSimpleDuckToggle::CTaskSimpleDuckToggle(int)
004eaae9 T CTaskSimpleDuckToggle::~CTaskSimpleDuckToggle()
004eaae5 T CTaskSimpleDuckToggle::~CTaskSimpleDuckToggle()
004eaae5 T CTaskSimpleDuckToggle::~CTaskSimpleDuckToggle()
004967f5 W CTaskSimpleGunControl::CreateTask()
004de169 T CTaskSimpleGunControl::ProcessPed(CPed*)
004de0cd T CTaskSimpleGunControl::MakeAbortable(CPed*, int, CEvent const*)
004de925 T CTaskSimpleGunControl::ChangeFiringTask(signed char, CEntity*, CVector*, CVector*)
006b03ac D CTaskSimpleGunControl::DEFAULT_GUN_ATTACK_PERIOD
004e9895 W CTaskSimpleGunControl::Serialize()
004ddfd5 T CTaskSimpleGunControl::CTaskSimpleGunControl(CEntity*, CVector const*, CVector const*, signed char, short, int)
004ddfd5 T CTaskSimpleGunControl::CTaskSimpleGunControl(CEntity*, CVector const*, CVector const*, signed char, short, int)
004de09d T CTaskSimpleGunControl::~CTaskSimpleGunControl()
004de071 T CTaskSimpleGunControl::~CTaskSimpleGunControl()
004de071 T CTaskSimpleGunControl::~CTaskSimpleGunControl()
0054157d T CTaskSimpleHoldEntity::DropEntity(CPed*, bool)
005418b5 T CTaskSimpleHoldEntity::ProcessPed(CPed*)
0054151d T CTaskSimpleHoldEntity::MakeAbortable(CPed*, int, CEvent const*)
00541dfd T CTaskSimpleHoldEntity::ReleaseEntity()
005421c9 T CTaskSimpleHoldEntity::CanThrowEntity()
00541f19 T CTaskSimpleHoldEntity::SetPedPosition(CPed*)
009ff88c B CTaskSimpleHoldEntity::m_nPutDownTimer
00541cd1 T CTaskSimpleHoldEntity::ChoosePutDownHeight(CPed*)
00542171 T CTaskSimpleHoldEntity::FinishAnimHoldEntityCB(CAnimBlendAssociation*, void*)
005421e1 T CTaskSimpleHoldEntity::PlayAnim(AnimationId, AssocGroupId)
00541e19 T CTaskSimpleHoldEntity::StartAnim(CPed*)
00541339 T CTaskSimpleHoldEntity::CTaskSimpleHoldEntity(CEntity*, CVector const*, unsigned char, unsigned char, AnimationId, AssocGroupId, bool)
00541469 T CTaskSimpleHoldEntity::CTaskSimpleHoldEntity(CEntity*, CVector const*, unsigned char, unsigned char, CAnimBlock*, CAnimBlendHierarchy*, int)
005413c1 T CTaskSimpleHoldEntity::CTaskSimpleHoldEntity(CEntity*, CVector const*, unsigned char, unsigned char, char const*, char const*, int)
00541339 T CTaskSimpleHoldEntity::CTaskSimpleHoldEntity(CEntity*, CVector const*, unsigned char, unsigned char, AnimationId, AssocGroupId, bool)
00541469 T CTaskSimpleHoldEntity::CTaskSimpleHoldEntity(CEntity*, CVector const*, unsigned char, unsigned char, CAnimBlock*, CAnimBlendHierarchy*, int)
005413c1 T CTaskSimpleHoldEntity::CTaskSimpleHoldEntity(CEntity*, CVector const*, unsigned char, unsigned char, char const*, char const*, int)
0054150d T CTaskSimpleHoldEntity::~CTaskSimpleHoldEntity()
00543911 T CTaskSimpleHoldEntity::~CTaskSimpleHoldEntity()
00543911 T CTaskSimpleHoldEntity::~CTaskSimpleHoldEntity()
004f06c5 T CTaskSimpleIKPointArm::CreateIKChain(CPed*)
004f0815 T CTaskSimpleIKPointArm::GetPointAtEntity()
004f0749 T CTaskSimpleIKPointArm::UpdatePointArmInfo(char*, CEntity*, int, RwV3d, float, int)
004f052d T CTaskSimpleIKPointArm::CTaskSimpleIKPointArm(char*, int, CEntity*, int, RwV3d, float, int)
004f052d T CTaskSimpleIKPointArm::CTaskSimpleIKPointArm(char*, int, CEntity*, int, RwV3d, float, int)
004f05c1 T CTaskSimpleIKPointArm::~CTaskSimpleIKPointArm()
004efec9 T CTaskSimpleIKPointArm::~CTaskSimpleIKPointArm()
004efec9 T CTaskSimpleIKPointArm::~CTaskSimpleIKPointArm()
005012ed T CTaskSimplePickUpBike::ProcessPed(CPed*)
005012c5 T CTaskSimplePickUpBike::MakeAbortable(CPed*, int, CEvent const*)
00501479 T CTaskSimplePickUpBike::SetPedPosition(CPed*)
0050148b T CTaskSimplePickUpBike::FinishAnimPickUpBikeCB(CAnimBlendAssociation*, void*)
005013e9 T CTaskSimplePickUpBike::StartAnim(CPed const*)
005011f9 T CTaskSimplePickUpBike::CTaskSimplePickUpBike(CVehicle*, int, CTaskUtilityLineUpPedWithCar*)
005011f9 T CTaskSimplePickUpBike::CTaskSimplePickUpBike(CVehicle*, int, CTaskUtilityLineUpPedWithCar*)
00501281 T CTaskSimplePickUpBike::~CTaskSimplePickUpBike()
00501241 T CTaskSimplePickUpBike::~CTaskSimplePickUpBike()
00501241 T CTaskSimplePickUpBike::~CTaskSimplePickUpBike()
004ea87d T CTaskSimpleStandStill::ProcessPed(CPed*)
004f1e11 W CTaskSimpleStandStill::MakeAbortable(CPed*, int, CEvent const*)
0061e320 R CTaskSimpleStandStill::ms_iStandStillTime
004f2391 W CTaskSimpleStandStill::Serialize()
004ea831 T CTaskSimpleStandStill::CTaskSimpleStandStill(int, bool, bool, float)
004ea831 T CTaskSimpleStandStill::CTaskSimpleStandStill(int, bool, bool, float)
004ea86d T CTaskSimpleStandStill::~CTaskSimpleStandStill()
004f1d49 T CTaskSimpleStandStill::~CTaskSimpleStandStill()
004f1d49 T CTaskSimpleStandStill::~CTaskSimpleStandStill()
004ee635 T CTaskSimpleWaitForBus::ProcessPed(CPed*)
004f37fd W CTaskSimpleWaitForBus::MakeAbortable(CPed*, int, CEvent const*)
0061e328 R CTaskSimpleWaitForBus::ms_fBoardBusThresholdSpeed
004f3801 W CTaskSimpleWaitForBus::Serialize()
004ee605 T CTaskSimpleWaitForBus::CTaskSimpleWaitForBus()
004ee605 T CTaskSimpleWaitForBus::CTaskSimpleWaitForBus()
004ee625 T CTaskSimpleWaitForBus::~CTaskSimpleWaitForBus()
004ee621 T CTaskSimpleWaitForBus::~CTaskSimpleWaitForBus()
004ee621 T CTaskSimpleWaitForBus::~CTaskSimpleWaitForBus()
00a131f8 B CVehicleAnimGroupData::m_vehicleAnimGroups
004849f1 T CVehicleSaveStructure::Extract(CVehicle*)
00484969 T CVehicleSaveStructure::Construct(CVehicle*)
006fa2f0 B CWidgetButtonAnimated::m_pChainHead
006fa2f4 B CWidgetButtonAnimated::m_pChainTail
002b4cb5 T CWidgetButtonAnimated::GetWidgetValue()
002b4c8f T CWidgetButtonAnimated::SetWidgetValue(float)
002b4c31 T CWidgetButtonAnimated::SetWidgetValue2(float, float)
002b4c01 T CWidgetButtonAnimated::AnyObjectEnabled()
002b48b9 T CWidgetButtonAnimated::Draw()
002b4865 T CWidgetButtonAnimated::Update()
002b4cd5 W CWidgetButtonAnimated::GetName()
002b4691 T CWidgetButtonAnimated::CWidgetButtonAnimated(char const*, char const*, WidgetPosition const&, unsigned int, unsigned int, char const*, HIDMapping)
002b4691 T CWidgetButtonAnimated::CWidgetButtonAnimated(char const*, char const*, WidgetPosition const&, unsigned int, unsigned int, char const*, HIDMapping)
002b47ed T CWidgetButtonAnimated::~CWidgetButtonAnimated()
002b4779 T CWidgetButtonAnimated::~CWidgetButtonAnimated()
002b4779 T CWidgetButtonAnimated::~CWidgetButtonAnimated()
002b6121 T CWidgetButtonEnterCar::SetEnterCarVehicleType(int, int, bool, CVector const&, int)
002b653d T CWidgetButtonEnterCar::Draw()
002b662d W CWidgetButtonEnterCar::GetName()
002b6081 T CWidgetButtonEnterCar::CWidgetButtonEnterCar(char const*, WidgetPosition const&)
002b6081 T CWidgetButtonEnterCar::CWidgetButtonEnterCar(char const*, WidgetPosition const&)
002b65e9 W CWidgetButtonEnterCar::~CWidgetButtonEnterCar()
002b65a9 W CWidgetButtonEnterCar::~CWidgetButtonEnterCar()
002b5431 W CWidgetButtonHelpText::Draw()
002b5425 W CWidgetButtonHelpText::GetName()
002b53d1 T CWidgetButtonHelpText::CWidgetButtonHelpText(char const*, WidgetPosition const&)
002b53d1 T CWidgetButtonHelpText::CWidgetButtonHelpText(char const*, WidgetPosition const&)
002b53f9 W CWidgetButtonHelpText::~CWidgetButtonHelpText()
002c207d T CWidgetRegionResponse::Draw()
002c1ee5 T CWidgetRegionResponse::Update()
002c2091 W CWidgetRegionResponse::GetName()
002c1ebd T CWidgetRegionResponse::CWidgetRegionResponse(char const*, WidgetPosition const&)
002c1ebd T CWidgetRegionResponse::CWidgetRegionResponse(char const*, WidgetPosition const&)
002c207f W CWidgetRegionResponse::~CWidgetRegionResponse()
0036ae4d T FxInfoGroundCollide_c::Load(unsigned int, int)
0036ae55 T FxInfoGroundCollide_c::GetValue(float, float, float, float, unsigned char, void*)
0036ae0d T FxInfoGroundCollide_c::FxInfoGroundCollide_c()
0036ae0d T FxInfoGroundCollide_c::FxInfoGroundCollide_c()
0036bf61 W FxInfoGroundCollide_c::~FxInfoGroundCollide_c()
0036bf3d W FxInfoGroundCollide_c::~FxInfoGroundCollide_c()
0046d47d T CAEFrontendAudioEntity::Initialise()
00395ff1 T CAEFrontendAudioEntity::AddAudioEvent(int, float, float)
00397321 T CAEFrontendAudioEntity::UpdateParameters(CAESound*, short)
00395fd5 T CAEFrontendAudioEntity::IsLoadingTuneActive()
00397451 T CAEFrontendAudioEntity::IsRadioTuneSoundActive()
00395fb1 T CAEFrontendAudioEntity::Reset()
00395f9d T CAEFrontendAudioEntity::Terminate()
003aa8c3 T CAETwinLoopSoundEntity::Initialise(short, short, short, CAEAudioEntity*, unsigned short, unsigned short, short, short)
003aa9bd T CAETwinLoopSoundEntity::SwapSounds()
003aac6d T CAETwinLoopSoundEntity::GetEmittedVolume()
003aac3f T CAETwinLoopSoundEntity::SetEmittedVolume(float)
003aa91d T CAETwinLoopSoundEntity::UpdateParameters(CAESound*, short)
003aaca9 T CAETwinLoopSoundEntity::IsTwinLoopPlaying()
003aaa6d T CAETwinLoopSoundEntity::PlayTwinLoopSound(CVector, float, float, float, float, unsigned short)
003aa895 T CAETwinLoopSoundEntity::StopSoundAndForget()
003aabc9 T CAETwinLoopSoundEntity::UpdateTwinLoopSound(CVector, float, float)
003aaa2d T CAETwinLoopSoundEntity::DoSoundsSwitchThisFrame()
003aaa49 T CAETwinLoopSoundEntity::StopSound()
003aa7c9 T CAETwinLoopSoundEntity::CAETwinLoopSoundEntity(short, short, short, CAEAudioEntity*, unsigned short, unsigned short, short, short)
003aa7c9 T CAETwinLoopSoundEntity::CAETwinLoopSoundEntity(short, short, short, CAEAudioEntity*, unsigned short, unsigned short, short, short)
003aa835 T CAETwinLoopSoundEntity::~CAETwinLoopSoundEntity()
003aa835 T CAETwinLoopSoundEntity::~CAETwinLoopSoundEntity()
004bef5d T CCollisionEventScanner::ScanForCollisionEvents(CPed&, CEventGroup*)
0061dc10 R CCollisionEventScanner::ms_fMinVelToDamagePedSqr
0061dc14 R CCollisionEventScanner::ms_fTrailerMinVelToDamagePedSqr
00384e55 T CDamageAtomicModelInfo::CreateInstance(RwMatrixTag*)
00384f2d T CDamageAtomicModelInfo::CreateInstance()
00384f89 T CDamageAtomicModelInfo::DeleteRwObject()
00384e21 T CDamageAtomicModelInfo::SetDamagedAtomic(RpAtomic*)
00820734 B CDamageAtomicModelInfo::m_bCreateDamagedVersion
00384fd5 W CDamageAtomicModelInfo::AsDamageAtomicModelInfoPtr()
00384e11 T CDamageAtomicModelInfo::Init()
00384fd1 W CDamageAtomicModelInfo::~CDamageAtomicModelInfo()
00370735 T CEventEditableResponse::ComputeResponseTaskType(CPed*, bool)
00370569 T CEventEditableResponse::ComputeResponseTaskType(CPedGroup*)
0037070d T CEventEditableResponse::CEventEditableResponse()
00370731 T CEventEditableResponse::~CEventEditableResponse()
00378119 T CEventEditableResponse::~CEventEditableResponse()
00378119 T CEventEditableResponse::~CEventEditableResponse()
006867b0 D CEventGunShotWhizzedBy::ms_fThresholdDist
0037760d T CEventGunShotWhizzedBy::CEventGunShotWhizzedBy(CEntity*, CVector const&, CVector const&, bool)
0037760d T CEventGunShotWhizzedBy::CEventGunShotWhizzedBy(CEntity*, CVector const&, CVector const&, bool)
00377681 T CEventGunShotWhizzedBy::~CEventGunShotWhizzedBy()
00370be5 T CEventGunShotWhizzedBy::~CEventGunShotWhizzedBy()
00370be5 T CEventGunShotWhizzedBy::~CEventGunShotWhizzedBy()
00376bcd T CEventHitByWaterCannon::CEventHitByWaterCannon(CVector const&, CVector const&)
00376bcd T CEventHitByWaterCannon::CEventHitByWaterCannon(CVector const&, CVector const&)
00376c09 T CEventHitByWaterCannon::~CEventHitByWaterCannon()
00378119 T CEventHitByWaterCannon::~CEventHitByWaterCannon()
00378119 T CEventHitByWaterCannon::~CEventHitByWaterCannon()
0037851d W CEventLowAngerAtPlayer::~CEventLowAngerAtPlayer()
0060ffa0 R CEventVehicleCollision::ms_fMaxPlayerImpulse
0060ff9c R CEventVehicleCollision::ms_fDamageThresholdSpeed
0060ffa8 R CEventVehicleCollision::ms_fLowDamageImpulseThreshold
0060ffa4 R CEventVehicleCollision::ms_fHighDamageImpulseThreshold
00370ee9 T CEventVehicleCollision::CEventVehicleCollision(unsigned short, float, CVehicle const*, CVector const&, CVector const&, int, unsigned short)
00370ee9 T CEventVehicleCollision::CEventVehicleCollision(unsigned short, float, CVehicle const*, CVector const&, CVector const&, int, unsigned short)
00370f7d T CEventVehicleCollision::~CEventVehicleCollision()
00370f55 T CEventVehicleCollision::~CEventVehicleCollision()
00370f55 T CEventVehicleCollision::~CEventVehicleCollision()
00374505 T CEventVehicleHitAndRun::CEventVehicleHitAndRun(CPed*, CVehicle*)
00374505 T CEventVehicleHitAndRun::CEventVehicleHitAndRun(CPed*, CVehicle*)
00374571 T CEventVehicleHitAndRun::~CEventVehicleHitAndRun()
0037453d T CEventVehicleHitAndRun::~CEventVehicleHitAndRun()
0037453d T CEventVehicleHitAndRun::~CEventVehicleHitAndRun()
00484da1 T CGangWarsSaveStructure::Extract()
00484bd9 T CGangWarsSaveStructure::Construct()
0028ecc9 T CHIDJoystickMogaPocket::FindUVsFromMapping(char const*, HIDMapping, bool)
0028ea19 T CHIDJoystickMogaPocket::CHIDJoystickMogaPocket(char const*)
0028ea19 T CHIDJoystickMogaPocket::CHIDJoystickMogaPocket(char const*)
0028edb5 W CHIDJoystickMogaPocket::~CHIDJoystickMogaPocket()
008206b4 B CInformGroupEventQueue::ms_informGroupEvents
0037042d T CInformGroupEventQueue::Add(CPed*, CPedGroup*, CEvent*)
0037033d T CInformGroupEventQueue::Init()
003703b5 T CInformGroupEventQueue::Flush()
003706bd T CInformGroupEventQueue::Process()
00370339 T CInformGroupEventQueue::CInformGroupEventQueue()
00370339 T CInformGroupEventQueue::CInformGroupEventQueue()
0037033b T CInformGroupEventQueue::~CInformGroupEventQueue()
0037033b T CInformGroupEventQueue::~CInformGroupEventQueue()
004ac1f7 T CPedAttractorPedPlacer::PlacePedAtEffect(C2dEffect const&, CEntity*, CPed*, float)
004c2c05 T CPedScriptedTaskRecord::GetVacantSlot()
009f010c B CPedScriptedTaskRecord::ms_scriptedTasks
004c2c65 T CPedScriptedTaskRecord::GetRecordAssociatedWithTask(CTask*)
004c2c41 T CPedScriptedTaskRecord::GetRecordAssociatedWithEvent(CEventScriptCommand*)
0048a78d T CPedScriptedTaskRecord::Load()
004897b5 T CPedScriptedTaskRecord::Save()
004c2c89 T CPedScriptedTaskRecord::Process()
004c2f41 T CPedScriptedTaskRecord::GetStatus(CPed const*)
004c2f01 T CPedScriptedTaskRecord::GetStatus(CPed const*, int)
005b839d T CRealTimeShadowManager::CamDistComp(void const*, void const*)
005b8725 T CRealTimeShadowManager::DoShadowThisFrame(CPhysical*)
005b87ad T CRealTimeShadowManager::GetRealTimeShadow(CPhysical*)
005b8669 T CRealTimeShadowManager::ReturnRealTimeShadow(CRealTimeShadow*)
005b831d T CRealTimeShadowManager::Exit()
005b8291 T CRealTimeShadowManager::Init()
005b867b T CRealTimeShadowManager::ReInit()
005b846d T CRealTimeShadowManager::Update()
005b8255 T CRealTimeShadowManager::CRealTimeShadowManager()
005b8255 T CRealTimeShadowManager::CRealTimeShadowManager()
005b8277 T CRealTimeShadowManager::~CRealTimeShadowManager()
005b8277 T CRealTimeShadowManager::~CRealTimeShadowManager()
00335185 T CScriptResourceManager::Initialise()
003351a1 T CScriptResourceManager::AddToResourceManager(int, unsigned int, CRunningScript*)
00335263 T CScriptResourceManager::HasResourceBeenRequested(int, unsigned int)
003351fb T CScriptResourceManager::RemoveFromResourceManager(int, unsigned int, CRunningScript*)
0048b819 T CScriptResourceManager::Load()
0048b6a1 T CScriptResourceManager::Save()
003f043b T CSerializedColTriangle::Fixup(CSerializedColTriangle*, int)
00536741 T CTaskComplexBeInCouple::AbortArmIK(CPed*)
00536685 T CTaskComplexBeInCouple::MakeAbortable(CPed*, int, CEvent const*)
00536911 T CTaskComplexBeInCouple::ControlSubTask(CPed*)
00536f31 T CTaskComplexBeInCouple::GetPartnerSide(CPed*)
005367a1 T CTaskComplexBeInCouple::CreateNextSubTask(CPed*)
00536909 T CTaskComplexBeInCouple::CreateFirstSubTask(CPed*)
005365d5 T CTaskComplexBeInCouple::CTaskComplexBeInCouple(CPed*, unsigned char, unsigned char, unsigned char, float)
005365d5 T CTaskComplexBeInCouple::CTaskComplexBeInCouple(CPed*, unsigned char, unsigned char, unsigned char, float)
00536655 T CTaskComplexBeInCouple::~CTaskComplexBeInCouple()
00536629 T CTaskComplexBeInCouple::~CTaskComplexBeInCouple()
00536629 T CTaskComplexBeInCouple::~CTaskComplexBeInCouple()
00496519 W CTaskComplexDestroyCar::CreateTask()
004e5f11 T CTaskComplexDestroyCar::CreateSubTask(int, CPed*)
004e5e29 T CTaskComplexDestroyCar::MakeAbortable(CPed*, int, CEvent const*)
004e6119 T CTaskComplexDestroyCar::ControlSubTask(CPed*)
004e5ea1 T CTaskComplexDestroyCar::CreateNextSubTask(CPed*)
004e5ffd T CTaskComplexDestroyCar::CreateFirstSubTask(CPed*)
004ea3dd W CTaskComplexDestroyCar::Serialize()
004e5de5 T CTaskComplexDestroyCar::CTaskComplexDestroyCar(CVehicle*, unsigned int, unsigned int, unsigned int)
004e5de5 T CTaskComplexDestroyCar::CTaskComplexDestroyCar(CVehicle*, unsigned int, unsigned int, unsigned int)
004e5e71 T CTaskComplexDestroyCar::~CTaskComplexDestroyCar()
004e5e45 T CTaskComplexDestroyCar::~CTaskComplexDestroyCar()
004e5e45 T CTaskComplexDestroyCar::~CTaskComplexDestroyCar()
0061e530 R CTaskComplexFleeEntity::ms_iFleeTime
00513321 T CTaskComplexFleeEntity::CreateSubTask(int)
005134f1 T CTaskComplexFleeEntity::ControlSubTask(CPed*)
0061e52c R CTaskComplexFleeEntity::ms_fSafeDistance
00513399 T CTaskComplexFleeEntity::CreateNextSubTask(CPed*)
005133b1 T CTaskComplexFleeEntity::CreateFirstSubTask(CPed*)
0061e534 R CTaskComplexFleeEntity::ms_iEntityPosCheckPeriod
0061e538 R CTaskComplexFleeEntity::ms_fEntityPosChangeThreshold
00513269 T CTaskComplexFleeEntity::CTaskComplexFleeEntity(CEntity*, bool, float, int, int, float)
00513269 T CTaskComplexFleeEntity::CTaskComplexFleeEntity(CEntity*, bool, float, int, int, float)
005132f1 T CTaskComplexFleeEntity::~CTaskComplexFleeEntity()
005132c5 T CTaskComplexFleeEntity::~CTaskComplexFleeEntity()
005132c5 T CTaskComplexFleeEntity::~CTaskComplexFleeEntity()
00516331 T CTaskComplexGangLeader::GetDrinkAnim(CPed*)
00516349 T CTaskComplexGangLeader::GetSmokeAnim(CPed*)
00515e91 T CTaskComplexGangLeader::ScanForStuff(CPed*)
005153a9 T CTaskComplexGangLeader::MakeAbortable(CPed*, int, CEvent const*)
00515559 T CTaskComplexGangLeader::ControlSubTask(CPed*)
00515da1 T CTaskComplexGangLeader::TryToPassObject(CPed*, CPedGroup*)
005153d5 T CTaskComplexGangLeader::CreateNextSubTask(CPed*)
00516361 T CTaskComplexGangLeader::DoGangAbuseSpeech(CPed*, CPed*)
00515551 T CTaskComplexGangLeader::CreateFirstSubTask(CPed*)
005163f1 T CTaskComplexGangLeader::DoGangAttackSpeech(CPed*, CPed*)
00515d29 T CTaskComplexGangLeader::ShouldLoadGangAnims()
00515de1 T CTaskComplexGangLeader::GetRandomGangAmbientAnim(CPed*, CEntity*)
005152f1 T CTaskComplexGangLeader::CTaskComplexGangLeader(CPedGroup*)
005152f1 T CTaskComplexGangLeader::CTaskComplexGangLeader(CPedGroup*)
00515365 T CTaskComplexGangLeader::~CTaskComplexGangLeader()
00515325 T CTaskComplexGangLeader::~CTaskComplexGangLeader()
00515325 T CTaskComplexGangLeader::~CTaskComplexGangLeader()
0051ade9 T CTaskComplexPassObject::MakeAbortable(CPed*, int, CEvent const*)
0051b099 T CTaskComplexPassObject::ControlSubTask(CPed*)
0051ae55 T CTaskComplexPassObject::CreateNextSubTask(CPed*)
0051af19 T CTaskComplexPassObject::CreateFirstSubTask(CPed*)
0051ae1d T CTaskComplexPassObject::AbortIK(CPed*)
0051ad49 T CTaskComplexPassObject::CTaskComplexPassObject(CPed*, unsigned char)
0051ad49 T CTaskComplexPassObject::CTaskComplexPassObject(CPed*, unsigned char)
0051adb9 T CTaskComplexPassObject::~CTaskComplexPassObject()
0051ad8d T CTaskComplexPassObject::~CTaskComplexPassObject()
0051ad8d T CTaskComplexPassObject::~CTaskComplexPassObject()
00494be1 W CTaskComplexSeekEntity<CEntitySeekPosCalculator>::CreateTask()
0049853d W CTaskComplexSeekEntity<CEntitySeekPosCalculator>::MakeAbortable(CPed*, int, CEvent const*)
00498c25 W CTaskComplexSeekEntity<CEntitySeekPosCalculator>::ControlSubTask(CPed*)
004989a1 W CTaskComplexSeekEntity<CEntitySeekPosCalculator>::CreateNextSubTask(CPed*)
00498b25 W CTaskComplexSeekEntity<CEntitySeekPosCalculator>::CreateFirstSubTask(CPed*)
0049858d W CTaskComplexSeekEntity<CEntitySeekPosCalculator>::Serialize()
0049843d W CTaskComplexSeekEntity<CEntitySeekPosCalculator>::~CTaskComplexSeekEntity()
00498411 W CTaskComplexSeekEntity<CEntitySeekPosCalculator>::~CTaskComplexSeekEntity()
00495561 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorDriving>::CreateTask()
0049c605 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorDriving>::MakeAbortable(CPed*, int, CEvent const*)
0049cd15 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorDriving>::ControlSubTask(CPed*)
0049ca71 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorDriving>::CreateNextSubTask(CPed*)
0049cc09 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorDriving>::CreateFirstSubTask(CPed*)
0049c655 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorDriving>::Serialize()
0049c4f1 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorDriving>::~CTaskComplexSeekEntity()
0049c4c5 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorDriving>::~CTaskComplexSeekEntity()
00495701 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorFixedPos>::CreateTask()
0049d679 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorFixedPos>::MakeAbortable(CPed*, int, CEvent const*)
0049dd89 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorFixedPos>::ControlSubTask(CPed*)
0049dae5 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorFixedPos>::CreateNextSubTask(CPed*)
0049dc7d W CTaskComplexSeekEntity<CEntitySeekPosCalculatorFixedPos>::CreateFirstSubTask(CPed*)
0049d6c9 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorFixedPos>::Serialize()
0049d565 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorFixedPos>::~CTaskComplexSeekEntity()
0049d539 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorFixedPos>::~CTaskComplexSeekEntity()
00494d71 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorStandard>::CreateTask()
00333fb1 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorStandard>::MakeAbortable(CPed*, int, CEvent const*)
00334415 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorStandard>::ControlSubTask(CPed*)
0033416d W CTaskComplexSeekEntity<CEntitySeekPosCalculatorStandard>::CreateNextSubTask(CPed*)
00334305 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorStandard>::CreateFirstSubTask(CPed*)
00334001 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorStandard>::Serialize()
00333eb1 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorStandard>::~CTaskComplexSeekEntity()
00333e85 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorStandard>::~CTaskComplexSeekEntity()
004950a1 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorXYOffset>::CreateTask()
004994d5 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorXYOffset>::MakeAbortable(CPed*, int, CEvent const*)
00499be5 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorXYOffset>::ControlSubTask(CPed*)
00499941 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorXYOffset>::CreateNextSubTask(CPed*)
00499ad9 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorXYOffset>::CreateFirstSubTask(CPed*)
00499525 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorXYOffset>::Serialize()
004993c1 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorXYOffset>::~CTaskComplexSeekEntity()
00499395 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorXYOffset>::~CTaskComplexSeekEntity()
004953d1 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorVehicleId>::CreateTask()
0049b591 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorVehicleId>::MakeAbortable(CPed*, int, CEvent const*)
0049bca1 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorVehicleId>::ControlSubTask(CPed*)
0049b9fd W CTaskComplexSeekEntity<CEntitySeekPosCalculatorVehicleId>::CreateNextSubTask(CPed*)
0049bb95 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorVehicleId>::CreateFirstSubTask(CPed*)
0049b5e1 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorVehicleId>::Serialize()
0049b48d W CTaskComplexSeekEntity<CEntitySeekPosCalculatorVehicleId>::~CTaskComplexSeekEntity()
0049b461 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorVehicleId>::~CTaskComplexSeekEntity()
00495241 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorEntitySurface>::CreateTask()
0049a535 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorEntitySurface>::MakeAbortable(CPed*, int, CEvent const*)
0049ac3d W CTaskComplexSeekEntity<CEntitySeekPosCalculatorEntitySurface>::ControlSubTask(CPed*)
0049a999 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorEntitySurface>::CreateNextSubTask(CPed*)
0049ab31 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorEntitySurface>::CreateFirstSubTask(CPed*)
0049a585 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorEntitySurface>::Serialize()
0049a435 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorEntitySurface>::~CTaskComplexSeekEntity()
0049a409 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorEntitySurface>::~CTaskComplexSeekEntity()
00494f01 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorRadiusAngleOffset>::CreateTask()
0035d71d W CTaskComplexSeekEntity<CEntitySeekPosCalculatorRadiusAngleOffset>::MakeAbortable(CPed*, int, CEvent const*)
0035db7d W CTaskComplexSeekEntity<CEntitySeekPosCalculatorRadiusAngleOffset>::ControlSubTask(CPed*)
0035d8d9 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorRadiusAngleOffset>::CreateNextSubTask(CPed*)
0035da71 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorRadiusAngleOffset>::CreateFirstSubTask(CPed*)
0035d76d W CTaskComplexSeekEntity<CEntitySeekPosCalculatorRadiusAngleOffset>::Serialize()
0035d611 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorRadiusAngleOffset>::~CTaskComplexSeekEntity()
0035d5e5 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorRadiusAngleOffset>::~CTaskComplexSeekEntity()
00519ad5 T CTaskComplexStareAtPed::ControlSubTask(CPed*)
005199d1 T CTaskComplexStareAtPed::CreateNextSubTask(CPed*)
00519a65 T CTaskComplexStareAtPed::CreateFirstSubTask(CPed*)
0051985d T CTaskComplexStareAtPed::CTaskComplexStareAtPed(CPedGroup*, CPed*, int)
0051985d T CTaskComplexStareAtPed::CTaskComplexStareAtPed(CPedGroup*, CPed*, int)
00519901 T CTaskComplexStareAtPed::~CTaskComplexStareAtPed()
005198b9 T CTaskComplexStareAtPed::~CTaskComplexStareAtPed()
005198b9 T CTaskComplexStareAtPed::~CTaskComplexStareAtPed()
00532451 T CTaskComplexStuckInAir::CreateSubTask(int, CPed*)
00532665 T CTaskComplexStuckInAir::ControlSubTask(CPed*)
005325cd T CTaskComplexStuckInAir::CreateNextSubTask(CPed*)
0053264d T CTaskComplexStuckInAir::CreateFirstSubTask(CPed*)
00533841 W CTaskComplexStuckInAir::Serialize()
00532425 T CTaskComplexStuckInAir::CTaskComplexStuckInAir()
00532425 T CTaskComplexStuckInAir::CTaskComplexStuckInAir()
00532441 T CTaskComplexStuckInAir::~CTaskComplexStuckInAir()
0053243d T CTaskComplexStuckInAir::~CTaskComplexStuckInAir()
0053243d T CTaskComplexStuckInAir::~CTaskComplexStuckInAir()
004f12ad T CTaskComplexUseGoggles::MakeAbortable(CPed*, int, CEvent const*)
004f1351 T CTaskComplexUseGoggles::ControlSubTask(CPed*)
004f12b9 T CTaskComplexUseGoggles::CreateNextSubTask(CPed*)
004f12f5 T CTaskComplexUseGoggles::CreateFirstSubTask(CPed*)
004f4119 W CTaskComplexUseGoggles::Serialize()
004f1281 T CTaskComplexUseGoggles::CTaskComplexUseGoggles()
004f1281 T CTaskComplexUseGoggles::CTaskComplexUseGoggles()
004f129d T CTaskComplexUseGoggles::~CTaskComplexUseGoggles()
004f1299 T CTaskComplexUseGoggles::~CTaskComplexUseGoggles()
004f1299 T CTaskComplexUseGoggles::~CTaskComplexUseGoggles()
004ee5ff T CTaskComplexWaitForBus::ControlSubTask(CPed*)
004ee585 T CTaskComplexWaitForBus::CreateNextSubTask(CPed*)
004ee561 T CTaskComplexWaitForBus::CreateFirstSubTask(CPed*)
004f376d W CTaskComplexWaitForBus::Serialize()
004ee531 T CTaskComplexWaitForBus::CTaskComplexWaitForBus()
004ee531 T CTaskComplexWaitForBus::CTaskComplexWaitForBus()
004ee551 T CTaskComplexWaitForBus::~CTaskComplexWaitForBus()
004ee54d T CTaskComplexWaitForBus::~CTaskComplexWaitForBus()
004ee54d T CTaskComplexWaitForBus::~CTaskComplexWaitForBus()
005363e1 T CTaskComplexWaitForPed::MakeAbortable(CPed*, int, CEvent const*)
0053643d T CTaskComplexWaitForPed::ControlSubTask(CPed*)
005363e5 T CTaskComplexWaitForPed::CreateNextSubTask(CPed*)
005363e9 T CTaskComplexWaitForPed::CreateFirstSubTask(CPed*)
0053633d T CTaskComplexWaitForPed::CTaskComplexWaitForPed(CPed*, float, int, unsigned char)
0053633d T CTaskComplexWaitForPed::CTaskComplexWaitForPed(CPed*, float, int, unsigned char)
005363b1 T CTaskComplexWaitForPed::~CTaskComplexWaitForPed()
00536385 T CTaskComplexWaitForPed::~CTaskComplexWaitForPed()
00536385 T CTaskComplexWaitForPed::~CTaskComplexWaitForPed()
00514bb9 W CTaskComplexWanderFlee::ScanForStuff(CPed*)
0051293d T CTaskComplexWanderFlee::ControlSubTask(CPed*)
005128f9 T CTaskComplexWanderFlee::CTaskComplexWanderFlee(int, unsigned char)
005128f9 T CTaskComplexWanderFlee::CTaskComplexWanderFlee(int, unsigned char)
0051292d T CTaskComplexWanderFlee::~CTaskComplexWanderFlee()
00512929 T CTaskComplexWanderFlee::~CTaskComplexWanderFlee()
00512929 T CTaskComplexWanderFlee::~CTaskComplexWanderFlee()
00521a45 T CTaskComplexWanderGang::CanJoinGang()
00528c95 W CTaskComplexWanderGang::ScanForStuff(CPed*)
00521a8d T CTaskComplexWanderGang::GetDistanceSqToNode(CPed*)
005219d9 T CTaskComplexWanderGang::CTaskComplexWanderGang(int, unsigned char, int, bool, float)
005219d9 T CTaskComplexWanderGang::CTaskComplexWanderGang(int, unsigned char, int, bool, float)
00528c09 W CTaskComplexWanderGang::~CTaskComplexWanderGang()
005189ed T CTaskGangHassleVehicle::ControlSubTask(CPed*)
00518939 T CTaskGangHassleVehicle::CalcTargetOffset()
00519301 T CTaskGangHassleVehicle::GetTargetHeading(CPed*)
00518639 T CTaskGangHassleVehicle::CreateNextSubTask(CPed*)
00518759 T CTaskGangHassleVehicle::CreateFirstSubTask(CPed*)
005184f5 T CTaskGangHassleVehicle::CTaskGangHassleVehicle(CVehicle*, int, unsigned char, float, float)
005184f5 T CTaskGangHassleVehicle::CTaskGangHassleVehicle(CVehicle*, int, unsigned char, float, float)
005185c1 T CTaskGangHassleVehicle::~CTaskGangHassleVehicle()
00518559 T CTaskGangHassleVehicle::~CTaskGangHassleVehicle()
00518559 T CTaskGangHassleVehicle::~CTaskGangHassleVehicle()
00528ecd T CTaskInteriorBeInHouse::ControlSubTask(CPed*)
00528cfd T CTaskInteriorBeInHouse::CreateNextSubTask(CPed*)
00528e89 T CTaskInteriorBeInHouse::CreateFirstSubTask(CPed*)
00528d4d T CTaskInteriorBeInHouse::GetInfoForPedToUse(CPed*, int*)
00528c99 T CTaskInteriorBeInHouse::CTaskInteriorBeInHouse(InteriorGroup_c*)
00528c99 T CTaskInteriorBeInHouse::CTaskInteriorBeInHouse(InteriorGroup_c*)
00528cc1 T CTaskInteriorBeInHouse::~CTaskInteriorBeInHouse()
00528cbd T CTaskInteriorBeInHouse::~CTaskInteriorBeInHouse()
00528cbd T CTaskInteriorBeInHouse::~CTaskInteriorBeInHouse()
0052a9ad T CTaskInteriorSitAtDesk::ProcessPed(CPed*)
0052ae55 T CTaskInteriorSitAtDesk::FinishAnimCB(CAnimBlendAssociation*, void*)
0052a96d T CTaskInteriorSitAtDesk::MakeAbortable(CPed*, int, CEvent const*)
0052ae95 T CTaskInteriorSitAtDesk::StartRandomLoopAnim(CPed*, float)
0052af91 T CTaskInteriorSitAtDesk::StartRandomOneOffAnim(CPed*)
0052a869 T CTaskInteriorSitAtDesk::CTaskInteriorSitAtDesk(int, InteriorInfo_t*, unsigned char)
0052a869 T CTaskInteriorSitAtDesk::CTaskInteriorSitAtDesk(int, InteriorInfo_t*, unsigned char)
0052a8e5 T CTaskInteriorSitAtDesk::~CTaskInteriorSitAtDesk()
0052a8b1 T CTaskInteriorSitAtDesk::~CTaskInteriorSitAtDesk()
0052a8b1 T CTaskInteriorSitAtDesk::~CTaskInteriorSitAtDesk()
004f0a39 T CTaskSimpleClearLookAt::ProcessPed(CPed*)
004f0a35 T CTaskSimpleClearLookAt::MakeAbortable(CPed*, int, CEvent const*)
004f3f19 W CTaskSimpleClearLookAt::Serialize()
004f0a09 T CTaskSimpleClearLookAt::CTaskSimpleClearLookAt()
004f0a09 T CTaskSimpleClearLookAt::CTaskSimpleClearLookAt()
004f0a25 T CTaskSimpleClearLookAt::~CTaskSimpleClearLookAt()
004f0a21 T CTaskSimpleClearLookAt::~CTaskSimpleClearLookAt()
004f0a21 T CTaskSimpleClearLookAt::~CTaskSimpleClearLookAt()
0050b225 T CTaskSimpleEvasiveDive::ProcessPed(CPed*)
0050b1dd T CTaskSimpleEvasiveDive::MakeAbortable(CPed*, int, CEvent const*)
0050b2ed T CTaskSimpleEvasiveDive::FinishAnimEvasiveDiveCB(CAnimBlendAssociation*, void*)
0050f1cd W CTaskSimpleEvasiveDive::Serialize()
0050b245 T CTaskSimpleEvasiveDive::StartAnim(CPed*)
0050b121 T CTaskSimpleEvasiveDive::CTaskSimpleEvasiveDive(CVehicle*)
0050b121 T CTaskSimpleEvasiveDive::CTaskSimpleEvasiveDive(CVehicle*)
0050b199 T CTaskSimpleEvasiveDive::~CTaskSimpleEvasiveDive()
0050b159 T CTaskSimpleEvasiveDive::~CTaskSimpleEvasiveDive()
0050b159 T CTaskSimpleEvasiveDive::~CTaskSimpleEvasiveDive()
00492375 W CTaskSimpleEvasiveStep::CreateTask()
0050ae8d T CTaskSimpleEvasiveStep::ProcessPed(CPed*)
0050ae55 T CTaskSimpleEvasiveStep::MakeAbortable(CPed*, int, CEvent const*)
0050af35 T CTaskSimpleEvasiveStep::FinishAnimEvasiveStepCB(CAnimBlendAssociation*, void*)
0050ee81 W CTaskSimpleEvasiveStep::Serialize()
0050af01 T CTaskSimpleEvasiveStep::StartAnim(CPed*)
0050ad99 T CTaskSimpleEvasiveStep::CTaskSimpleEvasiveStep(CEntity*)
0050ad99 T CTaskSimpleEvasiveStep::CTaskSimpleEvasiveStep(CEntity*)
0050ae11 T CTaskSimpleEvasiveStep::~CTaskSimpleEvasiveStep()
0050add1 T CTaskSimpleEvasiveStep::~CTaskSimpleEvasiveStep()
0050add1 T CTaskSimpleEvasiveStep::~CTaskSimpleEvasiveStep()
0032ec91 W CTaskSimpleFinishBrain::Serialize()
0032ec53 W CTaskSimpleFinishBrain::~CTaskSimpleFinishBrain()
00496931 W CTaskSimpleGangDriveBy::CreateTask()
004e4625 T CTaskSimpleGangDriveBy::ManageAnim(CPed*)
004e47c5 T CTaskSimpleGangDriveBy::ProcessPed(CPed*)
004e4e71 T CTaskSimpleGangDriveBy::PlayerTarget(CPed*)
006b03b4 D CTaskSimpleGangDriveBy::ANIM_LOOP_END
004e5021 T CTaskSimpleGangDriveBy::LookForTarget(CPed*)
004e453d T CTaskSimpleGangDriveBy::MakeAbortable(CPed*, int, CEvent const*)
006b03b8 D CTaskSimpleGangDriveBy::ANIM_LOOP_FIRE
006b03b0 D CTaskSimpleGangDriveBy::ANIM_LOOP_START
004e5dd9 T CTaskSimpleGangDriveBy::FinishAnimGangDriveByCB(CAnimBlendAssociation*, void*)
004e5ced T CTaskSimpleGangDriveBy::LineOfSightClearForAttack(CPed*, CVector&)
004e595d T CTaskSimpleGangDriveBy::AimGun(CPed*)
004e544d T CTaskSimpleGangDriveBy::FireGun(CPed*)
004ea1a1 W CTaskSimpleGangDriveBy::Serialize()
004e43bd T CTaskSimpleGangDriveBy::CTaskSimpleGangDriveBy(CEntity*, CVector const*, float, signed char, signed char, bool)
004e43bd T CTaskSimpleGangDriveBy::CTaskSimpleGangDriveBy(CEntity*, CVector const*, float, signed char, signed char, bool)
004e44c9 T CTaskSimpleGangDriveBy::~CTaskSimpleGangDriveBy()
004e4459 T CTaskSimpleGangDriveBy::~CTaskSimpleGangDriveBy()
004e4459 T CTaskSimpleGangDriveBy::~CTaskSimpleGangDriveBy()
00497351 W CTaskSimpleHitFromBack::Serialize()
00497301 W CTaskSimpleHitFromBack::~CTaskSimpleHitFromBack()
004975bd W CTaskSimpleHitFromLeft::Serialize()
0049756d W CTaskSimpleHitFromLeft::~CTaskSimpleHitFromLeft()
004ea9ad T CTaskSimpleOnEscalator::ProcessPed(CPed*)
004f1e35 W CTaskSimpleOnEscalator::Serialize()
004f1dc1 W CTaskSimpleOnEscalator::~CTaskSimpleOnEscalator()
00357971 W CTaskSimpleScratchHead::Serialize()
00357921 W CTaskSimpleScratchHead::~CTaskSimpleScratchHead()
004e88f5 T CTaskSimpleStealthKill::ManageAnim(CPed*)
004e87d9 T CTaskSimpleStealthKill::ProcessPed(CPed*)
004e8749 T CTaskSimpleStealthKill::MakeAbortable(CPed*, int, CEvent const*)
004e8a85 T CTaskSimpleStealthKill::FinishAnimStealthKillCB(CAnimBlendAssociation*, void*)
004e8679 T CTaskSimpleStealthKill::CTaskSimpleStealthKill(bool, CPed*, AssocGroupId)
004e8679 T CTaskSimpleStealthKill::CTaskSimpleStealthKill(bool, CPed*, AssocGroupId)
004e8705 T CTaskSimpleStealthKill::~CTaskSimpleStealthKill()
004e86c5 T CTaskSimpleStealthKill::~CTaskSimpleStealthKill()
004e86c5 T CTaskSimpleStealthKill::~CTaskSimpleStealthKill()
002b5e41 T CWidgetButtonTargeting::Update()
002b5e71 W CWidgetButtonTargeting::GetName()
002b5e19 T CWidgetButtonTargeting::CWidgetButtonTargeting(char const*, WidgetPosition const&)
002b5e19 T CWidgetButtonTargeting::CWidgetButtonTargeting(char const*, WidgetPosition const&)
002b5e45 W CWidgetButtonTargeting::~CWidgetButtonTargeting()
002a343d W KeyboardControlsScreen::GetScrollY()
002a3431 W KeyboardControlsScreen::GetMenuLeft()
002a3521 W KeyboardControlsScreen::IsScrolling()
002a3589 W KeyboardControlsScreen::WhitelistAdd(HIDMapping, HIDMapping)
002a3489 W KeyboardControlsScreen::GetScissorRect()
002a3439 W KeyboardControlsScreen::LoopSelections()
002a3e9d W KeyboardControlsScreen::ManageScrolling(float)
0029f9d5 W KeyboardControlsScreen::DoOnFootMappings()
002a0cad W KeyboardControlsScreen::DoVehicleMappings()
002a3bf1 W KeyboardControlsScreen::GetMappingFromTag(char const*)
002a3b57 W KeyboardControlsScreen::IsConflictedControl(char const*)
002a3a49 W KeyboardControlsScreen::KeyboardMappingSelection::HandleInput(SelectScreen*, float)
002a37a5 W KeyboardControlsScreen::KeyboardMappingSelection::Render(SelectScreen*, CVector2D, CVector2D, float)
002a379f W KeyboardControlsScreen::KeyboardMappingSelection::~KeyboardMappingSelection()
002a33d1 W KeyboardControlsScreen::OnBack()
002a2b65 W KeyboardControlsScreen::Render(int)
002a273d W KeyboardControlsScreen::Update(float)
002a3481 W KeyboardControlsScreen::GetEndY()
002a3449 W KeyboardControlsScreen::GetYSize(int)
002a3c7d W KeyboardControlsScreen::RemapKey(OSKeyboardKey, MouseButtons)
002a3441 W KeyboardControlsScreen::GetStartY()
0029f8c1 W KeyboardControlsScreen::KeyboardControlsScreen()
002a26b9 W KeyboardControlsScreen::~KeyboardControlsScreen()
002a2639 W KeyboardControlsScreen::~KeyboardControlsScreen()
001e9c65 T TextureDatabaseRuntime::GetTexture(char const*)
001e9c01 T TextureDatabaseRuntime::Unregister(TextureDatabaseRuntime*)
006bd174 B TextureDatabaseRuntime::registered
001eac0d T TextureDatabaseRuntime::GetDatabase(char const*)
001eac85 T TextureDatabaseRuntime::ListOverrun()
001ea01d T TextureDatabaseRuntime::SortEntries(bool)
006bd1dc B TextureDatabaseRuntime::isWriteMode
001e9091 T TextureDatabaseRuntime::GetRWTexture(int)
001ea00d T TextureDatabaseRuntime::SetWriteMode(bool)
006bd18c B TextureDatabaseRuntime::storedTexels
001ea4d9 T TextureDatabaseRuntime::ReloadEntries()
001e9995 T TextureDatabaseRuntime::SetAsRendered(unsigned int)
001e9a37 T TextureDatabaseRuntime::StopStreaming(unsigned int)
006bd190 B TextureDatabaseRuntime::curParentName
001e9475 T TextureDatabaseRuntime::CancelDeletion(unsigned int)
001e9779 T TextureDatabaseRuntime::DeleteTextures(unsigned int)
001e9d89 T TextureDatabaseRuntime::GetDatabaseFor(TextureDatabaseEntry*, unsigned int*)
006bd1d0 B TextureDatabaseRuntime::detailTextures
001e9149 T TextureDatabaseRuntime::LoadFullTexture(unsigned int)
001e9519 T TextureDatabaseRuntime::UpdateStreaming(float, bool)
001e9add T TextureDatabaseRuntime::QueueForDeletion(unsigned int)
001e9375 T TextureDatabaseRuntime::StreamFullTexture(unsigned int)
001e9e91 T TextureDatabaseRuntime::CanUnloadTextureEntry(TextureDatabaseEntry*)
001e9e05 T TextureDatabaseRuntime::RenderingTextureEntry(TextureDatabaseEntry*)
001e9835 T TextureDatabaseRuntime::UpdateTextureStreaming(unsigned int, unsigned int)
001e98c7 T TextureDatabaseRuntime::MarkTexturesAsUnrendered()
001ea865 T TextureDatabaseRuntime::Load(char const*, bool, TextureDatabaseFormat)
001eabd5 T TextureDatabaseRuntime::Unload()
006bd180 B TextureDatabaseRuntime::loaded
001e8ff9 T TextureDatabaseRuntime::GetEntry(char const*, bool&)
001e9b49 T TextureDatabaseRuntime::Register(TextureDatabaseRuntime*)
001e94b5 T TextureDatabaseRuntime::FullyLoad()
001ea855 T TextureDatabaseRuntime::~TextureDatabaseRuntime()
001ea639 T TextureDatabaseRuntime::~TextureDatabaseRuntime()
001ea639 T TextureDatabaseRuntime::~TextureDatabaseRuntime()
00592bf1 T WaterCreatureManager_c::TryToExitGroup(WaterCreature_c*)
006b1438 D WaterCreatureManager_c::ms_waterCreatureInfos
005931fd T WaterCreatureManager_c::CanAddWaterCreatureAtPos(int, CVector)
00593161 T WaterCreatureManager_c::GetRandomWaterCreatureId()
00593295 T WaterCreatureManager_c::TryToFreeUpWaterCreatures(int)
00592d49 T WaterCreatureManager_c::Exit()
00592d17 T WaterCreatureManager_c::Init()
00592dc9 T WaterCreatureManager_c::Update(float)
00592cb1 T WaterCreatureManager_c::WaterCreatureManager_c()
00592cb1 T WaterCreatureManager_c::WaterCreatureManager_c()
00592ce9 T WaterCreatureManager_c::~WaterCreatureManager_c()
00592ce9 T WaterCreatureManager_c::~WaterCreatureManager_c()
0046d341 T CAEAmbienceTrackManager::Initialise(int)
003917dd T CAEAmbienceTrackManager::CheckForPause()
00391869 T CAEAmbienceTrackManager::StopAmbienceTrack()
00391799 T CAEAmbienceTrackManager::StartTrackPlayback()
003918ad T CAEAmbienceTrackManager::IsAmbienceRadioActive()
0039187b T CAEAmbienceTrackManager::IsAmbienceTrackActive()
00391889 T CAEAmbienceTrackManager::GetAmbienceTrackStatus()
0039101d T CAEAmbienceTrackManager::UpdateAmbienceTrackAndVolume()
003918b7 T CAEAmbienceTrackManager::PlaySpecialMissionAmbienceTrack(int)
003918bb T CAEAmbienceTrackManager::StopSpecialMissionAmbienceTrack()
00391855 T CAEAmbienceTrackManager::Reset()
00390ddd T CAEAmbienceTrackManager::Service(int)
0046d947 T CAECollisionAudioEntity::Initialise()
0039444d T CAECollisionAudioEntity::ReportBulletHit(CEntity*, unsigned char, CVector&, float)
003936c5 T CAECollisionAudioEntity::ReportCollision(CEntity*, CEntity*, unsigned char, unsigned char, CVector&, CVector*, float, float, unsigned char, unsigned char)
00394e85 T CAECollisionAudioEntity::UpdateParameters(CAESound*, short)
00394c65 T CAECollisionAudioEntity::ReportWaterSplash(CVector, float)
003949b5 T CAECollisionAudioEntity::ReportWaterSplash(CPhysical*, float, unsigned char)
0039369d T CAECollisionAudioEntity::InitialisePostLoading()
00394fb5 T CAECollisionAudioEntity::ChooseCollisionSoundID(unsigned char)
00395011 T CAECollisionAudioEntity::AddCollisionSoundToList(CEntity*, CEntity*, unsigned char, unsigned char, CAESound*, int)
00393db5 T CAECollisionAudioEntity::GetCollisionSoundStatus(CEntity*, CEntity*, unsigned char, unsigned char, int*)
00394699 T CAECollisionAudioEntity::ReportObjectDestruction(CEntity*)
003940b1 T CAECollisionAudioEntity::PlayLoopingCollisionSound(CEntity*, CEntity*, unsigned char, unsigned char, float, CVector&, unsigned char)
00393a99 T CAECollisionAudioEntity::PlayOneShotCollisionSound(CEntity*, CEntity*, unsigned char, unsigned char, float, CVector&)
003948bd T CAECollisionAudioEntity::ReportGlassCollisionEvent(int, CVector&, unsigned int)
003944ad T CAECollisionAudioEntity::PlayBulletHitCollisionSound(unsigned char, CVector&, float)
00393e0d T CAECollisionAudioEntity::UpdateLoopingCollisionSound(CAESound*, CEntity*, CEntity*, unsigned char, unsigned char, float, CVector&, unsigned char)
00395005 T CAECollisionAudioEntity::AddCollisionSoundIDToHistory(unsigned char, short)
00394f71 T CAECollisionAudioEntity::GetSurfaceHardnessVolumeOffset(unsigned char)
00394e31 T CAECollisionAudioEntity::Reset()
00394db9 T CAECollisionAudioEntity::Service()
0046d311 T CAECutsceneTrackManager::Initialise(int)
00395359 T CAECutsceneTrackManager::PauseTrack(unsigned char)
0039523d T CAECutsceneTrackManager::CheckForPause()
00395349 T CAECutsceneTrackManager::PreloadBeatTrack(short, unsigned char)
00395307 T CAECutsceneTrackManager::StopCutsceneTrack()
003951ed T CAECutsceneTrackManager::StartTrackPlayback()
00395289 T CAECutsceneTrackManager::PreloadCutsceneTrack(short, unsigned char)
00395317 T CAECutsceneTrackManager::IsCutsceneTrackActive()
00395325 T CAECutsceneTrackManager::GetCutsceneTrackStatus()
00395301 T CAECutsceneTrackManager::PlayPreloadedCutsceneTrack()
00395085 T CAECutsceneTrackManager::Service(int)
00395919 T CAEExplosionAudioEntity::AddAudioEvent(int, CVector&, float)
0046d845 T CAEExplosionAudioEntity::StaticInitialise()
00395b99 T CAEExplosionAudioEntity::UpdateParameters(CAESound*, short)
0039d3bb T CAEPedSpeechAudioEntity::GetPedType()
0039ceb9 T CAEPedSpeechAudioEntity::Initialise(CEntity*)
0039a271 T CAEPedSpeechAudioEntity::AddSayEvent(int, short, unsigned int, float, unsigned char, unsigned char, unsigned char)
0039d11b T CAEPedSpeechAudioEntity::GetPedTalking()
0039d4f1 T CAEPedSpeechAudioEntity::GetRepeatTime(short)
00944eae B CAEPedSpeechAudioEntity::s_Conversation
00944b98 B CAEPedSpeechAudioEntity::s_PhraseMemory
00944ec8 B CAEPedSpeechAudioEntity::s_nCJBasicMood
0039d141 T CAEPedSpeechAudioEntity::EnablePedSpeech()
0039c4c1 T CAEPedSpeechAudioEntity::GetAudioPedType(char*)
0039ab35 T CAEPedSpeechAudioEntity::GetNextPlayTime(short)
0039d0a9 T CAEPedSpeechAudioEntity::GetSexFromModel(int)
0039d46d T CAEPedSpeechAudioEntity::GetVoiceForMood(short)
0039d545 T CAEPedSpeechAudioEntity::PlayLoadedSound()
0039b141 T CAEPedSpeechAudioEntity::SetNextPlayTime(short)
00944ec2 B CAEPedSpeechAudioEntity::s_bForceAudible
0039d12b T CAEPedSpeechAudioEntity::DisablePedSpeech(short)
0039ca39 T CAEPedSpeechAudioEntity::GetCurrentCJMood()
0039d4cd T CAEPedSpeechAudioEntity::GetNextMoodToUse(short)
0046d5c1 T CAEPedSpeechAudioEntity::StaticInitialise()
0039b83d T CAEPedSpeechAudioEntity::UpdateParameters(CAESound*, short)
00944e98 B CAEPedSpeechAudioEntity::s_NextSpeechSlot
00944df0 B CAEPedSpeechAudioEntity::s_PedSpeechSlots
00944eca B CAEPedSpeechAudioEntity::s_nCJGangBanging
00944ece B CAEPedSpeechAudioEntity::s_nCJWellDressed
0039b49d T CAEPedSpeechAudioEntity::AddScriptSayEvent(int, int, unsigned char, unsigned char, unsigned char)
0039c145 T CAEPedSpeechAudioEntity::GetAllocatedVoice()
0039b3b1 T CAEPedSpeechAudioEntity::LoadAndPlaySpeech(unsigned int)
0039c14d T CAEPedSpeechAudioEntity::SetUpConversation()
0039a875 T CAEPedSpeechAudioEntity::StopCurrentSpeech()
0039ca29 T CAEPedSpeechAudioEntity::EnableAllPedSpeech()
0039adb5 T CAEPedSpeechAudioEntity::GetSoundAndBankIDs(short, short*)
00944ec1 B CAEPedSpeechAudioEntity::s_bAPlayerSpeaking
0039ca19 T CAEPedSpeechAudioEntity::DisableAllPedSpeech()
0039d469 T CAEPedSpeechAudioEntity::GetSexForSpecialPed(unsigned int)
0039a84d T CAEPedSpeechAudioEntity::IsGlobalContextPain(short)
0039d3cf T CAEPedSpeechAudioEntity::IsPedFemaleForAudio()
00944e9c B CAEPedSpeechAudioEntity::s_pConversationPed1
00944ea0 B CAEPedSpeechAudioEntity::s_pConversationPed2
00944ebe B CAEPedSpeechAudioEntity::s_ConversationLength
00944ec0 B CAEPedSpeechAudioEntity::s_bAllSpeechDisabled
0039d379 T CAEPedSpeechAudioEntity::WillPedChatAboutTopic(short)
00944ec4 B CAEPedSpeechAudioEntity::s_nCJMoodOverrideTime
0039d179 T CAEPedSpeechAudioEntity::CanPedHoldConversation()
0039d241 T CAEPedSpeechAudioEntity::CanPedSayGlobalContext(short)
0039c321 T CAEPedSpeechAudioEntity::ReleasePedConversation()
0039bedd T CAEPedSpeechAudioEntity::RequestPedConversation(CPed*, CPed*)
0039b6ed T CAEPedSpeechAudioEntity::CanWePlayScriptedSpeech()
00944ea4 B CAEPedSpeechAudioEntity::s_pConversationPedSlot1
00944ea6 B CAEPedSpeechAudioEntity::s_pConversationPedSlot2
0039d321 T CAEPedSpeechAudioEntity::GetSpecificSpeechContext(short, short)
0039cff1 T CAEPedSpeechAudioEntity::GetVoiceAndTypeFromModel(int)
00944ea8 B CAEPedSpeechAudioEntity::s_pPlayerConversationPed
0039d6e1 T CAEPedSpeechAudioEntity::GetNumSlotsPlayingContext(short)
0039be01 T CAEPedSpeechAudioEntity::ReleasePlayerConversation()
0039bccd T CAEPedSpeechAudioEntity::RequestPlayerConversation(CPed*)
0039ccad T CAEPedSpeechAudioEntity::IsCJDressedInForGangSpeech()
00944eac B CAEPedSpeechAudioEntity::s_bPedConversationHappening
0039ab71 T CAEPedSpeechAudioEntity::CanWePlayGlobalSpeechContext(short)
0039b1dd T CAEPedSpeechAudioEntity::GetSpeechContextVolumeOffset(short)
0039d3e1 T CAEPedSpeechAudioEntity::GetVoiceAndTypeForSpecialPed(unsigned int)
0039d4ed T CAEPedSpeechAudioEntity::IsGlobalContextUberImportant(short)
0039d167 T CAEPedSpeechAudioEntity::EnablePedSpeechForScriptSpeech()
00944ead B CAEPedSpeechAudioEntity::s_bPlayerConversationHappening
0039d151 T CAEPedSpeechAudioEntity::DisablePedSpeechForScriptSpeech(short)
0039bb51 T CAEPedSpeechAudioEntity::ReservePedConversationSpeechSlots()
0039b7fd T CAEPedSpeechAudioEntity::GetSoundAndBankIDsForScriptedSpeech(int)
0039bc35 T CAEPedSpeechAudioEntity::ReservePlayerConversationSpeechSlot()
0039a9d1 T CAEPedSpeechAudioEntity::IsGlobalContextImportantForStreaming(short)
0039a829 T CAEPedSpeechAudioEntity::IsGlobalContextImportantForWidescreen(short)
0039a85d T CAEPedSpeechAudioEntity::IsGlobalContextImportantForInterupting(short)
0039bafd T CAEPedSpeechAudioEntity::Reset()
0039ba05 T CAEPedSpeechAudioEntity::Service()
0039c561 T CAEPedSpeechAudioEntity::GetVoice(char*, short)
00944ecc B CAEPedSpeechAudioEntity::s_nCJFat
0039ce3d T CAEPedSpeechAudioEntity::SetCJMood(short, unsigned int, short, short, short)
0039d0dd T CAEPedSpeechAudioEntity::Terminate()
0039a225 T CAEPedSpeechAudioEntity::CAEPedSpeechAudioEntity()
0039a225 T CAEPedSpeechAudioEntity::CAEPedSpeechAudioEntity()
0039df29 T CAEPedWeaponAudioEntity::Initialise(CEntity*)
0039deb1 T CAEPedWeaponAudioEntity::AddAudioEvent(int)
0039df4d T CAEPedWeaponAudioEntity::Service()
0039df3f T CAEPedWeaponAudioEntity::Terminate()
002cb0c9 T CCustomBuildingPipeline::CreatePipe()
002cb151 T CCustomBuildingPipeline::DestroyPipe()
0070bf48 B CCustomBuildingPipeline::ObjPipeline
002cb41d T CCustomBuildingPipeline::SetFxEnvScale(RpMaterial*, float, float)
002cb469 T CCustomBuildingPipeline::GetFxEnvScaleX(RpMaterial*)
002cb4a5 T CCustomBuildingPipeline::GetFxEnvScaleY(RpMaterial*)
002cb299 T CCustomBuildingPipeline::GetFxEnvTexture(RpMaterial*)
002cb211 T CCustomBuildingPipeline::SetFxEnvTexture(RpMaterial*, RwTexture*)
002cb4e1 T CCustomBuildingPipeline::SetFxEnvTransScl(RpMaterial*, float, float)
002cb25d T CCustomBuildingPipeline::GetFxEnvShininess(RpMaterial*)
002cb52d T CCustomBuildingPipeline::GetFxEnvTransSclX(RpMaterial*)
002cb569 T CCustomBuildingPipeline::GetFxEnvTransSclY(RpMaterial*)
002cb5a5 T CCustomBuildingPipeline::SetFxEnvShininess(RpMaterial*, float)
002cb2e9 T CCustomBuildingPipeline::CustomPipeRenderCB(RwResEntry*, void*, unsigned char, unsigned int)
002cb0e5 T CCustomBuildingPipeline::CreateCustomObjPipe()
002cb2b1 T CCustomBuildingPipeline::CustomPipeAtomicSetup(RpAtomic*)
002cb181 T CCustomBuildingPipeline::CustomPipeMaterialSetup(RpMaterial*, void*)
002cb0c5 T CCustomBuildingPipeline::CCustomBuildingPipeline()
002cb0c5 T CCustomBuildingPipeline::CCustomBuildingPipeline()
002cb0c7 T CCustomBuildingPipeline::~CCustomBuildingPipeline()
002cb0c7 T CCustomBuildingPipeline::~CCustomBuildingPipeline()
002ca21d T CCustomBuildingRenderer::Initialise()
002ca259 T CCustomBuildingRenderer::AtomicSetup(RpAtomic*)
002ca249 T CCustomBuildingRenderer::PluginAttach()
002ca291 T CCustomBuildingRenderer::IsCBPCPipelineAttached(RpAtomic*)
002ca2d1 T CCustomBuildingRenderer::UpdateDayNightBalanceParam()
002ca3a5 T CCustomBuildingRenderer::Update()
002ca239 T CCustomBuildingRenderer::Shutdown()
002ca219 T CCustomBuildingRenderer::CCustomBuildingRenderer()
002ca219 T CCustomBuildingRenderer::CCustomBuildingRenderer()
002ca21b T CCustomBuildingRenderer::~CCustomBuildingRenderer()
002ca21b T CCustomBuildingRenderer::~CCustomBuildingRenderer()
00371901 T CEventBuildingCollision::CanTreatBuildingAsObject(CBuilding const&)
0060ffbc R CEventBuildingCollision::ms_fStraightAheadDotProduct
0060ffb4 R CEventBuildingCollision::ms_fMaxTreatBuildingAsObjectSize
0060ffb8 R CEventBuildingCollision::ms_fMaxTreatBuildingAsObjectHeight
003716e5 T CEventBuildingCollision::CEventBuildingCollision(unsigned short, float, CBuilding const*, CVector const&, CVector const&, int)
003716e5 T CEventBuildingCollision::CEventBuildingCollision(unsigned short, float, CBuilding const*, CVector const&, CVector const&, int)
00371749 T CEventBuildingCollision::~CEventBuildingCollision()
003780a1 T CEventBuildingCollision::~CEventBuildingCollision()
003780a1 T CEventBuildingCollision::~CEventBuildingCollision()
00376f39 T CEventCopCarBeingStolen::CEventCopCarBeingStolen(CPed*, CVehicle*)
00376f39 T CEventCopCarBeingStolen::CEventCopCarBeingStolen(CPed*, CVehicle*)
00376fb5 T CEventCopCarBeingStolen::~CEventCopCarBeingStolen()
00376f81 T CEventCopCarBeingStolen::~CEventCopCarBeingStolen()
00376f81 T CEventCopCarBeingStolen::~CEventCopCarBeingStolen()
004b8d71 W CEventCreatePartnerTask::~CEventCreatePartnerTask()
004b8cf9 W CEventCreatePartnerTask::~CEventCreatePartnerTask()
003785dd W CEventHighAngerAtPlayer::~CEventHighAngerAtPlayer()
004c2559 W CEventScriptedAttractor::~CEventScriptedAttractor()
0028e539 T CHIDJoystickIOSExtended::FindUVsFromMapping(char const*, HIDMapping, bool)
0028e1c9 T CHIDJoystickIOSExtended::CHIDJoystickIOSExtended(char const*)
0028e1c9 T CHIDJoystickIOSExtended::CHIDJoystickIOSExtended(char const*)
0028e64d W CHIDJoystickIOSExtended::~CHIDJoystickIOSExtended()
004bc82d T CPedAcquaintanceScanner::CanJoinLARiot(CPed const&, CPed const&)
004bcc19 T CPedAcquaintanceScanner::AddAcquaintanceEvent(CPed const&, int, CPed*)
004bc9b9 T CPedAcquaintanceScanner::ScanAcquaintanceTypes(CPed const&, int, int, CPed*, CPed*&, int&)
004bc511 T CPedAcquaintanceScanner::FindClosestAcquaintance(CPed&, int, CEntity**, int, CPed*&, int&)
009ef9d4 B CPedAcquaintanceScanner::ms_fThresholdDotProduct
006af918 D CPedAcquaintanceScanner::ms_iAcquaintanceScanPeriod
004bc3ad T CPedAcquaintanceScanner::ScanForPedAcquaintanceEvents(CPed&, CEntity**, int)
006af920 D CPedAcquaintanceScanner::ms_iAcquaintanceLatencyPeriodMaybe
006af91c D CPedAcquaintanceScanner::ms_iAcquaintanceLatencyPeriodDefinite
004bce99 T CPedAcquaintanceScanner::SetTimer(int)
009fec54 B CScriptedBrainTaskStore::ms_entries
004ee425 T CScriptedBrainTaskStore::Clear(CPed*)
004f1a25 T CScriptedBrainTaskStore::Clear(CTask*)
004f19f9 T CScriptedBrainTaskStore::GetTask(CPed const*)
004f197d T CScriptedBrainTaskStore::SetTask(CPed*, CTask*)
0061e62c R CTaskComplexAvoidEntity::ms_iPeriod
00522f31 T CTaskComplexAvoidEntity::ComputeSphere(CColSphere&, CEntity**)
00522d3d T CTaskComplexAvoidEntity::MakeAbortable(CPed*, int, CEvent const*)
005230c9 T CTaskComplexAvoidEntity::ControlSubTask(CPed*)
00522d75 T CTaskComplexAvoidEntity::CreateNextSubTask(CPed*)
00523055 T CTaskComplexAvoidEntity::ComputeAvoidSphere(CPed const&, CColSphere&)
00522dad T CTaskComplexAvoidEntity::CreateFirstSubTask(CPed*)
00522eb9 T CTaskComplexAvoidEntity::ComputeDetourTarget(CPed const&)
005230a1 T CTaskComplexAvoidEntity::ComputeDetourTarget(CPed const&, CColSphere const&)
0061e628 R CTaskComplexAvoidEntity::ms_fEntityAvoidRadius
00522f2b T CTaskComplexAvoidEntity::NearbyEntitiesInSphere(CPed const&, CColSphere const&, CEntity**, CEntity**)
00522d01 T CTaskComplexAvoidEntity::QuitIK(CPed*)
00522b31 T CTaskComplexAvoidEntity::SetUpIK(CPed*)
00522a65 T CTaskComplexAvoidEntity::CTaskComplexAvoidEntity(int, CEntity*, CVector const&)
00522a65 T CTaskComplexAvoidEntity::CTaskComplexAvoidEntity(int, CEntity*, CVector const&)
00522b01 T CTaskComplexAvoidEntity::~CTaskComplexAvoidEntity()
00522ad5 T CTaskComplexAvoidEntity::~CTaskComplexAvoidEntity()
00522ad5 T CTaskComplexAvoidEntity::~CTaskComplexAvoidEntity()
00492479 W CTaskComplexEvasiveStep::CreateTask()
0050b11d T CTaskComplexEvasiveStep::ControlSubTask(CPed*)
0050b0a9 T CTaskComplexEvasiveStep::CreateNextSubTask(CPed*)
0050b0dd T CTaskComplexEvasiveStep::CreateFirstSubTask(CPed*)
0050f015 W CTaskComplexEvasiveStep::Serialize()
0050af61 T CTaskComplexEvasiveStep::CTaskComplexEvasiveStep(CEntity*, CVector const&)
0050af61 T CTaskComplexEvasiveStep::CTaskComplexEvasiveStep(CEntity*, CVector const&)
0050afd5 T CTaskComplexEvasiveStep::~CTaskComplexEvasiveStep()
0050afa9 T CTaskComplexEvasiveStep::~CTaskComplexEvasiveStep()
0050afa9 T CTaskComplexEvasiveStep::~CTaskComplexEvasiveStep()
00491c65 W CTaskComplexFallToDeath::CreateTask()
0052cf89 T CTaskComplexFallToDeath::MakeAbortable(CPed*, int, CEvent const*)
0052d26d T CTaskComplexFallToDeath::ControlSubTask(CPed*)
006b0414 D CTaskComplexFallToDeath::ms_NearEdgeDist
0052d0dd T CTaskComplexFallToDeath::CreateNextSubTask(CPed*)
0052cfcd T CTaskComplexFallToDeath::CreateFirstSubTask(CPed*)
006b0420 D CTaskComplexFallToDeath::ms_PedShinHeightOffset
006b0418 D CTaskComplexFallToDeath::ms_FallVerticalDistance
006b041c D CTaskComplexFallToDeath::ms_PedChestHeightOffset
006b042c D CTaskComplexFallToDeath::ms_LateralForceMagnitude
006b0424 D CTaskComplexFallToDeath::ms_NoRailingVerticalForce
006b0428 D CTaskComplexFallToDeath::ms_OverRailingVerticalForce
0052d371 T CTaskComplexFallToDeath::CalcFall(CPed*, int&, bool&)
00533055 W CTaskComplexFallToDeath::Serialize()
0052cf21 T CTaskComplexFallToDeath::CTaskComplexFallToDeath(int, CVector const&, bool, bool)
0052cf21 T CTaskComplexFallToDeath::CTaskComplexFallToDeath(int, CVector const&, bool, bool)
0052cf79 T CTaskComplexFallToDeath::~CTaskComplexFallToDeath()
0052cf75 T CTaskComplexFallToDeath::~CTaskComplexFallToDeath()
0052cf75 T CTaskComplexFallToDeath::~CTaskComplexFallToDeath()
004ed045 T CTaskComplexHitResponse::ControlSubTask(CPed*)
004ecf61 T CTaskComplexHitResponse::CreateNextSubTask(CPed*)
004ecf65 T CTaskComplexHitResponse::CreateFirstSubTask(CPed*)
004f3479 W CTaskComplexHitResponse::Serialize()
004ecf31 T CTaskComplexHitResponse::CTaskComplexHitResponse(int)
004ecf31 T CTaskComplexHitResponse::CTaskComplexHitResponse(int)
004ecf51 T CTaskComplexHitResponse::~CTaskComplexHitResponse()
004ecf4d T CTaskComplexHitResponse::~CTaskComplexHitResponse()
004ecf4d T CTaskComplexHitResponse::~CTaskComplexHitResponse()
00493811 W CTaskComplexLeaveAnyCar::CreateTask()
004f9715 T CTaskComplexLeaveAnyCar::ControlSubTask(CPed*)
004f966b T CTaskComplexLeaveAnyCar::CreateNextSubTask(CPed*)
004f9671 T CTaskComplexLeaveAnyCar::CreateFirstSubTask(CPed*)
004fd3bd W CTaskComplexLeaveAnyCar::Serialize()
004fd37d W CTaskComplexLeaveAnyCar::~CTaskComplexLeaveAnyCar()
00496b05 W CTaskComplexPartnerChat::CreateTask()
00535491 T CTaskComplexPartnerChat::MakeAbortable(CPed*, int, CEvent const*)
005354c5 T CTaskComplexPartnerChat::GetPartnerSequence()
005371ed W CTaskComplexPartnerChat::Serialize()
00535325 T CTaskComplexPartnerChat::CTaskComplexPartnerChat(char*, CPed*, unsigned char, float, int, unsigned char, unsigned char, CVector)
00535325 T CTaskComplexPartnerChat::CTaskComplexPartnerChat(char*, CPed*, unsigned char, float, int, unsigned char, unsigned char, CVector)
00535435 T CTaskComplexPartnerChat::~CTaskComplexPartnerChat()
005353dd T CTaskComplexPartnerChat::~CTaskComplexPartnerChat()
005353dd T CTaskComplexPartnerChat::~CTaskComplexPartnerChat()
00534c69 T CTaskComplexPartnerDeal::CreateFirstSubTask(CPed*)
00534d2d T CTaskComplexPartnerDeal::GetPartnerSequence()
00534cc9 T CTaskComplexPartnerDeal::StreamRequiredAnims()
00534b95 T CTaskComplexPartnerDeal::CTaskComplexPartnerDeal(char*, CPed*, unsigned char, float, CVector)
00534b95 T CTaskComplexPartnerDeal::CTaskComplexPartnerDeal(char*, CPed*, unsigned char, float, CVector)
00534c31 T CTaskComplexPartnerDeal::~CTaskComplexPartnerDeal()
0053439d T CTaskComplexPartnerDeal::~CTaskComplexPartnerDeal()
0053439d T CTaskComplexPartnerDeal::~CTaskComplexPartnerDeal()
0051a1bd T CTaskComplexSignalAtPed::ControlSubTask(CPed*)
00519fbd T CTaskComplexSignalAtPed::CreateNextSubTask(CPed*)
0051a0b5 T CTaskComplexSignalAtPed::CreateFirstSubTask(CPed*)
00519ee5 T CTaskComplexSignalAtPed::CTaskComplexSignalAtPed(CPed*, int, unsigned char)
00519ee5 T CTaskComplexSignalAtPed::CTaskComplexSignalAtPed(CPed*, int, unsigned char)
00519f71 T CTaskComplexSignalAtPed::~CTaskComplexSignalAtPed()
00519f29 T CTaskComplexSignalAtPed::~CTaskComplexSignalAtPed()
00519f29 T CTaskComplexSignalAtPed::~CTaskComplexSignalAtPed()
005184e9 T CTaskComplexTrackEntity::SetOffsetPos(CVector)
0051840d T CTaskComplexTrackEntity::CalcMoveRatio(CPed*)
00518275 T CTaskComplexTrackEntity::CalcTargetPos(CPed*)
00517e41 T CTaskComplexTrackEntity::MakeAbortable(CPed*, int, CEvent const*)
0051800d T CTaskComplexTrackEntity::ControlSubTask(CPed*)
00517ef5 T CTaskComplexTrackEntity::CreateNextSubTask(CPed*)
005184ef T CTaskComplexTrackEntity::GetDistToTargetSq()
00517fc9 T CTaskComplexTrackEntity::CreateFirstSubTask(CPed*)
00517d71 T CTaskComplexTrackEntity::CTaskComplexTrackEntity(CEntity*, CVector, unsigned char, int, float, float, unsigned char)
00517d71 T CTaskComplexTrackEntity::CTaskComplexTrackEntity(CEntity*, CVector, unsigned char, int, float, float, unsigned char)
00517e11 T CTaskComplexTrackEntity::~CTaskComplexTrackEntity()
00517de5 T CTaskComplexTrackEntity::~CTaskComplexTrackEntity()
00517de5 T CTaskComplexTrackEntity::~CTaskComplexTrackEntity()
00491bbd W CTaskComplexUseSequence::CreateTask()
004f1685 T CTaskComplexUseSequence::MakeAbortable(CPed*, int, CEvent const*)
004f180d T CTaskComplexUseSequence::ControlSubTask(CPed*)
004f1701 T CTaskComplexUseSequence::CreateNextSubTask(CPed*)
004f17b1 T CTaskComplexUseSequence::CreateFirstSubTask(CPed*)
004f4271 W CTaskComplexUseSequence::Serialize()
004f1591 T CTaskComplexUseSequence::CTaskComplexUseSequence(int)
004f1591 T CTaskComplexUseSequence::CTaskComplexUseSequence(int)
004f1629 T CTaskComplexUseSequence::~CTaskComplexUseSequence()
004f15d1 T CTaskComplexUseSequence::~CTaskComplexUseSequence()
004f15d1 T CTaskComplexUseSequence::~CTaskComplexUseSequence()
00512799 W CTaskComplexUseSwatRope::AbortUrgently(CPed*)
00511c39 T CTaskComplexUseSwatRope::MakeAbortable(CPed*, int, CEvent const*)
0061e508 R CTaskComplexUseSwatRope::ms_fRopeSpeed
00511e19 T CTaskComplexUseSwatRope::ControlSubTask(CPed*)
0061e504 R CTaskComplexUseSwatRope::ms_fJumpHeight
0061e50c R CTaskComplexUseSwatRope::ms_fAbseilSpeed
00511cfb T CTaskComplexUseSwatRope::CreateNextSubTask(CPed*)
00511dd9 T CTaskComplexUseSwatRope::CreateFirstSubTask(CPed*)
0061e510 R CTaskComplexUseSwatRope::ms_fAbseilTurnSpeed
00511b5d T CTaskComplexUseSwatRope::CTaskComplexUseSwatRope(int)
00511b89 T CTaskComplexUseSwatRope::CTaskComplexUseSwatRope(int, CHeli*)
00511b5d T CTaskComplexUseSwatRope::CTaskComplexUseSwatRope(int)
00511b89 T CTaskComplexUseSwatRope::CTaskComplexUseSwatRope(int, CHeli*)
00511c01 T CTaskComplexUseSwatRope::~CTaskComplexUseSwatRope()
00511bcd T CTaskComplexUseSwatRope::~CTaskComplexUseSwatRope()
00511bcd T CTaskComplexUseSwatRope::~CTaskComplexUseSwatRope()
005128f7 W CTaskComplexWanderMedic::ScanForStuff(CPed*)
00512899 W CTaskComplexWanderMedic::~CTaskComplexWanderMedic()
0051a661 T CTaskGoToVehicleAndLean::CalcTargetPos(CPed*)
0051a3b9 T CTaskGoToVehicleAndLean::MakeAbortable(CPed*, int, CEvent const*)
0051a75d T CTaskGoToVehicleAndLean::ControlSubTask(CPed*)
0051a43d T CTaskGoToVehicleAndLean::CreateNextSubTask(CPed*)
0051a589 T CTaskGoToVehicleAndLean::CreateFirstSubTask(CPed*)
0051a40b T CTaskGoToVehicleAndLean::DoTidyUp(CPed*)
0051a2e5 T CTaskGoToVehicleAndLean::CTaskGoToVehicleAndLean(CVehicle*, int)
0051a2e5 T CTaskGoToVehicleAndLean::CTaskGoToVehicleAndLean(CVehicle*, int)
0051a36d T CTaskGoToVehicleAndLean::~CTaskGoToVehicleAndLean()
0051a325 T CTaskGoToVehicleAndLean::~CTaskGoToVehicleAndLean()
0051a325 T CTaskGoToVehicleAndLean::~CTaskGoToVehicleAndLean()
005290f5 T CTaskInteriorBeInOffice::ControlSubTask(CPed*)
00528f35 T CTaskInteriorBeInOffice::CreateNextSubTask(CPed*)
005290b1 T CTaskInteriorBeInOffice::CreateFirstSubTask(CPed*)
00528f85 T CTaskInteriorBeInOffice::GetInfoForPedToUse(int*)
00528ed1 T CTaskInteriorBeInOffice::CTaskInteriorBeInOffice(InteriorGroup_c*)
00528ed1 T CTaskInteriorBeInOffice::CTaskInteriorBeInOffice(InteriorGroup_c*)
00528ef9 T CTaskInteriorBeInOffice::~CTaskInteriorBeInOffice()
00528ef5 T CTaskInteriorBeInOffice::~CTaskInteriorBeInOffice()
00528ef5 T CTaskInteriorBeInOffice::~CTaskInteriorBeInOffice()
005294e9 T CTaskInteriorShopKeeper::ControlSubTask(CPed*)
00529451 T CTaskInteriorShopKeeper::CreateNextSubTask(CPed*)
00529481 T CTaskInteriorShopKeeper::CreateFirstSubTask(CPed*)
005293a5 T CTaskInteriorShopKeeper::CTaskInteriorShopKeeper(InteriorGroup_c*, unsigned char)
005293a5 T CTaskInteriorShopKeeper::CTaskInteriorShopKeeper(InteriorGroup_c*, unsigned char)
005293e9 T CTaskInteriorShopKeeper::~CTaskInteriorShopKeeper()
005293cd T CTaskInteriorShopKeeper::~CTaskInteriorShopKeeper()
005293cd T CTaskInteriorShopKeeper::~CTaskInteriorShopKeeper()
00529d75 T CTaskInteriorSitInChair::ProcessPed(CPed*)
0052a285 T CTaskInteriorSitInChair::FinishAnimCB(CAnimBlendAssociation*, void*)
00529d11 T CTaskInteriorSitInChair::MakeAbortable(CPed*, int, CEvent const*)
00529c15 T CTaskInteriorSitInChair::CTaskInteriorSitInChair(int, InteriorInfo_t*, unsigned char)
00529c15 T CTaskInteriorSitInChair::CTaskInteriorSitInChair(int, InteriorInfo_t*, unsigned char)
00529c8d T CTaskInteriorSitInChair::~CTaskInteriorSitInChair()
00529c59 T CTaskInteriorSitInChair::~CTaskInteriorSitInChair()
00529c59 T CTaskInteriorSitInChair::~CTaskInteriorSitInChair()
00502ad1 T CTaskSimpleCarSetPedOut::ProcessPed(CPed*)
0050711f W CTaskSimpleCarSetPedOut::MakeAbortable(CPed*, int, CEvent const*)
00503d8d T CTaskSimpleCarSetPedOut::PositionPedOutOfCollision(CPed*, CVehicle*, int)
00503ce5 T CTaskSimpleCarSetPedOut::CTaskSimpleCarSetPedOut(CVehicle*, int, bool)
00503ce5 T CTaskSimpleCarSetPedOut::CTaskSimpleCarSetPedOut(CVehicle*, int, bool)
00503d5d T CTaskSimpleCarSetPedOut::~CTaskSimpleCarSetPedOut()
00503d31 T CTaskSimpleCarSetPedOut::~CTaskSimpleCarSetPedOut()
00503d31 T CTaskSimpleCarSetPedOut::~CTaskSimpleCarSetPedOut()
00519e55 T CTaskSimpleDoHandSignal::ProcessPed(CPed*)
00519e51 T CTaskSimpleDoHandSignal::MakeAbortable(CPed*, int, CEvent const*)
00519df9 T CTaskSimpleDoHandSignal::CTaskSimpleDoHandSignal()
00519df9 T CTaskSimpleDoHandSignal::CTaskSimpleDoHandSignal()
00519e19 T CTaskSimpleDoHandSignal::~CTaskSimpleDoHandSignal()
00519e15 T CTaskSimpleDoHandSignal::~CTaskSimpleDoHandSignal()
00519e15 T CTaskSimpleDoHandSignal::~CTaskSimpleDoHandSignal()
00497489 W CTaskSimpleHitFromFront::Serialize()
00497439 W CTaskSimpleHitFromFront::~CTaskSimpleHitFromFront()
004976f5 W CTaskSimpleHitFromRight::Serialize()
004976a5 W CTaskSimpleHitFromRight::~CTaskSimpleHitFromRight()
005421e9 T CTaskSimplePickUpEntity::CTaskSimplePickUpEntity(CEntity*, CVector const*, unsigned char, unsigned char, AnimationId, AssocGroupId, float)
005422cd T CTaskSimplePickUpEntity::CTaskSimplePickUpEntity(CEntity*, CVector const*, unsigned char, unsigned char, CAnimBlock*, CAnimBlendHierarchy*, int, float)
00542291 T CTaskSimplePickUpEntity::CTaskSimplePickUpEntity(CEntity*, CVector const*, unsigned char, unsigned char, char const*, char const*, int, float)
005421e9 T CTaskSimplePickUpEntity::CTaskSimplePickUpEntity(CEntity*, CVector const*, unsigned char, unsigned char, AnimationId, AssocGroupId, float)
005422cd T CTaskSimplePickUpEntity::CTaskSimplePickUpEntity(CEntity*, CVector const*, unsigned char, unsigned char, CAnimBlock*, CAnimBlendHierarchy*, int, float)
00542291 T CTaskSimplePickUpEntity::CTaskSimplePickUpEntity(CEntity*, CVector const*, unsigned char, unsigned char, char const*, char const*, int, float)
005441cd W CTaskSimplePickUpEntity::~CTaskSimplePickUpEntity()
004ef949 T CTaskSimplePlayerOnFire::ProcessPed(CPed*)
004f3c6d W CTaskSimplePlayerOnFire::MakeAbortable(CPed*, int, CEvent const*)
0061e340 R CTaskSimplePlayerOnFire::ms_iOnFireTime
004f3c71 W CTaskSimplePlayerOnFire::Serialize()
004ef911 T CTaskSimplePlayerOnFire::CTaskSimplePlayerOnFire()
004ef911 T CTaskSimplePlayerOnFire::CTaskSimplePlayerOnFire()
004ef939 T CTaskSimplePlayerOnFire::~CTaskSimplePlayerOnFire()
004ef935 T CTaskSimplePlayerOnFire::~CTaskSimplePlayerOnFire()
004ef935 T CTaskSimplePlayerOnFire::~CTaskSimplePlayerOnFire()
00539f9d T CTaskSimplePlayerOnFoot::ProcessPed(CPed*)
006b049c D CTaskSimplePlayerOnFoot::SPRINT_MAX
005375a5 T CTaskSimplePlayerOnFoot::MakeAbortable(CPed*, int, CEvent const*)
006b04a0 D CTaskSimplePlayerOnFoot::SPRINT_TAPADD
006b04a4 D CTaskSimplePlayerOnFoot::SPRINT_HOLDSUB
006b0498 D CTaskSimplePlayerOnFoot::SPRINT_THRESHOLD
006b04a8 D CTaskSimplePlayerOnFoot::SPRINT_RELEASESUB
00538cfd T CTaskSimplePlayerOnFoot::PlayIdleAnimations(CPlayerPed*)
00539b45 T CTaskSimplePlayerOnFoot::PlayerControlZelda(CPlayerPed*, bool)
00539771 T CTaskSimplePlayerOnFoot::PlayerControlDucked(CPlayerPed*)
00537809 T CTaskSimplePlayerOnFoot::ProcessPlayerWeapon(CPlayerPed*)
00538f61 T CTaskSimplePlayerOnFoot::PlayerControlFighter(CPlayerPed*)
006b0494 D CTaskSimplePlayerOnFoot::DUCK_HEADING_CHANGE_RATE
005394e5 T CTaskSimplePlayerOnFoot::PlayerControlZeldaWeapon(CPlayerPed*)
006b0490 D CTaskSimplePlayerOnFoot::FIGHTER_HEADING_CHANGE_RATE
0053c741 W CTaskSimplePlayerOnFoot::Serialize()
00537551 T CTaskSimplePlayerOnFoot::CTaskSimplePlayerOnFoot()
00537551 T CTaskSimplePlayerOnFoot::CTaskSimplePlayerOnFoot()
00537595 T CTaskSimplePlayerOnFoot::~CTaskSimplePlayerOnFoot()
00537591 T CTaskSimplePlayerOnFoot::~CTaskSimplePlayerOnFoot()
00537591 T CTaskSimplePlayerOnFoot::~CTaskSimplePlayerOnFoot()
0049200d W CTaskSimpleRunNamedAnim::CreateTask()
004d6e3d T CTaskSimpleRunNamedAnim::ProcessPed(CPed*)
004d7039 T CTaskSimpleRunNamedAnim::OffsetPedPosition(CPed*)
004d712d T CTaskSimpleRunNamedAnim::FinishRunAnimMovePedCB(CAnimBlendAssociation*, void*)
004d7f39 W CTaskSimpleRunNamedAnim::Serialize()
004d70a5 T CTaskSimpleRunNamedAnim::StartAnim(CPed*)
004d6da5 T CTaskSimpleRunNamedAnim::CTaskSimpleRunNamedAnim(char const*, char const*, int, float, int, bool, bool, bool, bool)
004d6da5 T CTaskSimpleRunNamedAnim::CTaskSimpleRunNamedAnim(char const*, char const*, int, float, int, bool, bool, bool, bool)
004d7e79 W CTaskSimpleRunNamedAnim::~CTaskSimpleRunNamedAnim()
004d7245 T CTaskSimpleRunTimedAnim::ProcessPed(CPed*)
004d81f9 W CTaskSimpleRunTimedAnim::Serialize()
004d72f1 T CTaskSimpleRunTimedAnim::StartAnim(CPed*)
004d7191 T CTaskSimpleRunTimedAnim::CTaskSimpleRunTimedAnim(AssocGroupId, AnimationId, float, float, int, bool)
004d71e9 T CTaskSimpleRunTimedAnim::CTaskSimpleRunTimedAnim(AssocGroupId, AnimationId, float, float, int, int, char const*, bool)
004d7191 T CTaskSimpleRunTimedAnim::CTaskSimpleRunTimedAnim(AssocGroupId, AnimationId, float, float, int, bool)
004d71e9 T CTaskSimpleRunTimedAnim::CTaskSimpleRunTimedAnim(AssocGroupId, AnimationId, float, float, int, int, char const*, bool)
004d812d W CTaskSimpleRunTimedAnim::~CTaskSimpleRunTimedAnim()
00526245 T CTaskSimpleSlideToCoord::ProcessPed(CPed*)
00526231 T CTaskSimpleSlideToCoord::MakeAbortable(CPed*, int, CEvent const*)
0061e674 R CTaskSimpleSlideToCoord::ms_fPosAccuracy
0061e678 R CTaskSimpleSlideToCoord::ms_fHeadingAccuracy
0052615d T CTaskSimpleSlideToCoord::CTaskSimpleSlideToCoord(CVector const&, float, float)
005261b1 T CTaskSimpleSlideToCoord::CTaskSimpleSlideToCoord(CVector const&, float, float, char const*, char const*, int, float, bool, int)
0052615d T CTaskSimpleSlideToCoord::CTaskSimpleSlideToCoord(CVector const&, float, float)
005261b1 T CTaskSimpleSlideToCoord::CTaskSimpleSlideToCoord(CVector const&, float, float, char const*, char const*, int, float, bool, int)
00526221 T CTaskSimpleSlideToCoord::~CTaskSimpleSlideToCoord()
0052621d T CTaskSimpleSlideToCoord::~CTaskSimpleSlideToCoord()
0052621d T CTaskSimpleSlideToCoord::~CTaskSimpleSlideToCoord()
004def91 T CTaskSimpleThrowControl::ProcessPed(CPed*)
004def4d T CTaskSimpleThrowControl::MakeAbortable(CPed*, int, CEvent const*)
004dee95 T CTaskSimpleThrowControl::CTaskSimpleThrowControl(CEntity*, CVector const*)
004dee95 T CTaskSimpleThrowControl::CTaskSimpleThrowControl(CEntity*, CVector const*)
004def1d T CTaskSimpleThrowControl::~CTaskSimpleThrowControl()
004deef1 T CTaskSimpleThrowControl::~CTaskSimpleThrowControl()
004deef1 T CTaskSimpleThrowControl::~CTaskSimpleThrowControl()
004efb11 T CTaskSimpleTriggerEvent::ProcessPed(CPed*)
004f20ed W CTaskSimpleTriggerEvent::MakeAbortable(CPed*, int, CEvent const*)
004f2085 W CTaskSimpleTriggerEvent::~CTaskSimpleTriggerEvent()
004f2059 W CTaskSimpleTriggerEvent::~CTaskSimpleTriggerEvent()
004ee6d9 T CTaskSimpleWaitForPizza::ProcessPed(CPed*)
004f3895 W CTaskSimpleWaitForPizza::MakeAbortable(CPed*, int, CEvent const*)
0061e32c R CTaskSimpleWaitForPizza::ms_iPizzaWaitTime
004f3899 W CTaskSimpleWaitForPizza::Serialize()
004ee6a5 T CTaskSimpleWaitForPizza::CTaskSimpleWaitForPizza()
004ee6a5 T CTaskSimpleWaitForPizza::CTaskSimpleWaitForPizza()
004ee6c9 T CTaskSimpleWaitForPizza::~CTaskSimpleWaitForPizza()
004ee6c5 T CTaskSimpleWaitForPizza::~CTaskSimpleWaitForPizza()
004ee6c5 T CTaskSimpleWaitForPizza::~CTaskSimpleWaitForPizza()
002b54a9 T CWidgetButtonHydraulics::Draw()
002b5551 T CWidgetButtonHydraulics::Update()
002b59ad W CWidgetButtonHydraulics::GetName()
002b5435 T CWidgetButtonHydraulics::CWidgetButtonHydraulics(char const*, WidgetPosition const&)
002b5435 T CWidgetButtonHydraulics::CWidgetButtonHydraulics(char const*, WidgetPosition const&)
002b5969 W CWidgetButtonHydraulics::~CWidgetButtonHydraulics()
002b5929 W CWidgetButtonHydraulics::~CWidgetButtonHydraulics()
002c34f9 T CWidgetRegionHydraulics::ResetHydraulicRegion()
002c355d T CWidgetRegionHydraulics::Draw()
002c3679 T CWidgetRegionHydraulics::Update()
002c3cad W CWidgetRegionHydraulics::GetName()
002c3401 T CWidgetRegionHydraulics::CWidgetRegionHydraulics(char const*, WidgetPosition const&)
002c3401 T CWidgetRegionHydraulics::CWidgetRegionHydraulics(char const*, WidgetPosition const&)
002c3c81 W CWidgetRegionHydraulics::~CWidgetRegionHydraulics()
002c3c59 W CWidgetRegionHydraulics::~CWidgetRegionHydraulics()
002c5309 T CWidgetRegionSwipeRadio::DrawHelpIcon(char const*, float, float, float, int)
002c5291 T CWidgetRegionSwipeRadio::IsSwipedLeft()
002c52cd T CWidgetRegionSwipeRadio::IsSwipedRight()
002c5375 W CWidgetRegionSwipeRadio::GetName()
002c526d T CWidgetRegionSwipeRadio::CWidgetRegionSwipeRadio(char const*, WidgetPosition const&)
002c526d T CWidgetRegionSwipeRadio::CWidgetRegionSwipeRadio(char const*, WidgetPosition const&)
002c5365 W CWidgetRegionSwipeRadio::~CWidgetRegionSwipeRadio()
002c69dd T CWidgetSaveNotification::Draw()
002c6981 T CWidgetSaveNotification::Update()
002c6bf1 T CWidgetSaveNotification::EndSave()
002c6c45 W CWidgetSaveNotification::GetName()
002c6959 T CWidgetSaveNotification::CWidgetSaveNotification(char const*, WidgetPosition const&)
002c6959 T CWidgetSaveNotification::CWidgetSaveNotification(char const*, WidgetPosition const&)
002c6c35 W CWidgetSaveNotification::~CWidgetSaveNotification()
001e7861 T TextureListingContainer::~TextureListingContainer()
001e7861 T TextureListingContainer::~TextureListingContainer()
003e3ba9 T CControllerConfigManager::LoadSettings(int)
003e3aa1 T CControllerConfigManager::SaveSettings(int)
003e9d61 T CControllerConfigManager::GetActionType(e_ControllerAction)
003e8ee5 T CControllerConfigManager::GetIsKeyBlank(int, eControllerType)
003e5275 T CControllerConfigManager::ReinitControls()
003e9d79 T CControllerConfigManager::ResetSettingOrder(e_ControllerAction)
003e8985 T CControllerConfigManager::AffectPadFromMouse()
003ea93d T CControllerConfigManager::GetButtonComboText(e_ControllerAction)
003e8afd T CControllerConfigManager::GetIsMouseButtonUp(RsKeyCodes)
003e3851 T CControllerConfigManager::GetJoyButtonJustUp()
003e8965 T CControllerConfigManager::GetIsKeyboardKeyDown(RsKeyCodes)
003e8a15 T CControllerConfigManager::GetIsMouseButtonDown(RsKeyCodes)
003e3979 T CControllerConfigManager::GetJoyButtonJustDown()
003ea851 T CControllerConfigManager::UpdateJoyButtonState(int)
003e87d9 T CControllerConfigManager::AffectPadFromKeyBoard()
003e7c9d T CControllerConfigManager::StoreMouseButtonState(eMouseButtons, bool)
003e8c15 T CControllerConfigManager::GetIsMouseButtonJustUp(RsKeyCodes)
003ea937 T CControllerConfigManager::GetIsActionAButtonCombo(e_ControllerAction)
003e8bf5 T CControllerConfigManager::GetIsKeyboardKeyJustDown(RsKeyCodes)
003ea71d T CControllerConfigManager::GetGxtStringOfCommandKeys(unsigned short, unsigned short*, unsigned short)
003ea6cd T CControllerConfigManager::GetNumOfSettingsForAction(e_ControllerAction)
003e376d T CControllerConfigManager::MakeControllerActionsBlank()
003e8be5 T CControllerConfigManager::ClearSimButtonPressCheckers()
003e8d99 T CControllerConfigManager::DeleteMatchingCommonControls(e_ControllerAction, int, eControllerType)
003e9455 T CControllerConfigManager::DeleteMatchingVehicleControls(e_ControllerAction, int, eControllerType)
003ea611 T CControllerConfigManager::GetControllerSettingTextMouse(e_ControllerAction)
003e714d T CControllerConfigManager::InitDefaultControlConfigMouse(CMouseControllerState const&, bool)
003e9965 T CControllerConfigManager::DeleteMatchingActionInitiators(e_ControllerAction, int, eControllerType)
003ea699 T CControllerConfigManager::GetFirstKeyboardControllerText(e_ControllerAction)
003e3dd1 T CControllerConfigManager::InitDefaultControlConfigJoyPad(unsigned int)
003e8f15 T CControllerConfigManager::DeleteMatching3rdPersonControls(e_ControllerAction, int, eControllerType)
003e52b1 T CControllerConfigManager::InitDefaultControlConfiguration()
003e8601 T CControllerConfigManager::UpdateJoyInConfigMenus_ButtonUp(int, int)
003e86f1 T CControllerConfigManager::AffectControllerStateOn_ButtonUp(int, eControllerType)
003e98d5 T CControllerConfigManager::DeleteMatching1rstPersonControls(e_ControllerAction, int, eControllerType)
003ea641 T CControllerConfigManager::GetControllerSettingTextJoystick(e_ControllerAction)
003e9ff1 T CControllerConfigManager::GetControllerSettingTextKeyBoard(e_ControllerAction, eControllerType)
003e3815 T CControllerConfigManager::ClearSettingsAssociatedWithAction(e_ControllerAction, eControllerType)
003e7d15 T CControllerConfigManager::UpdateJoyInConfigMenus_ButtonDown(int, int)
003e7e05 T CControllerConfigManager::AffectControllerStateOn_ButtonDown(int, eControllerType)
003ea95d T CControllerConfigManager::GetMouseButtonAssociatedWithAction(e_ControllerAction)
003e759f T CControllerConfigManager::SetMouseButtonAssociatedWithAction(e_ControllerAction, int)
003e9241 T CControllerConfigManager::DeleteMatching1rst3rdPersonControls(e_ControllerAction, int, eControllerType)
003e75fd T CControllerConfigManager::InitialiseControllerActionNameArray()
003e85ef T CControllerConfigManager::GetControllerKeyAssociatedWithAction(e_ControllerAction, eControllerType)
003e7533 T CControllerConfigManager::SetControllerKeyAssociatedWithAction(e_ControllerAction, int, eControllerType)
003e9881 T CControllerConfigManager::DeleteMatchingVehicle_3rdPersonControls(e_ControllerAction, int, eControllerType)
003e9f39 T CControllerConfigManager::GetControllerSettingTextWithOrderNumber(e_ControllerAction, eContSetOrder)
003e809d T CControllerConfigManager::AffectControllerStateOn_ButtonDown_Driving(int, eControllerType, CControllerState&)
003e87d7 T CControllerConfigManager::AffectControllerStateOn_ButtonUp_DebugStuff(int, eControllerType)
003e859d T CControllerConfigManager::AffectControllerStateOn_ButtonDown_AllStates(int, eControllerType, CControllerState&)
003e85ff T CControllerConfigManager::AffectControllerStateOn_ButtonDown_DebugStuff(int, eControllerType)
003e84e1 T CControllerConfigManager::AffectControllerStateOn_ButtonDown_FirstPersonOnly(int, eControllerType, CControllerState&)
003e8511 T CControllerConfigManager::AffectControllerStateOn_ButtonDown_ThirdPersonOnly(int, eControllerType, CControllerState&)
003e87b5 T CControllerConfigManager::AffectControllerStateOn_ButtonUp_All_Player_States(int, eControllerType, CControllerState&)
003e82f5 T CControllerConfigManager::AffectControllerStateOn_ButtonDown_FirstAndThirdPersonOnly(int, eControllerType, CControllerState&)
003e82e1 T CControllerConfigManager::AffectControllerStateOn_ButtonDown_VehicleAndThirdPersonOnly(int, eControllerType, CControllerState&)
002cbffd T CCustomCarEnvMapPipeline::CreatePipe()
002cc165 T CCustomCarEnvMapPipeline::DestroyPipe()
0070bf5c B CCustomCarEnvMapPipeline::ObjPipeline
002cc311 T CCustomCarEnvMapPipeline::SetFxEnvScale(RpMaterial*, float, float)
002cc3fd T CCustomCarEnvMapPipeline::GetFxEnvScaleX(RpMaterial*)
002cc439 T CCustomCarEnvMapPipeline::GetFxEnvScaleY(RpMaterial*)
002cc6fd T CCustomCarEnvMapPipeline::RegisterPlugin()
002cb7fd T CCustomCarEnvMapPipeline::GetFxEnvTexture(RpMaterial*)
002cb9fd T CCustomCarEnvMapPipeline::PreRenderUpdate()
002cb67d T CCustomCarEnvMapPipeline::SetFxEnvTexture(RpMaterial*, RwTexture*)
002cb839 T CCustomCarEnvMapPipeline::GetFxSpecTexture(RpMaterial*)
002cc475 T CCustomCarEnvMapPipeline::SetFxEnvTransScl(RpMaterial*, float, float)
002cc6a1 T CCustomCarEnvMapPipeline::SetFxSpecTexture(RpMaterial*, RwTexture*)
002cb7c1 T CCustomCarEnvMapPipeline::GetFxEnvShininess(RpMaterial*)
002cc561 T CCustomCarEnvMapPipeline::GetFxEnvTransSclX(RpMaterial*)
002cc59d T CCustomCarEnvMapPipeline::GetFxEnvTransSclY(RpMaterial*)
002cc5d9 T CCustomCarEnvMapPipeline::SetFxEnvShininess(RpMaterial*, float)
002cba01 T CCustomCarEnvMapPipeline::CustomPipeRenderCB(RwResEntry*, void*, unsigned char, unsigned int)
002cb891 T CCustomCarEnvMapPipeline::CustomPipeInstanceCB(void*, RxOpenGLMeshInstanceData*, int, int)
002cb815 T CCustomCarEnvMapPipeline::GetFxSpecSpecularity(RpMaterial*)
002cc6e1 T CCustomCarEnvMapPipeline::SetFxSpecSpecularity(RpMaterial*, float)
00685f94 D CCustomCarEnvMapPipeline::m_EnvMapLightingMult
002cb851 T CCustomCarEnvMapPipeline::CustomPipeAtomicSetup(RpAtomic*)
0070bf6c B CCustomCarEnvMapPipeline::fakeEnvMapPipeMatData
00685f88 D CCustomCarEnvMapPipeline::ms_envMapPluginOffset
002cb5e5 T CCustomCarEnvMapPipeline::CustomPipeMaterialSetup(RpMaterial*, void*)
0070bf64 B CCustomCarEnvMapPipeline::m_gEnvMapPipeAtmDataPool
0070bf60 B CCustomCarEnvMapPipeline::m_gEnvMapPipeMatDataPool
00685f8c D CCustomCarEnvMapPipeline::ms_envMapAtmPluginOffset
002ccb61 T CCustomCarEnvMapPipeline::pluginEnvAtmDestructorCB(void*, int, int)
002cc861 T CCustomCarEnvMapPipeline::pluginEnvMatDestructorCB(void*, int, int)
002cc955 T CCustomCarEnvMapPipeline::pluginEnvMatStreamReadCB(RwStream*, int, void*, int, int)
002ccec9 T CCustomCarEnvMapPipeline::AllocEnvMapPipeAtomicData(RpAtomic*)
002cbf81 T CCustomCarEnvMapPipeline::CreateCustomOpenGLObjPipe()
0070bf68 B CCustomCarEnvMapPipeline::m_gSpecMapPipeMatDataPool
002ccb5b T CCustomCarEnvMapPipeline::pluginEnvAtmConstructorCB(void*, int, int)
002cc851 T CCustomCarEnvMapPipeline::pluginEnvMatConstructorCB(void*, int, int)
002ccab1 T CCustomCarEnvMapPipeline::pluginEnvMatStreamWriteCB(RwStream*, int, void const*, int, int)
002ccc51 T CCustomCarEnvMapPipeline::pluginSpecMatDestructorCB(void*, int, int)
002ccd4d T CCustomCarEnvMapPipeline::pluginSpecMatStreamReadCB(RwStream*, int, void*, int, int)
00685f90 D CCustomCarEnvMapPipeline::ms_specularMapPluginOffset
002ccc3d T CCustomCarEnvMapPipeline::pluginSpecMatConstructorCB(void*, int, int)
002cce31 T CCustomCarEnvMapPipeline::pluginSpecMatStreamWriteCB(RwStream*, int, void const*, int, int)
002ccb41 T CCustomCarEnvMapPipeline::pluginEnvMatStreamGetSizeCB(void const*, int, int)
002ccea9 T CCustomCarEnvMapPipeline::pluginSpecMatStreamGetSizeCB(void const*, int, int)
002ccbb1 T CCustomCarEnvMapPipeline::pluginEnvAtmCopyConstructorCB(void*, void const*, int, int)
002cc8bd T CCustomCarEnvMapPipeline::pluginEnvMatCopyConstructorCB(void*, void const*, int, int)
002ccca9 T CCustomCarEnvMapPipeline::pluginSpecMatCopyConstructorCB(void*, void const*, int, int)
002cc279 T CCustomCarEnvMapPipeline::DuplicateCustomEnvMapPipeMaterialData(CustomEnvMapPipeMaterialData**)
002ccebd T CCustomCarEnvMapPipeline::SetCustomEnvMapPipeAtomicDataDefaults(CustomEnvMapPipeAtomicData*)
002ccb49 T CCustomCarEnvMapPipeline::SetCustomEnvMapPipeMaterialDataDefaults(CustomEnvMapPipeMaterialData*)
002cb5e1 T CCustomCarEnvMapPipeline::CCustomCarEnvMapPipeline()
002cb5e1 T CCustomCarEnvMapPipeline::CCustomCarEnvMapPipeline()
002cb5e3 T CCustomCarEnvMapPipeline::~CCustomCarEnvMapPipeline()
002cb5e3 T CCustomCarEnvMapPipeline::~CCustomCarEnvMapPipeline()
00820654 B CInformFriendsEventQueue::ms_informFriendsEvents
0036ffc5 T CInformFriendsEventQueue::Add(CPed*, CEvent*)
0036fed5 T CInformFriendsEventQueue::Init()
0036ff4d T CInformFriendsEventQueue::Flush()
003700ad T CInformFriendsEventQueue::Process()
0036fed1 T CInformFriendsEventQueue::CInformFriendsEventQueue()
0036fed1 T CInformFriendsEventQueue::CInformFriendsEventQueue()
0036fed3 T CInformFriendsEventQueue::~CInformFriendsEventQueue()
0036fed3 T CInformFriendsEventQueue::~CInformFriendsEventQueue()
003f83f7 T CMousePointerStateHelper::GetMouseSetUp()
00484b5b T CPlayerInfoSaveStructure::Extract(CPlayerInfo*)
00484ae3 T CPlayerInfoSaveStructure::Construct(CPlayerInfo*)
00549ab9 T CTaskAllocatorKillOnFoot::AllocateTasks(CPedGroupIntelligence*)
005499e9 T CTaskAllocatorKillOnFoot::CTaskAllocatorKillOnFoot(CPed*, int)
005499e9 T CTaskAllocatorKillOnFoot::CTaskAllocatorKillOnFoot(CPed*, int)
00549a41 T CTaskAllocatorKillOnFoot::~CTaskAllocatorKillOnFoot()
00549a19 T CTaskAllocatorKillOnFoot::~CTaskAllocatorKillOnFoot()
00549a19 T CTaskAllocatorKillOnFoot::~CTaskAllocatorKillOnFoot()
00493561 W CTaskComplexDriveToPoint::CreateTask()
0061e3e8 R CTaskComplexDriveToPoint::ms_fSlowDownDistance
0061e3ec R CTaskComplexDriveToPoint::ms_fBlockedTargetDistance
004fc481 T CTaskComplexDriveToPoint::Drive(CPed*)
004ff2c9 W CTaskComplexDriveToPoint::Serialize()
004fc325 T CTaskComplexDriveToPoint::CTaskComplexDriveToPoint(CVehicle*, CVector const&, float, int, int, float, int)
004fc325 T CTaskComplexDriveToPoint::CTaskComplexDriveToPoint(CVehicle*, CVector const&, float, int, int, float, int)
004fc3ad T CTaskComplexDriveToPoint::~CTaskComplexDriveToPoint()
004fb725 T CTaskComplexDriveToPoint::~CTaskComplexDriveToPoint()
004fb725 T CTaskComplexDriveToPoint::~CTaskComplexDriveToPoint()
00492c71 W CTaskComplexEvasiveCower::CreateTask()
0050e87d T CTaskComplexEvasiveCower::ControlSubTask(CPed*)
0050e809 T CTaskComplexEvasiveCower::CreateNextSubTask(CPed*)
0050e83d T CTaskComplexEvasiveCower::CreateFirstSubTask(CPed*)
0050ffa1 W CTaskComplexEvasiveCower::Serialize()
0050e6c9 T CTaskComplexEvasiveCower::CTaskComplexEvasiveCower(CEntity*, CVector const&)
0050e6c9 T CTaskComplexEvasiveCower::CTaskComplexEvasiveCower(CEntity*, CVector const&)
0050e73d T CTaskComplexEvasiveCower::~CTaskComplexEvasiveCower()
0050e711 T CTaskComplexEvasiveCower::~CTaskComplexEvasiveCower()
0050e711 T CTaskComplexEvasiveCower::~CTaskComplexEvasiveCower()
00490fa1 W CTaskComplexFallAndGetUp::CreateTask()
0052bb35 T CTaskComplexFallAndGetUp::SetDownTime(int)
0052bc0d T CTaskComplexFallAndGetUp::CreateSubTask(int)
0052bb6d T CTaskComplexFallAndGetUp::MakeAbortable(CPed*, int, CEvent const*)
0052bcb5 T CTaskComplexFallAndGetUp::ControlSubTask(CPed*)
0052bbd9 T CTaskComplexFallAndGetUp::CreateNextSubTask(CPed*)
0052bc79 T CTaskComplexFallAndGetUp::CreateFirstSubTask(CPed*)
00532af9 W CTaskComplexFallAndGetUp::Serialize()
0052bac5 T CTaskComplexFallAndGetUp::CTaskComplexFallAndGetUp(AnimationId, AssocGroupId, int)
0052baf1 T CTaskComplexFallAndGetUp::CTaskComplexFallAndGetUp(int, int)
0052bac5 T CTaskComplexFallAndGetUp::CTaskComplexFallAndGetUp(AnimationId, AssocGroupId, int)
0052baf1 T CTaskComplexFallAndGetUp::CTaskComplexFallAndGetUp(int, int)
0052bb25 T CTaskComplexFallAndGetUp::~CTaskComplexFallAndGetUp()
0052bb21 T CTaskComplexFallAndGetUp::~CTaskComplexFallAndGetUp()
0052bb21 T CTaskComplexFallAndGetUp::~CTaskComplexFallAndGetUp()
00495f05 W CTaskComplexFleeAnyMeans::CreateTask()
0061e560 R CTaskComplexFleeAnyMeans::ms_iShootTime
005148e1 T CTaskComplexFleeAnyMeans::ControlSubTask(CPed*)
0061e568 R CTaskComplexFleeAnyMeans::ms_fStealCarDist
005147e5 T CTaskComplexFleeAnyMeans::CreateNextSubTask(CPed*)
005148b3 T CTaskComplexFleeAnyMeans::CreateFirstSubTask(CPed*)
0061e564 R CTaskComplexFleeAnyMeans::ms_iShootRecoverTime
0051504d W CTaskComplexFleeAnyMeans::Serialize()
005144b1 T CTaskComplexFleeAnyMeans::CTaskComplexFleeAnyMeans(CEntity*, bool, float, int, int, int, float, int, float)
005144b1 T CTaskComplexFleeAnyMeans::CTaskComplexFleeAnyMeans(CEntity*, bool, float, int, int, int, float, int, float)
005145b5 T CTaskComplexFleeAnyMeans::~CTaskComplexFleeAnyMeans()
0051455d T CTaskComplexFleeAnyMeans::~CTaskComplexFleeAnyMeans()
0051455d T CTaskComplexFleeAnyMeans::~CTaskComplexFleeAnyMeans()
005142a5 T CTaskComplexFleeShooting::MakeAbortable(CPed*, int, CEvent const*)
0061e558 R CTaskComplexFleeShooting::ms_iShootTime
00514359 T CTaskComplexFleeShooting::ControlSubTask(CPed*)
005142ff T CTaskComplexFleeShooting::CreateNextSubTask(CPed*)
0051433d T CTaskComplexFleeShooting::CreateFirstSubTask(CPed*)
0061e55c R CTaskComplexFleeShooting::ms_iShootRecoverTime
00514159 T CTaskComplexFleeShooting::CTaskComplexFleeShooting(CEntity*, bool, float, int, int, int, int, float)
00514159 T CTaskComplexFleeShooting::CTaskComplexFleeShooting(CEntity*, bool, float, int, int, int, int, float)
00514249 T CTaskComplexFleeShooting::~CTaskComplexFleeShooting()
005141f1 T CTaskComplexFleeShooting::~CTaskComplexFleeShooting()
005141f1 T CTaskComplexFleeShooting::~CTaskComplexFleeShooting()
005165b5 T CTaskComplexGangFollower::MakeAbortable(CPed*, int, CEvent const*)
00516ce1 T CTaskComplexGangFollower::ControlSubTask(CPed*)
00517849 T CTaskComplexGangFollower::SetFollowLeader(unsigned char)
006b03fc D CTaskComplexGangFollower::ms_nUseClimbing
005166d1 T CTaskComplexGangFollower::CreateNextSubTask(CPed*)
00516a61 T CTaskComplexGangFollower::CreateFirstSubTask(CPed*)
0061e5a0 R CTaskComplexGangFollower::ms_iMaxStaticCounter
0061e594 R CTaskComplexGangFollower::ms_fTargetSlowDownDist
00516bed T CTaskComplexGangFollower::CalculateOffsetPosition(CVector&)
0061e58c R CTaskComplexGangFollower::ms_fDistFromLeaderCanStop
0061e598 R CTaskComplexGangFollower::ms_fTargetSlowDownDistSqr
0061e590 R CTaskComplexGangFollower::ms_fDistFromLeaderCanStopSqr
0061e59c R CTaskComplexGangFollower::ms_fLeaderIsMovingDeltaDistSqr
00516459 T CTaskComplexGangFollower::CTaskComplexGangFollower(CPedGroup*, CPed*, unsigned char, CVector, float)
00516459 T CTaskComplexGangFollower::CTaskComplexGangFollower(CPedGroup*, CPed*, unsigned char, CVector, float)
00516561 T CTaskComplexGangFollower::~CTaskComplexGangFollower()
00516511 T CTaskComplexGangFollower::~CTaskComplexGangFollower()
00516511 T CTaskComplexGangFollower::~CTaskComplexGangFollower()
00491519 W CTaskComplexInAirAndLand::CreateTask()
0052c23d T CTaskComplexInAirAndLand::ControlSubTask(CPed*)
0052bec5 T CTaskComplexInAirAndLand::CreateNextSubTask(CPed*)
0052be51 T CTaskComplexInAirAndLand::CreateFirstSubTask(CPed*)
00532d19 W CTaskComplexInAirAndLand::Serialize()
0052be19 T CTaskComplexInAirAndLand::CTaskComplexInAirAndLand(bool, bool)
0052be19 T CTaskComplexInAirAndLand::CTaskComplexInAirAndLand(bool, bool)
0052be41 T CTaskComplexInAirAndLand::~CTaskComplexInAirAndLand()
0052be3d T CTaskComplexInAirAndLand::~CTaskComplexInAirAndLand()
0052be3d T CTaskComplexInAirAndLand::~CTaskComplexInAirAndLand()
0053e1d9 T CTaskComplexKillCriminal::ChangeTarget(CPed*)
0053e04d T CTaskComplexKillCriminal::MakeAbortable(CPed*, int, CEvent const*)
0053ef99 T CTaskComplexKillCriminal::ControlSubTask(CPed*)
0053e9bd T CTaskComplexKillCriminal::CreateNextSubTask(CPed*)
0053e30d T CTaskComplexKillCriminal::CreateFirstSubTask(CPed*)
0053ee85 T CTaskComplexKillCriminal::FindNextCriminalToKill(CPed*, bool)
0053debd T CTaskComplexKillCriminal::CTaskComplexKillCriminal(CPed*, bool)
0053debd T CTaskComplexKillCriminal::CTaskComplexKillCriminal(CPed*, bool)
0053e03d T CTaskComplexKillCriminal::~CTaskComplexKillCriminal()
0053df3d T CTaskComplexKillCriminal::~CTaskComplexKillCriminal()
0053df3d T CTaskComplexKillCriminal::~CTaskComplexKillCriminal()
00534e89 T CTaskComplexPartnerGreet::CreateFirstSubTask(CPed*)
00534f4d T CTaskComplexPartnerGreet::GetPartnerSequence()
00534ee9 T CTaskComplexPartnerGreet::StreamRequiredAnims()
00534dad T CTaskComplexPartnerGreet::CTaskComplexPartnerGreet(char*, CPed*, unsigned char, float, int, CVector)
00534dad T CTaskComplexPartnerGreet::CTaskComplexPartnerGreet(char*, CPed*, unsigned char, float, int, CVector)
00534e51 T CTaskComplexPartnerGreet::~CTaskComplexPartnerGreet()
0053439d T CTaskComplexPartnerGreet::~CTaskComplexPartnerGreet()
0053439d T CTaskComplexPartnerGreet::~CTaskComplexPartnerGreet()
00535bc9 T CTaskComplexPartnerShove::GetPartnerSequence()
00535b05 T CTaskComplexPartnerShove::CTaskComplexPartnerShove(char*, CPed*, unsigned char, float, int, CVector)
00535b05 T CTaskComplexPartnerShove::CTaskComplexPartnerShove(char*, CPed*, unsigned char, float, int, CVector)
00535b91 T CTaskComplexPartnerShove::~CTaskComplexPartnerShove()
0053439d T CTaskComplexPartnerShove::~CTaskComplexPartnerShove()
0053439d T CTaskComplexPartnerShove::~CTaskComplexPartnerShove()
004fcc55 T CTaskComplexShuffleSeats::CreateSubTask(int, CPed*)
004fcc41 T CTaskComplexShuffleSeats::MakeAbortable(CPed*, int, CEvent const*)
004fcedf T CTaskComplexShuffleSeats::ControlSubTask(CPed*)
004fcd11 T CTaskComplexShuffleSeats::CreateNextSubTask(CPed*)
004fce11 T CTaskComplexShuffleSeats::CreateFirstSubTask(CPed*)
004fce4d T CTaskComplexShuffleSeats::CreateTaskUtilityLineUpPedWithCar(CPed*)
004ff7e5 W CTaskComplexShuffleSeats::Serialize()
004fcb95 T CTaskComplexShuffleSeats::CTaskComplexShuffleSeats(CVehicle*)
004fcb95 T CTaskComplexShuffleSeats::CTaskComplexShuffleSeats(CVehicle*)
004fcc05 T CTaskComplexShuffleSeats::~CTaskComplexShuffleSeats()
004fcbcd T CTaskComplexShuffleSeats::~CTaskComplexShuffleSeats()
004fcbcd T CTaskComplexShuffleSeats::~CTaskComplexShuffleSeats()
004ee469 T CTaskComplexUseAttractor::ControlSubTask(CPed*)
004edff5 T CTaskComplexUseAttractor::CreateNextSubTask(CPed*)
004ee06d T CTaskComplexUseAttractor::CreateFirstSubTask(CPed*)
004edfc5 T CTaskComplexUseAttractor::CTaskComplexUseAttractor(CPedAttractor*)
004edfc5 T CTaskComplexUseAttractor::CTaskComplexUseAttractor(CPedAttractor*)
004edfe5 T CTaskComplexUseAttractor::~CTaskComplexUseAttractor()
004edfe1 T CTaskComplexUseAttractor::~CTaskComplexUseAttractor()
004edfe1 T CTaskComplexUseAttractor::~CTaskComplexUseAttractor()
005260cd T CTaskComplexUseEntryExit::UseEntryExit(CPed*)
00526149 T CTaskComplexUseEntryExit::MakeAbortable(CPed*, int, CEvent const*)
00526145 T CTaskComplexUseEntryExit::ControlSubTask(CPed*)
00525fe1 T CTaskComplexUseEntryExit::CreateNextSubTask(CPed*)
00525f69 T CTaskComplexUseEntryExit::CreateFirstSubTask(CPed*)
00527049 W CTaskComplexUseEntryExit::~CTaskComplexUseEntryExit()
0049285d W CTaskComplexWalkRoundCar::CreateTask()
0050c729 T CTaskComplexWalkRoundCar::ComputeRoute(CPed const*)
0050c46d T CTaskComplexWalkRoundCar::SetNewVehicle(CVehicle*, int)
0050c741 T CTaskComplexWalkRoundCar::ControlSubTask(CPed*)
0050c425 T CTaskComplexWalkRoundCar::CreateRouteTask(CPed*)
0050c3c9 T CTaskComplexWalkRoundCar::CreateNextSubTask(CPed*)
0050c4b9 T CTaskComplexWalkRoundCar::CreateFirstSubTask(CPed*)
0050c921 T CTaskComplexWalkRoundCar::ComputeRouteRoundBigCar(CPed const*)
0061e4c0 R CTaskComplexWalkRoundCar::ms_iWalkRoundTimeRunning
0061e4bc R CTaskComplexWalkRoundCar::ms_iWalkRoundTimeWalking
0050cb2d T CTaskComplexWalkRoundCar::ComputeRouteRoundSmallCar(CPed const*)
0061e4c4 R CTaskComplexWalkRoundCar::ms_fVehiclePosChangedThresholdSq
0061e4c8 R CTaskComplexWalkRoundCar::ms_fVehicleDotAngleChangedThreshold
0050f8f5 W CTaskComplexWalkRoundCar::Serialize()
0050c2c9 T CTaskComplexWalkRoundCar::CTaskComplexWalkRoundCar(int, CVector const&, CVehicle const*, bool, int)
0050c2c9 T CTaskComplexWalkRoundCar::CTaskComplexWalkRoundCar(int, CVector const&, CVehicle const*, bool, int)
0050c38d T CTaskComplexWalkRoundCar::~CTaskComplexWalkRoundCar()
0050c355 T CTaskComplexWalkRoundCar::~CTaskComplexWalkRoundCar()
0050c355 T CTaskComplexWalkRoundCar::~CTaskComplexWalkRoundCar()
00493a71 W CTaskSimpleCarDriveTimed::CreateTask()
00334db5 W CTaskSimpleCarDriveTimed::ProcessPed(CPed*)
00334cb5 W CTaskSimpleCarDriveTimed::Serialize()
00334c69 W CTaskSimpleCarDriveTimed::~CTaskSimpleCarDriveTimed()
00517901 T CTaskSimpleGoToPointFine::ProcessPed(CPed*)
00517d6d T CTaskSimpleGoToPointFine::SetMoveRatio(float)
00517cf9 T CTaskSimpleGoToPointFine::SetTargetPos(CVector)
005178a5 T CTaskSimpleGoToPointFine::MakeAbortable(CPed*, int, CEvent const*)
005179cd T CTaskSimpleGoToPointFine::SetBlendedMoveAnim(CPed*)
005178d5 T CTaskSimpleGoToPointFine::Finish(CPed*)
00517cd9 T CTaskSimpleGoToPointFine::BaseRatio(eMoveState)
00517861 T CTaskSimpleGoToPointFine::CTaskSimpleGoToPointFine(float, CVector, float, CEntity*)
00517861 T CTaskSimpleGoToPointFine::CTaskSimpleGoToPointFine(float, CVector, float, CEntity*)
00517895 T CTaskSimpleGoToPointFine::~CTaskSimpleGoToPointFine()
00517891 T CTaskSimpleGoToPointFine::~CTaskSimpleGoToPointFine()
00517891 T CTaskSimpleGoToPointFine::~CTaskSimpleGoToPointFine()
00497e39 W CTaskSimpleHitFromBehind::Serialize()
00497de9 W CTaskSimpleHitFromBehind::~CTaskSimpleHitFromBehind()
00542395 T CTaskSimplePutDownEntity::CTaskSimplePutDownEntity(CEntity*, CVector const*, unsigned char, unsigned char, AnimationId, AssocGroupId, float)
00542469 T CTaskSimplePutDownEntity::CTaskSimplePutDownEntity(CEntity*, CVector const*, unsigned char, unsigned char, CAnimBlock*, CAnimBlendHierarchy*, int, float)
00542435 T CTaskSimplePutDownEntity::CTaskSimplePutDownEntity(CEntity*, CVector const*, unsigned char, unsigned char, char const*, char const*, int, float)
00542529 T CTaskSimplePutDownEntity::CTaskSimplePutDownEntity()
00542395 T CTaskSimplePutDownEntity::CTaskSimplePutDownEntity(CEntity*, CVector const*, unsigned char, unsigned char, AnimationId, AssocGroupId, float)
00542469 T CTaskSimplePutDownEntity::CTaskSimplePutDownEntity(CEntity*, CVector const*, unsigned char, unsigned char, CAnimBlock*, CAnimBlendHierarchy*, int, float)
00542435 T CTaskSimplePutDownEntity::CTaskSimplePutDownEntity(CEntity*, CVector const*, unsigned char, unsigned char, char const*, char const*, int, float)
00542529 T CTaskSimplePutDownEntity::CTaskSimplePutDownEntity()
0054433b W CTaskSimplePutDownEntity::~CTaskSimplePutDownEntity()
004919bd W CTaskSimpleTriggerLookAt::CreateTask()
004f0991 T CTaskSimpleTriggerLookAt::ProcessPed(CPed*)
004f098d T CTaskSimpleTriggerLookAt::MakeAbortable(CPed*, int, CEvent const*)
004f3cf1 W CTaskSimpleTriggerLookAt::Serialize()
004f0819 T CTaskSimpleTriggerLookAt::CTaskSimpleTriggerLookAt(CEntity*, int, int, RwV3d, unsigned char, float, int, int)
004f0819 T CTaskSimpleTriggerLookAt::CTaskSimpleTriggerLookAt(CEntity*, int, int, RwV3d, unsigned char, float, int, int)
004f08bd T CTaskSimpleTriggerLookAt::~CTaskSimpleTriggerLookAt()
004f0891 T CTaskSimpleTriggerLookAt::~CTaskSimpleTriggerLookAt()
004f0891 T CTaskSimpleTriggerLookAt::~CTaskSimpleTriggerLookAt()
002b5d9d T CWidgetButtonSwapWeapons::Update()
002b5e0d W CWidgetButtonSwapWeapons::GetName()
002b5d71 T CWidgetButtonSwapWeapons::CWidgetButtonSwapWeapons(char const*, WidgetPosition const&)
002b5d71 T CWidgetButtonSwapWeapons::CWidgetButtonSwapWeapons(char const*, WidgetPosition const&)
002b5de1 W CWidgetButtonSwapWeapons::~CWidgetButtonSwapWeapons()
002bfe0d T CWidgetRegionArcadeStick::SetWidgetValue(float)
002bfdf1 T CWidgetRegionArcadeStick::GetWidgetValue2(float*, float*)
002bfc4d T CWidgetRegionArcadeStick::Draw()
002bfc39 T CWidgetRegionArcadeStick::Update()
002bff0d W CWidgetRegionArcadeStick::GetName()
002bfc0d T CWidgetRegionArcadeStick::CWidgetRegionArcadeStick(char const*, WidgetPosition const&, int, HIDMapping)
002bfc0d T CWidgetRegionArcadeStick::CWidgetRegionArcadeStick(char const*, WidgetPosition const&, int, HIDMapping)
002bfefd W CWidgetRegionArcadeStick::~CWidgetRegionArcadeStick()
002bffc1 T CWidgetRegionColorPicker::GetWidgetValue()
002c0071 W CWidgetRegionColorPicker::GetName()
002bff9d T CWidgetRegionColorPicker::CWidgetRegionColorPicker(char const*, WidgetPosition const&)
002bff9d T CWidgetRegionColorPicker::CWidgetRegionColorPicker(char const*, WidgetPosition const&)
002c0061 W CWidgetRegionColorPicker::~CWidgetRegionColorPicker()
002c040d T CWidgetRegionDriveHybrid::Draw()
002c0109 T CWidgetRegionDriveHybrid::Update()
002c05cd W CWidgetRegionDriveHybrid::GetName()
002c0365 T CWidgetRegionDriveHybrid::IsTouched(CVector2D*)
002c0081 T CWidgetRegionDriveHybrid::CWidgetRegionDriveHybrid(char const*, WidgetPosition const&)
002c0081 T CWidgetRegionDriveHybrid::CWidgetRegionDriveHybrid(char const*, WidgetPosition const&)
002c0599 W CWidgetRegionDriveHybrid::~CWidgetRegionDriveHybrid()
002c0569 W CWidgetRegionDriveHybrid::~CWidgetRegionDriveHybrid()
002c1e4d T CWidgetRegionPoolEnglish::GetWidgetValue2(float*, float*)
002c1ea9 W CWidgetRegionPoolEnglish::GetName()
002c1e7d T CWidgetRegionPoolEnglish::IsTouched(CVector2D*)
002c1e29 T CWidgetRegionPoolEnglish::CWidgetRegionPoolEnglish(char const*, WidgetPosition const&)
002c1e29 T CWidgetRegionPoolEnglish::CWidgetRegionPoolEnglish(char const*, WidgetPosition const&)
002c1e99 W CWidgetRegionPoolEnglish::~CWidgetRegionPoolEnglish()
00222b81 T RxOpenGLMeshInstanceData::DrawStored()
003b93e1 T CAEWaterCannonAudioEntity::Initialise(CWaterCannon*)
003b950d T CAEWaterCannonAudioEntity::AddAudioEvent(int, CVector&)
003b982d T CAEWaterCannonAudioEntity::SetSplashInfo(CVector, float)
003b93f5 T CAEWaterCannonAudioEntity::ClearSplashInfo()
0046d895 T CAEWaterCannonAudioEntity::StaticInitialise()
003b950f T CAEWaterCannonAudioEntity::UpdateParameters(CAESound*, short)
003b9445 T CAEWaterCannonAudioEntity::UpdateGenericWaterCannonSound(unsigned char, short, short, short, float, float, CVector, float)
003b9551 T CAEWaterCannonAudioEntity::Service()
003b9407 T CAEWaterCannonAudioEntity::Terminate()
002ca47d T CCustomBuildingDNPipeline::CreatePipe()
002ca519 T CCustomBuildingDNPipeline::DestroyPipe()
0070bf3c B CCustomBuildingDNPipeline::ObjPipeline
002caded T CCustomBuildingDNPipeline::SetFxEnvScale(RpMaterial*, float, float)
002cae39 T CCustomBuildingDNPipeline::GetFxEnvScaleX(RpMaterial*)
002cae75 T CCustomBuildingDNPipeline::GetFxEnvScaleY(RpMaterial*)
002ca661 T CCustomBuildingDNPipeline::GetFxEnvTexture(RpMaterial*)
002ca5d9 T CCustomBuildingDNPipeline::SetFxEnvTexture(RpMaterial*, RwTexture*)
0070bf38 B CCustomBuildingDNPipeline::m_bCameraChange
002caeb1 T CCustomBuildingDNPipeline::SetFxEnvTransScl(RpMaterial*, float, float)
002ca6b1 T CCustomBuildingDNPipeline::UsesThisPipeline(RpAtomic*)
002ca625 T CCustomBuildingDNPipeline::GetFxEnvShininess(RpMaterial*)
002caefd T CCustomBuildingDNPipeline::GetFxEnvTransSclX(RpMaterial*)
002caf39 T CCustomBuildingDNPipeline::GetFxEnvTransSclY(RpMaterial*)
002caf75 T CCustomBuildingDNPipeline::SetFxEnvShininess(RpMaterial*, float)
00685f84 D CCustomBuildingDNPipeline::m_fDNBalanceParam
002ca85d T CCustomBuildingDNPipeline::CustomPipeRenderCB(RwResEntry*, void*, unsigned char, unsigned int)
002ca499 T CCustomBuildingDNPipeline::CreateCustomObjPipe()
0070bf34 B CCustomBuildingDNPipeline::m_AtmDNWorkingIndex
002ca6c9 T CCustomBuildingDNPipeline::CustomPipeInstanceCB(void*, RxOpenGLMeshInstanceData*, int, int)
002ca679 T CCustomBuildingDNPipeline::CustomPipeAtomicSetup(RpAtomic*)
002cadcd T CCustomBuildingDNPipeline::GetExtraVertColourPtr(RpGeometry*)
0070bf40 B CCustomBuildingDNPipeline::m_bDeviceSupportsVS11
002ca549 T CCustomBuildingDNPipeline::CustomPipeMaterialSetup(RpMaterial*, void*)
002cab0d T CCustomBuildingDNPipeline::ExtraVertColourPluginAttach()
00685f80 D CCustomBuildingDNPipeline::ms_extraVertColourPluginOffset
002cabcd T CCustomBuildingDNPipeline::pluginExtraVertColourDestructorCB(void*, int, int)
002cac19 T CCustomBuildingDNPipeline::pluginExtraVertColourStreamReadCB(RwStream*, int, void*, int, int)
002cabb1 T CCustomBuildingDNPipeline::pluginExtraVertColourConstructorCB(void*, int, int)
002cad19 T CCustomBuildingDNPipeline::pluginExtraVertColourStreamWriteCB(RwStream*, int, void const*, int, int)
002cad55 T CCustomBuildingDNPipeline::pluginExtraVertColourStreamGetSizeCB(void const*, int, int)
002ca479 T CCustomBuildingDNPipeline::CCustomBuildingDNPipeline()
002ca479 T CCustomBuildingDNPipeline::CCustomBuildingDNPipeline()
002ca47b T CCustomBuildingDNPipeline::~CCustomBuildingDNPipeline()
002ca47b T CCustomBuildingDNPipeline::~CCustomBuildingDNPipeline()
002fce49 W CEventAcquaintancePedHate::~CEventAcquaintancePedHate()
004c25d1 W CEventAcquaintancePedLike::~CEventAcquaintancePedLike()
004ca781 W CEventDontJoinPlayerGroup::~CEventDontJoinPlayerGroup()
004ca6ad W CEventDontJoinPlayerGroup::~CEventDontJoinPlayerGroup()
00377255 T CEventGotKnockedOverByCar::CEventGotKnockedOverByCar(CVehicle*)
00377255 T CEventGotKnockedOverByCar::CEventGotKnockedOverByCar(CVehicle*)
003772bd T CEventGotKnockedOverByCar::~CEventGotKnockedOverByCar()
00377295 T CEventGotKnockedOverByCar::~CEventGotKnockedOverByCar()
00377295 T CEventGotKnockedOverByCar::~CEventGotKnockedOverByCar()
0060ffac R CEventPedCollisionWithPed::ms_fPedBrushKnockdown
003712c5 T CEventPedCollisionWithPed::CEventPedCollisionWithPed(unsigned short, float, CPed const*, CVector const&, CVector const&, int, int)
003712c5 T CEventPedCollisionWithPed::CEventPedCollisionWithPed(unsigned short, float, CPed const*, CVector const&, CVector const&, int, int)
0037134d T CEventPedCollisionWithPed::~CEventPedCollisionWithPed()
00371325 T CEventPedCollisionWithPed::~CEventPedCollisionWithPed()
00371325 T CEventPedCollisionWithPed::~CEventPedCollisionWithPed()
003745d1 T CEventPedEnteredMyVehicle::CEventPedEnteredMyVehicle(CPed const*, CVehicle const*, int)
003745d1 T CEventPedEnteredMyVehicle::CEventPedEnteredMyVehicle(CPed const*, CVehicle const*, int)
00374651 T CEventPedEnteredMyVehicle::~CEventPedEnteredMyVehicle()
0037461d T CEventPedEnteredMyVehicle::~CEventPedEnteredMyVehicle()
0037461d T CEventPedEnteredMyVehicle::~CEventPedEnteredMyVehicle()
00373e51 T CEventPotentialGetRunOver::CEventPotentialGetRunOver(CVehicle*)
00373e51 T CEventPotentialGetRunOver::CEventPotentialGetRunOver(CVehicle*)
00373eb9 T CEventPotentialGetRunOver::~CEventPotentialGetRunOver()
00373e91 T CEventPotentialGetRunOver::~CEventPotentialGetRunOver()
00373e91 T CEventPotentialGetRunOver::~CEventPotentialGetRunOver()
004ea7f3 W CEventVehicleDamageWeapon::~CEventVehicleDamageWeapon()
007a112c B CPedToPlayerConversations::m_StartTime
00302e05 T CPedToPlayerConversations::EndConversation()
007a1135 B CPedToPlayerConversations::m_bPositiveReply
007a1134 B CPedToPlayerConversations::m_bPositiveOpening
007a1130 B CPedToPlayerConversations::m_TimeOfLastPlayerConversation
00301b25 T CPedToPlayerConversations::Clear()
00301b69 T CPedToPlayerConversations::Update()
007a1124 B CPedToPlayerConversations::m_pPed
007a1120 B CPedToPlayerConversations::m_State
007a1128 B CPedToPlayerConversations::m_Topic
0049000d T CPostEffectsSaveStructure::CopyValues(bool)
00506305 T CTaskComplexGetOnBoatSeat::MakeAbortable(CPed*, int, CEvent const*)
0050634f T CTaskComplexGetOnBoatSeat::ControlSubTask(CPed*)
00506319 T CTaskComplexGetOnBoatSeat::CreateNextSubTask(CPed*)
0050631d T CTaskComplexGetOnBoatSeat::CreateFirstSubTask(CPed*)
00506279 T CTaskComplexGetOnBoatSeat::CTaskComplexGetOnBoatSeat(CVehicle*)
00506279 T CTaskComplexGetOnBoatSeat::CTaskComplexGetOnBoatSeat(CVehicle*)
005062d5 T CTaskComplexGetOnBoatSeat::~CTaskComplexGetOnBoatSeat()
005062a9 T CTaskComplexGetOnBoatSeat::~CTaskComplexGetOnBoatSeat()
005062a9 T CTaskComplexGetOnBoatSeat::~CTaskComplexGetOnBoatSeat()
00524611 T CTaskComplexGoToAttractor::MakeAbortable(CPed*, int, CEvent const*)
005247e9 T CTaskComplexGoToAttractor::ControlSubTask(CPed*)
0052461d T CTaskComplexGoToAttractor::CreateNextSubTask(CPed*)
00524655 T CTaskComplexGoToAttractor::CreateFirstSubTask(CPed*)
005245b5 T CTaskComplexGoToAttractor::CTaskComplexGoToAttractor(CPedAttractor*, CVector const&, float, float, int, int)
005245b5 T CTaskComplexGoToAttractor::CTaskComplexGoToAttractor(CPedAttractor*, CVector const&, float, float, int, int)
00524601 T CTaskComplexGoToAttractor::~CTaskComplexGoToAttractor()
005245fd T CTaskComplexGoToAttractor::~CTaskComplexGoToAttractor()
005245fd T CTaskComplexGoToAttractor::~CTaskComplexGoToAttractor()
004926ad W CTaskComplexHitPedWithCar::CreateTask()
0061e49c R CTaskComplexHitPedWithCar::ms_iDownTime
0050b609 T CTaskComplexHitPedWithCar::CreateSubTask(int)
0050b741 T CTaskComplexHitPedWithCar::ControlSubTask(CPed*)
0050b5bd T CTaskComplexHitPedWithCar::CreateNextSubTask(CPed*)
0061e4a4 R CTaskComplexHitPedWithCar::ms_fMinDieImpulse
0050b745 T CTaskComplexHitPedWithCar::CreateFirstSubTask(CPed*)
0061e4a0 R CTaskComplexHitPedWithCar::ms_fMinDamageImpulse
0061e4ac R CTaskComplexHitPedWithCar::ms_fMinPlayerDieImpulse
0061e4b0 R CTaskComplexHitPedWithCar::ms_fMinVertDamageImpulse
0050b8e5 T CTaskComplexHitPedWithCar::ComputeEvasiveStepMoveDir(CPed const&, CVehicle*)
0061e4a8 R CTaskComplexHitPedWithCar::ms_fMinPlayerDamageImpulse
0050f4b1 W CTaskComplexHitPedWithCar::Serialize()
0050b51d T CTaskComplexHitPedWithCar::CTaskComplexHitPedWithCar(CVehicle*, float)
0050b51d T CTaskComplexHitPedWithCar::CTaskComplexHitPedWithCar(CVehicle*, float)
0050b58d T CTaskComplexHitPedWithCar::~CTaskComplexHitPedWithCar()
0050b561 T CTaskComplexHitPedWithCar::~CTaskComplexHitPedWithCar()
0050b561 T CTaskComplexHitPedWithCar::~CTaskComplexHitPedWithCar()
004964b1 W CTaskComplexKillPedOnFoot::CreateTask()
004e0601 T CTaskComplexKillPedOnFoot::CreateSubTask(int, CPed*)
004e02f9 T CTaskComplexKillPedOnFoot::MakeAbortable(CPed*, int, CEvent const*)
004e0c71 T CTaskComplexKillPedOnFoot::ControlSubTask(CPed*)
004e0329 T CTaskComplexKillPedOnFoot::CreateNextSubTask(CPed*)
004e098d T CTaskComplexKillPedOnFoot::CreateFirstSubTask(CPed*)
0061e31c R CTaskComplexKillPedOnFoot::ms_iCheckRoomToLeaveCarFreq
004e0319 T CTaskComplexKillPedOnFoot::AbortIK(CPed*)
004e9e71 W CTaskComplexKillPedOnFoot::Serialize()
004e0221 T CTaskComplexKillPedOnFoot::CTaskComplexKillPedOnFoot(CPed*, int, unsigned int, unsigned int, unsigned int, int)
004e0221 T CTaskComplexKillPedOnFoot::CTaskComplexKillPedOnFoot(CPed*, int, unsigned int, unsigned int, unsigned int, int)
004e02c9 T CTaskComplexKillPedOnFoot::~CTaskComplexKillPedOnFoot()
004e029d T CTaskComplexKillPedOnFoot::~CTaskComplexKillPedOnFoot()
004e029d T CTaskComplexKillPedOnFoot::~CTaskComplexKillPedOnFoot()
0053d8b9 T CTaskComplexPolicePursuit::SetPursuit(CPed*)
0053d805 T CTaskComplexPolicePursuit::ClearPursuit(CPed*)
0053d87d T CTaskComplexPolicePursuit::MakeAbortable(CPed*, int, CEvent const*)
0053dbbd T CTaskComplexPolicePursuit::ControlSubTask(CPed*)
0053dd65 T CTaskComplexPolicePursuit::PersistPursuit(CPed*)
0053d889 T CTaskComplexPolicePursuit::CreateNextSubTask(CPed*)
0053d88d T CTaskComplexPolicePursuit::CreateFirstSubTask(CPed*)
0053ddfb T CTaskComplexPolicePursuit::SetWeapon(CPed*)
0053d78d T CTaskComplexPolicePursuit::CTaskComplexPolicePursuit()
0053d78d T CTaskComplexPolicePursuit::CTaskComplexPolicePursuit()
0053d82d T CTaskComplexPolicePursuit::~CTaskComplexPolicePursuit()
0053d7b9 T CTaskComplexPolicePursuit::~CTaskComplexPolicePursuit()
0053d7b9 T CTaskComplexPolicePursuit::~CTaskComplexPolicePursuit()
004dff6d T CTaskComplexReactToAttack::CreateSubTask(int)
004dff29 T CTaskComplexReactToAttack::MakeAbortable(CPed*, int, CEvent const*)
004e01fd T CTaskComplexReactToAttack::ControlSubTask(CPed*)
004dff4f T CTaskComplexReactToAttack::CreateNextSubTask(CPed*)
004e0075 T CTaskComplexReactToAttack::CreateFirstSubTask(CPed*)
004dfe81 T CTaskComplexReactToAttack::CTaskComplexReactToAttack(eWeaponType, CEntity*, float, int, ePedPieceTypes)
004dfe81 T CTaskComplexReactToAttack::CTaskComplexReactToAttack(eWeaponType, CEntity*, float, int, ePedPieceTypes)
004dfef9 T CTaskComplexReactToAttack::~CTaskComplexReactToAttack()
004dfecd T CTaskComplexReactToAttack::~CTaskComplexReactToAttack()
004dfecd T CTaskComplexReactToAttack::~CTaskComplexReactToAttack()
00490ec1 W CTaskComplexTreatAccident::CreateTask()
00510659 T CTaskComplexTreatAccident::CreateSubTask(int, CPed const*)
00510875 T CTaskComplexTreatAccident::ControlSubTask(CPed*)
0051056d T CTaskComplexTreatAccident::CreateNextSubTask(CPed*)
005107c9 T CTaskComplexTreatAccident::CreateFirstSubTask(CPed*)
005123ed W CTaskComplexTreatAccident::Serialize()
0051053d T CTaskComplexTreatAccident::CTaskComplexTreatAccident(CAccident*)
0051053d T CTaskComplexTreatAccident::CTaskComplexTreatAccident(CAccident*)
0051055d T CTaskComplexTreatAccident::~CTaskComplexTreatAccident()
00510559 T CTaskComplexTreatAccident::~CTaskComplexTreatAccident()
00510559 T CTaskComplexTreatAccident::~CTaskComplexTreatAccident()
00492e89 W CTaskComplexWaitForBackup::CreateTask()
005476a1 T CTaskComplexWaitForBackup::CreateSubTask(int, CPed*)
00547875 T CTaskComplexWaitForBackup::ControlSubTask(CPed*)
00547469 T CTaskComplexWaitForBackup::CreateNextSubTask(CPed*)
005477ed T CTaskComplexWaitForBackup::CreateFirstSubTask(CPed*)
0054804d W CTaskComplexWaitForBackup::Serialize()
0061e760 R CTaskComplexWaitForBackup::ms_iTimer
00547391 T CTaskComplexWaitForBackup::CTaskComplexWaitForBackup(CPed*, CPed*, float)
00547391 T CTaskComplexWaitForBackup::CTaskComplexWaitForBackup(CPed*, CPed*, float)
00547429 T CTaskComplexWaitForBackup::~CTaskComplexWaitForBackup()
005473ed T CTaskComplexWaitForBackup::~CTaskComplexWaitForBackup()
005473ed T CTaskComplexWaitForBackup::~CTaskComplexWaitForBackup()
00492db1 W CTaskComplexWalkRoundFire::CreateTask()
0050ebb1 T CTaskComplexWalkRoundFire::ControlSubTask(CPed*)
0061e4e8 R CTaskComplexWalkRoundFire::ms_fFireRadius
0050eae5 T CTaskComplexWalkRoundFire::CreateNextSubTask(CPed*)
0050eae9 T CTaskComplexWalkRoundFire::CreateFirstSubTask(CPed*)
0050eb69 T CTaskComplexWalkRoundFire::ComputeDetourTarget(CPed const&, CVector&)
00510161 W CTaskComplexWalkRoundFire::Serialize()
0050ea8d T CTaskComplexWalkRoundFire::CTaskComplexWalkRoundFire(int, CVector const&, float, CVector const&)
0050ea8d T CTaskComplexWalkRoundFire::CTaskComplexWalkRoundFire(int, CVector const&, float, CVector const&)
0050ead5 T CTaskComplexWalkRoundFire::~CTaskComplexWalkRoundFire()
0050ead1 T CTaskComplexWalkRoundFire::~CTaskComplexWalkRoundFire()
0050ead1 T CTaskComplexWalkRoundFire::~CTaskComplexWalkRoundFire()
00494605 W CTaskSimpleAchieveHeading::CreateTask()
0051d295 T CTaskSimpleAchieveHeading::ProcessPed(CPed*)
0051d0ed T CTaskSimpleAchieveHeading::MakeAbortable(CPed*, int, CEvent const*)
0061e5e0 R CTaskSimpleAchieveHeading::ms_fHeadingTolerance
0061e5dc R CTaskSimpleAchieveHeading::ms_fHeadingChangeRateFrac
0051d0b5 T CTaskSimpleAchieveHeading::QuitIK(CPed*)
0051d159 T CTaskSimpleAchieveHeading::SetUpIK(CPed*)
005274f9 W CTaskSimpleAchieveHeading::Serialize()
0051d06d T CTaskSimpleAchieveHeading::CTaskSimpleAchieveHeading(float, float, float)
0051d06d T CTaskSimpleAchieveHeading::CTaskSimpleAchieveHeading(float, float, float)
0051d0a5 T CTaskSimpleAchieveHeading::~CTaskSimpleAchieveHeading()
0051d0a1 T CTaskSimpleAchieveHeading::~CTaskSimpleAchieveHeading()
0051d0a1 T CTaskSimpleAchieveHeading::~CTaskSimpleAchieveHeading()
00503c71 T CTaskSimpleCarForcePedOut::ProcessPed(CPed*)
005070a7 W CTaskSimpleCarForcePedOut::MakeAbortable(CPed*, int, CEvent const*)
00503bd9 T CTaskSimpleCarForcePedOut::CTaskSimpleCarForcePedOut(CVehicle*, int)
00503bd9 T CTaskSimpleCarForcePedOut::CTaskSimpleCarForcePedOut(CVehicle*, int)
00503c41 T CTaskSimpleCarForcePedOut::~CTaskSimpleCarForcePedOut()
00503c15 T CTaskSimpleCarForcePedOut::~CTaskSimpleCarForcePedOut()
00503c15 T CTaskSimpleCarForcePedOut::~CTaskSimpleCarForcePedOut()
004927cd W CTaskSimpleHurtPedWithCar::CreateTask()
0050c139 T CTaskSimpleHurtPedWithCar::ProcessPed(CPed*)
0061e4b8 R CTaskSimpleHurtPedWithCar::ms_fDamage
0050f74f W CTaskSimpleHurtPedWithCar::MakeAbortable(CPed*, int, CEvent const*)
0050f755 W CTaskSimpleHurtPedWithCar::Serialize()
0050c09d T CTaskSimpleHurtPedWithCar::CTaskSimpleHurtPedWithCar(CVehicle*, float)
0050c09d T CTaskSimpleHurtPedWithCar::CTaskSimpleHurtPedWithCar(CVehicle*, float)
0050c109 T CTaskSimpleHurtPedWithCar::~CTaskSimpleHurtPedWithCar()
0050c0dd T CTaskSimpleHurtPedWithCar::~CTaskSimpleHurtPedWithCar()
0050c0dd T CTaskSimpleHurtPedWithCar::~CTaskSimpleHurtPedWithCar()
0049273d W CTaskSimpleKillPedWithCar::CreateTask()
0050bad1 T CTaskSimpleKillPedWithCar::ProcessPed(CPed*)
0061e4b4 R CTaskSimpleKillPedWithCar::ms_fDamage
0050f5fb W CTaskSimpleKillPedWithCar::MakeAbortable(CPed*, int, CEvent const*)
0050f601 W CTaskSimpleKillPedWithCar::Serialize()
0050b95d T CTaskSimpleKillPedWithCar::CTaskSimpleKillPedWithCar(CVehicle*, float)
0050b95d T CTaskSimpleKillPedWithCar::CTaskSimpleKillPedWithCar(CVehicle*, float)
0050b9c5 T CTaskSimpleKillPedWithCar::~CTaskSimpleKillPedWithCar()
0050b999 T CTaskSimpleKillPedWithCar::~CTaskSimpleKillPedWithCar()
0050b999 T CTaskSimpleKillPedWithCar::~CTaskSimpleKillPedWithCar()
002b59e5 T CWidgetButtonMissionStart::Update()
002b5a61 W CWidgetButtonMissionStart::GetName()
002b59bd T CWidgetButtonMissionStart::CWidgetButtonMissionStart(char const*, WidgetPosition const&, HIDMapping)
002b59bd T CWidgetButtonMissionStart::CWidgetButtonMissionStart(char const*, WidgetPosition const&, HIDMapping)
002b5a35 W CWidgetButtonMissionStart::~CWidgetButtonMissionStart()
002b5d6d W CWidgetButtonSkipCutscene::Draw()
002b5d0d T CWidgetButtonSkipCutscene::Update()
002b5d61 W CWidgetButtonSkipCutscene::GetName()
002b5ce1 T CWidgetButtonSkipCutscene::CWidgetButtonSkipCutscene(char const*, WidgetPosition const&)
002b5ce1 T CWidgetButtonSkipCutscene::CWidgetButtonSkipCutscene(char const*, WidgetPosition const&)
002b5d35 W CWidgetButtonSkipCutscene::~CWidgetButtonSkipCutscene()
002b5f8f T CWidgetButtonVehicleShoot::IsHeldDown()
002b5f05 T CWidgetButtonVehicleShoot::UpdatePosition()
002b5ea1 T CWidgetButtonVehicleShoot::Update()
002b5ffd W CWidgetButtonVehicleShoot::GetName()
002b5f65 T CWidgetButtonVehicleShoot::IsTouched(CVector2D*)
002b5e79 T CWidgetButtonVehicleShoot::CWidgetButtonVehicleShoot(char const*, WidgetPosition const&, HIDMapping)
002b5e79 T CWidgetButtonVehicleShoot::CWidgetButtonVehicleShoot(char const*, WidgetPosition const&, HIDMapping)
002b5fd1 W CWidgetButtonVehicleShoot::~CWidgetButtonVehicleShoot()
002c2839 T CWidgetRegionRhythmSelect::Draw()
002c21a1 T CWidgetRegionRhythmSelect::Update()
002c29c9 W CWidgetRegionRhythmSelect::GetName()
002c20a1 T CWidgetRegionRhythmSelect::CWidgetRegionRhythmSelect(char const*, WidgetPosition const&)
002c20a1 T CWidgetRegionRhythmSelect::CWidgetRegionRhythmSelect(char const*, WidgetPosition const&)
002c2975 W CWidgetRegionRhythmSelect::~CWidgetRegionRhythmSelect()
002c2925 W CWidgetRegionRhythmSelect::~CWidgetRegionRhythmSelect()
0039747d T CAEGlobalWeaponAudioEntity::AddAudioEvent(int, eWeaponType, CPhysical*)
003974c5 T CAEGlobalWeaponAudioEntity::ProjectileFire(eWeaponType, CPhysical*, int)
003976a1 T CAEGlobalWeaponAudioEntity::UpdateParameters(CAESound*, short)
00398251 T CAEGlobalWeaponAudioEntity::PickAmbientGunFire(int&, eWeaponType&, int&)
003976fd T CAEGlobalWeaponAudioEntity::ServiceAmbientGunFire()
00377c5d T CEventPlayerCommandToGroup::CEventPlayerCommandToGroup(int, CPed*)
00377c9d T CEventPlayerCommandToGroup::~CEventPlayerCommandToGroup()
003780f1 T CEventPlayerCommandToGroup::~CEventPlayerCommandToGroup()
003780f1 T CEventPlayerCommandToGroup::~CEventPlayerCommandToGroup()
003742f9 T CEventPotentialWalkIntoPed::CEventPotentialWalkIntoPed(CPed*, CVector const&, int)
003742f9 T CEventPotentialWalkIntoPed::CEventPotentialWalkIntoPed(CPed*, CVector const&, int)
00374371 T CEventPotentialWalkIntoPed::~CEventPotentialWalkIntoPed()
00374349 T CEventPotentialWalkIntoPed::~CEventPotentialWalkIntoPed()
00374349 T CEventPotentialWalkIntoPed::~CEventPotentialWalkIntoPed()
004c2ba1 T CPedScriptedTaskRecordData::SetAsGroupTask(CPed*, int, CTask const*)
004c2bf7 T CPedScriptedTaskRecordData::AssociateWithTask(CTask*)
004c2bef T CPedScriptedTaskRecordData::AssociateWithEvent(CEventScriptCommand*)
004c2b53 T CPedScriptedTaskRecordData::SetAsAttractorScriptTask(CPed*, int, CTask const*)
004c2abd T CPedScriptedTaskRecordData::Set(CPed*, int, CEventScriptCommand const*)
004c2b05 T CPedScriptedTaskRecordData::Set(CPed*, int, CTask const*)
004c2a95 T CPedScriptedTaskRecordData::Flush()
004c2a81 T CPedScriptedTaskRecordData::CPedScriptedTaskRecordData()
004c2a81 T CPedScriptedTaskRecordData::CPedScriptedTaskRecordData()
0061dae0 R CPedTriggerScriptAttractor::ms_fSpacing
0061daf4 R CPedTriggerScriptAttractor::ms_fDeltaPos
0061dadc R CPedTriggerScriptAttractor::ms_iMaxSlots
0061daec R CPedTriggerScriptAttractor::ms_fArriveRange
0061daf8 R CPedTriggerScriptAttractor::ms_fDeltaHeading
0061daf0 R CPedTriggerScriptAttractor::ms_fHeadingRange
0061dae4 R CPedTriggerScriptAttractor::ms_fAchieveQueueTime
0061dae8 R CPedTriggerScriptAttractor::ms_fAchieveQueueShuffleTime
004ac6b5 W CPedTriggerScriptAttractor::~CPedTriggerScriptAttractor()
004936e1 W CTaskComplexCarDriveWander::CreateTask()
004fef09 W CTaskComplexCarDriveWander::Serialize()
004fc019 T CTaskComplexCarDriveWander::CTaskComplexCarDriveWander(CVehicle*, int, float)
004fc019 T CTaskComplexCarDriveWander::CTaskComplexCarDriveWander(CVehicle*, int, float)
004fc079 T CTaskComplexCarDriveWander::~CTaskComplexCarDriveWander()
004fb725 T CTaskComplexCarDriveWander::~CTaskComplexCarDriveWander()
004fb725 T CTaskComplexCarDriveWander::~CTaskComplexCarDriveWander()
00493025 W CTaskComplexDragPedFromCar::CreateTask()
004f73b1 T CTaskComplexDragPedFromCar::ControlSubTask(CPed*)
004f72e1 T CTaskComplexDragPedFromCar::CreateFirstSubTask(CPed*)
004fdb61 W CTaskComplexDragPedFromCar::Serialize()
004f7211 T CTaskComplexDragPedFromCar::CTaskComplexDragPedFromCar(CPed*, int)
004f7211 T CTaskComplexDragPedFromCar::CTaskComplexDragPedFromCar(CPed*, int)
004f72b1 T CTaskComplexDragPedFromCar::~CTaskComplexDragPedFromCar()
004f7285 T CTaskComplexDragPedFromCar::~CTaskComplexDragPedFromCar()
004f7285 T CTaskComplexDragPedFromCar::~CTaskComplexDragPedFromCar()
00511a7d T CTaskComplexDriveFireTruck::ControlSubTask(CPed*)
00511911 T CTaskComplexDriveFireTruck::CreateNextSubTask(CPed*)
00511a21 T CTaskComplexDriveFireTruck::CreateFirstSubTask(CPed*)
0051183d T CTaskComplexDriveFireTruck::CTaskComplexDriveFireTruck(CVehicle*, CPed*, bool)
0051183d T CTaskComplexDriveFireTruck::CTaskComplexDriveFireTruck(CVehicle*, CPed*, bool)
005118d1 T CTaskComplexDriveFireTruck::~CTaskComplexDriveFireTruck()
00511895 T CTaskComplexDriveFireTruck::~CTaskComplexDriveFireTruck()
00511895 T CTaskComplexDriveFireTruck::~CTaskComplexDriveFireTruck()
00491ed1 W CTaskComplexGoPickUpEntity::CreateTask()
006b04e8 D CTaskComplexGoPickUpEntity::MAX_GOTO_TIME
00542c09 T CTaskComplexGoPickUpEntity::ControlSubTask(CPed*)
006b04ec D CTaskComplexGoPickUpEntity::MAX_PICKUP_TIME
005429ad T CTaskComplexGoPickUpEntity::CreateNextSubTask(CPed*)
005426b9 T CTaskComplexGoPickUpEntity::CreateFirstSubTask(CPed*)
00543e0d W CTaskComplexGoPickUpEntity::Serialize()
00542581 T CTaskComplexGoPickUpEntity::CTaskComplexGoPickUpEntity(CEntity*, AssocGroupId)
00542581 T CTaskComplexGoPickUpEntity::CTaskComplexGoPickUpEntity(CEntity*, AssocGroupId)
00542655 T CTaskComplexGoPickUpEntity::~CTaskComplexGoPickUpEntity()
005425f5 T CTaskComplexGoPickUpEntity::~CTaskComplexGoPickUpEntity()
005425f5 T CTaskComplexGoPickUpEntity::~CTaskComplexGoPickUpEntity()
004e82a9 T CTaskComplexKillAllThreats::ControlSubTask(CPed*)
004e80cd T CTaskComplexKillAllThreats::CreateNextSubTask(CPed*)
004e81d5 T CTaskComplexKillAllThreats::CreateFirstSubTask(CPed*)
004e808d T CTaskComplexKillAllThreats::CTaskComplexKillAllThreats(unsigned int, unsigned int, unsigned int)
004e808d T CTaskComplexKillAllThreats::CTaskComplexKillAllThreats(unsigned int, unsigned int, unsigned int)
004e80bd T CTaskComplexKillAllThreats::~CTaskComplexKillAllThreats()
004e80b9 T CTaskComplexKillAllThreats::~CTaskComplexKillAllThreats()
004e80b9 T CTaskComplexKillAllThreats::~CTaskComplexKillAllThreats()
004931e1 W CTaskComplexLeaveCarAndDie::CreateTask()
004f9651 T CTaskComplexLeaveCarAndDie::CreateFirstSubTask(CPed*)
004fd24d W CTaskComplexLeaveCarAndDie::Serialize()
004fd1b1 W CTaskComplexLeaveCarAndDie::~CTaskComplexLeaveCarAndDie()
004fd869 W CTaskComplexOpenDriverDoor::Serialize()
004f70f9 T CTaskComplexOpenDriverDoor::CTaskComplexOpenDriverDoor(CVehicle*)
004f70f9 T CTaskComplexOpenDriverDoor::CTaskComplexOpenDriverDoor(CVehicle*)
004f7171 T CTaskComplexOpenDriverDoor::~CTaskComplexOpenDriverDoor()
004f4765 T CTaskComplexOpenDriverDoor::~CTaskComplexOpenDriverDoor()
004f4765 T CTaskComplexOpenDriverDoor::~CTaskComplexOpenDriverDoor()
005117f9 T CTaskComplexPresentIDToCop::ControlSubTask(CPed*)
00511681 T CTaskComplexPresentIDToCop::CreateNextSubTask(CPed*)
00511791 T CTaskComplexPresentIDToCop::CreateFirstSubTask(CPed*)
005115f9 T CTaskComplexPresentIDToCop::CTaskComplexPresentIDToCop(CPed*)
005115f9 T CTaskComplexPresentIDToCop::CTaskComplexPresentIDToCop(CPed*)
00511651 T CTaskComplexPresentIDToCop::~CTaskComplexPresentIDToCop()
00511625 T CTaskComplexPresentIDToCop::~CTaskComplexPresentIDToCop()
00511625 T CTaskComplexPresentIDToCop::~CTaskComplexPresentIDToCop()
0061e540 R CTaskComplexSmartFleePoint::ms_iFleeTime
00513781 T CTaskComplexSmartFleePoint::CreateSubTask(int, CPed*)
005136e1 T CTaskComplexSmartFleePoint::MakeAbortable(CPed*, int, CEvent const*)
0051397d T CTaskComplexSmartFleePoint::ControlSubTask(CPed*)
00513c11 T CTaskComplexSmartFleePoint::SetFleePosition(CVector const&, float, bool)
0061e53c R CTaskComplexSmartFleePoint::ms_fSafeDistance
0061e544 R CTaskComplexSmartFleePoint::ms_iRecoveryTime
00513895 T CTaskComplexSmartFleePoint::CreateNextSubTask(CPed*)
00513905 T CTaskComplexSmartFleePoint::CreateFirstSubTask(CPed*)
00513665 T CTaskComplexSmartFleePoint::CTaskComplexSmartFleePoint(CVector const&, bool, float, int)
00513665 T CTaskComplexSmartFleePoint::CTaskComplexSmartFleePoint(CVector const&, bool, float, int)
005136d1 T CTaskComplexSmartFleePoint::~CTaskComplexSmartFleePoint()
005136cd T CTaskComplexSmartFleePoint::~CTaskComplexSmartFleePoint()
005136cd T CTaskComplexSmartFleePoint::~CTaskComplexSmartFleePoint()
004f0d91 T CTaskComplexUseMobilePhone::MakeAbortable(CPed*, int, CEvent const*)
004f1111 T CTaskComplexUseMobilePhone::ControlSubTask(CPed*)
004f0d61 T CTaskComplexUseMobilePhone::RemovePhoneModel(CPed*)
004f0eed T CTaskComplexUseMobilePhone::CreateNextSubTask(CPed*)
004f1021 T CTaskComplexUseMobilePhone::CreateFirstSubTask(CPed*)
004f0ec9 T CTaskComplexUseMobilePhone::Stop(CPed*)
004f4055 W CTaskComplexUseMobilePhone::Serialize()
004f0d25 T CTaskComplexUseMobilePhone::CTaskComplexUseMobilePhone(int)
004f0d25 T CTaskComplexUseMobilePhone::CTaskComplexUseMobilePhone(int)
004f0d51 T CTaskComplexUseMobilePhone::~CTaskComplexUseMobilePhone()
004f0d4d T CTaskComplexUseMobilePhone::~CTaskComplexUseMobilePhone()
004f0d4d T CTaskComplexUseMobilePhone::~CTaskComplexUseMobilePhone()
00512045 T CTaskComplexUseWaterCannon::ControlSubTask(CPed*)
005120b9 T CTaskComplexUseWaterCannon::ExtinguishFire(CPed*)
00512019 T CTaskComplexUseWaterCannon::CreateNextSubTask(CPed*)
00512029 T CTaskComplexUseWaterCannon::CreateFirstSubTask(CPed*)
00511fe9 T CTaskComplexUseWaterCannon::CTaskComplexUseWaterCannon(CFire*)
00511fe9 T CTaskComplexUseWaterCannon::CTaskComplexUseWaterCannon(CFire*)
00512009 T CTaskComplexUseWaterCannon::~CTaskComplexUseWaterCannon()
00512005 T CTaskComplexUseWaterCannon::~CTaskComplexUseWaterCannon()
00512005 T CTaskComplexUseWaterCannon::~CTaskComplexUseWaterCannon()
00524075 T CTaskComplexWanderCriminal::ScanForStuff(CPed*)
0061e658 R CTaskComplexWanderCriminal::ms_iScanPeriod
00524135 T CTaskComplexWanderCriminal::LookForCarsToSteal(CPed*)
0061e65c R CTaskComplexWanderCriminal::ms_iStealCarScanFreeTime
00526f5d W CTaskComplexWanderCriminal::~CTaskComplexWanderCriminal()
005231e5 T CTaskComplexWanderStandard::ScanForStuff(CPed*)
0061e634 R CTaskComplexWanderStandard::ms_fChatRange
00523945 T CTaskComplexWanderStandard::ScanForEffects(CPed*)
0061e630 R CTaskComplexWanderStandard::ms_iScanPeriod
005237a9 T CTaskComplexWanderStandard::LookForSexyCars(CPed*)
00523a09 T CTaskComplexWanderStandard::SetNextScanTime(int)
0061e63c R CTaskComplexWanderStandard::ms_iScanFreeTime
0052325d T CTaskComplexWanderStandard::LookForGangMembers(CPed*)
0052399d T CTaskComplexWanderStandard::SetNextMinScanTime(CPed*)
005233ed T CTaskComplexWanderStandard::LookForChatPartners(CPed*)
0061e638 R CTaskComplexWanderStandard::ms_fSexyVehicleRange
00526e4d W CTaskComplexWanderStandard::~CTaskComplexWanderStandard()
004db709 T CTaskSimpleFightingControl::ProcessPed(CPed*)
004db5c1 T CTaskSimpleFightingControl::MakeAbortable(CPed*, int, CEvent const*)
004dba99 T CTaskSimpleFightingControl::CalcMoveCommand(CPed*)
006b0380 D CTaskSimpleFightingControl::DEFAULT_FIGHT_ATTACK_PERIOD
004db4f9 T CTaskSimpleFightingControl::CTaskSimpleFightingControl(CEntity*, float, float)
004db4f9 T CTaskSimpleFightingControl::CTaskSimpleFightingControl(CEntity*, float, float)
004db591 T CTaskSimpleFightingControl::~CTaskSimpleFightingControl()
004db565 T CTaskSimpleFightingControl::~CTaskSimpleFightingControl()
004db565 T CTaskSimpleFightingControl::~CTaskSimpleFightingControl()
004deaf9 T CTaskSimpleThrowProjectile::ProcessPed(CPed*)
004dee05 T CTaskSimpleThrowProjectile::ControlThrow(bool, CEntity*, CVector*)
004dea79 T CTaskSimpleThrowProjectile::MakeAbortable(CPed*, int, CEvent const*)
004dee81 T CTaskSimpleThrowProjectile::FinishAnimThrowProjectileCB(CAnimBlendAssociation*, void*)
004decb1 T CTaskSimpleThrowProjectile::StartAnim(CPed*)
004de991 T CTaskSimpleThrowProjectile::CTaskSimpleThrowProjectile(CEntity*, CVector)
004de991 T CTaskSimpleThrowProjectile::CTaskSimpleThrowProjectile(CEntity*, CVector)
004dea31 T CTaskSimpleThrowProjectile::~CTaskSimpleThrowProjectile()
004de9ed T CTaskSimpleThrowProjectile::~CTaskSimpleThrowProjectile()
004de9ed T CTaskSimpleThrowProjectile::~CTaskSimpleThrowProjectile()
00307799 W CTaskSimpleUninterruptable::ProcessPed(CPed*)
0030778f W CTaskSimpleUninterruptable::MakeAbortable(CPed*, int, CEvent const*)
00307751 W CTaskSimpleUninterruptable::~CTaskSimpleUninterruptable()
002b68e9 T CWidgetButtonMissionCancel::Update()
002b6a05 W CWidgetButtonMissionCancel::GetName()
002b68c1 T CWidgetButtonMissionCancel::CWidgetButtonMissionCancel(char const*, WidgetPosition const&, HIDMapping)
002b68c1 T CWidgetButtonMissionCancel::CWidgetButtonMissionCancel(char const*, WidgetPosition const&, HIDMapping)
002b69d9 W CWidgetButtonMissionCancel::~CWidgetButtonMissionCancel()
0039dea5 W CAEPedlessSpeechAudioEntity::GetPedType()
0039daed T CAEPedlessSpeechAudioEntity::Initialise()
0039d7d9 T CAEPedlessSpeechAudioEntity::AddSayEvent(int, short, CEntity*, unsigned int, float, unsigned char, unsigned char, unsigned char)
0039dca1 T CAEPedlessSpeechAudioEntity::PlayLoadedSound()
0039da39 T CAEPedlessSpeechAudioEntity::UpdateParameters(CAESound*, short)
0039de99 W CAEPedlessSpeechAudioEntity::AddScriptSayEvent(int, int, unsigned char, unsigned char, unsigned char)
0039de9b W CAEPedlessSpeechAudioEntity::GetAllocatedVoice()
0039dc21 T CAEPedlessSpeechAudioEntity::StopCurrentSpeech()
0039deab W CAEPedlessSpeechAudioEntity::IsPedFemaleForAudio()
0039dea1 W CAEPedlessSpeechAudioEntity::WillPedChatAboutTopic(short)
0039db51 T CAEPedlessSpeechAudioEntity::Terminate()
0039d78d T CAEPedlessSpeechAudioEntity::CAEPedlessSpeechAudioEntity()
0039d78d T CAEPedlessSpeechAudioEntity::CAEPedlessSpeechAudioEntity()
0039e0fd T CAEPoliceScannerAudioEntity::StopScanner(unsigned char)
00944f08 B CAEPoliceScannerAudioEntity::s_SlotState
0039e4c5 T CAEPoliceScannerAudioEntity::AddAudioEvent(int, eCrimeType, CVector const&)
0039f5e1 T CAEPoliceScannerAudioEntity::EnableScanner()
0039f4a5 T CAEPoliceScannerAudioEntity::DisableScanner(unsigned char, unsigned char)
00944f2c B CAEPoliceScannerAudioEntity::s_fVolumeOffset
00944f14 B CAEPoliceScannerAudioEntity::s_pCurrentSlots
0046d899 T CAEPoliceScannerAudioEntity::StaticInitialise()
0039e901 T CAEPoliceScannerAudioEntity::UpdateParameters(CAESound*, short)
00944edc B CAEPoliceScannerAudioEntity::s_pPSControlling
00944f20 B CAEPoliceScannerAudioEntity::s_nSectionPlaying
0039ea61 T CAEPoliceScannerAudioEntity::PlayLoadedDialogue()
00944ee0 B CAEPoliceScannerAudioEntity::s_ScannerSlotFirst
00944ed8 B CAEPoliceScannerAudioEntity::s_bScannerDisabled
00944f28 B CAEPoliceScannerAudioEntity::s_bStoppingScanner
00944ef4 B CAEPoliceScannerAudioEntity::s_ScannerSlotSecond
00944f1c B CAEPoliceScannerAudioEntity::s_nAbortPlaybackTime
00944f18 B CAEPoliceScannerAudioEntity::s_nPlaybackStartTime
00944eda B CAEPoliceScannerAudioEntity::s_nScannerPlaybackState
0039e7b1 T CAEPoliceScannerAudioEntity::PlayPoliceScannerDialogue(tScannerSlot*, tScannerSlot*)
0039f351 T CAEPoliceScannerAudioEntity::CanWePlayNewScannerDialogue()
0039f3ad T CAEPoliceScannerAudioEntity::PopulateScannerDialogueLists(tScannerSlot*, tScannerSlot*)
00944ed4 B CAEPoliceScannerAudioEntity::s_NextNewScannerDialogueTime
0039e3f5 T CAEPoliceScannerAudioEntity::FinishedPlayingScannerDialogue()
0039e215 T CAEPoliceScannerAudioEntity::Reset()
0039eda1 T CAEPoliceScannerAudioEntity::Service()
00944f24 B CAEPoliceScannerAudioEntity::s_pSound
0039f211 T CAEPoliceScannerAudioEntity::LoadSlots()
0039f40d T CAEPoliceScannerAudioEntity::PrepSlots()
0039df99 T CAEPoliceScannerAudioEntity::~CAEPoliceScannerAudioEntity()
0039df99 T CAEPoliceScannerAudioEntity::~CAEPoliceScannerAudioEntity()
00389a79 T CAnimBlendStaticAssociation::FreeSequenceArray()
00389aad T CAnimBlendStaticAssociation::AllocateSequenceArray(int)
0038998d T CAnimBlendStaticAssociation::Init(RpClump*, CAnimBlendHierarchy*)
00389961 T CAnimBlendStaticAssociation::CAnimBlendStaticAssociation(RpClump*, CAnimBlendHierarchy*)
00389941 T CAnimBlendStaticAssociation::CAnimBlendStaticAssociation()
00389961 T CAnimBlendStaticAssociation::CAnimBlendStaticAssociation(RpClump*, CAnimBlendHierarchy*)
00389941 T CAnimBlendStaticAssociation::CAnimBlendStaticAssociation()
00389a85 T CAnimBlendStaticAssociation::~CAnimBlendStaticAssociation()
00389a55 T CAnimBlendStaticAssociation::~CAnimBlendStaticAssociation()
00389a55 T CAnimBlendStaticAssociation::~CAnimBlendStaticAssociation()
0044ff7d T CCompressedMatrixNotAligned::CompressFromFullMatrix(CMatrix&)
0044fdd1 T CCompressedMatrixNotAligned::DecompressIntoFullMatrix(CMatrix&)
00377451 T CEventPotentialWalkIntoFire::CEventPotentialWalkIntoFire(CVector const&, float, int)
00377451 T CEventPotentialWalkIntoFire::CEventPotentialWalkIntoFire(CVector const&, float, int)
003774d9 T CEventPotentialWalkIntoFire::~CEventPotentialWalkIntoFire()
00378119 T CEventPotentialWalkIntoFire::~CEventPotentialWalkIntoFire()
00378119 T CEventPotentialWalkIntoFire::~CEventPotentialWalkIntoFire()
00290439 T CHIDJoystickXbox360Standard::FindUVsFromMapping(char const*, HIDMapping, bool)
00290035 T CHIDJoystickXbox360Standard::CHIDJoystickXbox360Standard(char const*)
00290035 T CHIDJoystickXbox360Standard::CHIDJoystickXbox360Standard(char const*)
0029065d W CHIDJoystickXbox360Standard::~CHIDJoystickXbox360Standard()
00484ab1 T CPlayerPedDataSaveStructure::Extract(CPlayerPedData*)
00484a7f T CPlayerPedDataSaveStructure::Construct(CPlayerPedData*)
004d67a5 T CPlayerRelationshipRecorder::AddRelationship(CPed const*, int)
004d66b5 T CPlayerRelationshipRecorder::ClearRelationshipWithPlayer(CPed const*)
004d685b T CPlayerRelationshipRecorder::RecordRelationshipWithPlayer(CPed const*)
004d65fd T CPlayerRelationshipRecorder::Flush()
004d65a1 T CPlayerRelationshipRecorder::CPlayerRelationshipRecorder()
004d65a1 T CPlayerRelationshipRecorder::CPlayerRelationshipRecorder()
004d6659 T CPlayerRelationshipRecorder::~CPlayerRelationshipRecorder()
004d6659 T CPlayerRelationshipRecorder::~CPlayerRelationshipRecorder()
005c236d T CRegisteredMotionBlurStreak::Render()
005c2319 T CRegisteredMotionBlurStreak::Update()
003f0ae1 T CSerializedColTrianglePlane::Fixup(CSerializedColTrianglePlane*, int)
00493d65 W CTaskComplexCarDriveMission::CreateTask()
004ff095 W CTaskComplexCarDriveMission::Serialize()
004fc17d T CTaskComplexCarDriveMission::CTaskComplexCarDriveMission(CVehicle*, CEntity*, int, int, float)
004fc17d T CTaskComplexCarDriveMission::CTaskComplexCarDriveMission(CVehicle*, CEntity*, int, int, float)
004fc1fd T CTaskComplexCarDriveMission::~CTaskComplexCarDriveMission()
004fd141 T CTaskComplexCarDriveMission::~CTaskComplexCarDriveMission()
004fd141 T CTaskComplexCarDriveMission::~CTaskComplexCarDriveMission()
004e7431 T CTaskComplexDestroyCarArmed::CreateSubTask(int, CPed*)
004e6fc9 T CTaskComplexDestroyCarArmed::MakeAbortable(CPed*, int, CEvent const*)
004e7769 T CTaskComplexDestroyCarArmed::ControlSubTask(CPed*)
004e6ff1 T CTaskComplexDestroyCarArmed::CreateNextSubTask(CPed*)
004e760d T CTaskComplexDestroyCarArmed::CreateFirstSubTask(CPed*)
004e7351 T CTaskComplexDestroyCarArmed::CalculateSearchPositionAndRanges(CPed*)
004e6efd T CTaskComplexDestroyCarArmed::CTaskComplexDestroyCarArmed(CVehicle*, unsigned int, unsigned int, unsigned int)
004e6efd T CTaskComplexDestroyCarArmed::CTaskComplexDestroyCarArmed(CVehicle*, unsigned int, unsigned int, unsigned int)
004e6f99 T CTaskComplexDestroyCarArmed::~CTaskComplexDestroyCarArmed()
004e6f6d T CTaskComplexDestroyCarArmed::~CTaskComplexDestroyCarArmed()
004e6f6d T CTaskComplexDestroyCarArmed::~CTaskComplexDestroyCarArmed()
004e6631 T CTaskComplexDestroyCarMelee::CreateSubTask(int, CPed*)
004e6329 T CTaskComplexDestroyCarMelee::MakeAbortable(CPed*, int, CEvent const*)
004e6bd1 T CTaskComplexDestroyCarMelee::ControlSubTask(CPed*)
004e6801 T CTaskComplexDestroyCarMelee::CreateNextSubTask(CPed*)
004e6451 T CTaskComplexDestroyCarMelee::CreateFirstSubTask(CPed*)
004e65a1 T CTaskComplexDestroyCarMelee::CalculateSearchPositionAndRanges(CPed*)
004e6281 T CTaskComplexDestroyCarMelee::CTaskComplexDestroyCarMelee(CVehicle*)
004e6281 T CTaskComplexDestroyCarMelee::CTaskComplexDestroyCarMelee(CVehicle*)
004e62f9 T CTaskComplexDestroyCarMelee::~CTaskComplexDestroyCarMelee()
004e62cd T CTaskComplexDestroyCarMelee::~CTaskComplexDestroyCarMelee()
004e62cd T CTaskComplexDestroyCarMelee::~CTaskComplexDestroyCarMelee()
00493b1d W CTaskComplexDrivePointRoute::CreateTask()
004fc9c1 T CTaskComplexDrivePointRoute::ControlSubTask(CPed*)
004fc871 T CTaskComplexDrivePointRoute::CreateNextSubTask(CPed*)
004fc921 T CTaskComplexDrivePointRoute::CreateFirstSubTask(CPed*)
004ff519 W CTaskComplexDrivePointRoute::Serialize()
004fc791 T CTaskComplexDrivePointRoute::CTaskComplexDrivePointRoute(CVehicle*, CPointRoute const&, float, int, int, float, int)
004fc791 T CTaskComplexDrivePointRoute::CTaskComplexDrivePointRoute(CVehicle*, CPointRoute const&, float, int, int, float, int)
004fc845 T CTaskComplexDrivePointRoute::~CTaskComplexDrivePointRoute()
004fc81d T CTaskComplexDrivePointRoute::~CTaskComplexDrivePointRoute()
004fc81d T CTaskComplexDrivePointRoute::~CTaskComplexDrivePointRoute()
00547ba1 T CTaskComplexExtinguishFires::ControlSubTask(CPed*)
005478a9 T CTaskComplexExtinguishFires::CreateNextSubTask(CPed*)
00547ad9 T CTaskComplexExtinguishFires::CreateFirstSubTask(CPed*)
005481d9 W CTaskComplexExtinguishFires::Serialize()
00547879 T CTaskComplexExtinguishFires::CTaskComplexExtinguishFires()
00547879 T CTaskComplexExtinguishFires::CTaskComplexExtinguishFires()
00547899 T CTaskComplexExtinguishFires::~CTaskComplexExtinguishFires()
00547895 T CTaskComplexExtinguishFires::~CTaskComplexExtinguishFires()
00547895 T CTaskComplexExtinguishFires::~CTaskComplexExtinguishFires()
00491045 W CTaskComplexFallAndStayDown::CreateTask()
0052bd8d T CTaskComplexFallAndStayDown::CreateSubTask(int)
0052bd19 T CTaskComplexFallAndStayDown::MakeAbortable(CPed*, int, CEvent const*)
0052be15 T CTaskComplexFallAndStayDown::ControlSubTask(CPed*)
0052bd7d T CTaskComplexFallAndStayDown::CreateNextSubTask(CPed*)
0052bdd9 T CTaskComplexFallAndStayDown::CreateFirstSubTask(CPed*)
00532c19 W CTaskComplexFallAndStayDown::Serialize()
0052bcb9 T CTaskComplexFallAndStayDown::CTaskComplexFallAndStayDown(AnimationId, AssocGroupId)
0052bcd9 T CTaskComplexFallAndStayDown::CTaskComplexFallAndStayDown(int)
0052bcb9 T CTaskComplexFallAndStayDown::CTaskComplexFallAndStayDown(AnimationId, AssocGroupId)
0052bcd9 T CTaskComplexFallAndStayDown::CTaskComplexFallAndStayDown(int)
0052bd09 T CTaskComplexFallAndStayDown::~CTaskComplexFallAndStayDown()
0052bd05 T CTaskComplexFallAndStayDown::~CTaskComplexFallAndStayDown()
0052bd05 T CTaskComplexFallAndStayDown::~CTaskComplexFallAndStayDown()
00494a29 W CTaskComplexFollowNodeRoute::CreateTask()
0051fc91 T CTaskComplexFollowNodeRoute::ComputeRoute()
0051fd71 T CTaskComplexFollowNodeRoute::GetRouteSize()
0051f535 T CTaskComplexFollowNodeRoute::MakeAbortable(CPed*, int, CEvent const*)
005206a5 T CTaskComplexFollowNodeRoute::CalcBlendRatio(CPed*, bool)
00520441 T CTaskComplexFollowNodeRoute::ControlSubTask(CPed*)
0051ffdf T CTaskComplexFollowNodeRoute::GetSubTaskType(int, bool, CPointRoute const&)
0051ff49 T CTaskComplexFollowNodeRoute::GetLastWaypoint(CPed*)
0051ff95 T CTaskComplexFollowNodeRoute::GetNextWaypoint(CPed*)
0061e60c R CTaskComplexFollowNodeRoute::ms_iDefaultTime
0051fd7d T CTaskComplexFollowNodeRoute::CalcGoToTaskType(CPed*, int)
0051f711 T CTaskComplexFollowNodeRoute::ComputePathNodes(CPed const*)
0061e600 R CTaskComplexFollowNodeRoute::ms_fTargetRadius
005202a5 T CTaskComplexFollowNodeRoute::CreateNextSubTask(CPed*)
005201dd T CTaskComplexFollowNodeRoute::CreateFirstSubTask(CPed*)
0061e604 R CTaskComplexFollowNodeRoute::ms_fSlowDownDistance
0061e608 R CTaskComplexFollowNodeRoute::ms_fFollowNodeThresholdHeightChange
0052724d W CTaskComplexFollowNodeRoute::Serialize()
0051f645 T CTaskComplexFollowNodeRoute::SetTarget(CPed const*, CVector const&, float, float, float, bool)
0051f4fd T CTaskComplexFollowNodeRoute::StopTimer(CEvent const*)
0051f3c5 T CTaskComplexFollowNodeRoute::CTaskComplexFollowNodeRoute(int, CVector const&, float, float, float, bool, int, bool)
0051f3c5 T CTaskComplexFollowNodeRoute::CTaskComplexFollowNodeRoute(int, CVector const&, float, float, float, bool, int, bool)
0051f4c5 T CTaskComplexFollowNodeRoute::~CTaskComplexFollowNodeRoute()
0051f491 T CTaskComplexFollowNodeRoute::~CTaskComplexFollowNodeRoute()
0051f491 T CTaskComplexFollowNodeRoute::~CTaskComplexFollowNodeRoute()
0051b23d T CTaskComplexGangJoinRespond::MakeAbortable(CPed*, int, CEvent const*)
0051b2e9 T CTaskComplexGangJoinRespond::ControlSubTask(CPed*)
0051b241 T CTaskComplexGangJoinRespond::CreateNextSubTask(CPed*)
0051b2ad T CTaskComplexGangJoinRespond::CreateFirstSubTask(CPed*)
0051c651 W CTaskComplexGangJoinRespond::Serialize()
0051b1a1 T CTaskComplexGangJoinRespond::CTaskComplexGangJoinRespond(unsigned char)
0051b1a1 T CTaskComplexGangJoinRespond::CTaskComplexGangJoinRespond(unsigned char)
0051b1fd T CTaskComplexGangJoinRespond::~CTaskComplexGangJoinRespond()
0051b1c1 T CTaskComplexGangJoinRespond::~CTaskComplexGangJoinRespond()
0051b1c1 T CTaskComplexGangJoinRespond::~CTaskComplexGangJoinRespond()
00495d35 W CTaskComplexGoToPointAiming::CreateTask()
0051ddef T CTaskComplexGoToPointAiming::ControlSubTask(CPed*)
0061e5f0 R CTaskComplexGoToPointAiming::ms_fTargetRadius
0051dc0d T CTaskComplexGoToPointAiming::CreateNextSubTask(CPed*)
0051dd19 T CTaskComplexGoToPointAiming::CreateFirstSubTask(CPed*)
0061e5f4 R CTaskComplexGoToPointAiming::ms_fSlowDownDistance
0052789d W CTaskComplexGoToPointAiming::Serialize()
0051db15 T CTaskComplexGoToPointAiming::CTaskComplexGoToPointAiming(int, CVector const&, CEntity*, CVector, float, float)
0051db15 T CTaskComplexGoToPointAiming::CTaskComplexGoToPointAiming(int, CVector const&, CEntity*, CVector, float, float)
0051dbdd T CTaskComplexGoToPointAiming::~CTaskComplexGoToPointAiming()
00526af1 T CTaskComplexGoToPointAiming::~CTaskComplexGoToPointAiming()
00526af1 T CTaskComplexGoToPointAiming::~CTaskComplexGoToPointAiming()
00525ae9 T CTaskComplexGotoDoorAndOpen::MakeAbortable(CPed*, int, CEvent const*)
00525ed9 T CTaskComplexGotoDoorAndOpen::ControlSubTask(CPed*)
00525ded T CTaskComplexGotoDoorAndOpen::CreateNextSubTask(CPed*)
00525ba5 T CTaskComplexGotoDoorAndOpen::CreateFirstSubTask(CPed*)
005259f9 T CTaskComplexGotoDoorAndOpen::CTaskComplexGotoDoorAndOpen(CObject*)
00525a41 T CTaskComplexGotoDoorAndOpen::CTaskComplexGotoDoorAndOpen(CVector const&, CVector const&)
005259f9 T CTaskComplexGotoDoorAndOpen::CTaskComplexGotoDoorAndOpen(CObject*)
00525a41 T CTaskComplexGotoDoorAndOpen::CTaskComplexGotoDoorAndOpen(CVector const&, CVector const&)
00525ab9 T CTaskComplexGotoDoorAndOpen::~CTaskComplexGotoDoorAndOpen()
00525a8d T CTaskComplexGotoDoorAndOpen::~CTaskComplexGotoDoorAndOpen()
00525a8d T CTaskComplexGotoDoorAndOpen::~CTaskComplexGotoDoorAndOpen()
004e8b75 T CTaskComplexKillPedFromBoat::ControlSubTask(CPed*)
004e8b29 T CTaskComplexKillPedFromBoat::CreateNextSubTask(CPed*)
004e8b49 T CTaskComplexKillPedFromBoat::CreateFirstSubTask(CPed*)
004e8a9d T CTaskComplexKillPedFromBoat::CTaskComplexKillPedFromBoat(CPed*)
004e8a9d T CTaskComplexKillPedFromBoat::CTaskComplexKillPedFromBoat(CPed*)
004e8af9 T CTaskComplexKillPedFromBoat::~CTaskComplexKillPedFromBoat()
004e8acd T CTaskComplexKillPedFromBoat::~CTaskComplexKillPedFromBoat()
004e8acd T CTaskComplexKillPedFromBoat::~CTaskComplexKillPedFromBoat()
004932b5 W CTaskComplexLeaveCarAndFlee::CreateTask()
004f9c15 T CTaskComplexLeaveCarAndFlee::ControlSubTask(CPed*)
004f9969 T CTaskComplexLeaveCarAndFlee::CreateNextSubTask(CPed*)
004f9c01 T CTaskComplexLeaveCarAndFlee::CreateFirstSubTask(CPed*)
004fe8b9 W CTaskComplexLeaveCarAndFlee::Serialize()
004f98b5 T CTaskComplexLeaveCarAndFlee::CTaskComplexLeaveCarAndFlee(CVehicle*, CVector const&, int, int, bool)
004f98b5 T CTaskComplexLeaveCarAndFlee::CTaskComplexLeaveCarAndFlee(CVehicle*, CVector const&, int, int, bool)
004f9939 T CTaskComplexLeaveCarAndFlee::~CTaskComplexLeaveCarAndFlee()
004f990d T CTaskComplexLeaveCarAndFlee::~CTaskComplexLeaveCarAndFlee()
004f990d T CTaskComplexLeaveCarAndFlee::~CTaskComplexLeaveCarAndFlee()
0050e6c5 T CTaskComplexMoveBackAndJump::ControlSubTask(CPed*)
0050e601 T CTaskComplexMoveBackAndJump::CreateNextSubTask(CPed*)
0050e685 T CTaskComplexMoveBackAndJump::CreateFirstSubTask(CPed*)
0050fedd W CTaskComplexMoveBackAndJump::Serialize()
0050e5d5 T CTaskComplexMoveBackAndJump::CTaskComplexMoveBackAndJump()
0050e5d5 T CTaskComplexMoveBackAndJump::CTaskComplexMoveBackAndJump()
0050e5f1 T CTaskComplexMoveBackAndJump::~CTaskComplexMoveBackAndJump()
0050e5ed T CTaskComplexMoveBackAndJump::~CTaskComplexMoveBackAndJump()
0050e5ed T CTaskComplexMoveBackAndJump::~CTaskComplexMoveBackAndJump()
00495899 W CTaskComplexSmartFleeEntity::CreateTask()
0061e54c R CTaskComplexSmartFleeEntity::ms_iFleeTime
00513d3d T CTaskComplexSmartFleeEntity::CreateSubTask(int)
00513fcd T CTaskComplexSmartFleeEntity::ControlSubTask(CPed*)
0061e548 R CTaskComplexSmartFleeEntity::ms_fSafeDistance
00513e39 T CTaskComplexSmartFleeEntity::CreateNextSubTask(CPed*)
00513e75 T CTaskComplexSmartFleeEntity::CreateFirstSubTask(CPed*)
0061e550 R CTaskComplexSmartFleeEntity::ms_iEntityPosCheckPeriod
0061e554 R CTaskComplexSmartFleeEntity::ms_fEntityPosChangeThreshold
00514d9d W CTaskComplexSmartFleeEntity::Serialize()
00513c7d T CTaskComplexSmartFleeEntity::CTaskComplexSmartFleeEntity(CEntity*, bool, float, int, int, float)
00513c7d T CTaskComplexSmartFleeEntity::CTaskComplexSmartFleeEntity(CEntity*, bool, float, int, int, float)
00513d0d T CTaskComplexSmartFleeEntity::~CTaskComplexSmartFleeEntity()
00513ce1 T CTaskComplexSmartFleeEntity::~CTaskComplexSmartFleeEntity()
00513ce1 T CTaskComplexSmartFleeEntity::~CTaskComplexSmartFleeEntity()
004edfc1 T CTaskComplexWaitAtAttractor::ControlSubTask(CPed*)
004edf89 T CTaskComplexWaitAtAttractor::CreateNextSubTask(CPed*)
004edf8d T CTaskComplexWaitAtAttractor::CreateFirstSubTask(CPed*)
004edf55 T CTaskComplexWaitAtAttractor::CTaskComplexWaitAtAttractor(CPedAttractor*, int)
004edf55 T CTaskComplexWaitAtAttractor::CTaskComplexWaitAtAttractor(CPedAttractor*, int)
004edf79 T CTaskComplexWaitAtAttractor::~CTaskComplexWaitAtAttractor()
004edf75 T CTaskComplexWaitAtAttractor::~CTaskComplexWaitAtAttractor()
004edf75 T CTaskComplexWaitAtAttractor::~CTaskComplexWaitAtAttractor()
00492b0d W CTaskComplexWalkRoundObject::CreateTask()
0050e379 T CTaskComplexWalkRoundObject::ComputeRoute(CPed*)
0050e441 T CTaskComplexWalkRoundObject::ControlSubTask(CPed*)
0050de8d T CTaskComplexWalkRoundObject::CreateNextSubTask(CPed*)
0050e0b9 T CTaskComplexWalkRoundObject::CreateFirstSubTask(CPed*)
0061e4d8 R CTaskComplexWalkRoundObject::ms_iWalkRoundTimeRunning
0061e4dc R CTaskComplexWalkRoundObject::ms_iWalkRoundTimeWalking
0061e4e0 R CTaskComplexWalkRoundObject::ms_fObjectPosChangedThresholdSq
0061e4e4 R CTaskComplexWalkRoundObject::ms_fObjectDotAngleChangedThreshold
0050fd11 W CTaskComplexWalkRoundObject::Serialize()
0050ddb5 T CTaskComplexWalkRoundObject::CTaskComplexWalkRoundObject(int, CVector const&, CEntity*)
0050ddb5 T CTaskComplexWalkRoundObject::CTaskComplexWalkRoundObject(int, CVector const&, CEntity*)
0050de51 T CTaskComplexWalkRoundObject::~CTaskComplexWalkRoundObject()
0050de19 T CTaskComplexWalkRoundObject::~CTaskComplexWalkRoundObject()
0050de19 T CTaskComplexWalkRoundObject::~CTaskComplexWalkRoundObject()
004df6a1 T CTaskSimpleBeHitWhileMoving::ProcessPed(CPed*)
004df3ad T CTaskSimpleBeHitWhileMoving::MakeAbortable(CPed*, int, CEvent const*)
004df3f1 T CTaskSimpleBeHitWhileMoving::FinishAnimBeHitWhileMovingCB(CAnimBlendAssociation*, void*)
004df3fd T CTaskSimpleBeHitWhileMoving::StartAnim(CPed*)
004df309 T CTaskSimpleBeHitWhileMoving::CTaskSimpleBeHitWhileMoving(int, int)
004df309 T CTaskSimpleBeHitWhileMoving::CTaskSimpleBeHitWhileMoving(int, int)
004df36d T CTaskSimpleBeHitWhileMoving::~CTaskSimpleBeHitWhileMoving()
004df331 T CTaskSimpleBeHitWhileMoving::~CTaskSimpleBeHitWhileMoving()
004df331 T CTaskSimpleBeHitWhileMoving::~CTaskSimpleBeHitWhileMoving()
004df2e9 T CTaskSimpleBeKickedOnGround::ProcessPed(CPed*)
004df1ed T CTaskSimpleBeKickedOnGround::MakeAbortable(CPed*, int, CEvent const*)
004df231 T CTaskSimpleBeKickedOnGround::FinishAnimBeKickedOnGroundCB(CAnimBlendAssociation*, void*)
004df23d T CTaskSimpleBeKickedOnGround::StartAnim(CPed*)
004df151 T CTaskSimpleBeKickedOnGround::CTaskSimpleBeKickedOnGround()
004df151 T CTaskSimpleBeKickedOnGround::CTaskSimpleBeKickedOnGround()
004df1ad T CTaskSimpleBeKickedOnGround::~CTaskSimpleBeKickedOnGround()
004df171 T CTaskSimpleBeKickedOnGround::~CTaskSimpleBeKickedOnGround()
004df171 T CTaskSimpleBeKickedOnGround::~CTaskSimpleBeKickedOnGround()
00493ca9 W CTaskSimpleCarSetTempAction::CreateTask()
004fcff9 T CTaskSimpleCarSetTempAction::ProcessPed(CPed*)
004fcfc9 T CTaskSimpleCarSetTempAction::MakeAbortable(CPed*, int, CEvent const*)
004ff95d W CTaskSimpleCarSetTempAction::Serialize()
004fcf25 T CTaskSimpleCarSetTempAction::CTaskSimpleCarSetTempAction(CVehicle*, int, int)
004fcf25 T CTaskSimpleCarSetTempAction::CTaskSimpleCarSetTempAction(CVehicle*, int, int)
004fcfb9 T CTaskSimpleCarSetTempAction::~CTaskSimpleCarSetTempAction()
004fd0dd T CTaskSimpleCarSetTempAction::~CTaskSimpleCarSetTempAction()
004fd0dd T CTaskSimpleCarSetTempAction::~CTaskSimpleCarSetTempAction()
00497181 W CTaskSimpleHailTaxiAndPause::Serialize()
00497121 W CTaskSimpleHailTaxiAndPause::~CTaskSimpleHailTaxiAndPause()
00497a95 W CTaskSimpleHitByGunFromLeft::Serialize()
00497a45 W CTaskSimpleHitByGunFromLeft::~CTaskSimpleHitByGunFromLeft()
00497829 W CTaskSimpleHitByGunFromRear::Serialize()
004977d9 W CTaskSimpleHitByGunFromRear::~CTaskSimpleHitByGunFromRear()
002b4d0d T CWidgetButtonAnimatedArcade::SetWidgetValue(float)
002b4ce1 T CWidgetButtonAnimatedArcade::CWidgetButtonAnimatedArcade(char const*, char const*, WidgetPosition const&, unsigned int, unsigned int, char const*, HIDMapping)
002b4ce1 T CWidgetButtonAnimatedArcade::CWidgetButtonAnimatedArcade(char const*, char const*, WidgetPosition const&, unsigned int, unsigned int, char const*, HIDMapping)
002b4e65 W CWidgetButtonAnimatedArcade::~CWidgetButtonAnimatedArcade()
002b67e5 T CWidgetButtonAutoHydraulics::Update()
002b68ad W CWidgetButtonAutoHydraulics::GetName()
002b67b5 T CWidgetButtonAutoHydraulics::CWidgetButtonAutoHydraulics(char const*, WidgetPosition const&)
002b67b5 T CWidgetButtonAutoHydraulics::CWidgetButtonAutoHydraulics(char const*, WidgetPosition const&)
002b6881 W CWidgetButtonAutoHydraulics::~CWidgetButtonAutoHydraulics()
002bff69 T CWidgetRegionBasketBallJump::OnInitialTouch()
002bff4d T CWidgetRegionBasketBallJump::Update()
002bff91 W CWidgetRegionBasketBallJump::GetName()
002bff7b T CWidgetRegionBasketBallJump::IsTouched(CVector2D*)
002bff19 T CWidgetRegionBasketBallJump::CWidgetRegionBasketBallJump(char const*, WidgetPosition const&)
002bff19 T CWidgetRegionBasketBallJump::CWidgetRegionBasketBallJump(char const*, WidgetPosition const&)
002bff81 W CWidgetRegionBasketBallJump::~CWidgetRegionBasketBallJump()
002c1cb9 T CWidgetRegionPoolBallInHand::GetWidgetValue2(float*, float*)
002c1d81 T CWidgetRegionPoolBallInHand::SetWidgetValue3(float, float, float)
002c1e19 W CWidgetRegionPoolBallInHand::GetName()
002c1d65 T CWidgetRegionPoolBallInHand::IsTouched(CVector2D*)
002c1c91 T CWidgetRegionPoolBallInHand::CWidgetRegionPoolBallInHand(char const*, WidgetPosition const&)
002c1c91 T CWidgetRegionPoolBallInHand::CWidgetRegionPoolBallInHand(char const*, WidgetPosition const&)
002c1e07 W CWidgetRegionPoolBallInHand::~CWidgetRegionPoolBallInHand()
004c260d W CEventAcquaintancePedDislike::~CEventAcquaintancePedDislike()
004c2595 W CEventAcquaintancePedRespect::~CEventAcquaintancePedRespect()
004c27b5 W CEventPedCollisionWithPlayer::~CEventPedCollisionWithPlayer()
004c2763 W CEventPlayerCollisionWithPed::~CEventPlayerCollisionWithPed()
0056040d W CEventVehicleDamageCollision::~CEventVehicleDamageCollision()
003721b5 T CPedDamageResponseCalculator::AdjustPedDamage(CPed*)
00372189 T CPedDamageResponseCalculator::IsBleedingWeapon(CPed*)
00371fe1 T CPedDamageResponseCalculator::ComputeWillKillPed(CPed*, CPedDamageResponse&, bool)
00371f39 T CPedDamageResponseCalculator::AccountForPedArmour(CPed*, CPedDamageResponse&)
00371b3d T CPedDamageResponseCalculator::ComputeDamageResponse(CPed*, CPedDamageResponse&, bool)
00372225 T CPedDamageResponseCalculator::ComputeWillForceDeath(CPed*, CPedDamageResponse&)
006867ac D CPedDamageResponseCalculator::ms_fStealthKillDamage
00371e45 T CPedDamageResponseCalculator::AccountForPedDamageStats(CPed*, CPedDamageResponse&)
00371b25 T CPedDamageResponseCalculator::CPedDamageResponseCalculator(CEntity const*, float, eWeaponType, ePedPieceTypes, bool)
00371b25 T CPedDamageResponseCalculator::CPedDamageResponseCalculator(CEntity const*, float, eWeaponType, ePedPieceTypes, bool)
00371b39 T CPedDamageResponseCalculator::~CPedDamageResponseCalculator()
00371b39 T CPedDamageResponseCalculator::~CPedDamageResponseCalculator()
004fd52d W CTaskComplexEnterCarAsDriver::Serialize()
004f6fe1 T CTaskComplexEnterCarAsDriver::CTaskComplexEnterCarAsDriver(CVehicle*)
004f6fe1 T CTaskComplexEnterCarAsDriver::CTaskComplexEnterCarAsDriver(CVehicle*)
004f7055 T CTaskComplexEnterCarAsDriver::~CTaskComplexEnterCarAsDriver()
004f4765 T CTaskComplexEnterCarAsDriver::~CTaskComplexEnterCarAsDriver()
004f4765 T CTaskComplexEnterCarAsDriver::~CTaskComplexEnterCarAsDriver()
00494865 W CTaskComplexFollowPointRoute::CreateTask()
0051e7c1 T CTaskComplexFollowPointRoute::CreateSubTask(int, CPed*)
0051e571 T CTaskComplexFollowPointRoute::MakeAbortable(CPed*, int, CEvent const*)
009fefb4 B CTaskComplexFollowPointRoute::ms_pointRoute
0051f035 T CTaskComplexFollowPointRoute::CalcBlendRatio(CPed*, bool)
0051f1dd T CTaskComplexFollowPointRoute::ControlSubTask(CPed*)
0051e68d T CTaskComplexFollowPointRoute::GetSubTaskType()
0051ed1d T CTaskComplexFollowPointRoute::GetLastWaypoint(CPed*)
0051ed8d T CTaskComplexFollowPointRoute::GetNextWaypoint(CPed*)
0051eb09 T CTaskComplexFollowPointRoute::CalcGoToTaskType(CPed*, int)
0061e5f8 R CTaskComplexFollowPointRoute::ms_fTargetRadius
0051ea65 T CTaskComplexFollowPointRoute::CreateNextSubTask(CPed*)
0051edf9 T CTaskComplexFollowPointRoute::CreateFirstSubTask(CPed*)
0061e5fc R CTaskComplexFollowPointRoute::ms_fSlowDownDistance
0051e421 T CTaskComplexFollowPointRoute::SetRoute(CPointRoute const&, float, float, bool)
00527cb9 W CTaskComplexFollowPointRoute::Serialize()
0051e33d T CTaskComplexFollowPointRoute::CTaskComplexFollowPointRoute(int, CPointRoute const&, int, float, float, bool, bool, bool)
0051e33d T CTaskComplexFollowPointRoute::CTaskComplexFollowPointRoute(int, CPointRoute const&, int, float, float, bool, bool, bool)
0051e545 T CTaskComplexFollowPointRoute::~CTaskComplexFollowPointRoute()
0051e51d T CTaskComplexFollowPointRoute::~CTaskComplexFollowPointRoute()
0051e51d T CTaskComplexFollowPointRoute::~CTaskComplexFollowPointRoute()
004f3539 W CTaskComplexHitByGunResponse::MakeAbortable(CPed*, int, CEvent const*)
004ed15d T CTaskComplexHitByGunResponse::ControlSubTask(CPed*)
004ed079 T CTaskComplexHitByGunResponse::CreateNextSubTask(CPed*)
004ed07d T CTaskComplexHitByGunResponse::CreateFirstSubTask(CPed*)
004f3555 W CTaskComplexHitByGunResponse::Serialize()
004ed049 T CTaskComplexHitByGunResponse::CTaskComplexHitByGunResponse(int)
004ed049 T CTaskComplexHitByGunResponse::CTaskComplexHitByGunResponse(int)
004ed069 T CTaskComplexHitByGunResponse::~CTaskComplexHitByGunResponse()
004ed065 T CTaskComplexHitByGunResponse::~CTaskComplexHitByGunResponse()
004ed065 T CTaskComplexHitByGunResponse::~CTaskComplexHitByGunResponse()
00496345 W CTaskComplexSeekEntityAiming::CreateTask()
0054584d T CTaskComplexSeekEntityAiming::ControlSubTask(CPed*)
005456e1 T CTaskComplexSeekEntityAiming::CreateNextSubTask(CPed*)
005457b5 T CTaskComplexSeekEntityAiming::CreateFirstSubTask(CPed*)
00546341 W CTaskComplexSeekEntityAiming::Serialize()
00545641 T CTaskComplexSeekEntityAiming::CTaskComplexSeekEntityAiming(CEntity*, float, float)
00545641 T CTaskComplexSeekEntityAiming::CTaskComplexSeekEntityAiming(CEntity*, float, float)
005456b1 T CTaskComplexSeekEntityAiming::~CTaskComplexSeekEntityAiming()
00545685 T CTaskComplexSeekEntityAiming::~CTaskComplexSeekEntityAiming()
00545685 T CTaskComplexSeekEntityAiming::~CTaskComplexSeekEntityAiming()
004f456d W CTaskComplexUseEffectRunning::~CTaskComplexUseEffectRunning()
004f1b65 T CTaskComplexUseScriptedBrain::MakeAbortable(CPed*, int, CEvent const*)
004f1ce9 T CTaskComplexUseScriptedBrain::ControlSubTask(CPed*)
004f1bb5 T CTaskComplexUseScriptedBrain::CreateNextSubTask(CPed*)
004f1c81 T CTaskComplexUseScriptedBrain::CreateFirstSubTask(CPed*)
004f44e1 W CTaskComplexUseScriptedBrain::Serialize()
004f1a69 T CTaskComplexUseScriptedBrain::CTaskComplexUseScriptedBrain(char const*)
004f1a69 T CTaskComplexUseScriptedBrain::CTaskComplexUseScriptedBrain(char const*)
004f1afd T CTaskComplexUseScriptedBrain::~CTaskComplexUseScriptedBrain()
004f1a99 T CTaskComplexUseScriptedBrain::~CTaskComplexUseScriptedBrain()
004f1a99 T CTaskComplexUseScriptedBrain::~CTaskComplexUseScriptedBrain()
00535ce1 T CTaskComplexWalkAlongsidePed::MakeAbortable(CPed*, int, CEvent const*)
00535e85 T CTaskComplexWalkAlongsidePed::ControlSubTask(CPed*)
00535e49 T CTaskComplexWalkAlongsidePed::CreateNextSubTask(CPed*)
00535ced T CTaskComplexWalkAlongsidePed::CreateFirstSubTask(CPed*)
0061e6bc R CTaskComplexWalkAlongsidePed::ms_fTargetSlowDownDist
00535c45 T CTaskComplexWalkAlongsidePed::CTaskComplexWalkAlongsidePed(CPed*, float)
00535c45 T CTaskComplexWalkAlongsidePed::CTaskComplexWalkAlongsidePed(CPed*, float)
00535cb1 T CTaskComplexWalkAlongsidePed::~CTaskComplexWalkAlongsidePed()
00535c85 T CTaskComplexWalkAlongsidePed::~CTaskComplexWalkAlongsidePed()
00535c85 T CTaskComplexWalkAlongsidePed::~CTaskComplexWalkAlongsidePed()
00524309 T CTaskComplexWanderProstitute::ScanForStuff(CPed*)
005242ad T CTaskComplexWanderProstitute::CreateFirstSubTask(CPed*)
0061e660 R CTaskComplexWanderProstitute::ms_iPunterScanFreq
00524259 T CTaskComplexWanderProstitute::CTaskComplexWanderProstitute(int, unsigned char, bool)
00524259 T CTaskComplexWanderProstitute::CTaskComplexWanderProstitute(int, unsigned char, bool)
00526fd1 W CTaskComplexWanderProstitute::~CTaskComplexWanderProstitute()
005042a1 T CTaskSimpleCarSlowDragPedOut::ProcessPed(CPed*)
005041a5 T CTaskSimpleCarSlowDragPedOut::MakeAbortable(CPed*, int, CEvent const*)
005045c5 T CTaskSimpleCarSlowDragPedOut::SetPedPosition(CPed*)
005045d9 T CTaskSimpleCarSlowDragPedOut::FinishAnimCarSlowDragPedOutCB(CAnimBlendAssociation*, void*)
005044a9 T CTaskSimpleCarSlowDragPedOut::StartAnim(CPed const*)
005040d5 T CTaskSimpleCarSlowDragPedOut::CTaskSimpleCarSlowDragPedOut(CVehicle*, int, CTaskUtilityLineUpPedWithCar*, bool)
005040d5 T CTaskSimpleCarSlowDragPedOut::CTaskSimpleCarSlowDragPedOut(CVehicle*, int, CTaskUtilityLineUpPedWithCar*, bool)
00504161 T CTaskSimpleCarSlowDragPedOut::~CTaskSimpleCarSlowDragPedOut()
00504121 T CTaskSimpleCarSlowDragPedOut::~CTaskSimpleCarSlowDragPedOut()
00504121 T CTaskSimpleCarSlowDragPedOut::~CTaskSimpleCarSlowDragPedOut()
00502297 T CTaskSimpleCarWaitToSlowDown::ProcessPed(CPed*)
00502249 T CTaskSimpleCarWaitToSlowDown::MakeAbortable(CPed*, int, CEvent const*)
00502281 T CTaskSimpleCarWaitToSlowDown::SetPedPosition(CPed*)
005021b1 T CTaskSimpleCarWaitToSlowDown::CTaskSimpleCarWaitToSlowDown(CVehicle*, int)
005021b1 T CTaskSimpleCarWaitToSlowDown::CTaskSimpleCarWaitToSlowDown(CVehicle*, int)
00502219 T CTaskSimpleCarWaitToSlowDown::~CTaskSimpleCarWaitToSlowDown()
005021ed T CTaskSimpleCarWaitToSlowDown::~CTaskSimpleCarWaitToSlowDown()
005021ed T CTaskSimpleCarWaitToSlowDown::~CTaskSimpleCarWaitToSlowDown()
00506445 T CTaskSimpleCreateCarAndGetIn::ProcessPed(CPed*)
005074b7 W CTaskSimpleCreateCarAndGetIn::MakeAbortable(CPed*, int, CEvent const*)
00506355 T CTaskSimpleCreateCarAndGetIn::CTaskSimpleCreateCarAndGetIn(CVector const&, int)
00506355 T CTaskSimpleCreateCarAndGetIn::CTaskSimpleCreateCarAndGetIn(CVector const&, int)
005063e5 T CTaskSimpleCreateCarAndGetIn::~CTaskSimpleCreateCarAndGetIn()
00506389 T CTaskSimpleCreateCarAndGetIn::~CTaskSimpleCreateCarAndGetIn()
00506389 T CTaskSimpleCreateCarAndGetIn::~CTaskSimpleCreateCarAndGetIn()
00497961 W CTaskSimpleHitByGunFromFront::Serialize()
00497911 W CTaskSimpleHitByGunFromFront::~CTaskSimpleHitByGunFromFront()
00497bcd W CTaskSimpleHitByGunFromRight::Serialize()
00497b7d W CTaskSimpleHitByGunFromRight::~CTaskSimpleHitByGunFromRight()
00509539 T CTaskUtilityLineUpPedWithCar::ProcessPed(CPed*, CVehicle*, CAnimBlendAssociation*)
0050a5d5 T CTaskUtilityLineUpPedWithCar::GetPositionToOpenCarDoor(CVehicle*, float, CAnimBlendAssociation*)
0050a671 T CTaskUtilityLineUpPedWithCar::GetLocalPositionToOpenCarDoor(CVehicle*, float, CAnimBlendAssociation*)
005094f5 T CTaskUtilityLineUpPedWithCar::CTaskUtilityLineUpPedWithCar(CVector const&, int, int, int)
005094f5 T CTaskUtilityLineUpPedWithCar::CTaskUtilityLineUpPedWithCar(CVector const&, int, int, int)
00509531 T CTaskUtilityLineUpPedWithCar::~CTaskUtilityLineUpPedWithCar()
00509531 T CTaskUtilityLineUpPedWithCar::~CTaskUtilityLineUpPedWithCar()
002b5219 T CWidgetButtonBasketballShoot::Update()
002b53b9 W CWidgetButtonBasketballShoot::GetName()
002b51f1 T CWidgetButtonBasketballShoot::CWidgetButtonBasketballShoot(char const*, WidgetPosition const&)
002b51f1 T CWidgetButtonBasketballShoot::CWidgetButtonBasketballShoot(char const*, WidgetPosition const&)
002b538d W CWidgetButtonBasketballShoot::~CWidgetButtonBasketballShoot()
004be481 T CDecisionMakerTypesFileLoader::GetGrpDMName(int, char*)
004be469 T CDecisionMakerTypesFileLoader::GetPedDMName(int, char*)
006af938 D CDecisionMakerTypesFileLoader::ms_grp_DM_Names
006af924 D CDecisionMakerTypesFileLoader::ms_ped_DM_Names
004be791 T CDecisionMakerTypesFileLoader::LoadDecisionMaker(char const*, CDecisionMaker&)
004be68d T CDecisionMakerTypesFileLoader::LoadDecisionMaker(char const*, unsigned char, unsigned char, int)
004be659 T CDecisionMakerTypesFileLoader::UnloadDecisionMaker(int)
004740f5 T CDecisionMakerTypesFileLoader::LoadDefaultDecisionMaker()
004be499 T CDecisionMakerTypesFileLoader::ReStart()
003787c5 W CEventLeaderExitedCarAsDriver::~CEventLeaderExitedCarAsDriver()
00374155 T CEventPotentialWalkIntoObject::CEventPotentialWalkIntoObject(CObject*, int)
00374155 T CEventPotentialWalkIntoObject::CEventPotentialWalkIntoObject(CObject*, int)
003741c1 T CEventPotentialWalkIntoObject::~CEventPotentialWalkIntoObject()
00374199 T CEventPotentialWalkIntoObject::~CEventPotentialWalkIntoObject()
00374199 T CEventPotentialWalkIntoObject::~CEventPotentialWalkIntoObject()
0061dbb4 R CPedPotentialCollisionScanner::ms_fPedAvoidDistance
00484209 T CSimpleVariablesSaveStructure::Extract(unsigned int&)
00483de1 T CSimpleVariablesSaveStructure::Construct()
004f851f T CTaskComplexEnterBoatAsDriver::ControlSubTask(CPed*)
004f8465 T CTaskComplexEnterBoatAsDriver::CreateNextSubTask(CPed*)
004f84fd T CTaskComplexEnterBoatAsDriver::CreateFirstSubTask(CPed*)
004fe1b9 W CTaskComplexEnterBoatAsDriver::Serialize()
004f83d9 T CTaskComplexEnterBoatAsDriver::CTaskComplexEnterBoatAsDriver(CVehicle*)
004f83d9 T CTaskComplexEnterBoatAsDriver::CTaskComplexEnterBoatAsDriver(CVehicle*)
004f8435 T CTaskComplexEnterBoatAsDriver::~CTaskComplexEnterBoatAsDriver()
004f8409 T CTaskComplexEnterBoatAsDriver::~CTaskComplexEnterBoatAsDriver()
004f8409 T CTaskComplexEnterBoatAsDriver::~CTaskComplexEnterBoatAsDriver()
004961e1 W CTaskComplexFollowPatrolRoute::CreateTask()
005253c1 T CTaskComplexFollowPatrolRoute::CreateSubTask(int)
00525319 T CTaskComplexFollowPatrolRoute::MakeAbortable(CPed*, int, CEvent const*)
005259e1 T CTaskComplexFollowPatrolRoute::ControlSubTask(CPed*)
00525365 T CTaskComplexFollowPatrolRoute::GetSubTaskType()
009ff020 B CTaskComplexFollowPatrolRoute::ms_patrolRoute
0061e66c R CTaskComplexFollowPatrolRoute::ms_fTargetRadius
0052567d T CTaskComplexFollowPatrolRoute::CreateNextSubTask(CPed*)
00525791 T CTaskComplexFollowPatrolRoute::CreateFirstSubTask(CPed*)
0061e670 R CTaskComplexFollowPatrolRoute::ms_fSlowDownDistance
00525169 T CTaskComplexFollowPatrolRoute::SetRoute(CPatrolRoute const&, float, float, bool)
00528619 W CTaskComplexFollowPatrolRoute::Serialize()
0052504d T CTaskComplexFollowPatrolRoute::CTaskComplexFollowPatrolRoute(int, CPatrolRoute const&, int, float, float)
0052504d T CTaskComplexFollowPatrolRoute::CTaskComplexFollowPatrolRoute(int, CPatrolRoute const&, int, float, float)
005252ed T CTaskComplexFollowPatrolRoute::~CTaskComplexFollowPatrolRoute()
005252c5 T CTaskComplexFollowPatrolRoute::~CTaskComplexFollowPatrolRoute()
005252c5 T CTaskComplexFollowPatrolRoute::~CTaskComplexFollowPatrolRoute()
00495aa1 W CTaskComplexGoToPointAnyMeans::CreateTask()
00524bd1 T CTaskComplexGoToPointAnyMeans::ControlSubTask(CPed*)
0061e664 R CTaskComplexGoToPointAnyMeans::ms_fTargetRadius
005248ed T CTaskComplexGoToPointAnyMeans::CreateNextSubTask(CPed*)
00524b7d T CTaskComplexGoToPointAnyMeans::CreateFirstSubTask(CPed*)
0061e668 R CTaskComplexGoToPointAnyMeans::ms_fOnFootDistance
00528261 W CTaskComplexGoToPointAnyMeans::Serialize()
00524831 T CTaskComplexGoToPointAnyMeans::CTaskComplexGoToPointAnyMeans(int, CVector const&, CVehicle*, float, int)
005247ed T CTaskComplexGoToPointAnyMeans::CTaskComplexGoToPointAnyMeans(int, CVector const&, float, int)
00524831 T CTaskComplexGoToPointAnyMeans::CTaskComplexGoToPointAnyMeans(int, CVector const&, CVehicle*, float, int)
005247ed T CTaskComplexGoToPointAnyMeans::CTaskComplexGoToPointAnyMeans(int, CVector const&, float, int)
005248bd T CTaskComplexGoToPointAnyMeans::~CTaskComplexGoToPointAnyMeans()
00524891 T CTaskComplexGoToPointAnyMeans::~CTaskComplexGoToPointAnyMeans()
00524891 T CTaskComplexGoToPointAnyMeans::~CTaskComplexGoToPointAnyMeans()
004943f5 W CTaskComplexGoToPointShooting::CreateTask()
005289d1 W CTaskComplexGoToPointShooting::Serialize()
0051e06d T CTaskComplexGoToPointShooting::CTaskComplexGoToPointShooting(int, CVector const&, CEntity*, CVector, float, float)
0051e06d T CTaskComplexGoToPointShooting::CTaskComplexGoToPointShooting(int, CVector const&, CEntity*, CVector, float, float)
005288a5 W CTaskComplexGoToPointShooting::~CTaskComplexGoToPointShooting()
004933dd W CTaskComplexLeaveCarAndWander::CreateTask()
004f98af T CTaskComplexLeaveCarAndWander::ControlSubTask(CPed*)
004f97bd T CTaskComplexLeaveCarAndWander::CreateNextSubTask(CPed*)
004f989d T CTaskComplexLeaveCarAndWander::CreateFirstSubTask(CPed*)
004fe705 W CTaskComplexLeaveCarAndWander::Serialize()
004f9719 T CTaskComplexLeaveCarAndWander::CTaskComplexLeaveCarAndWander(CVehicle*, int, int, bool)
004f9719 T CTaskComplexLeaveCarAndWander::CTaskComplexLeaveCarAndWander(CVehicle*, int, int, bool)
004f978d T CTaskComplexLeaveCarAndWander::~CTaskComplexLeaveCarAndWander()
004f9761 T CTaskComplexLeaveCarAndWander::~CTaskComplexLeaveCarAndWander()
004f9761 T CTaskComplexLeaveCarAndWander::~CTaskComplexLeaveCarAndWander()
00494055 W CTaskComplexOpenPassengerDoor::CreateTask()
004fd9d9 W CTaskComplexOpenPassengerDoor::Serialize()
004f7181 T CTaskComplexOpenPassengerDoor::CTaskComplexOpenPassengerDoor(CVehicle*, int)
004f7181 T CTaskComplexOpenPassengerDoor::CTaskComplexOpenPassengerDoor(CVehicle*, int)
004f7201 T CTaskComplexOpenPassengerDoor::~CTaskComplexOpenPassengerDoor()
004f4765 T CTaskComplexOpenPassengerDoor::~CTaskComplexOpenPassengerDoor()
004f4765 T CTaskComplexOpenPassengerDoor::~CTaskComplexOpenPassengerDoor()
0051b519 T CTaskComplexProstituteSolicit::IsTaskValid(CPed*, CPed*)
0051b721 T CTaskComplexProstituteSolicit::CreateSubTask(int, CPed*)
0051b4fd T CTaskComplexProstituteSolicit::MakeAbortable(CPed*, int, CEvent const*)
0051bbb9 T CTaskComplexProstituteSolicit::ControlSubTask(CPed*)
0061e5a8 R CTaskComplexProstituteSolicit::ms_iGiveUpTime
0061e5d0 R CTaskComplexProstituteSolicit::ms_iShagFreqMid
0061e5c4 R CTaskComplexProstituteSolicit::ms_iChargePerSec
0061e5c8 R CTaskComplexProstituteSolicit::ms_iHealthPerSec
0061e5d4 R CTaskComplexProstituteSolicit::ms_iShagFreqFast
0061e5cc R CTaskComplexProstituteSolicit::ms_iShagFreqSlow
0051b991 T CTaskComplexProstituteSolicit::CreateNextSubTask(CPed*)
0051b687 T CTaskComplexProstituteSolicit::CreateFirstSubTask(CPed*)
0061e5bc R CTaskComplexProstituteSolicit::ms_iScanForPedsFreq
0061e5c0 R CTaskComplexProstituteSolicit::ms_fGiveUpDistanceSqr
0061e5ac R CTaskComplexProstituteSolicit::ms_fMaxSolicitSpeedSqr
0051b64d T CTaskComplexProstituteSolicit::GetRidOfPlayerProstitute()
0061e5a4 R CTaskComplexProstituteSolicit::ms_fMaxSolicitDistanceSqr
0061e5b8 R CTaskComplexProstituteSolicit::ms_fTooCloseDistForSexSqr
0061e5b4 R CTaskComplexProstituteSolicit::ms_fMinSecludedDistForSexSqr
0061e5b0 R CTaskComplexProstituteSolicit::ms_fSlowEnoughSpeedForSexSqr
0051c735 W CTaskComplexProstituteSolicit::Serialize()
0051b41d T CTaskComplexProstituteSolicit::CTaskComplexProstituteSolicit(CPed*)
0051b41d T CTaskComplexProstituteSolicit::CTaskComplexProstituteSolicit(CPed*)
0051b4ad T CTaskComplexProstituteSolicit::~CTaskComplexProstituteSolicit()
0051b461 T CTaskComplexProstituteSolicit::~CTaskComplexProstituteSolicit()
0051b461 T CTaskComplexProstituteSolicit::~CTaskComplexProstituteSolicit()
00546fc9 T CTaskComplexReactToGunAimedAt::CreateSubTask(int, CPed*)
0054731d T CTaskComplexReactToGunAimedAt::ControlSubTask(CPed*)
00546ef5 T CTaskComplexReactToGunAimedAt::CreateNextSubTask(CPed*)
005472b1 T CTaskComplexReactToGunAimedAt::CreateFirstSubTask(CPed*)
00547f0d W CTaskComplexReactToGunAimedAt::Serialize()
00546e61 T CTaskComplexReactToGunAimedAt::CTaskComplexReactToGunAimedAt(CPed*)
00546e61 T CTaskComplexReactToGunAimedAt::CTaskComplexReactToGunAimedAt(CPed*)
00546ec5 T CTaskComplexReactToGunAimedAt::~CTaskComplexReactToGunAimedAt()
00546e99 T CTaskComplexReactToGunAimedAt::~CTaskComplexReactToGunAimedAt()
00546e99 T CTaskComplexReactToGunAimedAt::~CTaskComplexReactToGunAimedAt()
004ee52d T CTaskComplexWaitForDryWeather::ControlSubTask(CPed*)
004ee4cd T CTaskComplexWaitForDryWeather::CreateNextSubTask(CPed*)
004ee4f9 T CTaskComplexWaitForDryWeather::CreateFirstSubTask(CPed*)
004f36dd W CTaskComplexWaitForDryWeather::Serialize()
004ee4a1 T CTaskComplexWaitForDryWeather::CTaskComplexWaitForDryWeather()
004ee4a1 T CTaskComplexWaitForDryWeather::CTaskComplexWaitForDryWeather()
004ee4bd T CTaskComplexWaitForDryWeather::~CTaskComplexWaitForDryWeather()
004ee4b9 T CTaskComplexWaitForDryWeather::~CTaskComplexWaitForDryWeather()
004ee4b9 T CTaskComplexWaitForDryWeather::~CTaskComplexWaitForDryWeather()
00492215 W CTaskSimplePlayHandSignalAnim::CreateTask()
004d768d T CTaskSimplePlayHandSignalAnim::ProcessPed(CPed*)
004d790d T CTaskSimplePlayHandSignalAnim::MakeAbortable(CPed*, int, CEvent const*)
004d8505 W CTaskSimplePlayHandSignalAnim::Serialize()
004d76e5 T CTaskSimplePlayHandSignalAnim::StartAnim(CPed*)
004d7571 T CTaskSimplePlayHandSignalAnim::CTaskSimplePlayHandSignalAnim(AnimationId, float, unsigned char, bool)
004d7571 T CTaskSimplePlayHandSignalAnim::CTaskSimplePlayHandSignalAnim(AnimationId, float, unsigned char, bool)
004d767d T CTaskSimplePlayHandSignalAnim::~CTaskSimplePlayHandSignalAnim()
004d75b9 T CTaskSimplePlayHandSignalAnim::~CTaskSimplePlayHandSignalAnim()
004d75b9 T CTaskSimplePlayHandSignalAnim::~CTaskSimplePlayHandSignalAnim()
00505d5d T CTaskSimpleSetPedAsAutoDriver::ProcessPed(CPed*)
005073e7 W CTaskSimpleSetPedAsAutoDriver::MakeAbortable(CPed*, int, CEvent const*)
00505cd1 T CTaskSimpleSetPedAsAutoDriver::CTaskSimpleSetPedAsAutoDriver(CVehicle*)
00505cd1 T CTaskSimpleSetPedAsAutoDriver::CTaskSimpleSetPedAsAutoDriver(CVehicle*)
00505d2d T CTaskSimpleSetPedAsAutoDriver::~CTaskSimpleSetPedAsAutoDriver()
00505d01 T CTaskSimpleSetPedAsAutoDriver::~CTaskSimpleSetPedAsAutoDriver()
00505d01 T CTaskSimpleSetPedAsAutoDriver::~CTaskSimpleSetPedAsAutoDriver()
004eaa31 T CTaskSimpleSetStayInSamePlace::ProcessPed(CPed*)
004f2421 W CTaskSimpleSetStayInSamePlace::MakeAbortable(CPed*, int, CEvent const*)
004f2425 W CTaskSimpleSetStayInSamePlace::Serialize()
004eaa01 T CTaskSimpleSetStayInSamePlace::CTaskSimpleSetStayInSamePlace(bool)
004eaa01 T CTaskSimpleSetStayInSamePlace::CTaskSimpleSetStayInSamePlace(bool)
004eaa21 T CTaskSimpleSetStayInSamePlace::~CTaskSimpleSetStayInSamePlace()
004eaa1d T CTaskSimpleSetStayInSamePlace::~CTaskSimpleSetStayInSamePlace()
004eaa1d T CTaskSimpleSetStayInSamePlace::~CTaskSimpleSetStayInSamePlace()
003786c5 W CEventLeaderEnteredCarAsDriver::~CEventLeaderEnteredCarAsDriver()
0037869d W CEventLeaderEnteredCarAsDriver::~CEventLeaderEnteredCarAsDriver()
00373f4d T CEventPotentialWalkIntoVehicle::CEventPotentialWalkIntoVehicle(CVehicle*, int)
00373f4d T CEventPotentialWalkIntoVehicle::CEventPotentialWalkIntoVehicle(CVehicle*, int)
00373fb9 T CEventPotentialWalkIntoVehicle::~CEventPotentialWalkIntoVehicle()
00373f91 T CEventPotentialWalkIntoVehicle::~CEventPotentialWalkIntoVehicle()
00373f91 T CEventPotentialWalkIntoVehicle::~CEventPotentialWalkIntoVehicle()
009ef9a4 B CPedGroupDefaultTaskAllocators::ms_chatAllocator
009ef9a8 B CPedGroupDefaultTaskAllocators::ms_randomAllocator
009ef9a0 B CPedGroupDefaultTaskAllocators::ms_standStillAllocator
009ef99c B CPedGroupDefaultTaskAllocators::ms_followLimitedAllocator
009ef998 B CPedGroupDefaultTaskAllocators::ms_followAnyMeansAllocator
009ef9ac B CPedGroupDefaultTaskAllocators::ms_sitInLeaderCarAllocator
004b2f19 T CPedGroupDefaultTaskAllocators::Get(int)
0054a4fd T CTaskAllocatorKillThreatsBasic::ProcessGroup(CPedGroupIntelligence*)
0054a565 T CTaskAllocatorKillThreatsBasic::AllocateTasks(CPedGroupIntelligence*)
0054a7a1 T CTaskAllocatorKillThreatsBasic::ComputeClosestPeds(CPedGroup&, CPedGroup&, CPed**)
0054a481 T CTaskAllocatorKillThreatsBasic::CTaskAllocatorKillThreatsBasic(CPed*)
0054a481 T CTaskAllocatorKillThreatsBasic::CTaskAllocatorKillThreatsBasic(CPed*)
0054a4b5 T CTaskAllocatorKillThreatsBasic::~CTaskAllocatorKillThreatsBasic()
0054b42d T CTaskAllocatorKillThreatsBasic::~CTaskAllocatorKillThreatsBasic()
0054b42d T CTaskAllocatorKillThreatsBasic::~CTaskAllocatorKillThreatsBasic()
0061e74c R CTaskComplexFollowPedFootsteps::ms_iLosFreq
00545a85 T CTaskComplexFollowPedFootsteps::CreateSubTask(int, CPed const*)
00545a79 T CTaskComplexFollowPedFootsteps::MakeAbortable(CPed*, int, CEvent const*)
00545d2d T CTaskComplexFollowPedFootsteps::ControlSubTask(CPed*)
00545be1 T CTaskComplexFollowPedFootsteps::CreateNextSubTask(CPed*)
0061e748 R CTaskComplexFollowPedFootsteps::ms_iMsecsInterval
00545ca9 T CTaskComplexFollowPedFootsteps::CreateFirstSubTask(CPed*)
0061e73c R CTaskComplexFollowPedFootsteps::ms_fTooCloseRadius
0061e740 R CTaskComplexFollowPedFootsteps::ms_fGotoPointRadius
0061e738 R CTaskComplexFollowPedFootsteps::ms_fKeepWithinRadius
0061e750 R CTaskComplexFollowPedFootsteps::ms_fSeekEntityRadius
0061e744 R CTaskComplexFollowPedFootsteps::ms_fRunToKeepUpRadius
00545999 T CTaskComplexFollowPedFootsteps::CTaskComplexFollowPedFootsteps(CPed*)
00545999 T CTaskComplexFollowPedFootsteps::CTaskComplexFollowPedFootsteps(CPed*)
00545a3d T CTaskComplexFollowPedFootsteps::~CTaskComplexFollowPedFootsteps()
00545a05 T CTaskComplexFollowPedFootsteps::~CTaskComplexFollowPedFootsteps()
00545a05 T CTaskComplexFollowPedFootsteps::~CTaskComplexFollowPedFootsteps()
0052b4f9 T CTaskComplexGetUpAndStandStill::CreateSubTask(int)
0052b5a9 T CTaskComplexGetUpAndStandStill::ControlSubTask(CPed*)
0052b549 T CTaskComplexGetUpAndStandStill::CreateNextSubTask(CPed*)
0052b585 T CTaskComplexGetUpAndStandStill::CreateFirstSubTask(CPed*)
00532a19 W CTaskComplexGetUpAndStandStill::Serialize()
0052b4cd T CTaskComplexGetUpAndStandStill::CTaskComplexGetUpAndStandStill()
0052b4cd T CTaskComplexGetUpAndStandStill::CTaskComplexGetUpAndStandStill()
0052b4e9 T CTaskComplexGetUpAndStandStill::~CTaskComplexGetUpAndStandStill()
0052b4e5 T CTaskComplexGetUpAndStandStill::~CTaskComplexGetUpAndStandStill()
0052b4e5 T CTaskComplexGetUpAndStandStill::~CTaskComplexGetUpAndStandStill()
005469f1 T CTaskComplexInvestigateDeadPed::CreateSubTask(int, CPed*)
00546c9d T CTaskComplexInvestigateDeadPed::ControlSubTask(CPed*)
0061e75c R CTaskComplexInvestigateDeadPed::ms_iMaxLookTime
0061e754 R CTaskComplexInvestigateDeadPed::ms_iMaxSeekTime
0061e758 R CTaskComplexInvestigateDeadPed::ms_iMinLookTime
0054685d T CTaskComplexInvestigateDeadPed::ComputeTargetPos(CPed*, CVector&)
00546901 T CTaskComplexInvestigateDeadPed::CreateNextSubTask(CPed*)
00546bd9 T CTaskComplexInvestigateDeadPed::CreateFirstSubTask(CPed*)
00547df5 W CTaskComplexInvestigateDeadPed::Serialize()
005467b5 T CTaskComplexInvestigateDeadPed::CTaskComplexInvestigateDeadPed(CPed*)
005467b5 T CTaskComplexInvestigateDeadPed::CTaskComplexInvestigateDeadPed(CPed*)
0054682d T CTaskComplexInvestigateDeadPed::~CTaskComplexInvestigateDeadPed()
00546801 T CTaskComplexInvestigateDeadPed::~CTaskComplexInvestigateDeadPed()
00546801 T CTaskComplexInvestigateDeadPed::~CTaskComplexInvestigateDeadPed()
004e8673 T CTaskComplexKillPedGroupOnFoot::ControlSubTask(CPed*)
004e8345 T CTaskComplexKillPedGroupOnFoot::CreateNextSubTask(CPed*)
004e862d T CTaskComplexKillPedGroupOnFoot::CreateFirstSubTask(CPed*)
004e82ad T CTaskComplexKillPedGroupOnFoot::CTaskComplexKillPedGroupOnFoot(int, CPed*)
004e82ad T CTaskComplexKillPedGroupOnFoot::CTaskComplexKillPedGroupOnFoot(int, CPed*)
004e8315 T CTaskComplexKillPedGroupOnFoot::~CTaskComplexKillPedGroupOnFoot()
004e82e9 T CTaskComplexKillPedGroupOnFoot::~CTaskComplexKillPedGroupOnFoot()
004e82e9 T CTaskComplexKillPedGroupOnFoot::~CTaskComplexKillPedGroupOnFoot()
004e2b61 T CTaskComplexKillPedOnFootArmed::CreateSubTask(int, CPed*)
004e2681 T CTaskComplexKillPedOnFootArmed::MakeAbortable(CPed*, int, CEvent const*)
004e3ddd T CTaskComplexKillPedOnFootArmed::ControlSubTask(CPed*)
004e30f1 T CTaskComplexKillPedOnFootArmed::CreateNextSubTask(CPed*)
004e26d1 T CTaskComplexKillPedOnFootArmed::CreateFirstSubTask(CPed*)
004e28d9 T CTaskComplexKillPedOnFootArmed::LineOfSightClearForAttack(CPed*)
004e2591 T CTaskComplexKillPedOnFootArmed::CTaskComplexKillPedOnFootArmed(CPed*, unsigned int, unsigned int, unsigned int, int)
004e2591 T CTaskComplexKillPedOnFootArmed::CTaskComplexKillPedOnFootArmed(CPed*, unsigned int, unsigned int, unsigned int, int)
004e2651 T CTaskComplexKillPedOnFootArmed::~CTaskComplexKillPedOnFootArmed()
004e2625 T CTaskComplexKillPedOnFootArmed::~CTaskComplexKillPedOnFootArmed()
004e2625 T CTaskComplexKillPedOnFootArmed::~CTaskComplexKillPedOnFootArmed()
004e1dd1 T CTaskComplexKillPedOnFootMelee::CreateSubTask(int, CPed*)
004e18e9 T CTaskComplexKillPedOnFootMelee::MakeAbortable(CPed*, int, CEvent const*)
004e2101 T CTaskComplexKillPedOnFootMelee::ControlSubTask(CPed*)
004e1901 T CTaskComplexKillPedOnFootMelee::CreateNextSubTask(CPed*)
004e1fed T CTaskComplexKillPedOnFootMelee::CreateFirstSubTask(CPed*)
004e1d55 T CTaskComplexKillPedOnFootMelee::CalculateSearchPositionAndRanges(CPed*)
004e183d T CTaskComplexKillPedOnFootMelee::CTaskComplexKillPedOnFootMelee(CPed*)
004e183d T CTaskComplexKillPedOnFootMelee::CTaskComplexKillPedOnFootMelee(CPed*)
004e18b9 T CTaskComplexKillPedOnFootMelee::~CTaskComplexKillPedOnFootMelee()
004e188d T CTaskComplexKillPedOnFootMelee::~CTaskComplexKillPedOnFootMelee()
004e188d T CTaskComplexKillPedOnFootMelee::~CTaskComplexKillPedOnFootMelee()
004922fd W CTaskComplexPlayHandSignalAnim::CreateTask()
004d7ba1 T CTaskComplexPlayHandSignalAnim::UseFatHands(CPed*)
006b0378 D CTaskComplexPlayHandSignalAnim::ms_animBlock
004d7a85 T CTaskComplexPlayHandSignalAnim::CreateSubTask(int)
004d7c7d T CTaskComplexPlayHandSignalAnim::ControlSubTask(CPed*)
004d7b61 T CTaskComplexPlayHandSignalAnim::GetAnimIdForPed(CPed*)
004d7c79 T CTaskComplexPlayHandSignalAnim::CreateNextSubTask(CPed*)
004d7bc1 T CTaskComplexPlayHandSignalAnim::CreateFirstSubTask(CPed*)
004d8655 W CTaskComplexPlayHandSignalAnim::Serialize()
004d7911 T CTaskComplexPlayHandSignalAnim::CTaskComplexPlayHandSignalAnim(AnimationId, float)
004d7911 T CTaskComplexPlayHandSignalAnim::CTaskComplexPlayHandSignalAnim(AnimationId, float)
004d7a75 T CTaskComplexPlayHandSignalAnim::~CTaskComplexPlayHandSignalAnim()
004d7939 T CTaskComplexPlayHandSignalAnim::~CTaskComplexPlayHandSignalAnim()
004d7939 T CTaskComplexPlayHandSignalAnim::~CTaskComplexPlayHandSignalAnim()
005466d9 W CTaskComplexSeekEntityAnyMeans<CEntitySeekPosCalculatorXYOffset>::ControlSubTask(CPed*)
00546633 W CTaskComplexSeekEntityAnyMeans<CEntitySeekPosCalculatorXYOffset>::CreateNextSubTask(CPed*)
00546639 W CTaskComplexSeekEntityAnyMeans<CEntitySeekPosCalculatorXYOffset>::CreateFirstSubTask(CPed*)
0054657d W CTaskComplexSeekEntityAnyMeans<CEntitySeekPosCalculatorXYOffset>::~CTaskComplexSeekEntityAnyMeans()
00546551 W CTaskComplexSeekEntityAnyMeans<CEntitySeekPosCalculatorXYOffset>::~CTaskComplexSeekEntityAnyMeans()
004f4625 W CTaskComplexUseEffectSprinting::~CTaskComplexUseEffectSprinting()
004ef225 T CTaskComplexUsePairedAttractor::CreateSubTask(int, CPed*)
004ef361 T CTaskComplexUsePairedAttractor::ControlSubTask(CPed*)
004ef02d T CTaskComplexUsePairedAttractor::SetPartnership(CPed*, bool, CScriptedEffectPair const*)
004eef51 T CTaskComplexUsePairedAttractor::SeekPartnership(CPed*)
004ef051 T CTaskComplexUsePairedAttractor::ClearPartnership()
004ef071 T CTaskComplexUsePairedAttractor::CreateNextSubTask(CPed*)
004ef325 T CTaskComplexUsePairedAttractor::CreateFirstSubTask(CPed*)
0061e330 R CTaskComplexUsePairedAttractor::ms_iUseAttractorAloneTime
004eef15 T CTaskComplexUsePairedAttractor::CTaskComplexUsePairedAttractor(CPedAttractor*)
004eef15 T CTaskComplexUsePairedAttractor::CTaskComplexUsePairedAttractor(CPedAttractor*)
004eef41 T CTaskComplexUsePairedAttractor::~CTaskComplexUsePairedAttractor()
004eef3d T CTaskComplexUsePairedAttractor::~CTaskComplexUsePairedAttractor()
004eef3d T CTaskComplexUsePairedAttractor::~CTaskComplexUsePairedAttractor()
00502dcd T CTaskSimpleCarSetPedInAsDriver::ProcessPed(CPed*)
00506f77 W CTaskSimpleCarSetPedInAsDriver::MakeAbortable(CPed*, int, CEvent const*)
00502d29 T CTaskSimpleCarSetPedInAsDriver::CTaskSimpleCarSetPedInAsDriver(CVehicle*, CTaskUtilityLineUpPedWithCar*)
00502d29 T CTaskSimpleCarSetPedInAsDriver::CTaskSimpleCarSetPedInAsDriver(CVehicle*, CTaskUtilityLineUpPedWithCar*)
00502d9d T CTaskSimpleCarSetPedInAsDriver::~CTaskSimpleCarSetPedInAsDriver()
00502d71 T CTaskSimpleCarSetPedInAsDriver::~CTaskSimpleCarSetPedInAsDriver()
00502d71 T CTaskSimpleCarSetPedInAsDriver::~CTaskSimpleCarSetPedInAsDriver()
0050482d T CTaskSimpleCarSlowBeDraggedOut::ProcessPed(CPed*)
00504769 T CTaskSimpleCarSlowBeDraggedOut::MakeAbortable(CPed*, int, CEvent const*)
005049dd T CTaskSimpleCarSlowBeDraggedOut::SetPedPosition(CPed*)
00504a71 T CTaskSimpleCarSlowBeDraggedOut::FinishAnimCarSlowBeDraggedOutCB(CAnimBlendAssociation*, void*)
00504965 T CTaskSimpleCarSlowBeDraggedOut::StartAnim(CPed const*)
00504695 T CTaskSimpleCarSlowBeDraggedOut::CTaskSimpleCarSlowBeDraggedOut(CVehicle*, int, CTaskUtilityLineUpPedWithCar*, bool)
00504695 T CTaskSimpleCarSlowBeDraggedOut::CTaskSimpleCarSlowBeDraggedOut(CVehicle*, int, CTaskUtilityLineUpPedWithCar*, bool)
00504725 T CTaskSimpleCarSlowBeDraggedOut::~CTaskSimpleCarSlowBeDraggedOut()
005046e5 T CTaskSimpleCarSlowBeDraggedOut::~CTaskSimpleCarSlowBeDraggedOut()
005046e5 T CTaskSimpleCarSlowBeDraggedOut::~CTaskSimpleCarSlowBeDraggedOut()
004d742d T CTaskSimpleRunAnimLoopedMiddle::ProcessPed(CPed*)
004d7539 T CTaskSimpleRunAnimLoopedMiddle::StartAnim(CPed*)
004d731d T CTaskSimpleRunAnimLoopedMiddle::CTaskSimpleRunAnimLoopedMiddle(AssocGroupId, AnimationId, float, float, float, int, bool)
004d738d T CTaskSimpleRunAnimLoopedMiddle::CTaskSimpleRunAnimLoopedMiddle(char const*, char const*, int, float, float, float, int, bool)
004d731d T CTaskSimpleRunAnimLoopedMiddle::CTaskSimpleRunAnimLoopedMiddle(AssocGroupId, AnimationId, float, float, float, int, bool)
004d738d T CTaskSimpleRunAnimLoopedMiddle::CTaskSimpleRunAnimLoopedMiddle(char const*, char const*, int, float, float, float, int, bool)
004d831d W CTaskSimpleRunAnimLoopedMiddle::~CTaskSimpleRunAnimLoopedMiddle()
00506855 T CTaskSimpleWaitUntilPedIsInCar::ProcessPed(CPed*)
0050755b W CTaskSimpleWaitUntilPedIsInCar::MakeAbortable(CPed*, int, CEvent const*)
005067c5 T CTaskSimpleWaitUntilPedIsInCar::CTaskSimpleWaitUntilPedIsInCar(CPed*)
005067c5 T CTaskSimpleWaitUntilPedIsInCar::CTaskSimpleWaitUntilPedIsInCar(CPed*)
00506825 T CTaskSimpleWaitUntilPedIsInCar::~CTaskSimpleWaitUntilPedIsInCar()
005067f9 T CTaskSimpleWaitUntilPedIsInCar::~CTaskSimpleWaitUntilPedIsInCar()
005067f9 T CTaskSimpleWaitUntilPedIsInCar::~CTaskSimpleWaitUntilPedIsInCar()
002c3ee9 T CWidgetRegionSteeringSelection::BuildRects()
002c5169 T CWidgetRegionSteeringSelection::IsReleased(CVector2D*)
002c4979 T CWidgetRegionSteeringSelection::DrawButtons()
002c4d19 T CWidgetRegionSteeringSelection::OnInitialTouch()
002c3fb1 T CWidgetRegionSteeringSelection::Draw()
002c4e11 T CWidgetRegionSteeringSelection::Update()
002c5255 W CWidgetRegionSteeringSelection::GetName()
002c3cc1 T CWidgetRegionSteeringSelection::CWidgetRegionSteeringSelection(char const*, WidgetPosition const&)
002c3cc1 T CWidgetRegionSteeringSelection::CWidgetRegionSteeringSelection(char const*, WidgetPosition const&)
002c5201 W CWidgetRegionSteeringSelection::~CWidgetRegionSteeringSelection()
002c51b1 W CWidgetRegionSteeringSelection::~CWidgetRegionSteeringSelection()
00378a01 W CEventPotentialWalkIntoBuilding::~CEventPotentialWalkIntoBuilding()
00504ee9 T CTaskComplexCarSlowBeDraggedOut::CreateSubTask(int)
00504e65 T CTaskComplexCarSlowBeDraggedOut::MakeAbortable(CPed*, int, CEvent const*)
005052bd T CTaskComplexCarSlowBeDraggedOut::ControlSubTask(CPed*)
00504fe5 T CTaskComplexCarSlowBeDraggedOut::CreateNextSubTask(CPed*)
0050509d T CTaskComplexCarSlowBeDraggedOut::CreateFirstSubTask(CPed*)
00505229 T CTaskComplexCarSlowBeDraggedOut::PreparePedForVehicleExit(CPed*)
005051f1 T CTaskComplexCarSlowBeDraggedOut::PrepareVehicleForPedExit(CPed*)
00505293 T CTaskComplexCarSlowBeDraggedOut::CreateTaskUtilityLineUpPedWithCar(CPed*)
00504da9 T CTaskComplexCarSlowBeDraggedOut::CTaskComplexCarSlowBeDraggedOut(CVehicle*, int, bool)
00504da9 T CTaskComplexCarSlowBeDraggedOut::CTaskComplexCarSlowBeDraggedOut(CVehicle*, int, bool)
00504e29 T CTaskComplexCarSlowBeDraggedOut::~CTaskComplexCarSlowBeDraggedOut()
00504df1 T CTaskComplexCarSlowBeDraggedOut::~CTaskComplexCarSlowBeDraggedOut()
00504df1 T CTaskComplexCarSlowBeDraggedOut::~CTaskComplexCarSlowBeDraggedOut()
004fcb91 T CTaskComplexEnterAnyCarAsDriver::ControlSubTask(CPed*)
004fc9f1 T CTaskComplexEnterAnyCarAsDriver::CreateNextSubTask(CPed*)
004fc9f5 T CTaskComplexEnterAnyCarAsDriver::CreateFirstSubTask(CPed*)
004ff72d W CTaskComplexEnterAnyCarAsDriver::Serialize()
004fc9c5 T CTaskComplexEnterAnyCarAsDriver::CTaskComplexEnterAnyCarAsDriver()
004fc9c5 T CTaskComplexEnterAnyCarAsDriver::CTaskComplexEnterAnyCarAsDriver()
004fc9e1 T CTaskComplexEnterAnyCarAsDriver::~CTaskComplexEnterAnyCarAsDriver()
004fc9dd T CTaskComplexEnterAnyCarAsDriver::~CTaskComplexEnterAnyCarAsDriver()
004fc9dd T CTaskComplexEnterAnyCarAsDriver::~CTaskComplexEnterAnyCarAsDriver()
00492f59 W CTaskComplexEnterCarAsPassenger::CreateTask()
004fd6a5 W CTaskComplexEnterCarAsPassenger::Serialize()
004f7065 T CTaskComplexEnterCarAsPassenger::CTaskComplexEnterCarAsPassenger(CVehicle*, int, bool)
004f7065 T CTaskComplexEnterCarAsPassenger::CTaskComplexEnterCarAsPassenger(CVehicle*, int, bool)
004f70e9 T CTaskComplexEnterCarAsPassenger::~CTaskComplexEnterCarAsPassenger()
004f4765 T CTaskComplexEnterCarAsPassenger::~CTaskComplexEnterCarAsPassenger()
004f4765 T CTaskComplexEnterCarAsPassenger::~CTaskComplexEnterCarAsPassenger()
004925b9 W CTaskComplexEvasiveDiveAndGetUp::CreateTask()
0050b37d T CTaskComplexEvasiveDiveAndGetUp::MakeAbortable(CPed*, int, CEvent const*)
0050b517 T CTaskComplexEvasiveDiveAndGetUp::ControlSubTask(CPed*)
0050b3c9 T CTaskComplexEvasiveDiveAndGetUp::CreateNextSubTask(CPed*)
0050b505 T CTaskComplexEvasiveDiveAndGetUp::CreateFirstSubTask(CPed*)
0050f305 W CTaskComplexEvasiveDiveAndGetUp::Serialize()
0050b2f9 T CTaskComplexEvasiveDiveAndGetUp::CTaskComplexEvasiveDiveAndGetUp(CVehicle*, int, CVector const&, bool)
0050b2f9 T CTaskComplexEvasiveDiveAndGetUp::CTaskComplexEvasiveDiveAndGetUp(CVehicle*, int, CVector const&, bool)
0050b34d T CTaskComplexEvasiveDiveAndGetUp::~CTaskComplexEvasiveDiveAndGetUp()
0050ec69 T CTaskComplexEvasiveDiveAndGetUp::~CTaskComplexEvasiveDiveAndGetUp()
0050ec69 T CTaskComplexEvasiveDiveAndGetUp::~CTaskComplexEvasiveDiveAndGetUp()
004ef549 T CTaskComplexUseAttractorPartner::ControlSubTask(CPed*)
004ef4f1 T CTaskComplexUseAttractorPartner::CreateNextSubTask(CPed*)
004ef4f5 T CTaskComplexUseAttractorPartner::CreateFirstSubTask(CPed*)
004ef4bd T CTaskComplexUseAttractorPartner::CTaskComplexUseAttractorPartner(bool, CScriptedEffectPair const*)
004ef4bd T CTaskComplexUseAttractorPartner::CTaskComplexUseAttractorPartner(bool, CScriptedEffectPair const*)
004ef4e1 T CTaskComplexUseAttractorPartner::~CTaskComplexUseAttractorPartner()
004ef4dd T CTaskComplexUseAttractorPartner::~CTaskComplexUseAttractorPartner()
004ef4dd T CTaskComplexUseAttractorPartner::~CTaskComplexUseAttractorPartner()
004f157d T CTaskSimpleSetCharDecisionMaker::ProcessPed(CPed*)
004f2133 W CTaskSimpleSetCharDecisionMaker::MakeAbortable(CPed*, int, CEvent const*)
004f2139 W CTaskSimpleSetCharDecisionMaker::Serialize()
004f20f7 W CTaskSimpleSetCharDecisionMaker::~CTaskSimpleSetCharDecisionMaker()
00506759 T CTaskSimpleWaitUntilPedIsOutCar::ProcessPed(CPed*)
00507513 W CTaskSimpleWaitUntilPedIsOutCar::MakeAbortable(CPed*, int, CEvent const*)
005066b1 T CTaskSimpleWaitUntilPedIsOutCar::CTaskSimpleWaitUntilPedIsOutCar(CPed*, CVector const&)
005066b1 T CTaskSimpleWaitUntilPedIsOutCar::CTaskSimpleWaitUntilPedIsOutCar(CPed*, CVector const&)
00506729 T CTaskSimpleWaitUntilPedIsOutCar::~CTaskSimpleWaitUntilPedIsOutCar()
005066fd T CTaskSimpleWaitUntilPedIsOutCar::~CTaskSimpleWaitUntilPedIsOutCar()
005066fd T CTaskSimpleWaitUntilPedIsOutCar::~CTaskSimpleWaitUntilPedIsOutCar()
003792e9 W CEventPlayerCommandToGroupAttack::~CEventPlayerCommandToGroupAttack()
004ca7f9 W CEventPlayerCommandToGroupGather::~CEventPlayerCommandToGroupGather()
0061dbf4 R CObjectPotentialCollisionScanner::ms_iPeriod
0061dbec R CObjectPotentialCollisionScanner::ms_fObjectAvoidDistance
0061dbf0 R CObjectPotentialCollisionScanner::ms_fMinIntersectionLength
004bc0ed T CObjectPotentialCollisionScanner::ScanForObjectPotentialCollisionEvents(CPed const&)
0054b055 T CTaskAllocatorKillThreatsDriveby::ProcessGroup(CPedGroupIntelligence*)
0054b0bd T CTaskAllocatorKillThreatsDriveby::AllocateTasks(CPedGroupIntelligence*)
0054afb1 T CTaskAllocatorKillThreatsDriveby::CTaskAllocatorKillThreatsDriveby(CPed*)
0054afb1 T CTaskAllocatorKillThreatsDriveby::CTaskAllocatorKillThreatsDriveby(CPed*)
0054b00d T CTaskAllocatorKillThreatsDriveby::~CTaskAllocatorKillThreatsDriveby()
0054afe5 T CTaskAllocatorKillThreatsDriveby::~CTaskAllocatorKillThreatsDriveby()
0054afe5 T CTaskAllocatorKillThreatsDriveby::~CTaskAllocatorKillThreatsDriveby()
004ef4b9 T CTaskComplexAttractorPartnerWait::ControlSubTask(CPed*)
004ef461 T CTaskComplexAttractorPartnerWait::CreateNextSubTask(CPed*)
004ef465 T CTaskComplexAttractorPartnerWait::CreateFirstSubTask(CPed*)
004ef42d T CTaskComplexAttractorPartnerWait::CTaskComplexAttractorPartnerWait(bool, CScriptedEffectPair const*)
004ef42d T CTaskComplexAttractorPartnerWait::CTaskComplexAttractorPartnerWait(bool, CScriptedEffectPair const*)
004ef451 T CTaskComplexAttractorPartnerWait::~CTaskComplexAttractorPartnerWait()
004ef44d T CTaskComplexAttractorPartnerWait::~CTaskComplexAttractorPartnerWait()
004ef44d T CTaskComplexAttractorPartnerWait::~CTaskComplexAttractorPartnerWait()
005122b9 T CTaskComplexExtinguishFireOnFoot::ControlSubTask(CPed*)
0051223d T CTaskComplexExtinguishFireOnFoot::FindNearestFire(CPed*)
00512121 T CTaskComplexExtinguishFireOnFoot::CreateNextSubTask(CPed*)
0051217d T CTaskComplexExtinguishFireOnFoot::CreateFirstSubTask(CPed*)
005127f5 W CTaskComplexExtinguishFireOnFoot::Serialize()
005120e5 T CTaskComplexExtinguishFireOnFoot::CTaskComplexExtinguishFireOnFoot(CVector const&)
005120e5 T CTaskComplexExtinguishFireOnFoot::CTaskComplexExtinguishFireOnFoot(CVector const&)
00512111 T CTaskComplexExtinguishFireOnFoot::~CTaskComplexExtinguishFireOnFoot()
0051210d T CTaskComplexExtinguishFireOnFoot::~CTaskComplexExtinguishFireOnFoot()
0051210d T CTaskComplexExtinguishFireOnFoot::~CTaskComplexExtinguishFireOnFoot()
00545595 T CTaskComplexFollowLeaderAnyMeans::ControlSubTask(CPed*)
00545379 T CTaskComplexFollowLeaderAnyMeans::CreateNextSubTask(CPed*)
00545535 T CTaskComplexFollowLeaderAnyMeans::CreateFirstSubTask(CPed*)
005452d1 T CTaskComplexFollowLeaderAnyMeans::CTaskComplexFollowLeaderAnyMeans(CPedGroup*, CPed*, CVector const&)
005452d1 T CTaskComplexFollowLeaderAnyMeans::CTaskComplexFollowLeaderAnyMeans(CPedGroup*, CPed*, CVector const&)
00545349 T CTaskComplexFollowLeaderAnyMeans::~CTaskComplexFollowLeaderAnyMeans()
0054531d T CTaskComplexFollowLeaderAnyMeans::~CTaskComplexFollowLeaderAnyMeans()
0054531d T CTaskComplexFollowLeaderAnyMeans::~CTaskComplexFollowLeaderAnyMeans()
004e1551 T CTaskComplexKillPedOnFootStealth::ControlSubTask(CPed*)
004e1471 T CTaskComplexKillPedOnFootStealth::CreateNextSubTask(CPed*)
004e1521 T CTaskComplexKillPedOnFootStealth::CreateFirstSubTask(CPed*)
004e1389 T CTaskComplexKillPedOnFootStealth::CTaskComplexKillPedOnFootStealth(CPed*)
004e1389 T CTaskComplexKillPedOnFootStealth::CTaskComplexKillPedOnFootStealth(CPed*)
004e1441 T CTaskComplexKillPedOnFootStealth::~CTaskComplexKillPedOnFootStealth()
004e029d T CTaskComplexKillPedOnFootStealth::~CTaskComplexKillPedOnFootStealth()
004e029d T CTaskComplexKillPedOnFootStealth::~CTaskComplexKillPedOnFootStealth()
00490de9 W CTaskComplexMedicTreatInjuredPed::CreateTask()
00510e6d T CTaskComplexMedicTreatInjuredPed::CreateSubTask(int)
0061e4f8 R CTaskComplexMedicTreatInjuredPed::ms_fDriveDist
00511225 T CTaskComplexMedicTreatInjuredPed::ControlSubTask(CPed*)
00510979 T CTaskComplexMedicTreatInjuredPed::CreateNextSubTask(CPed*)
005111e1 T CTaskComplexMedicTreatInjuredPed::CreateFirstSubTask(CPed*)
00511031 T CTaskComplexMedicTreatInjuredPed::GetNearestAccident(CVector const&)
0061e500 R CTaskComplexMedicTreatInjuredPed::ms_fMaxTreatmentRadius
00510e05 T CTaskComplexMedicTreatInjuredPed::CalcTargetPosWithOffset(CPed*, CPed*)
0061e4fc R CTaskComplexMedicTreatInjuredPed::ms_fInjuredPedTargetRadius
0051104d T CTaskComplexMedicTreatInjuredPed::CreateDealWithNextAccidentTask(CPed*, CAccident*)
005111fd T CTaskComplexMedicTreatInjuredPed::GetNearestAccidentExceptThisOne(CVector const&, CAccident*)
00512525 W CTaskComplexMedicTreatInjuredPed::Serialize()
00510879 T CTaskComplexMedicTreatInjuredPed::CTaskComplexMedicTreatInjuredPed(CVehicle*, CPed*, bool)
00510879 T CTaskComplexMedicTreatInjuredPed::CTaskComplexMedicTreatInjuredPed(CVehicle*, CPed*, bool)
00510925 T CTaskComplexMedicTreatInjuredPed::~CTaskComplexMedicTreatInjuredPed()
005108d5 T CTaskComplexMedicTreatInjuredPed::~CTaskComplexMedicTreatInjuredPed()
005108d5 T CTaskComplexMedicTreatInjuredPed::~CTaskComplexMedicTreatInjuredPed()
004ecb25 T CTaskComplexObserveTrafficLights::MakeAbortable(CPed*, int, CEvent const*)
004ecbdb T CTaskComplexObserveTrafficLights::ControlSubTask(CPed*)
004ecb29 T CTaskComplexObserveTrafficLights::CreateNextSubTask(CPed*)
004ecbd5 T CTaskComplexObserveTrafficLights::CreateFirstSubTask(CPed*)
004f3135 W CTaskComplexObserveTrafficLights::Serialize()
004ecaf1 T CTaskComplexObserveTrafficLights::CTaskComplexObserveTrafficLights()
004ecaf1 T CTaskComplexObserveTrafficLights::CTaskComplexObserveTrafficLights()
004ecb15 T CTaskComplexObserveTrafficLights::~CTaskComplexObserveTrafficLights()
004ecb11 T CTaskComplexObserveTrafficLights::~CTaskComplexObserveTrafficLights()
004ecb11 T CTaskComplexObserveTrafficLights::~CTaskComplexObserveTrafficLights()
004934d1 W CTaskComplexScreamInCarThenLeave::CreateTask()
004f9d05 T CTaskComplexScreamInCarThenLeave::CreateSubTask(int, CPed*)
004f9cb9 T CTaskComplexScreamInCarThenLeave::MakeAbortable(CPed*, int, CEvent const*)
004f9eb1 T CTaskComplexScreamInCarThenLeave::ControlSubTask(CPed*)
004f9ccd T CTaskComplexScreamInCarThenLeave::CreateNextSubTask(CPed*)
004f9e8d T CTaskComplexScreamInCarThenLeave::CreateFirstSubTask(CPed*)
004fea95 W CTaskComplexScreamInCarThenLeave::Serialize()
004f9c19 T CTaskComplexScreamInCarThenLeave::CTaskComplexScreamInCarThenLeave(CVehicle*, int)
004f9c19 T CTaskComplexScreamInCarThenLeave::CTaskComplexScreamInCarThenLeave(CVehicle*, int)
004f9c89 T CTaskComplexScreamInCarThenLeave::~CTaskComplexScreamInCarThenLeave()
004f9c5d T CTaskComplexScreamInCarThenLeave::~CTaskComplexScreamInCarThenLeave()
004f9c5d T CTaskComplexScreamInCarThenLeave::~CTaskComplexScreamInCarThenLeave()
004ef5f9 T CTaskComplexUseScriptedAttractor::ControlSubTask(CPed*)
004ef57d T CTaskComplexUseScriptedAttractor::CreateNextSubTask(CPed*)
004ef581 T CTaskComplexUseScriptedAttractor::CreateFirstSubTask(CPed*)
004ef54d T CTaskComplexUseScriptedAttractor::CTaskComplexUseScriptedAttractor(CPedAttractor const*)
004ef54d T CTaskComplexUseScriptedAttractor::CTaskComplexUseScriptedAttractor(CPedAttractor const*)
004ef56d T CTaskComplexUseScriptedAttractor::~CTaskComplexUseScriptedAttractor()
004ef569 T CTaskComplexUseScriptedAttractor::~CTaskComplexUseScriptedAttractor()
004ef569 T CTaskComplexUseScriptedAttractor::~CTaskComplexUseScriptedAttractor()
0037813d W CEventAcquaintancePedHateBadlyLit::~CEventAcquaintancePedHateBadlyLit()
0054a45d T CTaskAllocatorPlayerCommandAttack::ProcessGroup(CPedGroupIntelligence*)
0054a2a5 T CTaskAllocatorPlayerCommandAttack::AllocateTasks(CPedGroupIntelligence*)
0054a235 T CTaskAllocatorPlayerCommandAttack::CTaskAllocatorPlayerCommandAttack(CPed*, int, int)
0054a235 T CTaskAllocatorPlayerCommandAttack::CTaskAllocatorPlayerCommandAttack(CPed*, int, int)
0054b489 W CTaskAllocatorPlayerCommandAttack::~CTaskAllocatorPlayerCommandAttack()
004f74b1 T CTaskComplexEnterCarAsDriverTimed::MakeAbortable(CPed*, int, CEvent const*)
004f75bd T CTaskComplexEnterCarAsDriverTimed::ControlSubTask(CPed*)
004f7511 T CTaskComplexEnterCarAsDriverTimed::CreateNextSubTask(CPed*)
004f7515 T CTaskComplexEnterCarAsDriverTimed::CreateFirstSubTask(CPed*)
0061e3b8 R CTaskComplexEnterCarAsDriverTimed::ms_iTime
004fdcc1 W CTaskComplexEnterCarAsDriverTimed::Serialize()
004f7645 T CTaskComplexEnterCarAsDriverTimed::StopTimer(CEvent const*)
004f7409 T CTaskComplexEnterCarAsDriverTimed::CTaskComplexEnterCarAsDriverTimed(CVehicle*, int)
004f7409 T CTaskComplexEnterCarAsDriverTimed::CTaskComplexEnterCarAsDriverTimed(CVehicle*, int)
004f7481 T CTaskComplexEnterCarAsDriverTimed::~CTaskComplexEnterCarAsDriverTimed()
004f7455 T CTaskComplexEnterCarAsDriverTimed::~CTaskComplexEnterCarAsDriverTimed()
004f7455 T CTaskComplexEnterCarAsDriverTimed::~CTaskComplexEnterCarAsDriverTimed()
00505e61 T CTaskComplexGoToBoatSteeringWheel::CreateSubTask(int)
00506035 T CTaskComplexGoToBoatSteeringWheel::ControlSubTask(CPed*)
005061e1 T CTaskComplexGoToBoatSteeringWheel::ComputeTargetPos()
00505e41 T CTaskComplexGoToBoatSteeringWheel::CreateNextSubTask(CPed*)
00505f59 T CTaskComplexGoToBoatSteeringWheel::CreateFirstSubTask(CPed*)
00505dad T CTaskComplexGoToBoatSteeringWheel::CTaskComplexGoToBoatSteeringWheel(CVehicle*)
00505dad T CTaskComplexGoToBoatSteeringWheel::CTaskComplexGoToBoatSteeringWheel(CVehicle*)
00505e11 T CTaskComplexGoToBoatSteeringWheel::~CTaskComplexGoToBoatSteeringWheel()
00505de5 T CTaskComplexGoToBoatSteeringWheel::~CTaskComplexGoToBoatSteeringWheel()
00505de5 T CTaskComplexGoToBoatSteeringWheel::~CTaskComplexGoToBoatSteeringWheel()
00501629 T CTaskSimpleCarCloseDoorFromInside::ProcessPed(CPed*)
00501561 T CTaskSimpleCarCloseDoorFromInside::MakeAbortable(CPed*, int, CEvent const*)
005017c9 T CTaskSimpleCarCloseDoorFromInside::SetPedPosition(CPed*)
005017dd T CTaskSimpleCarCloseDoorFromInside::FinishAnimCarCloseDoorFromInsideCB(CAnimBlendAssociation*, void*)
00501759 T CTaskSimpleCarCloseDoorFromInside::StartAnim(CPed const*)
00501495 T CTaskSimpleCarCloseDoorFromInside::CTaskSimpleCarCloseDoorFromInside(CVehicle*, int, CTaskUtilityLineUpPedWithCar*)
00501495 T CTaskSimpleCarCloseDoorFromInside::CTaskSimpleCarCloseDoorFromInside(CVehicle*, int, CTaskUtilityLineUpPedWithCar*)
0050151d T CTaskSimpleCarCloseDoorFromInside::~CTaskSimpleCarCloseDoorFromInside()
005014dd T CTaskSimpleCarCloseDoorFromInside::~CTaskSimpleCarCloseDoorFromInside()
005014dd T CTaskSimpleCarCloseDoorFromInside::~CTaskSimpleCarCloseDoorFromInside()
00500d2d T CTaskSimpleCarOpenDoorFromOutside::ProcessPed(CPed*)
00500c45 T CTaskSimpleCarOpenDoorFromOutside::MakeAbortable(CPed*, int, CEvent const*)
00500f99 T CTaskSimpleCarOpenDoorFromOutside::SetPedPosition(CPed*)
00500fad T CTaskSimpleCarOpenDoorFromOutside::FinishAnimCarOpenDoorFromOutsideCB(CAnimBlendAssociation*, void*)
00500f29 T CTaskSimpleCarOpenDoorFromOutside::StartAnim(CPed const*)
00500b39 T CTaskSimpleCarOpenDoorFromOutside::CTaskSimpleCarOpenDoorFromOutside(CVehicle*, int, CTaskUtilityLineUpPedWithCar*, bool)
00500b39 T CTaskSimpleCarOpenDoorFromOutside::CTaskSimpleCarOpenDoorFromOutside(CVehicle*, int, CTaskUtilityLineUpPedWithCar*, bool)
00500be5 T CTaskSimpleCarOpenDoorFromOutside::~CTaskSimpleCarOpenDoorFromOutside()
00500b89 T CTaskSimpleCarOpenDoorFromOutside::~CTaskSimpleCarOpenDoorFromOutside()
00500b89 T CTaskSimpleCarOpenDoorFromOutside::~CTaskSimpleCarOpenDoorFromOutside()
005027c5 T CTaskSimpleCarSetPedInAsPassenger::ProcessPed(CPed*)
00506f0b W CTaskSimpleCarSetPedInAsPassenger::MakeAbortable(CPed*, int, CEvent const*)
00502719 T CTaskSimpleCarSetPedInAsPassenger::CTaskSimpleCarSetPedInAsPassenger(CVehicle*, int, CTaskUtilityLineUpPedWithCar*)
00502719 T CTaskSimpleCarSetPedInAsPassenger::CTaskSimpleCarSetPedInAsPassenger(CVehicle*, int, CTaskUtilityLineUpPedWithCar*)
00502795 T CTaskSimpleCarSetPedInAsPassenger::~CTaskSimpleCarSetPedInAsPassenger()
00502769 T CTaskSimpleCarSetPedInAsPassenger::~CTaskSimpleCarSetPedInAsPassenger()
00502769 T CTaskSimpleCarSetPedInAsPassenger::~CTaskSimpleCarSetPedInAsPassenger()
005438d9 T CTaskSimpleDuckWhileShotsWhizzing::ProcessPed(CPed*)
00543855 T CTaskSimpleDuckWhileShotsWhizzing::MakeAbortable(CPed*, int, CEvent const*)
0054412d W CTaskSimpleDuckWhileShotsWhizzing::Serialize()
005437e9 T CTaskSimpleDuckWhileShotsWhizzing::CTaskSimpleDuckWhileShotsWhizzing(unsigned short)
005437e9 T CTaskSimpleDuckWhileShotsWhizzing::CTaskSimpleDuckWhileShotsWhizzing(unsigned short)
00543845 T CTaskSimpleDuckWhileShotsWhizzing::~CTaskSimpleDuckWhileShotsWhizzing()
00542e91 T CTaskSimpleDuckWhileShotsWhizzing::~CTaskSimpleDuckWhileShotsWhizzing()
00542e91 T CTaskSimpleDuckWhileShotsWhizzing::~CTaskSimpleDuckWhileShotsWhizzing()
00496d01 W CTaskSimpleTogglePedThreatScanner::CreateTask()
004efafd T CTaskSimpleTogglePedThreatScanner::ProcessPed(CPed*)
004f1f87 W CTaskSimpleTogglePedThreatScanner::MakeAbortable(CPed*, int, CEvent const*)
004f1f8d W CTaskSimpleTogglePedThreatScanner::Serialize()
004f1f49 W CTaskSimpleTogglePedThreatScanner::~CTaskSimpleTogglePedThreatScanner()
0061dbd8 R CVehiclePotentialCollisionScanner::ms_iPeriod
0061dbcc R CVehiclePotentialCollisionScanner::ms_fFastDiveDist
0061dbc8 R CVehiclePotentialCollisionScanner::ms_fSlowDiveDist
0061dbc0 R CVehiclePotentialCollisionScanner::ms_fMinAvoidSpeed
0061dbc4 R CVehiclePotentialCollisionScanner::ms_fMinAvoidScaredSpeed
0061dbd0 R CVehiclePotentialCollisionScanner::ms_fVehicleAvoidDistance
0061dbd4 R CVehiclePotentialCollisionScanner::ms_fMinIntersectionLength
0061dbbc R CVehiclePotentialCollisionScanner::ms_fVehicleThreatMultiplier
0061dbb8 R CVehiclePotentialCollisionScanner::ms_fVehiclePotentialRunOverDistance
004bbe99 T CVehiclePotentialCollisionScanner::ScanForVehiclePotentialCollisionEvents(CPed const&, CEntity**, int)
002c554d T CWidgetRegionTouchLayoutSelection::BuildRects()
002c6319 T CWidgetRegionTouchLayoutSelection::IsReleased(CVector2D*)
002c5fc1 T CWidgetRegionTouchLayoutSelection::OnInitialTouch()
002c5de1 T CWidgetRegionTouchLayoutSelection::DrawAdaptedButtons()
002c5bb9 T CWidgetRegionTouchLayoutSelection::DrawClassicButtons()
002c55c5 T CWidgetRegionTouchLayoutSelection::Draw()
002c606d T CWidgetRegionTouchLayoutSelection::Update()
002c63f1 W CWidgetRegionTouchLayoutSelection::GetName()
002c5381 T CWidgetRegionTouchLayoutSelection::CWidgetRegionTouchLayoutSelection(char const*, WidgetPosition const&)
002c5381 T CWidgetRegionTouchLayoutSelection::CWidgetRegionTouchLayoutSelection(char const*, WidgetPosition const&)
002c6395 W CWidgetRegionTouchLayoutSelection::~CWidgetRegionTouchLayoutSelection()
002c633d W CWidgetRegionTouchLayoutSelection::~CWidgetRegionTouchLayoutSelection()
0061dbe8 R CBuildingPotentialCollisionScanner::ms_iPeriod
0061dbe4 R CBuildingPotentialCollisionScanner::ms_fNormalZThreshold
0061dbe0 R CBuildingPotentialCollisionScanner::ms_fLookAheadDistanceRunning
0061dbdc R CBuildingPotentialCollisionScanner::ms_fLookAheadDistanceWalking
004bc0e9 T CBuildingPotentialCollisionScanner::ScanForBuildingPotentialCollisionEvents(CPed const&)
0054a47d T CTaskAllocatorPlayerCommandRetreat::AllocateTasks(CPedGroupIntelligence*)
0054b4e9 W CTaskAllocatorPlayerCommandRetreat::~CTaskAllocatorPlayerCommandRetreat()
004940e5 W CTaskComplexCarDriveMissionKillPed::CreateTask()
0038476d W CTaskComplexCarDriveMissionKillPed::Serialize()
0038471d W CTaskComplexCarDriveMissionKillPed::~CTaskComplexCarDriveMissionKillPed()
004946a9 W CTaskComplexGoToPointAndStandStill::CreateTask()
0051d7b9 T CTaskComplexGoToPointAndStandStill::ControlSubTask(CPed*)
0061e5e4 R CTaskComplexGoToPointAndStandStill::ms_fTargetRadius
0051d445 T CTaskComplexGoToPointAndStandStill::CreateNextSubTask(CPed*)
0051d795 T CTaskComplexGoToPointAndStandStill::CreateFirstSubTask(CPed*)
0061e5e8 R CTaskComplexGoToPointAndStandStill::ms_fSlowDownDistance
00526d1d W CTaskComplexGoToPointAndStandStill::Serialize()
0051d355 T CTaskComplexGoToPointAndStandStill::CTaskComplexGoToPointAndStandStill(int, CVector const&, float, float, bool, bool)
0051d355 T CTaskComplexGoToPointAndStandStill::CTaskComplexGoToPointAndStandStill(int, CVector const&, float, float, bool, bool)
0051d435 T CTaskComplexGoToPointAndStandStill::~CTaskComplexGoToPointAndStandStill()
00526aed T CTaskComplexGoToPointAndStandStill::~CTaskComplexGoToPointAndStandStill()
00526aed T CTaskComplexGoToPointAndStandStill::~CTaskComplexGoToPointAndStandStill()
005264d5 T CTaskComplexInvestigateDisturbance::MakeAbortable(CPed*, int, CEvent const*)
0052690d T CTaskComplexInvestigateDisturbance::ControlSubTask(CPed*)
005264f1 T CTaskComplexInvestigateDisturbance::CreateNextSubTask(CPed*)
005266f5 T CTaskComplexInvestigateDisturbance::CreateFirstSubTask(CPed*)
00526431 T CTaskComplexInvestigateDisturbance::CTaskComplexInvestigateDisturbance(CVector const&, CEntity*)
00526431 T CTaskComplexInvestigateDisturbance::CTaskComplexInvestigateDisturbance(CVector const&, CEntity*)
005264a5 T CTaskComplexInvestigateDisturbance::~CTaskComplexInvestigateDisturbance()
00526479 T CTaskComplexInvestigateDisturbance::~CTaskComplexInvestigateDisturbance()
00526479 T CTaskComplexInvestigateDisturbance::~CTaskComplexInvestigateDisturbance()
005019ed T CTaskSimpleCarCloseDoorFromOutside::ProcessPed(CPed*)
005019a1 T CTaskSimpleCarCloseDoorFromOutside::ComputeAnimID(int&, int&)
00501921 T CTaskSimpleCarCloseDoorFromOutside::MakeAbortable(CPed*, int, CEvent const*)
00501c8d T CTaskSimpleCarCloseDoorFromOutside::SetPedPosition(CPed*)
00501c9f T CTaskSimpleCarCloseDoorFromOutside::FinishAnimCarCloseDoorFromOutsideCB(CAnimBlendAssociation*, void*)
00501a99 T CTaskSimpleCarCloseDoorFromOutside::StartAnim(CPed const*)
00501855 T CTaskSimpleCarCloseDoorFromOutside::CTaskSimpleCarCloseDoorFromOutside(CVehicle*, int, CTaskUtilityLineUpPedWithCar*)
00501855 T CTaskSimpleCarCloseDoorFromOutside::CTaskSimpleCarCloseDoorFromOutside(CVehicle*, int, CTaskUtilityLineUpPedWithCar*)
005018dd T CTaskSimpleCarCloseDoorFromOutside::~CTaskSimpleCarCloseDoorFromOutside()
0050189d T CTaskSimpleCarCloseDoorFromOutside::~CTaskSimpleCarCloseDoorFromOutside()
0050189d T CTaskSimpleCarCloseDoorFromOutside::~CTaskSimpleCarCloseDoorFromOutside()
00504b15 T CTaskSimpleCarSetPedSlowDraggedOut::ProcessPed(CPed*)
00507227 W CTaskSimpleCarSetPedSlowDraggedOut::MakeAbortable(CPed*, int, CEvent const*)
00504a7d T CTaskSimpleCarSetPedSlowDraggedOut::CTaskSimpleCarSetPedSlowDraggedOut(CVehicle*, int)
00504a7d T CTaskSimpleCarSetPedSlowDraggedOut::CTaskSimpleCarSetPedSlowDraggedOut(CVehicle*, int)
00504ae5 T CTaskSimpleCarSetPedSlowDraggedOut::~CTaskSimpleCarSetPedSlowDraggedOut()
00504ab9 T CTaskSimpleCarSetPedSlowDraggedOut::~CTaskSimpleCarSetPedSlowDraggedOut()
00504ab9 T CTaskSimpleCarSetPedSlowDraggedOut::~CTaskSimpleCarSetPedSlowDraggedOut()
004eaa95 T CTaskSimpleSetKindaStayInSamePlace::ProcessPed(CPed*)
004f24d7 W CTaskSimpleSetKindaStayInSamePlace::MakeAbortable(CPed*, int, CEvent const*)
004f24dd W CTaskSimpleSetKindaStayInSamePlace::Serialize()
004eaa65 T CTaskSimpleSetKindaStayInSamePlace::CTaskSimpleSetKindaStayInSamePlace(bool)
004eaa65 T CTaskSimpleSetKindaStayInSamePlace::CTaskSimpleSetKindaStayInSamePlace(bool)
004eaa85 T CTaskSimpleSetKindaStayInSamePlace::~CTaskSimpleSetKindaStayInSamePlace()
004eaa81 T CTaskSimpleSetKindaStayInSamePlace::~CTaskSimpleSetKindaStayInSamePlace()
004eaa81 T CTaskSimpleSetKindaStayInSamePlace::~CTaskSimpleSetKindaStayInSamePlace()
004f188d T CTaskSimpleWaitUntilAreaCodesMatch::ProcessPed(CPed*)
004f43c3 W CTaskSimpleWaitUntilAreaCodesMatch::MakeAbortable(CPed*, int, CEvent const*)
004f43cd W CTaskSimpleWaitUntilAreaCodesMatch::Serialize()
004f1811 T CTaskSimpleWaitUntilAreaCodesMatch::CTaskSimpleWaitUntilAreaCodesMatch(CPed*)
004f1811 T CTaskSimpleWaitUntilAreaCodesMatch::CTaskSimpleWaitUntilAreaCodesMatch(CPed*)
004f185d T CTaskSimpleWaitUntilAreaCodesMatch::~CTaskSimpleWaitUntilAreaCodesMatch()
004f1d4d T CTaskSimpleWaitUntilAreaCodesMatch::~CTaskSimpleWaitUntilAreaCodesMatch()
004f1d4d T CTaskSimpleWaitUntilAreaCodesMatch::~CTaskSimpleWaitUntilAreaCodesMatch()
00378889 W CEventLeaderQuitEnteringCarAsDriver::~CEventLeaderQuitEnteringCarAsDriver()
0049396d W CTaskComplexEnterCarAsPassengerWait::CreateTask()
004f7d6d T CTaskComplexEnterCarAsPassengerWait::ControlSubTask(CPed*)
004f7a0d T CTaskComplexEnterCarAsPassengerWait::CreateNextSubTask(CPed*)
004f7d15 T CTaskComplexEnterCarAsPassengerWait::CreateFirstSubTask(CPed*)
004fdee5 W CTaskComplexEnterCarAsPassengerWait::Serialize()
004f7931 T CTaskComplexEnterCarAsPassengerWait::CTaskComplexEnterCarAsPassengerWait(CVehicle*, CPed*, bool, int)
004f7931 T CTaskComplexEnterCarAsPassengerWait::CTaskComplexEnterCarAsPassengerWait(CVehicle*, CPed*, bool, int)
004f79cd T CTaskComplexEnterCarAsPassengerWait::~CTaskComplexEnterCarAsPassengerWait()
004f7991 T CTaskComplexEnterCarAsPassengerWait::~CTaskComplexEnterCarAsPassengerWait()
004f7991 T CTaskComplexEnterCarAsPassengerWait::~CTaskComplexEnterCarAsPassengerWait()
009ff890 B CTaskComplexFollowLeaderInFormation::ms_offsets
00544b61 T CTaskComplexFollowLeaderInFormation::CreateSubTask(int, CPed const*)
00544e91 T CTaskComplexFollowLeaderInFormation::ControlSubTask(CPed*)
00544981 T CTaskComplexFollowLeaderInFormation::CreateNextSubTask(CPed*)
00544e45 T CTaskComplexFollowLeaderInFormation::CreateFirstSubTask(CPed*)
0061e734 R CTaskComplexFollowLeaderInFormation::ms_fMaxDistanceToLeader
005448c9 T CTaskComplexFollowLeaderInFormation::CTaskComplexFollowLeaderInFormation(CPedGroup*, CPed*, CVector const&, float)
00544811 T CTaskComplexFollowLeaderInFormation::CTaskComplexFollowLeaderInFormation(CPedGroup*, CPed*, int, int, float)
005448c9 T CTaskComplexFollowLeaderInFormation::CTaskComplexFollowLeaderInFormation(CPedGroup*, CPed*, CVector const&, float)
00544811 T CTaskComplexFollowLeaderInFormation::CTaskComplexFollowLeaderInFormation(CPedGroup*, CPed*, int, int, float)
0054494d T CTaskComplexFollowLeaderInFormation::~CTaskComplexFollowLeaderInFormation()
00544921 T CTaskComplexFollowLeaderInFormation::~CTaskComplexFollowLeaderInFormation()
00544921 T CTaskComplexFollowLeaderInFormation::~CTaskComplexFollowLeaderInFormation()
006b0400 D CTaskComplexFollowNodeRouteShooting::ms_iShootTime
00526981 T CTaskComplexFollowNodeRouteShooting::ControlSubTask(CPed*)
00526911 T CTaskComplexFollowNodeRouteShooting::CreateNextSubTask(CPed*)
00526961 T CTaskComplexFollowNodeRouteShooting::CreateFirstSubTask(CPed*)
006b0404 D CTaskComplexFollowNodeRouteShooting::ms_iShootRecoverTime
005270e1 W CTaskComplexFollowNodeRouteShooting::~CTaskComplexFollowNodeRouteShooting()
00527091 W CTaskComplexFollowNodeRouteShooting::~CTaskComplexFollowNodeRouteShooting()
004f830d T CTaskComplexLeaveCarAsPassengerWait::ControlSubTask(CPed*)
004f8015 T CTaskComplexLeaveCarAsPassengerWait::CreateNextSubTask(CPed*)
004f82a5 T CTaskComplexLeaveCarAsPassengerWait::CreateFirstSubTask(CPed*)
004fe0a5 W CTaskComplexLeaveCarAsPassengerWait::Serialize()
004f7f89 T CTaskComplexLeaveCarAsPassengerWait::CTaskComplexLeaveCarAsPassengerWait(CVehicle*)
004f7f89 T CTaskComplexLeaveCarAsPassengerWait::CTaskComplexLeaveCarAsPassengerWait(CVehicle*)
004f7fe5 T CTaskComplexLeaveCarAsPassengerWait::~CTaskComplexLeaveCarAsPassengerWait()
004f7fb9 T CTaskComplexLeaveCarAsPassengerWait::~CTaskComplexLeaveCarAsPassengerWait()
004f7fb9 T CTaskComplexLeaveCarAsPassengerWait::~CTaskComplexLeaveCarAsPassengerWait()
00495bd9 W CTaskComplexTurnToFaceEntityOrCoord::CreateTask()
00524f41 T CTaskComplexTurnToFaceEntityOrCoord::ControlSubTask(CPed*)
00524e05 T CTaskComplexTurnToFaceEntityOrCoord::CreateNextSubTask(CPed*)
00524e09 T CTaskComplexTurnToFaceEntityOrCoord::CreateFirstSubTask(CPed*)
00528465 W CTaskComplexTurnToFaceEntityOrCoord::Serialize()
00524d15 T CTaskComplexTurnToFaceEntityOrCoord::CTaskComplexTurnToFaceEntityOrCoord(CEntity*, float, float)
00524d6d T CTaskComplexTurnToFaceEntityOrCoord::CTaskComplexTurnToFaceEntityOrCoord(CVector const&, float, float)
00524d15 T CTaskComplexTurnToFaceEntityOrCoord::CTaskComplexTurnToFaceEntityOrCoord(CEntity*, float, float)
00524d6d T CTaskComplexTurnToFaceEntityOrCoord::CTaskComplexTurnToFaceEntityOrCoord(CVector const&, float, float)
00524dd5 T CTaskComplexTurnToFaceEntityOrCoord::~CTaskComplexTurnToFaceEntityOrCoord()
00524da9 T CTaskComplexTurnToFaceEntityOrCoord::~CTaskComplexTurnToFaceEntityOrCoord()
00524da9 T CTaskComplexTurnToFaceEntityOrCoord::~CTaskComplexTurnToFaceEntityOrCoord()
005412d1 T CTaskSimpleAffectSecondaryBehaviour::ProcessPed(CPed*)
00543c4f W CTaskSimpleAffectSecondaryBehaviour::MakeAbortable(CPed*, int, CEvent const*)
00541249 T CTaskSimpleAffectSecondaryBehaviour::CTaskSimpleAffectSecondaryBehaviour(bool, int, CTask*)
00541249 T CTaskSimpleAffectSecondaryBehaviour::CTaskSimpleAffectSecondaryBehaviour(bool, int, CTask*)
005412a1 T CTaskSimpleAffectSecondaryBehaviour::~CTaskSimpleAffectSecondaryBehaviour()
00541275 T CTaskSimpleAffectSecondaryBehaviour::~CTaskSimpleAffectSecondaryBehaviour()
00541275 T CTaskSimpleAffectSecondaryBehaviour::~CTaskSimpleAffectSecondaryBehaviour()
00493fe1 W CTaskComplexCarDriveMissionFleeScene::CreateTask()
003844f5 W CTaskComplexCarDriveMissionFleeScene::Serialize()
003844a5 W CTaskComplexCarDriveMissionFleeScene::~CTaskComplexCarDriveMissionFleeScene()
004937a9 W CTaskComplexEnterCarAsPassengerTimed::CreateTask()
004f772d T CTaskComplexEnterCarAsPassengerTimed::MakeAbortable(CPed*, int, CEvent const*)
004f7851 T CTaskComplexEnterCarAsPassengerTimed::ControlSubTask(CPed*)
004f778d T CTaskComplexEnterCarAsPassengerTimed::CreateNextSubTask(CPed*)
004f7791 T CTaskComplexEnterCarAsPassengerTimed::CreateFirstSubTask(CPed*)
0061e3bc R CTaskComplexEnterCarAsPassengerTimed::ms_iTime
004fddd1 W CTaskComplexEnterCarAsPassengerTimed::Serialize()
004f78f9 T CTaskComplexEnterCarAsPassengerTimed::StopTimer(CEvent const*)
004f767d T CTaskComplexEnterCarAsPassengerTimed::CTaskComplexEnterCarAsPassengerTimed(CVehicle*, int, int, bool)
004f767d T CTaskComplexEnterCarAsPassengerTimed::CTaskComplexEnterCarAsPassengerTimed(CVehicle*, int, int, bool)
004f76fd T CTaskComplexEnterCarAsPassengerTimed::~CTaskComplexEnterCarAsPassengerTimed()
004f76d1 T CTaskComplexEnterCarAsPassengerTimed::~CTaskComplexEnterCarAsPassengerTimed()
004f76d1 T CTaskComplexEnterCarAsPassengerTimed::~CTaskComplexEnterCarAsPassengerTimed()
0049424d W CTaskComplexGoToCarDoorAndStandStill::CreateTask()
004ffdf1 T CTaskComplexGoToCarDoorAndStandStill::MakeAbortable(CPed*, int, CEvent const*)
00500331 T CTaskComplexGoToCarDoorAndStandStill::ControlSubTask(CPed*)
0061e400 R CTaskComplexGoToCarDoorAndStandStill::ms_fSmallDistSq
0061e3fc R CTaskComplexGoToCarDoorAndStandStill::ms_iMaxSeekTime
0061e3f0 R CTaskComplexGoToCarDoorAndStandStill::ms_fTargetRadius
004ffb55 T CTaskComplexGoToCarDoorAndStandStill::CreateNextSubTask(CPed*)
0050014d T CTaskComplexGoToCarDoorAndStandStill::ComputeRouteToDoor(CPed const&)
004ffeb9 T CTaskComplexGoToCarDoorAndStandStill::CreateFirstSubTask(CPed*)
0061e3f8 R CTaskComplexGoToCarDoorAndStandStill::ms_fMaxSeekDistance
0061e3f4 R CTaskComplexGoToCarDoorAndStandStill::ms_fSlowDownDistance
0050694d W CTaskComplexGoToCarDoorAndStandStill::Serialize()
004ffa61 T CTaskComplexGoToCarDoorAndStandStill::CTaskComplexGoToCarDoorAndStandStill(CVehicle*, int, bool, int, float, float, float, int)
004ffa61 T CTaskComplexGoToCarDoorAndStandStill::CTaskComplexGoToCarDoorAndStandStill(CVehicle*, int, bool, int, float, float, float, int)
004ffb19 T CTaskComplexGoToCarDoorAndStandStill::~CTaskComplexGoToCarDoorAndStandStill()
004ffae1 T CTaskComplexGoToCarDoorAndStandStill::~CTaskComplexGoToCarDoorAndStandStill()
004ffae1 T CTaskComplexGoToCarDoorAndStandStill::~CTaskComplexGoToCarDoorAndStandStill()
004e9211 T CTaskComplexSeekCoverUntilTargetDead::ControlSubTask(CPed*)
004e8e35 T CTaskComplexSeekCoverUntilTargetDead::CreateNextSubTask(CPed*)
004e8e61 T CTaskComplexSeekCoverUntilTargetDead::CreateFirstSubTask(CPed*)
004e8d7d T CTaskComplexSeekCoverUntilTargetDead::CTaskComplexSeekCoverUntilTargetDead(CPed*)
004e8d59 T CTaskComplexSeekCoverUntilTargetDead::CTaskComplexSeekCoverUntilTargetDead(int)
004e8d7d T CTaskComplexSeekCoverUntilTargetDead::CTaskComplexSeekCoverUntilTargetDead(CPed*)
004e8d59 T CTaskComplexSeekCoverUntilTargetDead::CTaskComplexSeekCoverUntilTargetDead(int)
004e8df5 T CTaskComplexSeekCoverUntilTargetDead::~CTaskComplexSeekCoverUntilTargetDead()
004e8db9 T CTaskComplexSeekCoverUntilTargetDead::~CTaskComplexSeekCoverUntilTargetDead()
004e8db9 T CTaskComplexSeekCoverUntilTargetDead::~CTaskComplexSeekCoverUntilTargetDead()
00492959 W CTaskComplexWalkRoundBuildingAttempt::CreateTask()
0050d551 T CTaskComplexWalkRoundBuildingAttempt::ComputeRoute(CPed const&)
0050cf29 T CTaskComplexWalkRoundBuildingAttempt::MakeAbortable(CPed*, int, CEvent const*)
0050dbd1 T CTaskComplexWalkRoundBuildingAttempt::ControlSubTask(CPed*)
0061e4cc R CTaskComplexWalkRoundBuildingAttempt::ms_iMaxAttempts
0050d9e9 T CTaskComplexWalkRoundBuildingAttempt::ComputeCrapRoute(CPed const&)
0050cf4d T CTaskComplexWalkRoundBuildingAttempt::CreateNextSubTask(CPed*)
0050d2f5 T CTaskComplexWalkRoundBuildingAttempt::CreateFirstSubTask(CPed*)
0061e4d4 R CTaskComplexWalkRoundBuildingAttempt::ms_LargeMovedEpsSqr
0061e4d0 R CTaskComplexWalkRoundBuildingAttempt::ms_SmallMovedEpsSqr
0050fab5 W CTaskComplexWalkRoundBuildingAttempt::Serialize()
0050ce05 T CTaskComplexWalkRoundBuildingAttempt::CTaskComplexWalkRoundBuildingAttempt(int, CEntity*, CVector const&, CVector const&, CVector const&, bool)
0050cd7d T CTaskComplexWalkRoundBuildingAttempt::CTaskComplexWalkRoundBuildingAttempt(int, CVector const&, CVector const&, CVector const&, bool)
0050ce05 T CTaskComplexWalkRoundBuildingAttempt::CTaskComplexWalkRoundBuildingAttempt(int, CEntity*, CVector const&, CVector const&, CVector const&, bool)
0050cd7d T CTaskComplexWalkRoundBuildingAttempt::CTaskComplexWalkRoundBuildingAttempt(int, CVector const&, CVector const&, CVector const&, bool)
0050cee5 T CTaskComplexWalkRoundBuildingAttempt::~CTaskComplexWalkRoundBuildingAttempt()
0050cea5 T CTaskComplexWalkRoundBuildingAttempt::~CTaskComplexWalkRoundBuildingAttempt()
0050cea5 T CTaskComplexWalkRoundBuildingAttempt::~CTaskComplexWalkRoundBuildingAttempt()
005023c9 T CTaskSimpleCarWaitForDoorNotToBeInUse::ProcessPed(CPed*)
00506e93 W CTaskSimpleCarWaitForDoorNotToBeInUse::MakeAbortable(CPed*, int, CEvent const*)
005023e7 T CTaskSimpleCarWaitForDoorNotToBeInUse::SetPedPosition(CPed*)
005023ad T CTaskSimpleCarWaitForDoorNotToBeInUse::IsValidTargetDoor(int)
0050240d T CTaskSimpleCarWaitForDoorNotToBeInUse::CheckDoorsFreeOfPeds(CVehicle const&, int, bool&, bool&)
0050230d T CTaskSimpleCarWaitForDoorNotToBeInUse::CTaskSimpleCarWaitForDoorNotToBeInUse(CVehicle*, int, int)
0050230d T CTaskSimpleCarWaitForDoorNotToBeInUse::CTaskSimpleCarWaitForDoorNotToBeInUse(CVehicle*, int, int)
0050237d T CTaskSimpleCarWaitForDoorNotToBeInUse::~CTaskSimpleCarWaitForDoorNotToBeInUse()
00502351 T CTaskSimpleCarWaitForDoorNotToBeInUse::~CTaskSimpleCarWaitForDoorNotToBeInUse()
00502351 T CTaskSimpleCarWaitForDoorNotToBeInUse::~CTaskSimpleCarWaitForDoorNotToBeInUse()
00491379 W CTaskComplexSitDownThenIdleThenStandUp::CreateTask()
0061e324 R CTaskComplexSitDownThenIdleThenStandUp::ms_iDuration
004ec9d5 T CTaskComplexSitDownThenIdleThenStandUp::CreateSubTask(int)
004ec8a9 T CTaskComplexSitDownThenIdleThenStandUp::MakeAbortable(CPed*, int, CEvent const*)
004ecaa1 T CTaskComplexSitDownThenIdleThenStandUp::ControlSubTask(CPed*)
004ec8d9 T CTaskComplexSitDownThenIdleThenStandUp::CreateNextSubTask(CPed*)
004eca6d T CTaskComplexSitDownThenIdleThenStandUp::CreateFirstSubTask(CPed*)
004f3035 W CTaskComplexSitDownThenIdleThenStandUp::Serialize()
004ec7fd T CTaskComplexSitDownThenIdleThenStandUp::CTaskComplexSitDownThenIdleThenStandUp(int, unsigned char, unsigned char)
004ec7fd T CTaskComplexSitDownThenIdleThenStandUp::CTaskComplexSitDownThenIdleThenStandUp(int, unsigned char, unsigned char)
004ec869 T CTaskComplexSitDownThenIdleThenStandUp::~CTaskComplexSitDownThenIdleThenStandUp()
004ec82d T CTaskComplexSitDownThenIdleThenStandUp::~CTaskComplexSitDownThenIdleThenStandUp()
004ec82d T CTaskComplexSitDownThenIdleThenStandUp::~CTaskComplexSitDownThenIdleThenStandUp()
004959e1 W CTaskComplexAvoidOtherPedWhileWandering::CreateTask()
0061e624 R CTaskComplexAvoidOtherPedWhileWandering::ms_iPeriod
00522129 T CTaskComplexAvoidOtherPedWhileWandering::ComputeSphere(CColSphere&, CPed**)
00521d11 T CTaskComplexAvoidOtherPedWhileWandering::MakeAbortable(CPed*, int, CEvent const*)
005224f9 T CTaskComplexAvoidOtherPedWhileWandering::ControlSubTask(CPed*)
00521d75 T CTaskComplexAvoidOtherPedWhileWandering::CreateNextSubTask(CPed*)
00522231 T CTaskComplexAvoidOtherPedWhileWandering::ComputeAvoidSphere(CPed const&, CColSphere&)
00521dd5 T CTaskComplexAvoidOtherPedWhileWandering::CreateFirstSubTask(CPed*)
00521f8b T CTaskComplexAvoidOtherPedWhileWandering::NearbyPedsInSphere(CPed const&, CColSphere const&, CPed**, CPed**)
0061e620 R CTaskComplexAvoidOtherPedWhileWandering::ms_fPedAvoidRadius
00521f31 T CTaskComplexAvoidOtherPedWhileWandering::ComputeDetourTarget(CPed const&)
005222dd T CTaskComplexAvoidOtherPedWhileWandering::ComputeDetourTarget(CPed const&, CColSphere&)
00521cd5 T CTaskComplexAvoidOtherPedWhileWandering::QuitIK(CPed*)
00522329 T CTaskComplexAvoidOtherPedWhileWandering::SetUpIK(CPed*)
00528019 W CTaskComplexAvoidOtherPedWhileWandering::Serialize()
00521c01 T CTaskComplexAvoidOtherPedWhileWandering::CTaskComplexAvoidOtherPedWhileWandering(CPed*, CVector const&, int)
00521c01 T CTaskComplexAvoidOtherPedWhileWandering::CTaskComplexAvoidOtherPedWhileWandering(CPed*, CVector const&, int)
00521ca5 T CTaskComplexAvoidOtherPedWhileWandering::~CTaskComplexAvoidOtherPedWhileWandering()
00521c79 T CTaskComplexAvoidOtherPedWhileWandering::~CTaskComplexAvoidOtherPedWhileWandering()
00521c79 T CTaskComplexAvoidOtherPedWhileWandering::~CTaskComplexAvoidOtherPedWhileWandering()
0051d959 T CTaskComplexGoToPointAndStandStillTimed::MakeAbortable(CPed*, int, CEvent const*)
0051d9f5 T CTaskComplexGoToPointAndStandStillTimed::ControlSubTask(CPed*)
0051d9b5 T CTaskComplexGoToPointAndStandStillTimed::CreateFirstSubTask(CPed*)
0061e5ec R CTaskComplexGoToPointAndStandStillTimed::ms_iTime
0051da79 T CTaskComplexGoToPointAndStandStillTimed::StopTimer(CEvent const*)
0051d891 T CTaskComplexGoToPointAndStandStillTimed::CTaskComplexGoToPointAndStandStillTimed(int, CVector const&, float, float, int)
0051d891 T CTaskComplexGoToPointAndStandStillTimed::CTaskComplexGoToPointAndStandStillTimed(int, CVector const&, float, float, int)
0051d949 T CTaskComplexGoToPointAndStandStillTimed::~CTaskComplexGoToPointAndStandStillTimed()
00526aed T CTaskComplexGoToPointAndStandStillTimed::~CTaskComplexGoToPointAndStandStillTimed()
00526aed T CTaskComplexGoToPointAndStandStillTimed::~CTaskComplexGoToPointAndStandStillTimed()
005010f9 T CTaskSimpleCarOpenLockedDoorFromOutside::ProcessPed(CPed*)
005010dd T CTaskSimpleCarOpenLockedDoorFromOutside::MakeAbortable(CPed*, int, CEvent const*)
005011dd T CTaskSimpleCarOpenLockedDoorFromOutside::SetPedPosition(CPed*)
005011ef T CTaskSimpleCarOpenLockedDoorFromOutside::FinishAnimCarOpenLockedDoorFromOutsideCB(CAnimBlendAssociation*, void*)
00501175 T CTaskSimpleCarOpenLockedDoorFromOutside::StartAnim(CPed const*)
00501011 T CTaskSimpleCarOpenLockedDoorFromOutside::CTaskSimpleCarOpenLockedDoorFromOutside(CVehicle*, int, CTaskUtilityLineUpPedWithCar*)
00501011 T CTaskSimpleCarOpenLockedDoorFromOutside::CTaskSimpleCarOpenLockedDoorFromOutside(CVehicle*, int, CTaskUtilityLineUpPedWithCar*)
00501099 T CTaskSimpleCarOpenLockedDoorFromOutside::~CTaskSimpleCarOpenLockedDoorFromOutside()
00501059 T CTaskSimpleCarOpenLockedDoorFromOutside::~CTaskSimpleCarOpenLockedDoorFromOutside()
00501059 T CTaskSimpleCarOpenLockedDoorFromOutside::~CTaskSimpleCarOpenLockedDoorFromOutside()
004e8d21 T CTaskSimpleSetCharIgnoreWeaponRangeFlag::ProcessPed(CPed*)
004e943b W CTaskSimpleSetCharIgnoreWeaponRangeFlag::MakeAbortable(CPed*, int, CEvent const*)
004e9401 W CTaskSimpleSetCharIgnoreWeaponRangeFlag::~CTaskSimpleSetCharIgnoreWeaponRangeFlag()
00491d59 W CTaskSimpleWaitUntilLeaderAreaCodesMatch::CreateTask()
004f18e5 T CTaskSimpleWaitUntilLeaderAreaCodesMatch::ProcessPed(CPed*)
004f18d1 T CTaskSimpleWaitUntilLeaderAreaCodesMatch::MakeAbortable(CPed*, int, CEvent const*)
004f2281 W CTaskSimpleWaitUntilLeaderAreaCodesMatch::Serialize()
004f21d9 W CTaskSimpleWaitUntilLeaderAreaCodesMatch::~CTaskSimpleWaitUntilLeaderAreaCodesMatch()
0054ac85 T CTaskAllocatorKillThreatsBasicRandomGroup::AllocateTasks(CPedGroupIntelligence*)
0054b515 W CTaskAllocatorKillThreatsBasicRandomGroup::~CTaskAllocatorKillThreatsBasicRandomGroup()
0050536d T CTaskComplexCarSlowBeDraggedOutAndStandUp::CreateSubTask(int, CPed*)
00505359 T CTaskComplexCarSlowBeDraggedOutAndStandUp::MakeAbortable(CPed*, int, CEvent const*)
005055b9 T CTaskComplexCarSlowBeDraggedOutAndStandUp::ControlSubTask(CPed*)
00505475 T CTaskComplexCarSlowBeDraggedOutAndStandUp::CreateNextSubTask(CPed*)
005054f3 T CTaskComplexCarSlowBeDraggedOutAndStandUp::CreateFirstSubTask(CPed*)
005052c1 T CTaskComplexCarSlowBeDraggedOutAndStandUp::CTaskComplexCarSlowBeDraggedOutAndStandUp(CVehicle*, int)
005052c1 T CTaskComplexCarSlowBeDraggedOutAndStandUp::CTaskComplexCarSlowBeDraggedOutAndStandUp(CVehicle*, int)
00505329 T CTaskComplexCarSlowBeDraggedOutAndStandUp::~CTaskComplexCarSlowBeDraggedOutAndStandUp()
005052fd T CTaskComplexCarSlowBeDraggedOutAndStandUp::~CTaskComplexCarSlowBeDraggedOutAndStandUp()
005052fd T CTaskComplexCarSlowBeDraggedOutAndStandUp::~CTaskComplexCarSlowBeDraggedOutAndStandUp()
004914a1 W CTaskComplexCrossRoadLookAndAchieveHeading::CreateTask()
004f32d9 W CTaskComplexCrossRoadLookAndAchieveHeading::MakeAbortable(CPed*, int, CEvent const*)
004ece21 T CTaskComplexCrossRoadLookAndAchieveHeading::ControlSubTask(CPed*)
004ecdb9 T CTaskComplexCrossRoadLookAndAchieveHeading::CreateNextSubTask(CPed*)
004ecdf1 T CTaskComplexCrossRoadLookAndAchieveHeading::CreateFirstSubTask(CPed*)
004f32f5 W CTaskComplexCrossRoadLookAndAchieveHeading::Serialize()
004ecd19 T CTaskComplexCrossRoadLookAndAchieveHeading::CTaskComplexCrossRoadLookAndAchieveHeading(int, float)
004ecd19 T CTaskComplexCrossRoadLookAndAchieveHeading::CTaskComplexCrossRoadLookAndAchieveHeading(int, float)
004ecd3d T CTaskComplexCrossRoadLookAndAchieveHeading::~CTaskComplexCrossRoadLookAndAchieveHeading()
004ecd39 T CTaskComplexCrossRoadLookAndAchieveHeading::~CTaskComplexCrossRoadLookAndAchieveHeading()
004ecd39 T CTaskComplexCrossRoadLookAndAchieveHeading::~CTaskComplexCrossRoadLookAndAchieveHeading()
0050ea89 T CTaskComplexDiveFromAttachedEntityAndGetUp::ControlSubTask(CPed*)
0050e881 T CTaskComplexDiveFromAttachedEntityAndGetUp::CreateNextSubTask(CPed*)
0050e90d T CTaskComplexDiveFromAttachedEntityAndGetUp::CreateFirstSubTask(CPed*)
0050ed01 W CTaskComplexDiveFromAttachedEntityAndGetUp::Serialize()
0050ec95 W CTaskComplexDiveFromAttachedEntityAndGetUp::~CTaskComplexDiveFromAttachedEntityAndGetUp()
004f0d21 T CTaskComplexUseClosestFreeScriptedAttractor::ControlSubTask(CPed*)
004f0a99 T CTaskComplexUseClosestFreeScriptedAttractor::CreateNextSubTask(CPed*)
004f0a9d T CTaskComplexUseClosestFreeScriptedAttractor::CreateFirstSubTask(CPed*)
004f3fb1 W CTaskComplexUseClosestFreeScriptedAttractor::Serialize()
004f0a69 T CTaskComplexUseClosestFreeScriptedAttractor::CTaskComplexUseClosestFreeScriptedAttractor(bool)
004f0a69 T CTaskComplexUseClosestFreeScriptedAttractor::CTaskComplexUseClosestFreeScriptedAttractor(bool)
004f0a89 T CTaskComplexUseClosestFreeScriptedAttractor::~CTaskComplexUseClosestFreeScriptedAttractor()
004f0a85 T CTaskComplexUseClosestFreeScriptedAttractor::~CTaskComplexUseClosestFreeScriptedAttractor()
004f0a85 T CTaskComplexUseClosestFreeScriptedAttractor::~CTaskComplexUseClosestFreeScriptedAttractor()
00384605 W CTaskComplexUseClosestFreeScriptedAttractorRun::Serialize()
003845c9 W CTaskComplexUseClosestFreeScriptedAttractorRun::~CTaskComplexUseClosestFreeScriptedAttractorRun()
0051dab1 T CTaskComplexGoToPointUntilCollisionAndStandStill::MakeAbortable(CPed*, int, CEvent const*)
00526c49 W CTaskComplexGoToPointUntilCollisionAndStandStill::~CTaskComplexGoToPointUntilCollisionAndStandStill()
00502599 T CTaskSimpleCarGoToPointNearDoorUntilDoorNotInUse::ProcessPed(CPed*)
00506e9d W CTaskSimpleCarGoToPointNearDoorUntilDoorNotInUse::MakeAbortable(CPed*, int, CEvent const*)
0050247d T CTaskSimpleCarGoToPointNearDoorUntilDoorNotInUse::CTaskSimpleCarGoToPointNearDoorUntilDoorNotInUse(CVehicle*, int, CVector const&, int)
0050247d T CTaskSimpleCarGoToPointNearDoorUntilDoorNotInUse::CTaskSimpleCarGoToPointNearDoorUntilDoorNotInUse(CVehicle*, int, CVector const&, int)
00502539 T CTaskSimpleCarGoToPointNearDoorUntilDoorNotInUse::~CTaskSimpleCarGoToPointNearDoorUntilDoorNotInUse()
00502501 T CTaskSimpleCarGoToPointNearDoorUntilDoorNotInUse::~CTaskSimpleCarGoToPointNearDoorUntilDoorNotInUse()
00502501 T CTaskSimpleCarGoToPointNearDoorUntilDoorNotInUse::~CTaskSimpleCarGoToPointNearDoorUntilDoorNotInUse()
00491429 W CTaskComplexObserveTrafficLightsAndAchieveHeading::CreateTask()
004f31c9 W CTaskComplexObserveTrafficLightsAndAchieveHeading::MakeAbortable(CPed*, int, CEvent const*)
004ecd15 T CTaskComplexObserveTrafficLightsAndAchieveHeading::ControlSubTask(CPed*)
004ecca9 T CTaskComplexObserveTrafficLightsAndAchieveHeading::CreateNextSubTask(CPed*)
004ecce5 T CTaskComplexObserveTrafficLightsAndAchieveHeading::CreateFirstSubTask(CPed*)
004f31e5 W CTaskComplexObserveTrafficLightsAndAchieveHeading::Serialize()
004ecc11 T CTaskComplexObserveTrafficLightsAndAchieveHeading::CTaskComplexObserveTrafficLightsAndAchieveHeading(int, float)
004ecc11 T CTaskComplexObserveTrafficLightsAndAchieveHeading::CTaskComplexObserveTrafficLightsAndAchieveHeading(int, float)
004ecc35 T CTaskComplexObserveTrafficLightsAndAchieveHeading::~CTaskComplexObserveTrafficLightsAndAchieveHeading()
004ecc31 T CTaskComplexObserveTrafficLightsAndAchieveHeading::~CTaskComplexObserveTrafficLightsAndAchieveHeading()
004ecc31 T CTaskComplexObserveTrafficLightsAndAchieveHeading::~CTaskComplexObserveTrafficLightsAndAchieveHeading()
003846b1 W CTaskComplexUseClosestFreeScriptedAttractorSprint::Serialize()
00384675 W CTaskComplexUseClosestFreeScriptedAttractorSprint::~CTaskComplexUseClosestFreeScriptedAttractorSprint()
0056aec3 W CBmx::FindWheelWidth(bool)
0056a409 T CBmx::GetFrameOffset(float&, float&)
00568b85 T CBmx::ProcessControl()
00569869 T CBmx::ProcessBunnyHop()
0056a2b1 T CBmx::LaunchBunnyHopCB(CAnimBlendAssociation*, void*)
0056aebb W CBmx::SetUpWheelColModel(CColModel*)
00569aed T CBmx::ProcessDrivingAnims(CPed*, unsigned char)
0056aeb9 W CBmx::BlowUpCar(CEntity*, unsigned char)
0056aebf W CBmx::BurstTyre(unsigned char, bool)
0056a46d T CBmx::PreRender()
00568d55 T CBmx::ProcessAI(unsigned int&)
005689d5 T CBmx::CBmx(int, unsigned char)
005689d5 T CBmx::CBmx(int, unsigned char)
00568b59 T CBmx::~CBmx()
00568b31 T CBmx::~CBmx()
00568b31 T CBmx::~CBmx()
002d9639 T CBox::Set(CVector const&, CVector const&)
002d9653 T CBox::Recalc()
003bdead T CBug::AppendData(void*, unsigned int)
003be469 T CBug::BeginField(char const*, char const*)
003bdfa3 T CBug::GetMessage()
003be189 T CBug::SetProduct(char const*)
003be0b9 T CBug::SetSummary(char const*, ...)
003be2d9 T CBug::SetVersion(unsigned int)
003be211 T CBug::SetPlatform(unsigned int)
003be031 T CBug::SetSeverity(char const*)
003be3a1 T CBug::SetComponent(unsigned int)
003bdf89 T CBug::ClearBugBuffer()
003bdfa7 T CBug::GetMessageSize()
003be585 T CBug::AddCustomFieldData(void*, unsigned int)
003be539 T CBug::EndCustomFieldData()
003be537 T CBug::BeginCustomFieldData()
003be535 T CBug::EndField()
003bdf09 T CBug::SetField(int, void*, unsigned int)
003bdfab T CBug::SetOwner(char const*)
003d0dcd T CCam::LookBehind()
003c901d T CCam::Process_Fixed(CVector const&, float, float, float)
00463185 T CCam::Process_FlyBy(CVector const&, float, float, float)
003cba5d T CCam::Process_Editor(CVector const&, float, float, float)
003c64d1 T CCam::Process_Rocket(CVector const&, float, float, float, bool)
003e3009 T CCam::IsTargetInWater(CVector const&)
003c879d T CCam::Process_WheelCam(CVector const&, float, float, float)
003e300d T CCam::DoAverageOnVector(CVector const&)
003c9561 T CCam::Process_1stPerson(CVector const&, float, float, float)
003c6b89 T CCam::Process_AimWeapon(CVector const&, float, float, float)
003e3017 T CCam::Process_BehindCar(CVector const&, float, float, float)
003cfbed T CCam::Process_DW_FishCam(bool)
003d5f81 T CCam::RotCamIfInFrontCar(CVector const&, float)
006a9f04 D CCam::CAM_BUMPED_END_TIME
003d09ed T CCam::KeepTrackOfTheSpeed(CVector const&, CVector const&, CVector const&, float const&, float const&, float const&)
003cc91d T CCam::ProcessArrestCamOne()
003e301d T CCam::ProcessArrestCamTwo()
003d4c21 T CCam::ProcessDWBustedCam1(CPed*, bool)
003c9b61 T CCam::ProcessPedsDeadBaby()
003cd525 T CCam::Process_AttachedCam()
003ced55 T CCam::Process_DW_BirdyCam(bool)
006a9f08 D CCam::CAM_BUMPED_DAMP_RATE
006a9f0c D CCam::CAM_BUMPED_MOVE_MULT
003d1f21 T CCam::GetVectorsReadyForRW()
003ce5b1 T CCam::Process_DW_CamManCam(bool)
003cfc01 T CCam::Process_DW_PlaneCam1(bool)
003d0151 T CCam::Process_DW_PlaneCam2(bool)
003d0681 T CCam::Process_DW_PlaneCam3(bool)
003c02a1 T CCam::Process_FollowCar_SA(CVector const&, float, float, float, bool)
003c2da1 T CCam::Process_FollowPed_SA(CVector const&, float, float, float, bool)
003e29f5 T CCam::Finalise_DW_CineyCams(CVector*, CVector*, float, float, float, float)
003d5121 T CCam::GetLookAlongGroundPos(CEntity*, CPed*, CVector&, CVector&)
003c9fc5 T CCam::Process_Cam_TwoPlayer()
003c4e11 T CCam::Process_M16_1stPerson(CVector const&, float, float, float)
003d5279 T CCam::GetLookFromLampPostPos(CEntity*, CPed*, CVector&, CVector&)
003d4f25 T CCam::GetLookOverShoulderPos(CEntity*, CPed*, CVector&, CVector&)
003d2241 T CCam::GetWeaponFirstPersonOn()
003cfbd9 T CCam::Process_DW_DogFightCam(bool)
003c0235 T CCam::Using3rdPersonMouseCam()
006a9f00 D CCam::CAM_BUMPED_SWING_PERIOD
003d6531 T CCam::Get_TwoPlayer_AimVector(CVector&)
003cd8a1 T CCam::Process_DW_HeliChaseCam(bool)
003cc081 T CCam::Process_1rstPersonPedOnPC(CVector const&, float, float, float)
003cf615 T CCam::Process_DW_PlaneSpotterCam(bool)
003c220d T CCam::Process_FollowPedWithMouse(CVector const&, float, float, float)
003e27c1 T CCam::CacheLastSettingsDWCineyCam()
003d2201 T CCam::GetBoatLook_L_R_HeightOffset(float&)
003e2611 T CCam::GetCoreDataForDWCineyCamMode(CEntity**, CVehicle**, CVector*, CVector*, CVector*, CVector*, CVector*, CVector*, float*, CVector*, float*, CColSphere*)
003c92f9 T CCam::Process_SpecialFixedForSyphon(CVector const&, float, float, float)
003e2eb1 T CCam::IsTimeToExitThisDWCineyCamMode(int, CVector*, CVector*, float, bool)
003d5eed T CCam::Process_Cam_TwoPlayer_TestLOSs(CVector)
003d5d05 T CCam::Process_Cam_TwoPlayer_CalcSource(float, CVector*, CVector*, CVector*)
003cb3e1 T CCam::Process_Cam_TwoPlayer_Separate_Cars()
003ca7c9 T CCam::Process_Cam_TwoPlayer_InCarAndShooting()
003cb8b9 T CCam::Process_Cam_TwoPlayer_Separate_Cars_TopDown()
003d2271 T CCam::Init()
003bf301 T CCam::Process()
003d3005 T CCam::LookLeft()
003e1a21 T CCam::DoCamBump(float, float)
003d17ed T CCam::LookRight(bool)
0028c0e1 T CHID::Implements(HIDMapping)
0028c22d T CHID::IsReleased(HIDMapping)
006e000c B CHID::m_pInstance
0028c3b1 T CHID::DrawHelpIcon(char const*, HIDMapping, float, float, float, int, bool)
0028cc75 T CHID::GetInputType()
0028c401 T CHID::GetHelpSprite(char const*, HIDMapping, CVector2D*, CVector2D*)
0028c1b5 T CHID::IsJustPressed(HIDMapping)
00685710 D CHID::m_GamepadType
006e001c B CHID::m_nDeadFrames
0028ccdd W CHID::InternalUpdate()
0028c139 T CHID::IsDoubleTapped(HIDMapping)
006e0020 B CHID::m_MappingPairs
0028c445 T CHID::FlushQueuedText()
0028c385 T CHID::MappingIsAnalog(HIDMapping)
0028c09d T CHID::GetMappingByName(char const*)
0028c269 T CHID::GetMappingWeight(HIDMapping)
0028c46d T CHID::RemoveQueuedText()
0028c349 T CHID::IsPressedNegative(HIDMapping)
0028c30d T CHID::IsPressedPositive(HIDMapping)
0028c2d1 T CHID::IsReleasedNegative(HIDMapping)
0028c295 T CHID::IsReleasedPositive(HIDMapping)
0028c495 T CHID::CheckForInputChange()
0028ccb9 W CHID::InternalDrawHelpIcon(char const*, HIDMapping, float, float, float, int, bool)
006e002c B CHID::currentInstanceIndex
0028ccbb W CHID::InternalGetHelpSprite(char const*, HIDMapping, CVector2D*, CVector2D*)
00685720 D CHID::bAllowKeyboardInstance
0028ccd9 W CHID::InternalFlushQueuedText()
0028cccf W CHID::InternalMappingIsAnalog(HIDMapping)
0028ccd3 W CHID::InternalGetMappingWeight(HIDMapping)
0028ccdb W CHID::InternalRemoveQueuedText()
0028ccb7 W CHID::InternalCacheAnalogValues(unsigned int)
0028cccb W CHID::InternalIsPressedNegative(HIDMapping)
0028ccc7 W CHID::InternalIsPressedPositive(HIDMapping)
0028ccc3 W CHID::InternalIsReleasedNegative(HIDMapping)
0028ccbf W CHID::InternalIsReleasedPositive(HIDMapping)
0028c175 T CHID::Use360ClassicVitalStatsHack()
0028c179 T CHID::Update()
0028c10d T CHID::Replaces(HIDMapping)
0028c1f1 T CHID::IsPressed(HIDMapping, float*)
0028765d T CHID::CHID()
0028cce1 W CHID::~CHID()
0028ccdf W CHID::~CHID()
0046ff39 T CHud::Initialise()
0043709d T CHud::SetMessage(unsigned short*)
00436f7d T CHud::SetZoneName(unsigned short*, unsigned char)
00991f74 B CHud::m_ZoneState
00990c40 B CHud::m_pZoneName
0043806d T CHud::DrawAreaName()
00438b11 T CHud::DrawHelpText()
00436a9d T CHud::ReInitialise()
00990f6c B CHud::m_BigMessage
00991fb4 B CHud::m_LastWanted
00991fc4 B CHud::m_LastWeapon
0043a6a9 T CHud::DrawAfterFade()
0043a859 T CHud::DrawFadeState(DRAW_FADE_STATE, int)
00438d91 T CHud::DrawSubtitles()
004370e5 T CHud::SetBigMessage(unsigned short*, unsigned short)
00990c24 B CHud::m_ItemToFlash
00991fc0 B CHud::m_WantedState
00991fb8 B CHud::m_WantedTimer
00991fd0 B CHud::m_WeaponState
00991fc8 B CHud::m_WeaponTimer
00990c48 B CHud::m_ZoneToPrint
00437201 T CHud::DrawCrossHairs()
00438b49 T CHud::DrawScriptText(unsigned char)
00437ae5 T CHud::DrawVitalStats()
00436fad T CHud::SetHelpMessage(char const*, unsigned short*, bool, bool, bool, unsigned int)
0043708d T CHud::SetVehicleName(unsigned short*)
00991f8c B CHud::m_VehicleState
00991f7c B CHud::m_pVehicleName
00438685 T CHud::DrawVehicleName()
004371d1 T CHud::ResetWastedText()
00991f70 B CHud::m_ZoneFadeTimer
00991f6c B CHud::m_ZoneNameTimer
00990c44 B CHud::m_pLastZoneName
0043a151 T CHud::DrawMissionTitle()
00991fd4 B CHud::m_LastBreathTime
00438aad T CHud::DrawMissionTimers()
00439a35 T CHud::DrawOddJobMessage(unsigned char)
00991fa0 B CHud::m_EnergyLostState
00991f98 B CHud::m_EnergyLostTimer
00991fbc B CHud::m_WantedFadeTimer
00991fcc B CHud::m_WeaponFadeTimer
00991f7a B CHud::bDrawingVitalStats
00991fa4 B CHud::m_LastDisplayScore
00991f88 B CHud::m_VehicleFadeTimer
00991f84 B CHud::m_VehicleNameTimer
00991f80 B CHud::m_pLastVehicleName
00991fb0 B CHud::m_DisplayScoreState
00991fa8 B CHud::m_DisplayScoreTimer
00991f78 B CHud::m_Wants_To_Draw_Hud
00436f29 T CHud::GetYPosBasedOnHealth(unsigned char, float, signed char)
00991f94 B CHud::m_LastTimeEnergyLost
00991f9c B CHud::m_EnergyLostFadeTimer
00991f90 B CHud::m_pVehicleNameToPrint
00436d19 T CHud::GetRidOfAllHudMessages(unsigned char)
004397b5 T CHud::DrawBustedWastedMessage()
00991fd8 B CHud::bScriptDontDisplayRadar
00991fac B CHud::m_DisplayScoreFadeTimer
004392f9 T CHud::DrawSuccessFailedMessage()
0043701d T CHud::SetHelpMessageStatUpdate(unsigned char, unsigned short, float, float)
00991f79 B CHud::m_Wants_To_Draw_3dMarkers
00991fdb B CHud::bScriptDontDisplayAreaName
00991fda B CHud::bScriptDontDisplayVehicleName
00991fd9 B CHud::bScriptForceDisplayWithCounters
0043a44d T CHud::Draw()
00990c28 B CHud::Sprites
00436a51 T CHud::Shutdown()
00437b0d T CHud::DrawRadar()
00990c4c B CHud::m_Message
003fcb01 T CPad::EditString(char*, int)
003f7ff1 T CPad::Initialise()
003f89fd T CPad::StartShake(short, unsigned char, unsigned int)
003f8b51 T CPad::UpdatePads()
003fbbf9 T CPad::GetBunnyHop()
003fa319 T CPad::GetLookLeft(bool)
003f9a73 T CPad::StopShaking(short)
003f841d T CPad::UpdateMouse()
003fc2bd T CPad::CinemaCamera()
003fc93d T CPad::DebugFreeAim()
003fbd11 T CPad::DiveJustDown()
003fba9d T CPad::DuckJustDown(CPed*)
003fbb0d T CPad::GetAutoClimb()
003fa7e1 T CPad::GetHandBrake()
003fa3dd T CPad::GetLookRight(bool)
003fa6a1 T CPad::HornJustDown()
003fbcad T CPad::JumpJustDown()
003fc0f1 T CPad::SniperZoomIn()
00959ad8 B CPad::vecLastMouse
003fa77f T CPad::FlareJustDown()
003fbbb9 T CPad::GetAbortClimb()
003fb351 T CPad::GetAccelerate()
003fa73f T CPad::GetNitroFired()
003fa4a1 T CPad::GetTurretLeft()
003fc1d9 T CPad::SniperZoomOut()
00959ad0 B CPad::vecMouseDelta
003fa763 T CPad::CarGunJustDown()
003f9925 T CPad::CheckPointSave()
003f993d T CPad::GetCarGunFired(bool, bool)
003faa31 T CPad::GetExitVehicle()
003faff1 T CPad::GetMeleeAttack()
003fa4b7 T CPad::GetTurretRight()
003f9849 T CPad::ProcessStoppie()
003f96cd T CPad::ProcessWheelie(float)
003fbe65 T CPad::SprintJustDown()
003faeb5 T CPad::WeaponJustDown(CPed*, bool, bool)
003fc781 T CPad::AimWeaponUpDown(CPed*, bool*)
003fbc3b T CPad::GetBunnyHopDown()
003f9e21 T CPad::GetCarGunUpDown(bool, CAutomobile*, float, bool)
003fa4cd T CPad::GetJetpackHover()
003fa139 T CPad::GetLeftAnalogue(CVector2D*)
003f9a99 T CPad::GetSteeringMode()
003f9a71 T CPad::StopPadsShaking()
00959acd B CPad::m_bDebugCamPCOn
003fab39 T CPad::DropItemJustDown()
003f9a6d T CPad::FixPadsAfterSave()
003fb77d T CPad::GetExitTargeting()
003fa729 T CPad::GetHydraulicJump()
003fa299 T CPad::GetPedWalkUpDown()
003fa193 T CPad::GetRightAnalogue(CVector2D*)
003fc3cd T CPad::LookAroundUpDown()
003fbd59 T CPad::SwimJumpJustDown()
003f8365 T CPad::ClearMouseHistory()
003fb4ed T CPad::GetEnterTargeting()
003fcbf5 T CPad::GetEscapeJustDown()
003f9d25 T CPad::GetSteeringUpDown()
003f9a75 T CPad::IsFlyingRCVehicle()
003fb44f T CPad::LastStationJustUp()
003fb43b T CPad::NextStationJustUp()
003fc481 T CPad::AimWeaponLeftRight(CPed*, bool*)
003fa071 T CPad::GetCarGunLeftRight(bool, bool)
003f89f9 T CPad::SetDrunkInputDelay(int)
007a08c4 B CPad::m_fLastCheatScroll
003faa7d T CPad::ExitVehicleJustDown(bool, CVehicle*, bool, CVector const&)
003fca35 T CPad::GetGroupControlBack(bool, bool)
003fa54b T CPad::GetLookBehindForCar()
003fa57f T CPad::GetLookBehindForPed()
003fa219 T CPad::GetPedWalkLeftRight()
003fc2d5 T CPad::LookAroundLeftRight()
003fb00d T CPad::MeleeAttackJustDown()
003f8a8d T CPad::StartShake_Distance(short, unsigned char, float, float, float)
003f8357 T CPad::ClearKeyBoardHistory()
003fa793 T CPad::CraneReleaseJustDown()
003fcb05 T CPad::EditCodesForControls(int*, int)
003fbf41 T CPad::GetDisplayVitalStats(CPed*)
003fc605 T CPad::GetFreeAimAssistance(CPed*)
003f9b55 T CPad::GetSteeringLeftRight()
003fcbf1 T CPad::UpdatePadsTillStable()
00959ace B CPad::bSniperAllowMovement
00959acc B CPad::m_bMapPadOneToPadTwo
003fbf91 T CPad::CollectPickupJustDown()
003fb401 T CPad::GetAccelerateJustDown()
007a08bc B CPad::m_fLastCarCheatScroll
003fc985 T CPad::ConversationNoJustDown()
003fbf01 T CPad::GetDisplayScreenRecord()
003fc9c9 T CPad::GetGroupControlForward(bool, bool)
003f96c9 T CPad::ProcessPCSpecificStuff()
003fae29 T CPad::WeaponUsesAttackButton(CPed*)
003fb465 T CPad::WillBulletHitSomething(CPed*)
003fc941 T CPad::ConversationYesJustDown()
003fb239 T CPad::CycleWeaponLeftJustDown()
00959af4 B CPad::NewMouseControllerState
00959b08 B CPad::OldMouseControllerState
003fb95d T CPad::ShiftTargetLeftJustDown()
003fb2ad T CPad::CycleWeaponRightJustDown()
003fcab5 T CPad::GroupControlBackJustDown(bool)
003fb9cd T CPad::ShiftTargetRightJustDown()
006aad0e D CPad::bSniperAimWithRightStick
007a08c0 B CPad::m_fLastMissionSkipScroll
003fae71 T CPad::WeaponUsesTargetingButton()
003fbfcb T CPad::GetForceCameraBehindPlayer()
00959ae0 B CPad::PCTempMouseControllerState
003fb431 T CPad::CycleCameraModeDownJustDown()
003fca79 T CPad::GroupControlForwardJustDown(bool)
003f8541 T CPad::ReconcileTwoControllersInput(CControllerState const&, CControllerState const&)
003f8181 T CPad::Clear(bool, bool)
003f8cf5 T CPad::GetPad(int)
003f8d09 T CPad::Update(short)
003fba3d T CPad::GetDuck()
003fa619 T CPad::GetHorn(bool)
003fbc59 T CPad::GetJump()
003fa7af T CPad::UseBomb()
003fb321 T CPad::GetBlock()
003fa9ad T CPad::GetBrake()
003fbdb1 T CPad::GetSprint(int)
003fb705 T CPad::GetTarget(bool)
003faba9 T CPad::GetWeapon(CPed*, bool)
003fa7c5 T CPad::UseRocket()
004a54dd T CPed::DoGunFlash(int, bool)
0049f589 T CPed::GiveWeapon(eWeaponType, unsigned int, bool)
0049fa19 T CPed::Initialise()
004a12f7 T CPed::SetAimFlag(CEntity*)
004a125b T CPed::SetAimFlag(float)
004a52d9 T CPed::ClearWeapon(eWeaponType)
004a11c9 T CPed::SetLookFlag(CEntity*, bool, bool)
004a114d T CPed::SetLookFlag(float, bool, bool)
004a0c39 T CPed::SetMoveAnim()
004a1ea5 T CPed::SetPedState(ePedState)
0049fc4d T CPed::SetPedStats(ePedStats)
004a4c89 T CPed::CanBeDeleted()
0049fc8d T CPed::CanSeeEntity(CEntity*, float)
004a1031 T CPed::ClearAimFlag()
0049f837 T CPed::ClearWeapons()
004a4381 T CPed::DoFootLanded(bool, unsigned char)
00450db5 W CPed::FinishJumpCB(CAnimBlendAssociation*, void*)
004a4f55 T CPed::PutOnGoggles()
004a7135 T CPed::SetLookTimer(unsigned int)
004a0c31 T CPed::SetMoveState(eMoveState)
004a4c0d T CPed::CanBeArrested()
004a1081 T CPed::ClearLookFlag()
004ac96d T CPed::GetPedTalking()
004a5179 T CPed::GetWeaponSlot(eWeaponType)
004a2de5 T CPed::PlayFootSteps()
0049fad5 T CPed::SetModelIndex(unsigned int)
00410645 T CPed::SetupLighting()
004a4ce9 T CPed::AddWeaponModel(int)
004a4bed T CPed::CanSetPedState()
0049fc87 T CPed::DeleteRwObject()
004a7e71 T CPed::GetHoldingTask()
004a5653 T CPed::GetWeaponSkill(eWeaponType)
004a12e3 T CPed::GetWeaponSkill()
004a18d1 T CPed::IsPedInControl()
004a4bbf T CPed::IsPedShootable()
004a7371 T CPed::IsPointerValid()
004ad139 T CPed::KillPedWithCar(CVehicle*, float, bool)
004a2541 T CPed::ProcessControl()
004ad00d T CPed::RemoveBodyPart(int, signed char)
004106f5 T CPed::RemoveLighting(bool)
004a56e7 T CPed::SetWeaponSkill(eWeaponType, signed char)
004a503d T CPed::TakeOffGoggles()
004a1999 T CPed::UpdatePosition()
004a4ead T CPed::AddGogglesModel(int, bool*)
004a7cb5 T CPed::AttachPedToBike(CEntity*, CVector, unsigned short, float, float, eWeaponType)
004ac97d T CPed::EnablePedSpeech()
004a4b0d T CPed::GetBonePosition(RwV3d&, unsigned int, bool)
004a1f01 T CPed::ProcessBuoyancy()
004a7861 T CPed::SetRadioStation()
004ac975 T CPed::DisablePedSpeech(short)
004a82e1 T CPed::GetWalkAnimSpeed()
0049fa29 T CPed::SetCharCreatedBy(unsigned char)
004a521d T CPed::SetCurrentWeapon(eWeaponType)
004a5189 T CPed::SetCurrentWeapon(int)
004a5575 T CPed::SetGunFlashAlpha(bool)
004a0f6d T CPed::SetMoveAnimSpeed(CAnimBlendAssociation*)
004a78bd T CPed::AttachPedToEntity(CEntity*, CVector, unsigned short, float, eWeaponType)
004a4305 T CPed::GetLocalDirection(CVector2D const&)
004a8569 T CPed::GetPedStateString()
004a5097 T CPed::GiveDelayedWeapon(eWeaponType, unsigned int)
004ad0c5 T CPed::IsPedHeadAbovePos(float)
0049f819 T CPed::ReleaseCoverPoint()
004ade25 T CPed::RemoveWeaponAnims(int, float)
004a4df5 T CPed::RemoveWeaponModel(int)
004a4bcd T CPed::UseGroundColModel()
00320dd1 T CPed::CreateDeadPedMoney()
004a56f5 T CPed::GetBikeRidingSkill()
0031d7b5 T CPed::PedCanPickUpPickUp()
004a5981 T CPed::PreRenderAfterTest()
004a4ef9 T CPed::RemoveGogglesModel()
004a562d T CPed::ResetGunFlashAlpha()
004a7757 T CPed::RestoreHeadingRate()
004ad041 T CPed::DoesLOSBulletHitPed(CColPoint&)
004a829d T CPed::IsPlayingHandSignal()
004a7a49 T CPed::PositionAttachedPed()
004a73b1 T CPed::SetPedPositionInCar()
004a1105 T CPed::StopNonPartialAnims()
004a8341 T CPed::UseFreeAimMagnetize()
004a1365 T CPed::CalculateNewVelocity()
004a7cf5 T CPed::DettachPedFromEntity()
004a2d49 T CPed::RequestDelayedWeapon()
004a7763 T CPed::RestoreHeadingRateCB(CAnimBlendAssociation*, void*)
004a5741 T CPed::ShoulderBoneRotation(RpClump*)
004ad03f T CPed::SpawnFlyingComponent(int, signed char)
004a7f43 T CPed::GiveObjectToPedToHold(int, unsigned char)
004a8345 T CPed::SetWeaponLockOnTarget(CEntity*)
004a82b7 T CPed::StopPlayingHandSignal()
006af4bc D CPed::m_sGunFlashBlendStart
004ac995 T CPed::CanPedHoldConversation()
0049fc65 T CPed::CanUseTorsoWhenLooking()
004a09a9 T CPed::OurPedCanSeeThisEntity(CEntity*, bool)
004a339d T CPed::ProcessEntityCollision(CEntity*, CColPoint*)
004a1129 T CPed::RestartNonPartialAnims()
006af4b8 D CPed::nFarBlockedLosWaitTime
004a1dc5 T CPed::CalculateNewOrientation()
004a4c2d T CPed::CanStrafeOrMouseControl()
0055dbd9 T CPed::DeadPedMakesTyresBloody()
004a533f T CPed::DoWeHaveWeaponAvailable(eWeaponType)
004a83f1 T CPed::GetHeadAndFootPositions(CVector&, CVector&, bool)
006af4be D CPed::m_sGunFlashBlendOutRate
00321159 T CPed::CreateDeadPedPickupCoors(float*, float*, float*)
004a804f T CPed::GiveWeaponAtStartOfFight()
0055dd49 T CPed::MakeTyresMuddySectorList(CPtrList&)
0049f8c7 T CPed::UpdateStatLeavingVehicle()
006af4b4 D CPed::nCloseBlockedLosWaitTime
004a4cd5 T CPed::CanBeDeletedEvenInVehicle()
004a133b T CPed::CanWeRunAndFireWithWeapon()
004a8175 T CPed::GiveWeaponWhenJoiningGang()
00300ddd T CPed::PedIsReadyForConversation(bool)
0049fd71 T CPed::PositionPedOutOfCollision(int, CVehicle*, bool)
004a7e6f T CPed::UpdateStatEnteringVehicle()
00320f71 T CPed::CreateDeadPedWeaponPickups()
004a24a9 T CPed::GetTransformedBonePosition(RwV3d&, unsigned int, bool)
0049fa9d T CPed::SetPedDefaultDecisionMaker()
00302ea1 T CPed::PedIsInvolvedInConversation()
004a077d T CPed::PositionAnyPedOutOfCollision()
004a7ead T CPed::GetEntityThatThisPedIsHolding()
004a50f3 T CPed::DropEntityThatThisPedIsHolding(unsigned char)
004ac98d T CPed::EnablePedSpeechForScriptSpeech()
004a7771 T CPed::FlagToDestroyWhenNextProcessed()
004a6c9d T CPed::SpecialEntityPreCollisionStuff(CPhysical*, bool, bool&, bool&, bool&, bool&)
004ac985 T CPed::DisablePedSpeechForScriptSpeech(short)
004a549f T CPed::RemoveWeaponForScriptedCutscene()
004a536d T CPed::RemoveWeaponWhenEnteringVehicle(int)
004a5443 T CPed::ReplaceWeaponWhenExitingVehicle()
004a6e59 T CPed::SpecialEntityCalcCollisionSteps(bool&, bool&)
004a54b7 T CPed::ReplaceWeaponForScriptedCutscene()
004a7f03 T CPed::CanThrowEntityThatThisPedIsHolding()
004a18f5 T CPed::WorkOutHeadingForMovingFirstPerson(float)
004ac9bd T CPed::Say(unsigned short, unsigned int, float, unsigned char, unsigned char, unsigned char)
00485139 T CPed::Load()
004a7151 T CPed::Look()
00484fd5 T CPed::Save()
004a7e37 T CPed::Dress()
004a6965 T CPed::Render()
0049fc85 T CPed::Update()
004a5283 T CPed::SetAmmo(eWeaponType, unsigned int)
004a6f7d T CPed::SetIdle()
004a7071 T CPed::SetLook(CEntity*)
004a6fb1 T CPed::SetLook(float)
004a7dfd T CPed::Undress(char*)
004a1e51 T CPed::ClearAll()
004a0ab1 T CPed::SortPeds(CPed**, int, int)
004a7231 T CPed::Teleport(CVector, unsigned char)
004a7155 T CPed::TurnBody()
004a1259 T CPed::ClearLook()
004a5235 T CPed::GrantAmmo(eWeaponType, unsigned int)
004a5973 T CPed::PreRender()
004ac99d T CPed::SayScript(int, unsigned char, unsigned char, unsigned char)
0049f0b1 T CPed::CPed(unsigned int)
0049f0b1 T CPed::CPed(unsigned int)
0049f8c9 T CPed::~CPed()
0049f6a5 T CPed::~CPed()
0049f6a5 T CPed::~CPed()
0049f901 T CPed::operator delete(void*)
0049f9e9 T CPed::operator delete(void*, int)
0049f931 T CPed::operator new(unsigned int)
0049f995 T CPed::operator new(unsigned int, int)
003657dd T Fx_c::AddWheelMud(CVehicle*, CVector, unsigned char, float)
00364689 T Fx_c::AddTyreBurst(CVector&, CVector&)
00365df5 T Fx_c::AddWheelDust(CVehicle*, CVector, unsigned char, float)
00365a65 T Fx_c::AddWheelSand(CVehicle*, CVector, unsigned char, float)
00365df1 T Fx_c::GetFxQuality()
00366761 T Fx_c::SetFxQuality(FxQuality_e)
003652d9 T Fx_c::AddWheelGrass(CVehicle*, CVector, unsigned char, float)
00364f69 T Fx_c::AddWheelSpray(CVehicle*, CVector, unsigned char, unsigned char, float)
00364a5d T Fx_c::AddPunchImpact(CVector&, CVector&, int)
0036555d T Fx_c::AddWheelGravel(CVehicle*, CVector, unsigned char, float)
00366765 T Fx_c::CreateEntityFx(CEntity*, char*, RwV3d*, RwMatrixTag*)
00366219 T Fx_c::TriggerGunshot(CEntity*, CVector&, CVector&, bool)
003647bd T Fx_c::AddBulletImpact(CVector&, CVector&, int, int, float)
003667c5 T Fx_c::DestroyEntityFx(CEntity*)
003664e9 T Fx_c::TriggerTankFire(CVector&, CVector&)
003663c5 T Fx_c::CreateMatFromVec(RwMatrixTag*, CVector*, CVector*)
00363d01 T Fx_c::ExitEntitySystems()
00363d45 T Fx_c::ExitStaticSystems()
00363ca1 T Fx_c::InitEntitySystems()
00363a79 T Fx_c::InitStaticSystems()
003666d1 T Fx_c::TriggerFootSplash(CVector&)
003665ad T Fx_c::TriggerWaterSplash(CVector&)
00366641 T Fx_c::TriggerBulletSplash(CVector&)
00366189 T Fx_c::TriggerWaterHydrant(CVector&)
00363ca5 T Fx_c::Exit()
00363a1d T Fx_c::Init()
00363e01 T Fx_c::Reset()
00363df1 T Fx_c::Render(RwCamera*, unsigned char)
00363de1 T Fx_c::Update(RwCamera*, float)
0036418d T Fx_c::AddWood(CVector&, CVector&, int, float)
00363e1d T Fx_c::AddBlood(CVector&, CVector&, int, float)
00364d7d T Fx_c::AddGlass(CVector&, RwRGBA&, float, int)
00364b4d T Fx_c::AddDebris(CVector&, RwRGBA&, float, int)
00364431 T Fx_c::AddSparks(CVector&, CVector&, float, int, CVector, unsigned char, float, float)
003639f9 T Fx_c::Fx_c()
003639f9 T Fx_c::Fx_c()
00363a0b T Fx_c::~Fx_c()
00363a0b T Fx_c::~Fx_c()
00494789 W CTaskComplexGoToPointAndStandStillAndAchieveHeading::CreateTask()
0051e1e5 T CTaskComplexGoToPointAndStandStillAndAchieveHeading::CreateSubTask(int)
0051e309 T CTaskComplexGoToPointAndStandStillAndAchieveHeading::ControlSubTask(CPed*)
0051e1b1 T CTaskComplexGoToPointAndStandStillAndAchieveHeading::CreateNextSubTask(CPed*)
0051e2a1 T CTaskComplexGoToPointAndStandStillAndAchieveHeading::CreateFirstSubTask(CPed*)
00527ad1 W CTaskComplexGoToPointAndStandStillAndAchieveHeading::Serialize()
0051e141 T CTaskComplexGoToPointAndStandStillAndAchieveHeading::CTaskComplexGoToPointAndStandStillAndAchieveHeading(int, CVector const&, float, float, float, float)
0051e141 T CTaskComplexGoToPointAndStandStillAndAchieveHeading::CTaskComplexGoToPointAndStandStillAndAchieveHeading(int, CVector const&, float, float, float, float)
0051e1a1 T CTaskComplexGoToPointAndStandStillAndAchieveHeading::~CTaskComplexGoToPointAndStandStillAndAchieveHeading()
0051e19d T CTaskComplexGoToPointAndStandStillAndAchieveHeading::~CTaskComplexGoToPointAndStandStillAndAchieveHeading()
0051e19d T CTaskComplexGoToPointAndStandStillAndAchieveHeading::~CTaskComplexGoToPointAndStandStillAndAchieveHeading()
0056745f T CBike::PlayCarHorn()
00561525 T CBike::KnockOffRider(eWeaponType, unsigned char, CPed*, bool)
005607b9 T CBike::SetModelIndex(unsigned int)
005611b9 T CBike::VehicleDamage(float, unsigned short, CEntity*, CVector*, CVector*, eWeaponType)
00568979 T CBike::FindWheelWidth(bool)
005683f9 T CBike::FixHandsToBars(CPed*)
00561a91 T CBike::ProcessControl()
005689b1 W CBike::GetRideAnimData()
0056156d T CBike::ProcessBuoyancy()
00568985 W CBike::ProcessOpenDoor(CPed*, unsigned int, unsigned int, unsigned int, float)
0056549d T CBike::ResetSuspension()
005607eb T CBike::SetupModelNodes()
00567915 T CBike::ProcessRiderAnims(CPed*, CVehicle*, CRideAnimData*, tBikeHandlingData*, short)
0056155d T CBike::ReduceHornCounter()
00561529 T CBike::SetRemoveAnimFlags(CPed*)
00566c41 T CBike::SetUpWheelColModel(CColModel*)
005660e5 T CBike::CalculateLeanMatrix()
00560d1d T CBike::DamageKnockOffRider(CVehicle*, float, unsigned short, CEntity*, CVector&, CVector&)
005689c7 W CBike::GetNumContactWheels()
00567505 T CBike::PlaceOnRoadProperly()
005652fd T CBike::PlayHornIfNecessary()
005678e1 T CBike::ProcessDrivingAnims(CPed*, unsigned char)
00566c05 T CBike::RemoveRefsToVehicle(CEntity*)
00566621 T CBike::ProcessControlInputs(unsigned char)
0056745d T CBike::SetupDamageAfterLoad()
00560811 T CBike::SetupSuspensionLines()
00566af9 T CBike::GetAllWheelsOffGround()
00565045 T CBike::DoSoftGroundResistance(unsigned int&)
00567753 T CBike::IsRoomForPedToLeaveCar(unsigned int, CVector*)
00566245 T CBike::ProcessEntityCollision(CEntity*, CColPoint*)
00560ce5 T CBike::GetComponentWorldPosition(int, CVector&)
005670b1 T CBike::DoBurstAndSoftGroundRatios()
0056530f T CBike::ProcessControlCollisionCheck(bool)
00560d1b T CBike::dmgDrawCarCollidingParticles(CVector const&, float, eWeaponType)
00567759 T CBike::GetCorrectedWorldDoorPosition(CVector&, CVector, CVector)
0056743d T CBike::Fix()
005661e5 T CBike::Render()
005653d5 T CBike::Teleport(CVector, unsigned char)
00566b09 T CBike::BlowUpCar(CEntity*, unsigned char)
00566dd1 T CBike::BurstTyre(unsigned char, bool)
00566b07 T CBike::DebugCode()
005654c9 T CBike::PreRender()
00564a65 T CBike::ProcessAI(unsigned int&)
00560455 T CBike::CBike(int, unsigned char)
00560455 T CBike::CBike(int, unsigned char)
0056077d T CBike::~CBike()
00560745 T CBike::~CBike()
00560745 T CBike::~CBike()
0056cb89 T CBoat::AddWakePoint(CVector)
0056ccdd T CBoat::FillBoatList()
0056b201 T CBoat::SetModelIndex(unsigned int)
006b059c D CBoat::WAKE_LIFETIME
0056bec1 T CBoat::ProcessControl()
0056c679 T CBoat::PruneWakeTrail()
006b0594 D CBoat::MAX_WAKE_LENGTH
0056d35f W CBoat::ProcessOpenDoor(CPed*, unsigned int, unsigned int, unsigned int, float)
0056b231 T CBoat::SetupModelNodes()
006b0598 D CBoat::MIN_WAKE_INTERVAL
0056c765 T CBoat::DisplayHandlingData()
0056c7f5 T CBoat::ModifyHandlingValue(bool const&)
0056bcb9 T CBoat::ProcessControlInputs(unsigned char)
0056cf95 T CBoat::IsSectorAffectedByWake(CVector2D, float, CBoat**)
0056d0a5 T CBoat::IsVertexAffectedByWake(CVector, CBoat*, short, bool)
0056b255 T CBoat::GetComponentWorldPosition(int, CVector&)
00a02580 B CBoat::apFrameWakeGeneratingBoats
0056d24d T CBoat::CheckForSkippingCalculations()
0056b761 T CBoat::Render()
0056c6c1 T CBoat::Teleport(CVector, unsigned char)
0056c825 T CBoat::BlowUpCar(CEntity*, unsigned char)
0056be31 T CBoat::DebugCode()
0056b279 T CBoat::PreRender()
0056aedd T CBoat::CBoat(int, unsigned char)
0056aedd T CBoat::CBoat(int, unsigned char)
0056b1a5 T CBoat::~CBoat()
0056b14d T CBoat::~CBoat()
0056b14d T CBoat::~CBoat()
0054d5fb T CData::Load(unsigned int, unsigned int, unsigned int*, unsigned char)
0054d631 T CData::Unload()
004d3ba3 T CDate::PopulateDateFields(char const&, char const&, char const&, char const&, char const&, short)
004d3ad5 T CDate::CDate()
004d3ad5 T CDate::CDate()
0056f0e9 T CDoor::ProcessImpact(CVehicle*, CVector&, CVector&, CVector&)
006b05c8 D CDoor::DOOR_SPEED_MAX_CAPPED
0056f29d T CDoor::Open(float)
0056ec99 T CDoor::Process(CVehicle*, CVector&, CVector&, CVector&)
00a26a88 B CDraw::ms_fFarClipZ
00a26a84 B CDraw::ms_fNearClipZ
00a26a90 B CDraw::ms_fAspectRatio
00a26a8c B CDraw::ms_fLODDistance
005a623d T CDraw::CalculateAspectRatio()
00a26a94 B CDraw::Drawn
005a61f5 T CDraw::SetFOV(float, bool)
00a26a9c B CDraw::FadeRed
006b1cb8 D CDraw::ms_fFOV
00a26a9e B CDraw::FadeBlue
00a26a98 B CDraw::NotDrawn
00a26a9d B CDraw::FadeGreen
00a26a9f B CDraw::FadeValue
003f1285 T CFire::Extinguish()
003f10e1 T CFire::Initialise()
003f1b09 T CFire::ProcessFire()
003f2869 T CFire::CreateFxSysForStrength(RwV3d*, RwMatrixTag*)
003f10b1 T CFire::CFire()
003f10b1 T CFire::CFire()
003f1111 T CFire::~CFire()
003f1111 T CFire::~CFire()
0046fd8d T CFont::Initialise()
005a974d T CFont::ParseToken(unsigned short*, CRGBA&, unsigned char, char*)
005ab365 T CFont::SetJustify(unsigned char)
005aa405 T CFont::GetTextRect(CRect*, float, float, unsigned short*)
005aa201 T CFont::PrintString(float, float, unsigned short*)
00a297f4 B CFont::RenderState
005a827d T CFont::AddEFIGSFont()
005aaed5 T CFont::GetNextSpace(unsigned short*)
005a8a75 T CFont::InitPerFrame()
005a9a29 T CFont::RenderString(float, float, unsigned short*, unsigned short*, float)
005ab279 T CFont::SetAlphaFade(float)
005ab289 T CFont::SetDropColor(CRGBA)
005ab1bd T CFont::SetFontStyle(unsigned char)
005a9725 T CFont::ComputeHeight(float)
005ab331 T CFont::SetBackground(unsigned char, unsigned char)
005ab259 T CFont::SetCentreSize(float)
005aa1f1 T CFont::GetNumberLines(float, float, unsigned short*)
005aabed T CFont::GetStringWidth(unsigned short*, unsigned char, unsigned char)
005ab091 T CFont::GetStringWidth(unsigned short*, unsigned char, unsigned char, unsigned char)
005a878d T CFont::LoadFontValues()
005ab375 T CFont::SetOrientation(unsigned char)
005ab159 T CFont::character_code(unsigned char)
005ab321 T CFont::SetProportional(unsigned char)
005a8501 T CFont::GetCharacterSize(unsigned short, bool)
005a9121 T CFont::RenderFontBuffer()
005ab19d T CFont::SetSlantRefPoint(float, float)
005a82f5 T CFont::AddRussianTexture()
005a8119 T CFont::AddJapaneseTexture()
005a81d9 T CFont::AddStandardTexture()
005ab341 T CFont::SetBackgroundColor(CRGBA)
00a3ebb7 B CFont::UsingEFIGSLanguage
005ab269 T CFont::SetRightJustifyWrap(float)
00a3ebb6 B CFont::UsingKoreanLanguage
005a8659 T CFont::FindSubFontCharacter(unsigned short, unsigned char)
005aa525 T CFont::ProcessCurrentString(unsigned char, float, float, unsigned short*)
00a3ebb5 B CFont::UsingRussianLanguage
005a80e1 T CFont::ClearSpecialLanguages()
005aa151 T CFont::PrintStringFromBottom(float, float, unsigned short*)
005a8add T CFont::SetDropShadowPosition(signed char)
00a3ebb4 B CFont::UsingJapaneseLanguage
005aa519 T CFont::ProcessStringToDisplay(float, float, unsigned short*)
005ab109 T CFont::FilterOutTokensFromString(unsigned short*)
005a877b T CFont::RemapCharacterWithoutGraphic(unsigned short)
00a2986c B CFont::Size
00a29824 B CFont::Sprite
00a297b4 B CFont::Details
00a297b0 B CFont::NewLine
005ab2ed T CFont::SetEdge(signed char)
005ab039 T CFont::SetColor(CRGBA)
005ab179 T CFont::SetScale(float)
005ab1ad T CFont::SetSlant(float)
005ab249 T CFont::SetWrapx(float)
005a8a0d T CFont::Shutdown()
005a90d9 T CFont::GetHeight(bool)
00a29830 B CFont::PS2Sprite
00a297b1 B CFont::PS2Symbol
005a8af9 T CFont::PrintChar(float, float, unsigned short)
003f37a5 T CGame::Initialise(char const*)
003f3c55 T CGame::ReloadIPLs()
003f3da5 T CGame::TidyUpMemory(bool, bool)
003f376d T CGame::FinalShutdown()
00959574 B CGame::bMissionPackGame
009595ac B CGame::m_pWorkingMatrix1
009595b0 B CGame::m_pWorkingMatrix2
003f3c59 T CGame::ShutDownForRestart()
003f36a9 T CGame::ShutdownRenderWare()
003f46cd T CGame::DrasticTidyUpMemory(bool)
003f470d T CGame::ProcessTidyUpMemory()
0046f571 T CGame::InitialiseRenderWare()
003f3685 T CGame::InitialiseOnceBeforeRW()
003f489d T CGame::CanSeeWaterFromCurrArea()
003f3e3d T CGame::InitialiseWhenRestarting()
003f4885 T CGame::CanSeeOutSideFromCurrArea()
00470071 T CGame::InitialiseCoreDataAfterRW()
003f3a65 T CGame::ReInitGameObjectVariables()
00470021 T CGame::InitialiseEssentialsAfterRW()
003f4459 T CGame::GenerateTempPedAtStartOfNetworkGame()
00471d6d T CGame::Init1(char const*)
00472f29 T CGame::Init2(char const*)
004731a9 T CGame::Init3(char const*)
003f4001 T CGame::Process()
003f3845 T CGame::Shutdown()
00959580 B CGame::aDatFile
0095957c B CGame::currArea
00959578 B CGame::currLevel
00572ebd T CHeli::UpdateHelis()
005732d1 T CHeli::GenerateHeli(CPed*, bool)
00571be9 T CHeli::SendDownSwat()
005712a9 T CHeli::ProcessControl()
00573741 T CHeli::SearchLightCone(int, CVector, CVector, float, float, unsigned char, unsigned char, CVector*, CVector*, CVector*, bool, float, float, float, float)
00a12ce4 B CHeli::HeliSearchLights
00574525 T CHeli::SwitchPoliceHelis(bool)
00572cc1 T CHeli::AddHeliSearchLight(CVector const&, CVector const&, float, float, unsigned int, unsigned char, unsigned char)
00574535 W CHeli::SetUpWheelColModel(CColModel*)
00a12e1c B CHeli::bHeliControlsCheat
00574159 T CHeli::Pre_SearchLightCone()
00573f71 T CHeli::TestSniperCollision(CVector*, CVector*)
006b1228 D CHeli::bPoliceHelisAllowed
00a12e14 B CHeli::NumberOfSearchLights
005741b1 T CHeli::Post_SearchLightCone()
00571f51 T CHeli::ProcessControlInputs(unsigned char)
00572e4d T CHeli::SetupDamageAfterLoad()
00572395 T CHeli::ProcessFlyingCarStuff()
005736a1 T CHeli::RenderAllHeliSearchLights()
00a12e18 B CHeli::TestForNewRandomHelisTimer
00571f09 T CHeli::FindSwatPositionRelativeToHeli(int)
00572e31 T CHeli::Fix()
00572d2d T CHeli::Render()
00a12cdc B CHeli::pHelis
005741f9 T CHeli::BlowUpCar(CEntity*, unsigned char)
00574539 W CHeli::BurstTyre(unsigned char, bool)
00572e5d T CHeli::InitHelis()
00572875 T CHeli::PreRender()
005710c1 T CHeli::CHeli(int, unsigned char)
005710c1 T CHeli::CHeli(int, unsigned char)
00571299 T CHeli::~CHeli()
0057120d T CHeli::~CHeli()
0057120d T CHeli::~CHeli()
0045ce81 W CPool<COctTree, COctTree>::~CPool()
005a208d T CRGBA::CRGBA(unsigned char, unsigned char, unsigned char, unsigned char)
005a208d T CRGBA::CRGBA(unsigned char, unsigned char, unsigned char, unsigned char)
00415081 T CRope::PickUpObject(CEntity*)
00414efd T CRope::DoControlsApply()
00414739 T CRope::UpdateWeightInRope(CVector, float, CVector*)
00414f51 T CRope::ReleasePickedUpObject()
0041468d T CRope::CreateHookObjectForRope()
0041410d T CRope::Remove()
00413ecd T CRope::Render()
00412851 T CRope::Update()
004856f5 T CTask::CreateTask()
004d6a41 T CTask::IsGoToTask(CTask const*)
004d69f1 T CTask::IsTaskPtr(void*)
0048ff31 T CTask::Serialize()
0030778d W CTask::StopTimer(CEvent const*)
004d69d9 T CTask::CTask()
004d69ef T CTask::~CTask()
004d69ed T CTask::~CTask()
004d69ed T CTask::~CTask()
004d6ad1 T CTask::operator delete(void*)
004d6a71 T CTask::operator new(unsigned int)
0054d691 T CText::GetUpperCase(unsigned short)
0054df19 T CText::LoadMissionText(char*)
0054d81d T CText::ReadChunkHeader(ChunkHeader*, unsigned int, unsigned int*, unsigned char)
0054dd25 T CText::LoadMissionPackText()
0054df0d T CText::GetNameOfLoadedMissionText(char*)
0054dbfd T CText::Get(char const*)
0054d835 T CText::Load(unsigned char)
0054db91 T CText::Unload(unsigned char)
0054e231 T CText::CText()
0054e231 T CText::CText()
0054e275 T CText::~CText()
0054e275 T CText::~CText()
0042cd51 T CZone::GetTranslatedName()
00a23dcc B CBirds::BirdShotAt
0059e385 T CBirds::HandleGunShot(CVector const*, CVector const*)
00a23dc4 B CBirds::NumberOfBirds
00a23dc8 B CBirds::bHasBirdBeenShot
0059d4d5 T CBirds::CreateNumberOfBirds(CVector, CVector, int, int, bool)
0059cf81 T CBirds::Init()
0059da41 T CBirds::Render()
0059cfc1 T CBirds::Update()
00a23c2c B CBirds::aBirds
0059e2b5 T CBirds::Shutdown()
002e3a8d T CCarAI::UpdateCarAI(CVehicle*)
002e38e1 T CCarAI::EntitiesGoHeadOn(CEntity*, CEntity*)
002e660d T CCarAI::GetCarToGoToCoors(CVehicle*, CVector*, int, bool)
002e65f9 T CCarAI::CarHasReasonToStop(CVehicle*)
002e69b9 T CCarAI::GetCarToParkAtCoors(CVehicle*, CVector*)
002e62dd T CCarAI::MellowOutChaseSpeed(CVehicle*)
002e6e79 T CCarAI::TellCarToRamOtherCar(CVehicle*, CVehicle*)
002e6cf9 T CCarAI::AddAmbulanceOccupants(CVehicle*)
002e6db9 T CCarAI::AddFiretruckOccupants(CVehicle*)
002e6a05 T CCarAI::AddPoliceCarOccupants(CVehicle*, bool)
002e38b1 T CCarAI::FindSwitchDistanceFar(CVehicle*)
002e6f71 T CCarAI::MakeWayForCarWithSiren(CVehicle*)
002e6ec5 T CCarAI::TellCarToBlockOtherCar(CVehicle*, CVehicle*)
0060eeac R CCarAI::ms_fAchievePointRadius
002e389d T CCarAI::FindSwitchDistanceClose(CVehicle*)
002e68c5 T CCarAI::GetCarToGoToCoorsRacing(CVehicle*, CVector*, int, bool)
002e6515 T CCarAI::MellowOutChaseSpeedBoat(CVehicle*)
002e6f11 T CCarAI::TellCarToFollowOtherCar(CVehicle*, CVehicle*, float)
002e6205 T CCarAI::TellOccupantsToLeaveCar(CVehicle*)
002e67d9 T CCarAI::GetCarToGoToCoorsAccurate(CVehicle*, CVector*, int, bool)
002e3a15 T CCarAI::BackToCruisingIfNoWantedLevel(CVehicle*)
002e66f9 T CCarAI::GetCarToGoToCoorsStraightLine(CVehicle*, CVector*, int, bool)
0060eeb0 R CCarAI::ms_fAccurateAchievePointRadius
002e6139 T CCarAI::FindPoliceCarSpeedForWantedLevel(CVehicle*)
002e65a3 T CCarAI::FindPoliceCarMissionForWantedLevel()
002e659f T CCarAI::FindPoliceBikeMissionForWantedLevel()
002e6569 T CCarAI::FindPoliceBoatMissionForWantedLevel()
00685fc8 D CCheat::CheatLabel
002fe7cd T CCheat::DozerCheat()
002fdea9 T CCheat::GangsCheat()
002fdf1d T CCheat::NinjaCheat()
002ff411 T CCheat::StartPause()
002fe1f1 T CCheat::StormCheat()
002fe6bf T CCheat::ApacheCheat()
002fe14d T CCheat::FlyboyCheat()
002ff011 T CCheat::HealthCheat()
002fdab9 T CCheat::HearseCheat()
002fd6fd T CCheat::MayhemCheat()
002fdc5d T CCheat::MuscleCheat()
002fed45 T CCheat::ResetCheats()
002fdc9d T CCheat::SkinnyCheat()
002fe6d1 T CCheat::TankerCheat()
002fe155 T CCheat::VortexCheat()
002fe2f1 T CCheat::WantedCheat()
002fe4d1 T CCheat::DrivebyCheat()
002fe259 T CCheat::JetpackCheat()
002fe60d T CCheat::StaminaCheat()
002fdb29 T CCheat::SuicideCheat()
002ff0c9 T CCheat::VehicleCheat(int)
002fcec5 T CCheat::WeaponCheat1()
002fd0dd T CCheat::WeaponCheat2()
002fd2cd T CCheat::WeaponCheat3()
002fd461 T CCheat::WeaponCheat4()
002fd691 T CCheat::FastTimeCheat()
002fe325 T CCheat::FunhouseCheat()
002fdef5 T CCheat::GangLandCheat()
002fdad1 T CCheat::GolfcartCheat()
002fdac1 T CCheat::LovefistCheat()
002fe15d T CCheat::MidnightCheat()
002fdbc1 T CCheat::PinkCarsCheat()
002fe21f T CCheat::PredatorCheat()
002ffb55 T CCheat::ProcessCheats()
002fd6c5 T CCheat::SlowTimeCheat()
002fda99 T CCheat::StockCarCheat()
00796870 B CCheat::m_CheatString
002fdbf5 T CCheat::BlackCarsCheat()
002feaf5 T CCheat::FindCheatIndex(char const*)
002ff569 T CCheat::HandleCarCheat()
002fe2c1 T CCheat::NotWantedCheat()
002fe221 T CCheat::ParachuteCheat()
002fe219 T CCheat::SandstormCheat()
002fdaa1 T CCheat::StockCar2Cheat()
002fdaa9 T CCheat::StockCar3Cheat()
002fdab1 T CCheat::StockCar4Cheat()
002fe485 T CCheat::AdrenalineCheat()
002fdd8d T CCheat::BeachPartyCheat()
002fdad9 T CCheat::BlowUpCarsCheat()
002fdcd5 T CCheat::ElvisLivesCheat()
002ff8eb T CCheat::HandleAllCheats()
002ff761 T CCheat::HandleCheatMenu(bool)
002fe7d5 T CCheat::StuntPlaneCheat()
002fdc91 T CCheat::TheGamblerCheat()
002fd4e9 T CCheat::TimeTravelCheat()
002fe7e5 T CCheat::WeaponSlotCheat()
006864fc D CCheat::m_aCheatStrings
007967fc B CCheat::m_aCheatsActive
0079688e B CCheat::m_bShowMappings
002feac5 T CCheat::xboxHelperCheat()
002feb61 T CCheat::AddToCheatString(char)
002ff415 T CCheat::ClearMissionSkip()
002ff4b9 T CCheat::HandleGameCheats()
002ff8e9 T CCheat::ProcessAllCheats()
002ffab5 T CCheat::ProcessCheatMenu()
002fdac9 T CCheat::TrashmasterCheat()
00686340 D CCheat::m_aCheatHashKeys
002fd689 T CCheat::FoggyWeatherCheat()
002ff621 T CCheat::HandleMissionJump(bool, int)
002fe7dd T CCheat::MonsterTruckCheat()
002fd683 T CCheat::RainyWeatherCheat()
002fd515 T CCheat::ScriptBypassCheat()
002fd531 T CCheat::ShowMappingsCheat()
002fd671 T CCheat::SunnyWeatherCheat()
002fe62b T CCheat::WeaponSkillsCheat()
00686184 D CCheat::m_aCheatFunctions
002fd67d T CCheat::CloudyWeatherCheat()
002fe691 T CCheat::VehicleSkillsCheat()
002fdd21 T CCheat::VillagePeopleCheat()
002fd619 T CCheat::WantedLevelUpCheat()
002fe0ed T CCheat::AllCarsAreShitCheat()
002ff479 T CCheat::ClearGameCheatsList()
002fd595 T CCheat::ToggleShowTargeting()
0079686b B CCheat::m_bHasPlayerCheated
002fe11d T CCheat::AllCarsAreGreatCheat()
002fe061 T CCheat::LoveConquersAllCheat()
002fd65b T CCheat::WantedLevelDownCheat()
002ff8ed T CCheat::ProcessDebugCarCheats()
002fd56d T CCheat::ToggleShowTapToTarget()
002fd677 T CCheat::ExtraSunnyWeatherCheat()
002fd5bd T CCheat::MoneyArmourHealthCheat()
002ff9c1 T CCheat::ProcessDebugMissionSkip()
00300445 T CCheat::ProcessWeaponSlotCheats()
0079686c B CCheat::m_nLastScriptBypasstime
002fe525 T CCheat::CountrysideInvasionCheat()
002fd545 T CCheat::TogglePlayerInvincibility()
002fd9c1 T CCheat::EverybodyAttacksPlayerCheat()
00300511 W CCheat::ClearVehiclePopulationCheats(CCheat::eCheat)
002feb2d T CCheat::DoCheats()
002ff455 T CCheat::EndPause()
002fdc29 T CCheat::FatCheat()
002fe1a5 T CCheat::DuskCheat()
002fe6c7 T CCheat::QuadCheat()
002fe309 T CCheat::RiotCheat()
002fda91 T CCheat::TankCheat()
00953146 B CClock::CurrentDay
003e3021 T CClock::Initialise(unsigned int)
003e3545 T CClock::StoreClock()
006aa6c4 D CClock::daysInMonth
003e35e9 T CClock::RestoreClock()
003e30c1 T CClock::SetGameClock(unsigned char, unsigned char, unsigned char)
003e3395 T CClock::GetIsTimeInRange(unsigned char, unsigned char)
003e367d T CClock::OffsetClockByADay(unsigned int)
00953141 B CClock::ms_nGameClockDays
0095313c B CClock::ms_nLastClockTick
003e3211 T CClock::NormaliseGameClock()
00953142 B CClock::ms_nGameClockHours
0095314e B CClock::bClockHasBeenStored
00953140 B CClock::ms_nGameClockMonths
00953143 B CClock::ms_nGameClockMinutes
00953144 B CClock::ms_nGameClockSeconds
003e3361 T CClock::GetGameClockMinutesUntil(unsigned char, unsigned char)
00953148 B CClock::ms_Stored_nGameClockDays
00953149 B CClock::ms_Stored_nGameClockHours
00953147 B CClock::ms_Stored_nGameClockMonths
0095314a B CClock::ms_Stored_nGameClockMinutes
0095314c B CClock::ms_Stored_nGameClockSeconds
00953138 B CClock::ms_nMillisecondsPerGameMinute
003e33c9 T CClock::Update()
009fd438 B CCover::m_NumPoints
004d5685 T CCover::AddCoverPoint(int, CEntity*, CVector*, signed char, unsigned char)
009fd444 B CCover::LastTimeRecorded
004d59fd T CCover::FindDirFromVector(CVector)
004d61b1 T CCover::FindVectorFromDir(unsigned char)
004d5afb T CCover::Find2HighestPoints(CColTriangle*, CVector*, int&, int&)
009fd440 B CCover::bRenderCoverPoints
009fd448 B CCover::SlowestTimeRecorded
004d5aab T CCover::CalculateHorizontalSize(CColTriangle*, CVector*)
004d5b85 T CCover::DoLineCheckWithinObject(CColTriangle*, int, CVector*, CVector*, CVector, CVector)
004d5e71 T CCover::FindAndReserveCoverPoint(CPed*, CVector&, bool)
004d6211 T CCover::FindCoordinatesCoverPoint(CCoverPoint*, CPed*, CVector&, CVector&)
009fd43c B CCover::m_ListOfProcessedBuildings
004d6159 T CCover::RemoveCoverPointIfEntityLost(CCoverPoint*)
004d5905 T CCover::FindCoverPointsForThisBuilding(CBuilding*)
004d5885 T CCover::RemoveCoverPointsForThisEntity(CEntity*)
004d63fd T CCover::DoesCoverPointStillProvideCover(CCoverPoint*, CVector)
004d5a41 T CCover::FindVectorFromFirstToMissingVertex(CColTriangle*, int*, CVector*)
004d580d T CCover::ShouldThisBuildingHaveItsCoverPointsCreated(CBuilding*)
004d4ec9 T CCover::Init()
004d4f01 T CCover::Update()
009fc948 B CCover::m_aPoints
003ea969 T CCrime::ReportCrime(eCrimeType, CEntity*, CPed*)
003eab39 T CCrime::FindImmediateDetectionRange(eCrimeType)
003eab69 T CDebug::DebugAddText(char const*)
003eab59 T CDebug::DebugInitTextBuffer()
009584d4 B CDebug::ms_nCurrentTextLine
003eab6b T CDebug::DebugDisplayTextBuffer()
009584d6 B CDebug::m_bUseZTestOnDebugStuff
002fc35d W CDebug::DebugLog(char const*, ...)
003eadd5 T CDummy::CDummy()
003eadd5 T CDummy::CDummy()
003eae01 T CDummy::~CDummy()
003eadfd T CDummy::~CDummy()
003eadfd T CDummy::~CDummy()
003eae39 T CDummy::operator delete(void*)
003eae69 T CDummy::operator new(unsigned int)
0036fd41 T CEvent::CalcSoundLevelIncrement(float, float)
0036fb45 T CEvent::CEvent()
0036fb5d T CEvent::~CEvent()
00378119 T CEvent::~CEvent()
00378119 T CEvent::~CEvent()
0036fbc5 T CEvent::operator delete(void*)
0036fb61 T CEvent::operator new(unsigned int)
0049ef09 T CGangs::Initialise()
0049ef4d T CGangs::SetGangWeapons(short, int, int, int)
0049efa5 T CGangs::ChooseGangPedModel(short)
009eced4 B CGangs::GangAttackWithCops
0049ef95 T CGangs::SetGangPedModelOverride(short, signed char)
0049eed9 T CGangs::GetWillAttackPlayerWithCops(ePedType)
0049eec1 T CGangs::SetWillAttackPlayerWithCops(ePedType, bool)
009ece34 B CGangs::Gang
0048dd75 T CGangs::Load()
0048dc0d T CGangs::Save()
00a3f048 B CGlass::aGlassPanes
005ac025 T CGlass::FindFreePane()
00a3efc4 B CGlass::NumGlassEntities
005abe21 T CGlass::RenderHiLightPolys()
005ac049 T CGlass::CalcAlphaWithNormal(CVector*)
005ac9cd T CGlass::WasGlassHitByBullet(CEntity*, CVector)
005ad4f9 T CGlass::BreakGlassPhysically(CVector, float)
005ad425 T CGlass::FindWindowSectorList(CPtrList&, float*, CEntity**, float, float, float)
005abebd T CGlass::RenderShatteredPolys()
005acb25 T CGlass::CarWindscreenShatters(CVehicle*, bool)
005abf71 T CGlass::RenderReflectionPolys()
005ac0f5 T CGlass::GeneratePanesForWindow(unsigned int, CVector, CVector, CVector, CVector, CVector, float, bool, bool, int, bool)
00a3efc8 B CGlass::apEntitiesToBeRendered
005ac6b5 T CGlass::WindowRespondsToCollision(CEntity*, float, CVector, CVector, bool)
005aca59 T CGlass::WindowRespondsToExplosion(CEntity*, CVector)
005ad0fd T CGlass::HasGlassBeenShatteredAtCoors(float, float, float)
005ac975 T CGlass::WindowRespondsToSoftCollision(CEntity*, float)
005ac685 T CGlass::AskForObjectToBeRenderedInGlass(CEntity*)
005ab3a1 T CGlass::Init()
005ab799 T CGlass::Render()
005ab4c9 T CGlass::Update()
005ade3d T CLines::ImmediateLine2D(int, int, int, int, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
005adb79 T CLines::RenderLineNoClipping(float, float, float, float, float, float, unsigned int, unsigned int)
005adbd9 T CLines::RenderLineWithClipping(float, float, float, float, float, float, unsigned int, unsigned int)
002cf3dd T CMBlur::SetDrunkBlur(float)
00712318 B CMBlur::pFrontBuffer
002cf3d3 T CMBlur::OverlayRender(RwCamera*, RwRaster*, RwRGBA, int, int)
00712324 B CMBlur::pBufVertCount
002cf405 T CMBlur::ClearDrunkBlur()
002cf3d9 T CMBlur::MotionBlurOpen(RwCamera*)
002cf3cb T CMBlur::MotionBlurClose()
002cf3d5 T CMBlur::OverlayRenderFx(RwCamera*, RwRaster*)
002cf3d7 T CMBlur::MotionBlurRender(RwCamera*, unsigned int, unsigned int, unsigned int, unsigned int, int, unsigned int)
00712320 B CMBlur::ms_bJustInitialised
002cf3cf T CMBlur::CreateImmediateModeData(RwCamera*, RwRect*)
002cf3d1 T CMBlur::CreateImmediateModeData(RwCamera*, RwRect*, RwOpenGLVertex*, RwRGBA, float, float, float, float, float, int)
00685f9c D CMBlur::BlurOn
0071231c B CMBlur::Drunkness
002cf3b9 T CMBlur::CMBlur()
002cf3b9 T CMBlur::CMBlur()
002cf3c9 T CMBlur::~CMBlur()
002cf3c9 T CMBlur::~CMBlur()
0099d8f0 B CMaths::ms_SinTable
0044ea99 T CMaths::InitMathsTables()
004b9561 T CPedIK::RotateTorso(AnimBlendFrameData*, LimbOrientation&, bool)
006af878 D CPedIK::ms_headInfo
006af8a8 D CPedIK::ms_torsoInfo
004b9759 T CPedIK::PitchForSlope()
004b8e1b T CPedIK::GetWorldMatrix(RwFrame*, RwMatrixTag*)
006af8d8 D CPedIK::ms_lowerArmInfo
006af8c0 D CPedIK::ms_upperArmInfo
004b9609 T CPedIK::RotateTorsoForArm(CVector const&)
004b90bd T CPedIK::PointGunAtPosition(CVector const&, float)
006af890 D CPedIK::ms_headRestoreInfo
004b91c9 T CPedIK::PointGunInDirection(float, float, bool, float)
004b8e75 T CPedIK::ExtractYawAndPitchWorld(RwMatrixTag*, float&, float&)
006af8f0 D CPedIK::XaxisIK
006af8fc D CPedIK::YaxisIK
006af908 D CPedIK::ZaxisIK
004b8f61 T CPedIK::MoveLimb(LimbOrientation&, float, float, LimbMovementInfo&)
004b9039 T CPedIK::MoveLimb(LimbOrientation&, float, float, LimbMovementInfo&, float)
004b8e05 T CPedIK::CPedIK(CPed*)
004b8e05 T CPedIK::CPedIK(CPed*)
0031c6a7 T CPhone::CPhone()
0031c6a7 T CPhone::CPhone()
0031c6a9 T CPhone::~CPhone()
0031c6a9 T CPhone::~CPhone()
00576875 T CPlane::SetGearDown()
005788b1 T CPlane::VehicleDamage(float, unsigned short, CEntity*, CVector*, CVector*, eWeaponType)
00575cf9 T CPlane::ProcessControl()
006b1238 D CPlane::GenPlane_Active
00a12e3c B CPlane::GenPlane_Status
00578839 T CPlane::IsAlreadyFlying()
005790e9 T CPlane::AreWeInNoPlaneZone()
0057a1f5 W CPlane::SetUpWheelColModel(CColModel*)
0057908d T CPlane::CountPlanesAndHelis()
00a12e40 B CPlane::GenPlane_ModelIndex
00579dc9 T CPlane::SwitchAmbientPlanes(bool)
006b124c D CPlane::PLANE_MAX_PROP_SPEED
006b1244 D CPlane::PLANE_MIN_PROP_SPEED
006b1250 D CPlane::PLANE_ROC_PROP_SPEED
006b1248 D CPlane::PLANE_STD_PROP_SPEED
00575f09 T CPlane::ProcessControlInputs(unsigned char)
005788a3 T CPlane::SetupDamageAfterLoad()
006b123c D CPlane::ANDROM_COL_ANGLE_MULT
005791f1 T CPlane::AreWeInNoBigPlaneZone()
005768e1 T CPlane::ProcessFlyingCarStuff()
00578db9 T CPlane::FindPlaneCreationCoors(CVector*, CVector*, float*, float*, bool)
00a12e44 B CPlane::GenPlane_LastTimeGenerated
00579285 T CPlane::DoPlaneGenerationAndRemoval()
006b1240 D CPlane::HARRIER_NOZZLE_ROTATE_LIMIT
006b1242 D CPlane::HARRIER_NOZZLE_SWITCH_LIMIT
00579d9d T CPlane::InitPlaneGenerationAndRemoval()
00578851 T CPlane::Fix()
00578821 T CPlane::Render()
00578d99 T CPlane::OpenDoor(CPed*, int, eDoors, float, bool)
00579e71 T CPlane::BlowUpCar(CEntity*, unsigned char)
0057a1f9 W CPlane::BurstTyre(unsigned char, bool)
00577485 T CPlane::PreRender()
005768a1 T CPlane::SetGearUp()
00575901 T CPlane::CPlane(int, unsigned char)
00575901 T CPlane::CPlane(int, unsigned char)
00575ce9 T CPlane::~CPlane()
00575c0d T CPlane::~CPlane()
00575c0d T CPlane::~CPlane()
0040d4e5 T CPools::GetVehicle(int)
0040c901 T CPools::Initialise()
0048a1e5 T CPools::LoadPedPool()
00488f95 T CPools::SavePedPool()
0095ac44 B CPools::ms_pPedPool
0040d511 T CPools::GetObjectRef(CObject*)
0048a335 T CPools::LoadPedTasks()
00489171 T CPools::SavePedTasks()
0095ac5c B CPools::ms_pTaskPool
0040d4bd T CPools::GetVehicleRef(CVehicle*)
0095ac54 B CPools::ms_pDummyPool
0095ac60 B CPools::ms_pEventPool
004889d1 T CPools::LoadObjectPool()
00488725 T CPools::SaveObjectPool()
0095ac50 B CPools::ms_pObjectPool
0040d465 T CPools::CheckPoolsEmpty()
00488245 T CPools::LoadVehiclePool()
00487b1d T CPools::SaveVehiclePool()
0095ac48 B CPools::ms_pVehiclePool
0095ac4c B CPools::ms_pBuildingPool
0095ac58 B CPools::ms_pColModelPool
0095ac6c B CPools::ms_pNodeRoutePool
0095ac64 B CPools::ms_pPointRoutePool
0095ac68 B CPools::ms_pPatrolRoutePool
0040d609 T CPools::CheckBuildingAtomics()
0095ac78 B CPools::ms_pPedAttractorPool
0095ac40 B CPools::ms_pEntryInfoNodePool
0095ac70 B CPools::ms_pTaskAllocatorPool
0095ac74 B CPools::ms_pPedIntelligencePool
0095ac3c B CPools::ms_pPtrNodeDoubleLinkPool
0095ac38 B CPools::ms_pPtrNodeSingleLinkPool
0040d565 T CPools::MakeSureSlotInObjectPoolIsEmpty(int)
0048a0c5 T CPools::Load()
00488d0d T CPools::Save()
0040d491 T CPools::GetPed(int)
0040d011 T CPools::ShutDown()
0040d539 T CPools::GetObject(int)
0040d469 T CPools::GetPedRef(CPed*)
00441bc5 T CRadar::DrawLegend(int, int, int)
0043dc91 T CRadar::Initialise()
004424e5 T CRadar::LimitToMap(float*, float*)
00442c9d T CRadar::SetBlipFade(int, unsigned char)
00994db0 B CRadar::m_radarRect
0043e5f1 T CRadar::DrawRadarMap()
0043e0dd T CRadar::LoadTextures()
00442771 T CRadar::SetCoordBlip(eBlipType, CVector, unsigned int, eBlipDisplay, char*)
00994dac B CRadar::m_radarRange
004434b1 T CRadar::ClipRadarPoly(CVector2D*, CVector2D const*)
00442091 T CRadar::Draw3dMarkers()
0043fa69 T CRadar::DrawCoordBlip(int, unsigned char, int, float)
004441a1 T CRadar::DrawRadarMask()
00992484 B CRadar::MapLegendList
00442be1 T CRadar::SetBlipSprite(int, int)
00442901 T CRadar::SetEntityBlip(eBlipType, int, unsigned int, eBlipDisplay, char*)
00994dc0 B CRadar::airstrip_blip
00992694 B CRadar::ms_RadarTrace
0043ff25 T CRadar::DrawEntityBlip(int, unsigned char, int, float)
00442fd1 T CRadar::SetupRadarRect(int, int)
00442e1d T CRadar::ShowRadarTrace(float, float, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)
0099267a B CRadar::ArrowBlipColour
00442b11 T CRadar::ChangeBlipScale(int, int)
0043dd49 T CRadar::ClearActualBlip(int)
0043f9f9 T CRadar::DisplayThisBlip(int, signed char)
00443c61 T CRadar::DrawAreaOnRadar(CRect const&, CRGBA const&, bool)
0043f7b5 T CRadar::DrawRadarSprite(unsigned short, float, float, unsigned char)
0043e8e9 T CRadar::InitFrontEndMap()
0043f761 T CRadar::LimitRadarPoint(CVector2D&)
00442d65 T CRadar::SetBlipFriendly(int, unsigned char)
004413e9 T CRadar::ShowRadarMarker(CVector, unsigned int, float)
00442a59 T CRadar::ChangeBlipColour(int, unsigned int)
00443801 T CRadar::DrawRadarSection(int, int, int)
00992678 B CRadar::MapLegendCounter
00994dc8 B CRadar::RadarBlipSprites
004430e1 T CRadar::RemoveMapSection(int, int)
00442dc1 T CRadar::SetBlipEntryExit(int, CEntryExit*)
00994da4 B CRadar::vec2DRadarOrigin
00442b81 T CRadar::ChangeBlipDisplay(int, eBlipDisplay)
00443055 T CRadar::RequestMapSection(int, int)
00994dc4 B CRadar::airstrip_location
004415bd T CRadar::CalculateBlipAlpha(float)
00442991 T CRadar::ClearBlipForEntity(eBlipType, int)
0043f2b1 T CRadar::SetupAirstripBlips()
00441a59 T CRadar::AddBlipToLegendList(unsigned char, int)
00443b91 T CRadar::DrawRadarSectionMap(int, int, CRect, float)
0044137d T CRadar::GetRadarTraceColour(unsigned int, unsigned char, unsigned char)
0043df45 T CRadar::RemoveRadarSections()
0044298d T CRadar::SetRadarMarkerState(int, unsigned char)
00444529 T CRadar::StreamRadarSections(CVector const&)
00443121 T CRadar::StreamRadarSections(int, int)
00442ab5 T CRadar::ChangeBlipBrightness(int, int)
00443f31 T CRadar::DrawRadarGangOverlay(bool)
00440fb5 T CRadar::DrawYouAreHereSprite(float, float)
0043e421 T CRadar::CalculateCachedSinCos()
0043e149 T CRadar::GetNewUniqueBlipIndex(int)
00442cf9 T CRadar::SetCoordBlipAppearance(int, unsigned char)
0044281d T CRadar::SetShortRangeCoordBlip(eBlipType, CVector, unsigned int, eBlipDisplay, char*)
004410d9 T CRadar::DrawRotatingRadarSprite(CSprite2d*, float, float, float, float, CRGBA)
0043e175 T CRadar::GetActualBlipArrayIndex(int)
0044161d T CRadar::HasThisBlipBeenRevealed(int)
0044167d T CRadar::ShowRadarTraceWithHeight(float, float, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
00442c41 T CRadar::SetBlipAlwaysDisplayInZoom(int, unsigned char)
00441f45 T CRadar::SetMapCentreToPlayerCoords()
0043f62d T CRadar::TransformRadarPointToScreenSpace(CVector2D&, CVector2D const&)
00442641 T CRadar::TransformScreenSpaceToRadarPoint(CVector2D&, CVector2D&)
00442709 T CRadar::TransformRealWorldToTexCoordSpace(CVector2D&, CVector2D const&, int, int)
00442681 T CRadar::TransformRadarPointToRealWorldSpace(CVector2D&, CVector2D const&)
0043f6e5 T CRadar::TransformRealWorldPointToRadarSpace(CVector2D&, CVector2D const&)
0048d921 T CRadar::Load()
0048d819 T CRadar::Save()
0043e1c1 T CRadar::DrawMap()
0043dd85 T CRadar::Shutdown()
004429e9 T CRadar::ClearBlip(int)
0043e9ed T CRadar::DrawBlips(float)
0041416d T CRopes::RegisterRope(unsigned int, unsigned int, CVector, bool, unsigned char, bool, CPhysical*, int)
00414dfd T CRopes::IsCarriedByRope(CPhysical*)
00414ee5 T CRopes::FindPickUpHeight(CEntity*)
00414a9d T CRopes::SetSpeedOfTopNode(unsigned int, CVector)
00414c05 T CRopes::FindCoorsAlongRope(unsigned int, float, CVector*, CVector*)
009647d8 B CRopes::PlayerControlsCrane
0041518d T CRopes::CreateRopeForSwatPed(CVector const&)
004126f1 T CRopes::Init()
00413dad T CRopes::Render()
00412731 T CRopes::Update()
00962e98 B CRopes::aRopes
00414f89 T CRopes::FindRope(unsigned int)
00414041 T CRopes::Shutdown()
00965274 B CStats::BiggestWin
0041592d T CStats::ModifyStat(unsigned short, float)
00965254 B CStats::MoneySpent
00965284 B CStats::BiggestLoss
004158e9 T CStats::GetStatType(unsigned short)
009652a0 B CStats::StatMessage
004158f5 T CStats::GetStatValue(unsigned short)
00415ec5 T CStats::IsStatCapped(unsigned short)
0041557d T CStats::SetStatValue(unsigned short, float)
0096492c B CStats::StatTypesInt
00965acc B CStats::m_FatCounter
00419b95 T CStats::BuildStatLine(char*, void*, int, void*, int)
00419edd T CStats::ConvertToMins(int)
00419f09 T CStats::ConvertToSecs(int)
00415df9 T CStats::DecrementStat(unsigned short, float)
00415a11 T CStats::IncrementStat(unsigned short, float)
00965ac8 B CStats::m_BikeCounter
00965ac4 B CStats::m_BoatCounter
00965aa4 B CStats::usingSexCheat
009647e0 B CStats::DebugStatValue
009647e4 B CStats::StatTypesFloat
00965ad8 B CStats::m_DeathCounter
00965170 B CStats::FavouriteWeapon
00965ac0 B CStats::m_FlyingCounter
00965ad4 B CStats::m_WeaponCounter
00964fe0 B CStats::FavouriteVehicle
0041626d T CStats::SetNewRecordStat(unsigned short, float)
00965294 B CStats::bShowRespectStat
006ab380 D CStats::bShowUpdateStats
00965abc B CStats::m_DrivingCounter
00965ad0 B CStats::m_RunningCounter
00419f3d T CStats::CheckForThreshold(float*, float)
00416ccd T CStats::ConstructStatLine(int, unsigned char)
00964ca8 B CStats::StatReactionValue
0041a679 T CStats::UpdateRespectStat(unsigned char)
00965aa5 B CStats::usingRespectCheat
00419b5d T CStats::SafeToShowThisStat(unsigned char)
00965295 B CStats::bShowSexAppealStat
00965adc B CStats::m_MaxHealthCounter
00416311 T CStats::RegisterFastestTime(int, int)
0041a9f5 T CStats::UpdateSexAppealStat()
00965ab0 B CStats::m_CycleSkillCounter
00415385 T CStats::CheckForStatsMessage(bool)
00964d98 B CStats::PedsKilledOfThisType
004163e9 T CStats::RegisterBestPosition(int, int)
00965aa0 B CStats::TotalNumStatMessages
0041bde1 T CStats::UpdateStatsOnRespawn()
00965ae0 B CStats::m_AddToHealthCounter
00965ab4 B CStats::m_SwimStaminaCounter
00416c7d T CStats::GetPercentageProgress()
00965297 B CStats::LastMissionPassedName
004162fd T CStats::RegisterMissionPassed(unsigned char)
00965296 B CStats::ShowChaseStatOnScreen
00964e50 B CStats::TimesMissionAttempted
0041b995 T CStats::UpdateStatsWhenFlying(CVehicle*)
00965aac B CStats::m_CycleStaminaCounter
00965ae4 B CStats::m_LastWeaponTypeFired
00964d94 B CStats::m_ThisStatIsABarChart
0041609d T CStats::UpdateStatsAddToHealth(unsigned int)
0041b1f1 T CStats::UpdateStatsWhenCycling(bool, CBmx*)
0041b801 T CStats::UpdateStatsWhenDriving(CVehicle*)
0041b085 T CStats::UpdateStatsWhenRunning()
00965aa8 B CStats::m_SprintStaminaCounter
0041bed5 T CStats::GetFatAndMuscleModifier(eStatModAbilities)
00415675 T CStats::LoadActionReactionStats()
0041aba1 T CStats::UpdateFatAndMuscleStats(unsigned int)
0041bdc5 T CStats::UpdateStatsWhenFighting()
0041b539 T CStats::UpdateStatsWhenSwimming(bool, bool)
00965ab8 B CStats::m_SwimUnderWaterCounter
00964e18 B CStats::FavoriteRadioStationList
00416ab9 T CStats::FindCriminalRatingNumber()
004165e9 T CStats::FindCriminalRatingString()
004162c9 T CStats::GetTimesMissionAttempted(unsigned char)
0041573d T CStats::LoadStatUpdateConditions()
004162d9 T CStats::RegisterMissionAttempted(unsigned char)
0041af19 T CStats::UpdateStatsWhenSprinting()
0041bcc1 T CStats::UpdateStatsWhenWeaponHit(int)
0041bb29 T CStats::UpdateStatsWhenOnMotorBike(CBike*)
0041a5e9 T CStats::FindMaxNumberOfGroupMembers()
004164c1 T CStats::GetFavoriteRadioStationList(int)
004164d1 T CStats::FindMostFavoriteRadioStation()
00416565 T CStats::FindLeastFavoriteRadioStation()
00419f7d T CStats::DisplayScriptStatUpdateMessage(unsigned char, unsigned int, float)
004164c5 T CStats::GetFullFavoriteRadioStationList()
00416225 T CStats::ProcessReactionStatsOnDecrement(unsigned char)
00416181 T CStats::ProcessReactionStatsOnIncrement(unsigned char)
004155c1 T CStats::PopulateFavoriteRadioStationList()
004151e5 T CStats::Init()
0048e0c5 T CStats::Load()
0048df71 T CStats::Save()
0041589d T CStats::GetStatID(unsigned short)
00965264 B CStats::MoneyLost
00386431 W CStore<CPedModelInfo, 278>::~CStore()
00386427 W CStore<CTimeModelInfo, 169>::~CStore()
0038642d W CStore<CClumpModelInfo, 92>::~CStore()
00386421 W CStore<CAtomicModelInfo, 14000>::~CStore()
0038642b W CStore<CWeaponModelInfo, 51>::~CStore()
00386429 W CStore<CLodTimeModelInfo, 1>::~CStore()
0038642f W CStore<CVehicleModelInfo, 212>::~CStore()
00386425 W CStore<CLodAtomicModelInfo, 1>::~CStore()
00386423 W CStore<CDamageAtomicModelInfo, 70>::~CStore()
00420ac9 T CTimer::Initialise()
0096b515 B CTimer::m_CodePause
0096b514 B CTimer::m_UserPause
00421129 T CTimer::EndUserPause()
0096b500 B CTimer::ms_fTimeStep
0096b4f8 B CTimer::ms_fTimeScale
00421119 T CTimer::StartUserPause()
0096b510 B CTimer::m_FrameCounter
00420e59 T CTimer::UpdateVariables(float)
0096b508 B CTimer::ms_fOldTimeStep
0042101d T CTimer::GetCyclesPerFrame()
0096b516 B CTimer::bSlowMotionActive
0096b4fc B CTimer::ms_fSlowMotionScale
004210f5 T CTimer::GetIsSlowMotionActive()
0096b517 B CTimer::bSkipProcessThisFrame
00421041 T CTimer::GetCurrentTimeInCycles()
0096b4d8 B CTimer::m_snTimeInMilliseconds
0096b504 B CTimer::ms_fTimeStepNonClipped
0042100d T CTimer::GetCyclesPerMillisecond()
0096b4e4 B CTimer::m_snPreviousTimeInMilliseconds
0096b4e8 B CTimer::m_snPPreviousTimeInMilliseconds
0096b4e0 B CTimer::m_snTimeInMillisecondsPauseMode
0096b4ec B CTimer::m_snPPPreviousTimeInMilliseconds
0096b4dc B CTimer::m_snTimeInMillisecondsNonClipped
0096b4f0 B CTimer::m_snPPPPreviousTimeInMilliseconds
0096b4f4 B CTimer::m_snPreviousTimeInMillisecondsNonClipped
00421075 T CTimer::Stop()
00420fad T CTimer::Resume()
00420c35 T CTimer::Update()
00420f65 T CTimer::Suspend()
00420c25 T CTimer::Shutdown()
0096b50c B CTimer::game_FPS
0057ff59 T CTrain::FindEngine(CTrain*)
0057cb41 T CTrain::InitTrains()
0057c809 T CTrain::IsInTunnel()
0057ff4b T CTrain::FindCaboose(CTrain*)
0057f533 T CTrain::AddPassenger(CPed*)
0057ff67 T CTrain::FindCarriage(CTrain*, unsigned char)
0057d099 T CTrain::UpdateTrains()
0057f531 T CTrain::OpenTrainDoor(float)
0057c7c9 T CTrain::SetModelIndex(unsigned int)
0057ff0d T CTrain::SetTrainSpeed(CTrain*, float)
006b1294 D CTrain::aStationCoors
00a12e68 B CTrain::GenTrain_Track
0057d0a1 T CTrain::ProcessControl()
00a12e58 B CTrain::GenTrain_Status
0057fdd9 T CTrain::RemoveAllTrains()
0057f535 T CTrain::RemovePassenger(CPed*)
00580ad5 T CTrain::FindNearestTrain(CVector, bool)
0057f551 T CTrain::CreateMissionTrain(CVector, bool, unsigned int, CTrain**, CTrain**, int, int, bool)
00a12e60 B CTrain::GenTrain_Direction
00a12e54 B CTrain::bHelpToSetStations
0057f541 T CTrain::DisableRandomTrains(bool)
0057f537 T CTrain::FindSideStationIsOn()
0057fd1d T CTrain::RemoveMissionTrains()
00580b9d T CTrain::SetNewTrainPosition(CTrain*, CVector)
0057ff39 T CTrain::SetTrainCruiseSpeed(CTrain*, float)
0057cf4d T CTrain::FindClosestTrackNode(CVector, int*)
00a12e64 B CTrain::GenTrain_TrainConfig
00580c6d T CTrain::IsNextStationAllowed(CTrain*)
0057fe7d T CTrain::ReleaseMissionTrains()
00a12e55 B CTrain::bDisableRandomTrains
0057fdb1 T CTrain::RemoveOneMissionTrain(CTrain*)
0057e79d T CTrain::RemoveRandomPassenger()
0057e675 T CTrain::FindNumCarriagesPulled()
00580ad1 T CTrain::IsRoomForPedToLeaveCar(unsigned int, CVector*)
0057feed T CTrain::ReleaseOneMissionTrain(CTrain*)
00a12e5c B CTrain::GenTrain_GenerationNode
00580f09 T CTrain::SkipToNextAllowedStation(CTrain*)
0057c899 T CTrain::ReadAndInterpretTrackFile(char*, CTrainNode**, int*, float*, int)
0057ff89 T CTrain::DoTrainGenerationAndRemoval()
0057f355 T CTrain::FindCoorsFromPositionOnTrack(float, int, CVector*)
0057f8e9 T CTrain::FindPositionOnTrackFromCoors()
0057e911 T CTrain::AddNearbyPedAsRandomPassenger()
0057e689 T CTrain::FindMaximumSpeedToStopAtStations(float*)
00580dc9 T CTrain::FindNextStationPositionInDirection(bool, float, float*, int*)
0057c893 T CTrain::Render()
0057f0cd T CTrain::OpenDoor(CPed*, int, eDoors, float, bool)
0057d02d T CTrain::Shutdown()
00580bc7 T CTrain::Teleport(CVector, unsigned char)
0057c851 T CTrain::PreRender()
0057c511 T CTrain::CTrain(int, unsigned char)
0057c511 T CTrain::CTrain(int, unsigned char)
0057c79d T CTrain::~CTrain()
0057c775 T CTrain::~CTrain()
0057c775 T CTrain::~CTrain()
00427565 T CWorld::CastShadow(float, float, float, float)
00422e29 T CWorld::Initialise()
0096b9f4 B CWorld::ms_aSectors
0042b8ad T CWorld::UseDetonator(CEntity*)
0096b9cc B CWorld::bSecondShift
0096b9c4 B CWorld::PlayerInFocus
0042acf5 T CWorld::SetCarsOnFire(float, float, float, float, CEntity*)
0042aa3d T CWorld::SetPedsOnFire(float, float, float, float, CEntity*)
00989610 B CWorld::m_aTempColPts
0096b9d0 B CWorld::pIgnoreEntity
00428455 T CWorld::ClearScanCodes()
0042abc1 T CWorld::SetPedsChoking(float, float, float, float, CEntity*)
0042ae05 T CWorld::SetWorldOnFire(float, float, float, float, CEntity*)
0096b9c9 B CWorld::bIncludeBikers
00423339 T CWorld::ClearForRestart()
0042bb1d T CWorld::PrintCarChanges()
0096b9dc B CWorld::SnookerTableMax
0096b9e8 B CWorld::SnookerTableMin
0042b0fd T CWorld::SprayPaintWorld(CVector&, CVector&, float, bool)
009887f4 B CWorld::ms_aLodPtrLists
0042823d T CWorld::RemoveFallenCars()
00428069 T CWorld::RemoveFallenPeds()
004268c9 T CWorld::TriggerExplosion(CVector const&, float, float, CEntity*, CEntity*, bool, float)
0096b9c8 B CWorld::bIncludeCarTyres
0096b9c7 B CWorld::bIncludeDeadPeds
0042c1c1 T CWorld::ClearCarsFromArea(float, float, float, float, float, float)
0042c355 T CWorld::ClearPedsFromArea(float, float, float, float, float, float)
0096b9d4 B CWorld::fWeaponSpreadRate
00987bf4 B CWorld::ms_aRepeatSectors
004285d1 T CWorld::FindObjectsInRange(CVector const&, float, bool, short*, short, CEntity**, bool, bool, bool, bool, bool)
00424b95 T CWorld::ProcessLineOfSight(CVector const&, CVector const&, CColPoint&, CEntity*&, bool, bool, bool, bool, bool, bool, bool, bool)
0042c475 T CWorld::CallOffChaseForArea(float, float, float, float)
0042c9a7 T CWorld::DoZoneTestForChaser(CPhysical*)
0042a7c5 T CWorld::FindGroundZForCoord(float, float)
0042a8cb T CWorld::FindLowestZForCoord(float, float)
0042a879 T CWorld::FindRoofZFor3DCoord(float, float, float, bool*)
004261e1 T CWorld::ProcessVerticalLine(CVector const&, float, CColPoint&, CEntity*&, bool, bool, bool, bool, bool, bool, CStoredCollPoly*)
0042bba9 T CWorld::RemoveStaticObjects()
0042b221 T CWorld::RepositionOneObject(CEntity*)
0042bdc1 T CWorld::TestForUnusedModels(CPtrList&, int*)
0042bce1 T CWorld::TestForUnusedModels()
0096b9c5 B CWorld::bDoingCarCollisions
0098960c B CWorld::ms_nCurrentScanCode
004276cd T CWorld::CastShadowSectorList(CPtrList&, float, float, float, float)
0042910d T CWorld::FindLodOfTypeInRange(unsigned int, CVector const&, float, bool, short*, short, CEntity**)
004276f9 T CWorld::ProcessForAnimViewer()
00422ddd T CWorld::ResetLineTestOptions()
0096b9ca B CWorld::bForceProcessControl
0096b9cb B CWorld::bProcessCutsceneOnly
0042a811 T CWorld::FindGroundZFor3DCoord(float, float, float, bool*, CEntity**)
00423469 T CWorld::GetIsLineOfSightClear(CVector const&, CVector const&, bool, bool, bool, bool, bool, bool, bool)
0042c425 T CWorld::SetAllCarsCanBeDamaged(bool)
0042ae89 T CWorld::TestSphereAgainstWorld(CVector, float, CEntity*, bool, bool, bool, bool, bool, bool)
0096b9c6 B CWorld::bNoMoreCollisionTorque
0042a917 T CWorld::CheckBlockListIntegrity()
0042a2c9 T CWorld::FindNearestObjectOfType(int, CVector const&, float, bool, bool, bool, bool, bool, bool)
00427f01 T CWorld::ProcessAttachedEntities()
00989604 B CWorld::ms_listMovingEntityPtrs
00426195 T CWorld::CameraToIgnoreThisObject(CEntity*)
00428b4d T CWorld::FindObjectsOfTypeInRange(unsigned int, CVector const&, float, bool, short*, short, CEntity**, bool, bool, bool, bool, bool)
004259fd T CWorld::ProcessLineOfSightSector(CSector&, CRepeatSector&, CColLine const&, CColPoint&, float&, CEntity*&, bool, bool, bool, bool, bool, bool, bool, bool)
004292c9 T CWorld::FindObjectsKindaColliding(CVector const&, float, bool, short*, short, CEntity**, bool, bool, bool, bool, bool)
0042cab9 T CWorld::FindUnsuspectingTargetCar(CVector, CVector)
0042cbe5 T CWorld::FindUnsuspectingTargetPed(CVector, CVector)
0042c9a5 T CWorld::HandleCollisionZoneChange(eLevelName, eLevelName)
00428411 T CWorld::ProcessPedsAfterPreRender()
00426321 T CWorld::ProcessVerticalLineSector(CSector&, CRepeatSector&, CColLine const&, CColPoint&, CEntity*&, bool, bool, bool, bool, bool, bool, CStoredCollPoly*)
0042bdf9 T CWorld::ClearExcitingStuffFromArea(CVector const&, float, unsigned char)
00426a3d T CWorld::TriggerExplosionSectorList(CPtrList&, CVector const&, float, float, CEntity*, CEntity*, bool, float)
0042c11d T CWorld::ExtinguishAllCarFiresInArea(CVector, float)
0042993d T CWorld::FindObjectsIntersectingCube(CVector const&, CVector const&, short*, short, CEntity**, bool, bool, bool, bool, bool)
00424af9 T CWorld::GetIsLineOfSightSectorClear(CSector&, CRepeatSector&, CColLine const&, bool, bool, bool, bool, bool, bool, bool)
0042b959 T CWorld::TestSphereAgainstSectorList(CPtrList&, CVector, float, CEntity*, bool)
0096b9d8 B CWorld::ms_iProcessLineNumCrossings
00428a9d T CWorld::FindObjectsInRangeSectorList(CPtrList&, CVector const&, float, bool, short*, short, CEntity**)
0042ca1d T CWorld::FindPlayerSlotWithPedPointer(void*)
00425ba9 T CWorld::ProcessLineOfSightSectorList(CPtrList&, CColLine const&, CColPoint&, float&, CEntity*&, bool, bool, bool)
004267dd T CWorld::ProcessVerticalLineSectorList(CPtrList&, CColLine const&, CColPoint&, float&, CEntity*&, bool, CStoredCollPoly*)
00989608 B CWorld::ms_listObjectsWithControlCode
00428509 T CWorld::GetIsLineOfSightSectorListClear(CPtrList&, CColLine const&, bool, bool)
0042a919 T CWorld::RemoveReferencesToDeletedObject(CEntity*)
0042b1d9 T CWorld::RepositionCertainDynamicObjects()
0042ca81 T CWorld::FindPlayerSlotWithVehiclePointer(CEntity*)
0042c9a9 T CWorld::StopAllLawEnforcersInTheirTracks()
0042bccb T CWorld::TestForBuildingsOnTopOfEachOther(CPtrList&)
0042bcc9 T CWorld::TestForBuildingsOnTopOfEachOther()
0042c839 T CWorld::CallOffChaseForAreaSectorListPeds(CPtrList&, float, float, float, float, float, float, float, float)
0042a71d T CWorld::FindNearestObjectOfTypeSectorList(int, CPtrList&, CVector const&, float, bool, CEntity**, float*)
00427e89 T CWorld::RemoveEntityInsteadOfProcessingIt(CEntity*)
00429051 T CWorld::FindObjectsOfTypeInRangeSectorList(unsigned int, CPtrList&, CVector const&, float, bool, short*, short, CEntity**)
00429fd1 T CWorld::FindMissionEntitiesIntersectingCube(CVector const&, CVector const&, short*, short, CEntity**, bool, bool, bool)
00429865 T CWorld::FindObjectsKindaCollidingSectorList(CPtrList&, CVector const&, float, bool, short*, short, CEntity**)
0042c601 T CWorld::CallOffChaseForAreaSectorListVehicles(CPtrList&, float, float, float, float, float, float, float, float)
00429b89 T CWorld::FindObjectsIntersectingCubeSectorList(CPtrList&, CVector const&, CVector const&, short*, short, CEntity**)
0042ca4d T CWorld::FindPlayerSlotWithRemoteVehiclePointer(void*)
00426405 T CWorld::ProcessVerticalLine_FillGlobeColPoints(CVector const&, float, CEntity*&, bool, bool, bool, bool, bool, bool, CStoredCollPoly*)
00423419 T CWorld::Add(CEntity*)
00429c85 T CWorld::FindObjectsIntersectingAngledCollisionBox(CBox const&, CMatrix const&, CVector const&, float, float, float, float, short*, short, CEntity**, bool, bool, bool, bool, bool)
00426545 T CWorld::ProcessVerticalLineSector_FillGlobeColPoints(CSector&, CRepeatSector&, CColLine const&, CEntity*&, bool, bool, bool, bool, bool, bool, CStoredCollPoly*)
0042a1a5 T CWorld::FindMissionEntitiesIntersectingCubeSectorList(CPtrList&, CVector const&, CVector const&, short*, short, CEntity**, bool, bool, bool)
004265d5 T CWorld::ProcessVerticalLineSectorList_FillGlobeColPoints(CPtrList&, CColLine const&, CEntity*&, bool, CStoredCollPoly*)
00429ee5 T CWorld::FindObjectsIntersectingAngledCollisionBoxSectorList(CPtrList&, CBox const&, CMatrix const&, CVector const&, short*, short, CEntity**)
0042330d T CWorld::Remove(CEntity*)
0096b69c B CWorld::Players
00427745 T CWorld::Process()
00422ec5 T CWorld::ShutDown()
0036cd8b T List_c::AppendItem(ListItem_c*)
0036cd4f T List_c::RemoveHead()
0036cd27 T List_c::RemoveItem(ListItem_c*)
0036ce07 T List_c::RemoveTail()
0036cd87 T List_c::GetNumItems()
0036ce2b T List_c::GetItemOffset(unsigned char, int)
0036cda9 T List_c::InsertAfterItem(ListItem_c*, ListItem_c*)
0036cdd7 T List_c::InsertBeforeItem(ListItem_c*, ListItem_c*)
0036cd0b T List_c::AddItem(ListItem_c*)
0036ce27 T List_c::GetPrev(ListItem_c*)
0036ce23 T List_c::GetTail()
0036cd7b T List_c::RemoveAll()
0036ccff T List_c::List_c()
0036ccff T List_c::List_c()
0036cd09 T List_c::~List_c()
0036cd09 T List_c::~List_c()
004ac373 W SArray<CVector>::~SArray()
004ac359 W SArray<CTask const*>::~SArray()
0027d399 W APKFile::Find(char const*)
0079674c B CBridge::DefaultZLiftPart
00796750 B CBridge::DefaultZLiftRoad
00796754 B CBridge::DefaultZLiftWeight
002e3895 T CBridge::FindBridgeEntities()
002e3891 T CBridge::ShouldLightsBeFlashing()
002e3897 T CBridge::ThisIsABridgeObjectMovingUp(unsigned int)
00796730 B CBridge::TimeOfBridgeBecomingOperational
002e388d T CBridge::Init()
00796734 B CBridge::State
002e388f T CBridge::Update()
0079673c B CBridge::OldLift
00796748 B CBridge::pWeight
00796738 B CBridge::OldState
00796740 B CBridge::pLiftPart
00796744 B CBridge::pLiftRoad
003d693d T CCamera::CamControl()
003db765 T CCamera::FindCamFOV()
003de3dd T CCamera::ProcessFade()
003e161d T CCamera::SetRwCamera(RwCamera*)
003e1715 T CCamera::TakeControl(CEntity*, short, short, int)
003e2151 T CCamera::ProcessShake(float)
003de6ad T CCamera::ProcessShake()
003db425 T CCamera::GetScreenRect(CRect&)
003d4715 T CCamera::SetColVarsPed(int, int)
003e150d T CCamera::SetFadeColour(unsigned char, unsigned char, unsigned char)
003d4af9 T CCamera::SetMotionBlur(int, int, int, int, int)
003e1c39 T CCamera::AddShakeSimple(float, int, float)
003db6c1 T CCamera::FinishCutscene()
003e2495 T CCamera::ProcessFOVLerp(float)
003e23c1 T CCamera::ProcessFOVLerp()
003df2fd T CCamera::SetToSphereMap(float)
003d2ad5 T CCamera::ImproveNearClip(CVehicle*, CPed*, CVector*, CVector*)
002fc0ed W CCamera::IsSphereVisible(CVector const&, float)
00462c4d T CCamera::LoadPathSplines(unsigned int)
003e163f T CCamera::SetWideScreenOn()
003daa1d T CCamera::StartTransition(short)
003d5495 T CCamera::AvoidTheGeometry(CVector const&, CVector const&, CVector&, float)
003dba5b T CCamera::GetLookDirection()
003de4fd T CCamera::ProcessMusicFade()
003e139f T CCamera::RenderMotionBlur()
003d9ec9 T CCamera::SetWideScreenOff()
003e1b45 T CCamera::VectorMoveLinear(CVector*, CVector*, float, bool)
003dbac1 T CCamera::IsItTimeForNewcam(int, int)
003e157d T CCamera::IsTargetingActive(CPlayerPed*)
003d9f55 T CCamera::IsTargetingActive()
003d4975 T CCamera::SetColVarsVehicle(int, int)
003dc5bd T CCamera::SetNearClipScript(float)
003e1a0b T CCamera::UpdateAimingCoors(CVector const&)
003e1ba1 T CCamera::VectorTrackLinear(CVector*, CVector*, float, bool)
003d46fb T CCamera::GetFadingDirection()
003dba31 T CCamera::GetGameCamPosition()
003d3199 T CCamera::ResetDuckingSystem(CPed*)
003db155 T CCamera::RestoreWithJumpCut()
003db5d9 T CCamera::SetMotionBlurAlpha(int)
003ddcb1 T CCamera::UpdateTargetEntity()
003dba05 T CCamera::GetScreenFadeStatus()
003de65d T CCamera::ProcessWideScreenOn()
003d32d5 T CCamera::SetColVarsAimWeapon(int)
003e17f5 T CCamera::TakeControlNoEntity(CVector const&, short, int)
003d25a1 T CCamera::CameraColDetAndReact(CVector*, CVector*)
003e1b13 T CCamera::ConsiderPedAsDucking(CPed*)
003c0251 T CCamera::GetCamDirectlyBehind()
003db5e1 T CCamera::GetCutsceneBarHeight()
003e13cf T CCamera::SetCamCutSceneOffSet(CVector const&)
003dee6d T CCamera::SetCameraUpForMirror()
003df60d T CCamera::TryToStartNewCamMode(int)
003debd9 T CCamera::UpdateSoundDistances()
00952ca8 B CCamera::m_fMouseAccelHorzntl
003dc5c9 T CCamera::CalculateGroundHeight(unsigned int)
003d9fdd T CCamera::ClearPlayerWeaponMode()
003db9c1 T CCamera::GetCutSceneFinishTime()
003e1ae9 T CCamera::IsExtraEntityToIgnore(CEntity*)
003e19ed T CCamera::TakeControlWithSpline(short)
00952cac B CCamera::m_fMouseAccelVertical
003de785 T CCamera::CalculateDerivedValues(bool, bool)
003df311 T CCamera::CalculateFrustumPlanes(bool)
003dbab9 T CCamera::GetPositionAlongSpline()
003e1569 T CCamera::SetNewPlayerWeaponMode(short, short, short)
003e16f5 T CCamera::StopCooperativeCamMode()
00952cb0 B CCamera::m_f3rdPersonCHairMultX
00952cb4 B CCamera::m_f3rdPersonCHairMultY
003ded49 T CCamera::CalculateMirroredMatrix(CVector, float, CMatrix*, CMatrix*)
003de861 T CCamera::CopyCameraMatrixToRWCam(bool)
003d4959 T CCamera::GetArrPosForVehicleType(int, int&)
003d47a9 T CCamera::InitCameraVehicleTweaks()
003de0dd T CCamera::ProcessScriptedCommands()
003e2045 T CCamera::ProcessVectorMoveLinear(float)
003e1efd T CCamera::ProcessVectorMoveLinear()
003db70d T CCamera::SetPercentAlongCutScene(float)
003e16dd T CCamera::StartCooperativeCamMode()
003d483b T CCamera::ApplyVehicleCameraTweaks(CVehicle*)
003d4b0f T CCamera::ConeCastCollisionResolve(CVector*, CVector*, CVector*, float, float, float*)
003db4f1 T CCamera::DrawBordersForWideScreen()
003dba37 T CCamera::GetLookingLRBFirstPerson()
003e2521 T CCamera::GetRoughDistanceToGround()
003db9fd T CCamera::Get_Just_Switched_Status()
003e1dfd T CCamera::ProcessVectorTrackLinear(float)
003e1cb5 T CCamera::ProcessVectorTrackLinear()
003defdd T CCamera::RestoreCameraAfterMirror()
003d9f01 T CCamera::Using1stPersonWeaponMode()
003d2fdd T CCamera::CameraPedModeSpecialCases(CPed*)
003e1a35 T CCamera::SetCamCollisionVarDataSet(int)
003de6d9 T CCamera::StoreValuesDuringInterPol(CVector&, CVector&, CVector&, float&)
003e1839 T CCamera::TakeControlAttachToEntity(CEntity*, CEntity*, CVector&, CVector&, float, short, int)
003d3481 T CCamera::Find3rdPersonQuickAimPitch()
003da82d T CCamera::ProcessObbeCinemaCameraCar()
003e139d T CCamera::ProcessObbeCinemaCameraPed()
003d9ed3 T CCamera::SetCamPositionForFixedMode(CVector const&, CVector const&)
00462d95 T CCamera::DeleteCutSceneCamDataMemory()
003daa0d T CCamera::DontProcessObbeCinemaCamera()
003da485 T CCamera::ProcessObbeCinemaCameraBoat()
003da271 T CCamera::ProcessObbeCinemaCameraHeli()
003e1669 T CCamera::SetZoomValueCamStringScript(short)
003e1649 T CCamera::SetZoomValueFollowPedScript(short)
003e3019 T CCamera::ShouldPedControlsBeRelative()
003d3425 T CCamera::CameraPedAimModeSpecialCases(CPed*)
003db779 T CCamera::Find3rdPersonCamTargetVector(float, CVector, CVector&, CVector&)
003dba95 T CCamera::GetLookingForwardFirstPerson()
003d2efd T CCamera::HandleCameraMotionForDucking(CPed*, CVector*, CVector*, bool)
003dbabf T CCamera::InitialiseCameraForDebugMode()
003da05d T CCamera::ProcessObbeCinemaCameraPlane()
003da64d T CCamera::ProcessObbeCinemaCameraTrain()
003d24ad T CCamera::CameraGenericModeSpecialCases(CPed*)
003d24e9 T CCamera::CameraVehicleModeSpecialCases(CVehicle*)
003db629 T CCamera::Enable1rstPersonWeaponsCamera()
003e170d T CCamera::AllowShootingWith2PlayersInCar(bool)
003d6831 T CCamera::InitialiseScriptableComponents()
003e1a89 T CCamera::SetNearClipBasedOnPedCollision(float)
003db621 T CCamera::Enable1rstPersonCamCntrlsScript()
003e15e9 T CCamera::SetParametersForScriptInterpolation(float, float, unsigned int)
003db14d T CCamera::StartTransitionWhenNotFinishedInter(short)
003d3225 T CCamera::HandleCameraMotionForDuckingDuringAim(CPed*, CVector*, CVector*, bool)
003df139 T CCamera::DealWithMirrorBeforeConstructRenderList(bool, CVector, float, CMatrix*)
003da029 T CCamera::SetCameraDirectlyBehindForFollowPed_CamOnAString()
003e13e3 T CCamera::SetCameraDirectlyInFrontForFollowPed_CamOnAString()
003db631 T CCamera::Fade(float, short)
0046f8c1 T CCamera::Init()
003e140d T CCamera::SetCameraDirectlyBehindForFollowPed_ForAPed_CamOnAString(CPed*)
003e148d T CCamera::SetCameraDirectlyInFrontForFollowPed_ForAPed_CamOnAString(CPed*)
003e1c71 T CCamera::LerpFOV(float, float, float, bool)
003dc7d1 T CCamera::Process()
003d9d69 T CCamera::Restore()
003e1bfd T CCamera::AddShake(float, float, float, float, float)
003db339 T CCamera::CamShake(float, float, float, float)
003d46f5 T CCamera::GetFading()
003d66d1 T CCamera::CCamera()
003d66d1 T CCamera::CCamera()
003d68e5 T CCamera::~CCamera()
003d6891 T CCamera::~CCamera()
003d6891 T CCamera::~CCamera()
00a23e04 B CClouds::ms_horizonZ
00a23e14 B CClouds::m_FrothCoors
00a23dfc B CClouds::ms_colourTop
00a23df4 B CClouds::CloudRotation
0059eaa1 T CClouds::MovingFogInit()
00a23e08 B CClouds::ms_cameraRoll
0059fa11 T CClouds::RenderSkyPolys()
00a23e0c B CClouds::ms_HorizonTilt
005a1c39 T CClouds::MovingFogRender()
0059f925 T CClouds::SetUpOneSkyPoly(CVector, CVector, CVector, CVector, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
00a23e00 B CClouds::ms_colourBottom
005a1901 T CClouds::MovingFog_Create(CVector*)
005a18e5 T CClouds::MovingFog_Delete(int)
005a1a75 T CClouds::MovingFog_Update()
005a18a1 T CClouds::MovingFog_GetWind()
00a23e10 B CClouds::m_fFrothIntensity
00a23df8 B CClouds::IndividualRotation
0059e7f1 T CClouds::VolumetricCloudsInit()
005a0219 T CClouds::RenderBottomFromHeight()
005a0e09 T CClouds::VolumetricCloudsRender()
005a0a19 T CClouds::VolumetricClouds_Create(CVector*)
005a09f5 T CClouds::VolumetricClouds_Delete(int)
005a1891 T CClouds::MovingFog_GetFXIntensity()
00a23e20 B CClouds::m_VolumetricCloudsUsedNum
006b15d8 D CClouds::m_fVolumetricCloudDensity
005a18c1 T CClouds::MovingFog_GetFirstFreeSlot()
00a23e24 B CClouds::m_fVolumetricCloudMaxDistance
005a0de5 T CClouds::VolumetricCloudsGetMaxDistance()
006b15dc D CClouds::m_bVolumetricCloudHeightSwitch
006b15e0 D CClouds::m_fVolumetricCloudWindMoveFactor
005a09c5 T CClouds::VolumetricClouds_GetFirstFreeSlot()
0059e6d1 T CClouds::Init()
00a254d0 B CClouds::ms_mf
00a23e28 B CClouds::ms_vc
0059ebf9 T CClouds::Render()
0059eb49 T CClouds::Update()
0059eb05 T CClouds::Shutdown()
002d96a3 T CColBox::Set(CVector const&, CVector const&, unsigned char, unsigned char, unsigned char)
002d96c9 T CColBox::operator=(CColBox const&)
0049eb21 T CCopPed::SetPartner(CCopPed*)
0049e9f5 T CCopPed::ProcessControl()
0049eb51 T CCopPed::AddCriminalToKill(CPed*)
0049e7d5 T CCopPed::ClearCriminalsToKill()
0049ed75 T CCopPed::RemoveCriminalToKill(CPed*, int)
0049e631 T CCopPed::CCopPed(eCopType)
0049e631 T CCopPed::CCopPed(eCopType)
0049e9a5 T CCopPed::~CCopPed()
0049e789 T CCopPed::~CCopPed()
0049e789 T CCopPed::~CCopPed()
0056e6d1 T CCranes::InitCranes()
0056e6d7 T CCranes::UpdateCranes()
0056e6d3 T CCranes::IsThisCarPickedUp(float, float, CVehicle*)
0056e6d9 T CCranes::IsThisCarBeingCarriedByAnyCrane(CVehicle*)
0056e6dd T CCranes::IsThisCarBeingTargettedByAnyCrane(CVehicle*)
0056e6e1 T CCranes::Save(unsigned char*, unsigned int*)
00302eb9 T CCurves::TestCurves()
00303181 T CCurves::CalcCurvePoint(CVector const&, CVector const&, CVector const&, CVector const&, float, int, CVector&, CVector&)
003035ed T CCurves::CalcCorrectedDist(float, float, float, float*)
00302fe1 T CCurves::CalcSpeedScaleFactor(CVector const&, CVector const&, float, float, float, float)
00302f1d T CCurves::CalcSpeedVariationInBend(CVector const&, CVector const&, float, float, float, float)
00302ebb T CCurves::DistForLineToCrossOtherLine(float, float, float, float, float, float, float, float)
00303f21 T CDarkel::ReadStatus()
007a1144 B CDarkel::WeaponType
007a1158 B CDarkel::KillsNeeded
007a1148 B CDarkel::ModelToKill
003045f1 T CDarkel::StartFrenzy(eWeaponType, int, unsigned short, int, unsigned short*, int, int, int, bool, bool)
00303a6d T CDarkel::DrawMessages()
007a114c B CDarkel::ModelToKill2
007a1150 B CDarkel::ModelToKill3
007a1154 B CDarkel::ModelToKill4
007a1160 B CDarkel::PreviousTime
00303f31 T CDarkel::FrenzyOnGoing()
007a1df9 B CDarkel::bNeedHeadShot
007a1174 B CDarkel::pStartMessage
00303fc5 T CDarkel::FailKillFrenzy()
007a1178 B CDarkel::RegisteredKills
007a1164 B CDarkel::TimeOfFrenzyStart
007a1dfa B CDarkel::bProperKillFrenzy
00303f51 T CDarkel::ResetOnPlayerDeath()
0030406d T CDarkel::RegisterKillByPlayer(CPed const*, eWeaponType, bool, int)
007a1170 B CDarkel::AmmoInterruptedWeapon
007a116c B CDarkel::InterruptedWeaponType
003042e5 T CDarkel::CheckDamagedWeaponType(int, int)
003043cd T CDarkel::RegisterKillNotByPlayer(CPed const*, eWeaponType)
00304971 T CDarkel::QueryModelsKilledByPlayer(int, int)
00304951 T CDarkel::ResetModelsKilledByPlayer(int)
007a1df8 B CDarkel::bStandardSoundAndMessages
00304461 T CDarkel::RegisterCarBlownUpByPlayer(CVehicle*, int)
00304985 T CDarkel::FindTotalPedsKilledByPlayer(int)
007a1168 B CDarkel::InterruptedWeaponTypeSelected
0030435d T CDarkel::ThisPedShouldBeKilledForFrenzy(CPed const*)
00303859 T CDarkel::DealWithWeaponChangeAtEndOfFrenzy()
00304575 T CDarkel::ThisVehicleShouldBeKilledForFrenzy(CVehicle const*)
003036a5 T CDarkel::Init()
007a1140 B CDarkel::Status
003036b5 T CDarkel::Update()
003049e9 T CDarkel::CalcFade(unsigned int, unsigned int, unsigned int)
007a115c B CDarkel::TimeLimit
003ec07d T CEntity::UpdateAnim()
003ee045 T CEntity::GetColModel()
00280261 W CEntity::SetIsStatic(bool)
0028027b W CEntity::ProcessShift()
003eb2a1 T CEntity::CreateEffects()
003ec199 T CEntity::GetIsOnScreen()
003ed1fd T CEntity::RenderEffects()
003eb00d T CEntity::SetModelIndex(unsigned int)
004104dd T CEntity::SetupLighting()
0028027d W CEntity::TestCollision(bool)
003ec047 T CEntity::UpdateRpHAnim()
003ec039 T CEntity::UpdateRwFrame()
003eb90d T CEntity::CreateRwObject()
003ebbfd T CEntity::DeleteRwObject()
003eb7b1 T CEntity::DestroyEffects()
002802c5 W CEntity::ProcessControl()
0041051d T CEntity::RemoveLighting(bool)
0040eab1 T CEntity::PruneReferences()
003eba81 T CEntity::AttachToRwObject(RwObject*, bool)
005b0269 T CEntity::IsEntityOccluded()
002802c7 W CEntity::ProcessCollision()
003ee325 T CEntity::SetRwObjectAlpha(int)
003ee085 T CEntity::SetupBigBuilding()
003eeda5 T CEntity::GetRandom2dEffect(int, unsigned char)
0040e871 T CEntity::RegisterReference(CEntity**)
0040eb35 T CEntity::ResolveReferences()
003ebb55 T CEntity::DetachFromRwObject()
003ed065 T CEntity::BuildWindSockMatrix()
0040eafd T CEntity::CleanUpOldReference(CEntity**)
003eb0b1 T CEntity::HasPreRenderEffects()
003ecfa9 T CEntity::ModifyMatrixForCrane()
003ee43d T CEntity::CalculateBBProjection(CVector*, CVector*, CVector*, CVector*)
003ee3b9 T CEntity::FindTriggerPointCoors(int)
003eb029 T CEntity::SetModelIndexNoCreate(unsigned int)
005a4181 T CEntity::ProcessLightsForEntity()
003ed02d T CEntity::PreRenderForGlassWindow()
003ec215 T CEntity::DoesNotCollideWithFlyers()
003ed5e9 T CEntity::GetIsBoundingBoxOnScreen()
003ecdf1 T CEntity::ModifyMatrixForTreeInWind()
005a6f6d T CEntity::RemoveEscalatorsForEntity()
003edf5d T CEntity::LivesInThisNonOverlapSector(int, int)
003ee0bd T CEntity::ModifyMatrixForBannerInWind()
00280289 W CEntity::FlagToDestroyWhenNextProcessed()
00280283 W CEntity::SpecialEntityPreCollisionStuff(CPhysical*, bool, bool&, bool&, bool&, bool&)
00280285 W CEntity::SpecialEntityCalcCollisionSteps(bool&, bool&)
003ed8fd T CEntity::Add(CRect const&)
003ed8d9 T CEntity::Add()
003ee001 T CEntity::GetDistanceFromCentreOfMassToBaseOfModel()
003edbe9 T CEntity::Remove()
003ed25d T CEntity::Render()
00280281 W CEntity::Teleport(CVector, unsigned char)
003ed55d T CEntity::IsVisible()
003ec28d T CEntity::PreRender()
003eaf41 T CEntity::CEntity()
003eaf41 T CEntity::CEntity()
003eafc9 T CEntity::~CEntity()
003eaf89 T CEntity::~CEntity()
003eaf89 T CEntity::~CEntity()
003111b5 T CGarage::TidyUpGarage()
0031242d T CGarage::IsGarageEmpty()
003115e9 T CGarage::SlideDoorOpen()
00313a3d T CGarage::OpenThisGarage()
00313a5b T CGarage::CloseThisGarage()
00311815 T CGarage::SlideDoorClosed()
0030e6f1 T CGarage::InitDoorsAtStart()
00314341 T CGarage::CenterCarInGarage(CVehicle*)
003112e1 T CGarage::TidyUpGarageClose()
0031226d T CGarage::IsEntityTouching3D(CEntity*)
003116c9 T CGarage::FindDoorsWithGarage(CObject**, CObject**)
003134ed T CGarage::IsPointInsideGarage(CVector)
00313175 T CGarage::IsPointInsideGarage(CVector, float)
003124a5 T CGarage::IsAnyCarBlockingDoor()
003142e1 T CGarage::PlayerArrestedOrDied()
00311f41 T CGarage::IsPlayerOutsideGarage(float)
003137dd T CGarage::BuildRotatedDoorMatrix(CEntity*, float)
00312d35 T CGarage::NeatlyLineUpStoredCars(CStoredCar*)
00311b81 T CGarage::IsEntityEntirelyOutside(CEntity*, float)
003119b1 T CGarage::IsEntityEntirelyInside3D(CEntity*, float)
00312abd T CGarage::RestoreCarsForThisHideOut(CStoredCar*)
00312f81 T CGarage::RightModTypeForThisGarage(CVehicle*)
00313011 T CGarage::IsAnyOtherCarTouchingGarage(CVehicle*)
00313395 T CGarage::IsAnyOtherPedTouchingGarage(CPed*)
0031322b T CGarage::IsPlayerEntirelyInsideGarage()
00311fe1 T CGarage::ThrowCarsNearDoorOutOfGarage(CVehicle*)
0031270d T CGarage::FindMaxNumStoredCarsForGarage()
00311d15 T CGarage::IsStaticPlayerCarEntirelyInside()
0031271d T CGarage::RemoveCarsBlockingDoorNotInside()
00311f75 T CGarage::CalcDistToGarageRectangleSquared(float, float)
0031325f T CGarage::EntityHasASphereWayOutsideGarage(CEntity*, float)
00312859 T CGarage::StoreAndRemoveCarsForThisHideOut(CStoredCar*, int)
00312e99 T CGarage::RestoreCarsForThisImpoundingGarage(CStoredCar*)
003125f9 T CGarage::CountCarsWithCenterPointWithinGarage(CEntity*)
00312b7d T CGarage::StoreAndRemoveCarsForThisImpoundingGarage(CStoredCar*, int)
0030e8a1 T CGarage::Update(int)
003f4edd T CKeyGen::GetUppercaseKey(char const*)
003f4f21 T CKeyGen::AppendStringToKey(unsigned int, char const*)
003f4ea9 T CKeyGen::GetKey(char const*)
003f4e6d T CKeyGen::GetKey(char const*, int)
006aa7a8 D CKeyGen::keyTable
0044f0f9 T CMatrix::SetRotateX(float)
0044f149 T CMatrix::SetRotateY(float)
0044f199 T CMatrix::SetRotateZ(float)
0044efe3 T CMatrix::SetTranslate(float, float, float)
0044ee0d T CMatrix::UpdateMatrix(RwMatrixTag*)
0044f8b3 T CMatrix::ForceUpVector(CVector)
0044f935 T CMatrix::CheckIntegrity()
0044ee75 T CMatrix::CopyOnlyMatrix(CMatrix const&)
0044f013 T CMatrix::SetRotateXOnly(float)
0044f067 T CMatrix::SetRotateYOnly(float)
0044f0b9 T CMatrix::SetRotateZOnly(float)
0044f7b5 T CMatrix::Reorthogonalise()
0044ef89 T CMatrix::ResetOrientation()
0044f00d T CMatrix::SetTranslateOnly(float, float, float)
0044e6ad T CMatrix::ConvertToEulerAngles(float&, float&, float&, int)
0044e8c9 T CMatrix::ConvertFromEulerAngles(float, float, float, int)
0044ecab T CMatrix::Attach(RwMatrixTag*, bool)
0044edf3 T CMatrix::Detach()
0044f5bf T CMatrix::Rotate(float, float, float)
0044ed19 T CMatrix::Update()
0044f34f T CMatrix::RotateX(float)
0044f41f T CMatrix::RotateY(float)
0044f4ef T CMatrix::RotateZ(float)
0044ed4d T CMatrix::AttachRW(RwMatrixTag*, bool)
0044efa3 T CMatrix::SetScale(float)
0044efbf T CMatrix::SetScale(float, float, float)
0044ef69 T CMatrix::SetUnity()
0044f2b9 T CMatrix::SetRotate(CQuaternion const&)
0044f1e7 T CMatrix::SetRotate(float, float, float)
0044ec75 T CMatrix::CMatrix(RwMatrixTag*, bool)
0044eb8d T CMatrix::CMatrix(CMatrixSerialize const&)
0044eadd T CMatrix::CMatrix(CMatrix const&)
0044ec75 T CMatrix::CMatrix(RwMatrixTag*, bool)
0044eb8d T CMatrix::CMatrix(CMatrixSerialize const&)
0044eadd T CMatrix::CMatrix(CMatrix const&)
0044ed01 T CMatrix::~CMatrix()
0044ed01 T CMatrix::~CMatrix()
0044ebc7 T CMatrix::operator=(CMatrixSerialize const&)
0044eb17 T CMatrix::operator=(CMatrix const&)
0044eea7 T CMatrix::operator+=(CMatrix const&)
00455681 T CObject::SetIsStatic(bool)
004537f9 T CObject::CanBeDeleted()
00454b39 T CObject::DoBurnEffect()
00453f71 T CObject::ObjectDamage(float, CVector*, CVector*, CEntity*, eWeaponType)
00455b91 T CObject::RefModelInfo(int)
00455775 T CObject::TryToExplode()
00455d99 T CObject::GetRopeHeight()
00455db9 T CObject::SetRopeHeight(float)
00410539 T CObject::SetupLighting()
00455b87 T CObject::CanBeTargetted()
004537f5 T CObject::CreateRwObject()
00453825 T CObject::ProcessControl()
00410615 T CObject::RemoveLighting(bool)
00455f5d T CObject::ResetDoorAngle()
0099e538 B CObject::nNoTempObjects
00453815 T CObject::SetRelatedDummy(CDummyObject*)
00455ba9 T CObject::SetRemapTexture(RwTexture*, char const*)
006ae4c0 D CObject::nBodyCastHealth
00455971 T CObject::ObjectFireDamage(float, CEntity*)
006ae4c4 D CObject::fDistToNearestTree
004543d5 T CObject::ProcessControlLogic()
004537bd T CObject::AddToControlCodeList()
00455c15 T CObject::DeleteAllTempObjects()
00455b71 T CObject::SetObjectTargettable(unsigned char)
004535d9 T CObject::TryToFreeUpTempObjects(int)
0099e53a B CObject::bArea51SamSiteDisabled
00455c75 T CObject::DeleteAllMissionObjects()
004545a5 T CObject::ProcessSamSiteBehaviour()
00455ddd T CObject::GetObjectCarriedWithRope()
00455e21 T CObject::GrabObjectToCarryWithRope(CPhysical*)
004532c5 T CObject::RemoveFromControlCodeList()
004556d9 T CObject::SetMatrixForTrainCrossing(CMatrix*, float)
00455eb1 T CObject::CanBeUsedToTakeCoverBehind()
00455cd9 T CObject::DeleteAllTempObjectsInArea(CVector, float)
003149c1 T CObject::ProcessGarageDoorBehaviour()
00455dfd T CObject::ReleaseObjectCarriedWithRope()
00454cc5 T CObject::GetLightingFromCollisionBelow()
004548c5 T CObject::ProcessTrainCrossingBehaviour()
00454fd5 T CObject::SpecialEntityPreCollisionStuff(CPhysical*, bool, bool&, bool&, bool&, bool&)
00455285 T CObject::SpecialEntityCalcCollisionSteps(bool&, bool&)
006ae4c8 D CObject::bAircraftCarrierSamSiteDisabled
00452c99 T CObject::Init()
00484fad T CObject::Load()
00484f41 T CObject::Save()
00453661 T CObject::Create(CDummyObject*)
0045343d T CObject::Create(int, bool)
00454f55 T CObject::Render()
004557a1 T CObject::Explode()
004543bd T CObject::LockDoor()
00455bb9 T CObject::Teleport(CVector, unsigned char)
00454d0d T CObject::PreRender()
00453059 T CObject::CObject(CDummyObject*)
00453011 T CObject::CObject(int, bool)
00452c6d T CObject::CObject()
00453059 T CObject::CObject(CDummyObject*)
00453011 T CObject::CObject(int, bool)
00452c6d T CObject::CObject()
0045331d T CObject::~CObject()
004530fd T CObject::~CObject()
004530fd T CObject::~CObject()
00453355 T CObject::operator delete(void*)
00453385 T CObject::operator new(unsigned int)
004533e9 T CObject::operator new(unsigned int, int)
0031f5f9 T CPickup::ProcessGunShot(CVector*, CVector*)
0031d791 T CPickup::GetRidOfObjects()
0031d511 T CPickup::GiveUsAPickUpObject(CObject**, int)
0031f701 T CPickup::ExtractAmmoFromPickup(CPlayerPed*)
0031fa69 T CPickup::FindStringForTextIndex(int)
0031f169 T CPickup::FindTextIndexForString(char*)
0031fac1 T CPickup::PickUpShouldBeInvisible()
0031d4b9 T CPickup::IsPickUpCloseEnoughForObjects()
0031d135 T CPickup::Remove()
0031d7fd T CPickup::Update(CPlayerPed*, CVehicle*, int)
00324729 T CRemote::TakeRemoteControlOfCar(CVehicle*)
003244ad T CRemote::GivePlayerRemoteControlledCar(float, float, float, float, unsigned short)
00324651 T CRemote::TakeRemoteControlledCarFromPlayer(bool)
002e1cb5 T CSphere::Set(float, CVector const&)
005c57e5 T CSprite::Initialise()
005c57e7 T CSprite::Draw3DSprite(float, float, float, float, float, float, float, float, float)
005c8039 T CSprite::Set4Vertices2D(RwOpenGLVertex*, CRect const&, CRGBA const&, CRGBA const&, CRGBA const&, CRGBA const&)
005c85e1 T CSprite::Set4Vertices2D(RwOpenGLVertex*, float, float, float, float, float, float, float, float, CRGBA const&, CRGBA const&, CRGBA const&, CRGBA const&)
005c57e9 T CSprite::CalcScreenCoors(RwV3d const&, RwV3d*, float*, float*, bool, bool)
00a7c1e4 B CSprite::m_f2DFarScreenZ
005c5965 T CSprite::CalcHorizonCoors()
005c5a9d T CSprite::InitSpriteBuffer()
00a7c1e0 B CSprite::m_f2DNearScreenZ
005c59f5 T CSprite::FlushSpriteBuffer()
005c5ac5 T CSprite::InitSpriteBuffer2D()
005c5fc1 T CSprite::RenderOneXLUSprite(float, float, float, float, float, unsigned char, unsigned char, unsigned char, short, float, unsigned char, unsigned char, unsigned char, float, float)
005c8111 T CSprite::RenderOneXLUSprite2D(float, float, float, float, RwRGBA const&, short, unsigned char)
00a7c1e8 B CSprite::m_fRecipNearClipPlane
005c5b11 T CSprite::RenderBufferedOneXLUSprite(float, float, float, float, float, unsigned char, unsigned char, unsigned char, short, float, unsigned char)
005c66ed T CSprite::RenderOneXLUSprite_Triangle(float, float, float, float, float, float, float, unsigned char, unsigned char, unsigned char, short, float, unsigned char)
005c7d09 T CSprite::RenderBufferedOneXLUSprite2D(float, float, float, float, RwRGBA const&, short, unsigned char)
00a7c1ec B CSprite::m_bFlushSpriteBufferSwitchZTest
005c686d T CSprite::RenderOneXLUSprite_Rotate_Aspect(float, float, float, float, float, unsigned char, unsigned char, unsigned char, short, float, float, unsigned char)
005c788d T CSprite::RenderOneXLUSprite_Rotate_2Colours(float, float, float, float, float, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, float, float, float, float, unsigned char)
005c6fd5 T CSprite::RenderOneXLUSprite_Rotate_Dimension(float, float, float, float, float, unsigned char, unsigned char, unsigned char, short, float, float, unsigned char)
005c86c5 T CSprite::RenderOneXLUSprite2D_Rotate_Dimension(float, float, float, float, RwRGBA const&, short, float, unsigned char)
005c6275 T CSprite::RenderBufferedOneXLUSprite_Rotate_Aspect(float, float, float, float, float, unsigned char, unsigned char, unsigned char, short, float, float, unsigned char)
005c7245 T CSprite::RenderBufferedOneXLUSprite_Rotate_2Colours(float, float, float, float, float, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, float, float, float, float, unsigned char)
005c6b6d T CSprite::RenderBufferedOneXLUSprite_Rotate_Dimension(float, float, float, float, float, unsigned char, unsigned char, unsigned char, short, float, float, unsigned char)
005c8245 T CSprite::RenderBufferedOneXLUSprite2D_Rotate_Dimension(float, float, float, float, RwRGBA const&, short, float, unsigned char)
00450a03 T CVector::FromMultiply(CMatrix const&, CVector const&)
00450aad T CVector::FromMultiply3X3(CMatrix const&, CVector const&)
00450c29 T CVector::NormaliseAndMag()
00450bd1 T CVector::Normalise()
004214a1 T CWanted::Initialise()
00421d21 T CWanted::AddCrimeToQ(eCrimeType, unsigned int, CVector const&, bool, bool)
00422be3 T CWanted::IsInPursuit(CCopPed*)
0042151d T CWanted::ClearQdCrimes()
00421d01 T CWanted::RegisterCrime(eCrimeType, CVector const&, unsigned int, bool)
004229e5 T CWanted::SetPursuitCop(CCopPed*)
00421c81 T CWanted::UpdateCrimesQ()
00422419 T CWanted::AreFbiRequired()
00422049 T CWanted::ReportCrimeNow(eCrimeType, CVector const&, bool)
00422151 T CWanted::SetWantedLevel(int)
00422429 T CWanted::AreArmyRequired()
00422409 T CWanted::AreSwatRequired()
00422db1 T CWanted::UpdateEachFrame()
004221c9 T CWanted::CheatWantedLevel(int)
00422b4b T CWanted::RemovePursuitCop(CCopPed*)
00422761 T CWanted::RemovePursuitCop(CCopPed*, CCopPed**, unsigned char&)
00422575 T CWanted::CanCopJoinPursuit(CCopPed*, unsigned char, CCopPed**, unsigned char&)
00421b3d T CWanted::UpdateWantedLevel()
006ab38c D CWanted::MaximumWantedLevel
00422439 T CWanted::NumOfHelisRequired()
00421609 T CWanted::ResetPolicePursuit()
006ab390 D CWanted::nMaximumWantedLevel
004223fd T CWanted::AreMiamiViceRequired()
004222a9 T CWanted::SetWantedLevelNoDrop(int)
0042227d T CWanted::SetMaximumWantedLevel(int)
0042195d T CWanted::WorkOutPolicePresence(CVector, float)
00422c3d T CWanted::RemoveExcessPursuitCops()
0042155d T CWanted::InitialiseStaticVariables()
00422009 T CWanted::RegisterCrime_Immediately(eCrimeType, CVector const&, unsigned int, bool)
00422661 T CWanted::ComputePursuitCopToDisplace(CCopPed*, CCopPed**)
004223b5 T CWanted::ClearWantedLevelAndGoOnParole()
0096b698 B CWanted::bUseNewsHeliInAdditionToPolice
0042158d T CWanted::Reset()
0042160d T CWanted::Update()
005dd741 T CWeapon::FireSniper(CPed*, CEntity*, CVector*)
005db901 T CWeapon::Initialise(eWeaponType, int, CPed*)
005e02b9 T CWeapon::AddGunshell(CEntity*, CVector const&, CVector2D const&, float)
005defa1 T CWeapon::FireFromCar(CVehicle*, bool, bool)
005dff25 T CWeapon::DoDoomAiming(CEntity*, CVector*, CVector*)
005e2345 T CWeapon::StaticUpdate()
005e25f1 T CWeapon::IsType2Handed()
005e1871 T CWeapon::LaserScopeDot(CVector*, float*)
005db8e9 T CWeapon::UpdateWeapons()
00a861d1 B CWeapon::ms_bTakePhoto
005e07d9 T CWeapon::DoBulletImpact(CEntity*, CEntity*, CVector*, CVector*, CColPoint*, int)
005e1755 T CWeapon::DoWeaponEffect(CVector, CVector)
005de6a9 T CWeapon::FireAreaEffect(CEntity*, CVector*, CEntity*, CVector*)
005dc179 T CWeapon::FireInstantHit(CEntity*, CVector*, CVector*, CEntity*, CVector*, CVector*, bool, bool)
005ddecd T CWeapon::FireProjectile(CEntity*, CVector*, CEntity*, CVector*, float)
005e0431 T CWeapon::SetUpPelletCol(int, CEntity*, CEntity*, CVector&, CColPoint&, CMatrix&)
005dea19 T CWeapon::TakePhotograph(CEntity*, CVector*)
005db8bd T CWeapon::ShutdownWeapons()
005e1b4d T CWeapon::DoTankDoomAiming(CEntity*, CEntity*, CVector*, CVector*)
005e260f T CWeapon::IsTypeProjectile()
005e2325 T CWeapon::StopWeaponEffect()
00a861d8 B CWeapon::ms_PelletTestCol
005dda79 T CWeapon::FireM16_1stPerson(CPed*)
005db889 T CWeapon::InitialiseWeapons()
005df749 T CWeapon::ProcessLineOfSight(CVector const&, CVector const&, CColPoint&, CEntity*&, eWeaponType, CEntity*, bool, bool, bool, bool, bool, bool, bool)
00a861d4 B CWeapon::m_nTakePhotoFrames
005e266d T CWeapon::CanBeUsedFor2Player(eWeaponType)
005e2631 T CWeapon::CanBeUsedFor2Player()
005dfb81 T CWeapon::DoDriveByAutoAiming(CEntity*, CVehicle*, CVector*, CVector*, bool)
005e1395 T CWeapon::GenerateDamageEvent(CPed*, CEntity*, eWeaponType, int, ePedPieceTypes, int)
005df099 T CWeapon::FireInstantHitFromCar(CVehicle*, bool, bool)
005e2c49 T CWeapon::HasWeaponAmmoToBeUsed()
005e19f5 T CWeapon::FireInstantHitFromCar2(CVector, CVector, CVehicle*, CEntity*)
006b2c60 D CWeapon::ms_fExtinguisherAimAngle
00a861d0 B CWeapon::ms_bPhotographHasBeenTaken
005df799 T CWeapon::TargetWeaponRangeMultiplier(CEntity*, CEntity*)
005df845 T CWeapon::CheckForShootingVehicleOccupant(CEntity**, CColPoint*, eWeaponType, CVector const&, CVector const&)
005e161d T CWeapon::PickTargetForHeatSeekingMissile(CVector, CVector, float, CEntity*, bool, CEntity*)
005e3029 T CWeapon::EvaluateTargetForHeatSeekingMissile(CEntity*, CVector&, CVector&, float, bool, CEntity*)
005e2c75 T CWeapon::FindNearestTargetEntityWithScreenCoors(float, float, float, CVector, float*, float*)
005db9f1 T CWeapon::Fire(CEntity*, CVector*, CVector*, CEntity*, CVector*, CVector*)
005db853 T CWeapon::Reload(CPed*)
005e1f19 T CWeapon::Update(CPed*)
005db99d T CWeapon::Shutdown()
005db811 T CWeapon::CWeapon(eWeaponType, int)
005db811 T CWeapon::CWeapon(eWeaponType, int)
002b331d T CWidget::GetEnabled()
002b411f W CWidget::IsHeldDown()
002b3485 T CWidget::IsReleased(CVector2D*)
002b3691 T CWidget::IsSwipedUp()
002b3cad T CWidget::SetEnabled(bool)
002b3ec5 T CWidget::SetScissor(CRect&)
002b2a95 T CWidget::SetTexture(CSprite2d&, char*, bool)
002b3dfd T CWidget::ManageAlpha()
002b3bed T CWidget::DrawHelpIcon(char const*, float, float, float, int)
002b405f T CWidget::IsInsideRect(CVector2D, CRect)
002b3631 T CWidget::IsSwipedDown()
002b3571 T CWidget::IsSwipedLeft()
002b415f W CWidget::OnSwipeTouch()
002b3e61 T CWidget::UpdateTiming()
002b35d1 T CWidget::IsSwipedRight()
002b3d15 T CWidget::SetScreenRect(CRect const&)
002b4171 W CWidget::SetWidgetInfo(char*, float, bool, bool, bool, bool, int)
002b3cb3 T CWidget::GetScreenWidth()
002b4113 W CWidget::GetWidgetValue()
002b3c2d T CWidget::IsDoubleTapped()
002b40af T CWidget::IsInsideCircle(CVector2D, CRect)
002b3559 T CWidget::IsPinchZooming(CVector2D*)
002b38cd T CWidget::OnInitialTouch()
006fa2e8 B CWidget::SWIPE_DISTANCE
002b4165 W CWidget::SetSliderRange(float, float)
002b4173 W CWidget::SetWidgetInfo2(int, int, int, int, char*, char*)
002b4167 W CWidget::SetWidgetValue(float)
006fa290 B CWidget::m_bInsidePause
006fa288 B CWidget::m_fElapsedTime
002b2aef T CWidget::ClearTapHistory()
002b4119 W CWidget::GetWidgetValue2(float*, float*)
002b415d W CWidget::OnReleasedTouch()
002b4163 W CWidget::SetEquippedItem(int)
002b38b1 T CWidget::SetSwipedWidget(int, CWidget*)
002b416d W CWidget::SetWidgetValue2(float, float)
002b416f W CWidget::SetWidgetValue3(float, float, float)
006fa2b4 B CWidget::m_pSwipedWidget
002b4011 T CWidget::CreateHoldEffect(char const*, bool, CRGBA, bool)
002b3cb9 T CWidget::GetGradientColor(float, int)
002b39d9 T CWidget::GetNumTapsInTime(float)
002b3915 T CWidget::GetPinchDistance()
002b415b W CWidget::OnPinchZoomStart()
002b3fe9 T CWidget::SetTextureStatic(CSprite2d&, char*)
006fa2c8 B CWidget::m_vecTouchAnchor
002b410f T CWidget::DrawTitleSafeArea()
002b3835 T CWidget::SetReleasedWidget(int, CWidget*)
006fa2a4 B CWidget::m_pReleasedWidget
002b32e5 T CWidget::AndroidBackEnabled()
002b3851 T CWidget::SetPinchZoomWidget(CWidget*)
006fa2c4 B CWidget::m_pPinchZoomWidget
002b3c79 T CWidget::DecrementFrameCount()
002b36f1 T CWidget::CoordsAreInsideWidget(CVector2D const&, bool)
002b3809 T CWidget::SetInitialTouchWidget(int, CWidget*)
006fa294 B CWidget::m_pInitialTouchWidget
002b4111 W CWidget::Draw()
002b2cc9 T CWidget::Update()
002b4161 W CWidget::Pulsate()
006fa280 B CWidget::m_fTime
002b411b W CWidget::IsButton()
002b4123 W CWidget::IsRegion()
002b4127 W CWidget::IsSwiped()
002b3325 T CWidget::IsTouched(CVector2D*)
002b3021 T CWidget::Visualize()
002b2981 T CWidget::CWidget(char const*, WidgetPosition const&, unsigned int, HIDMapping)
002b2cc5 T CWidget::~CWidget()
002b2b09 T CWidget::~CWidget()
002b2b09 T CWidget::~CWidget()
006dfd70 B OALBase::livingCount
0027ffbd W OALBase::Release()
006dfd64 B OALBase::trashCan
002800b1 W OALBase::~OALBase()
00280091 W OALBase::~OALBase()
0028cc9d W OSArray<MappingPair>::~OSArray()
00220e11 W OSArray<_rpGeometryStreamBuilder>::~OSArray()
00295c49 W OSArray<KeyPair>::~OSArray()
0027e745 W OSArray<BankData>::~OSArray()
0027cb77 W OSArray<LeaderboardQuerySt*>::~OSArray()
0027ff87 W OSArray<OALBase*>::~OSArray()
0027cb91 W OSArray<ZIPFile*>::~OSArray()
0027e75f W OSArray<LoadTask*>::~OSArray()
0027ffa1 W OSArray<OALSource*>::~OSArray()
0027d2ed W OSArray<char*>::~OSArray()
002a36e3 W OSArray<int>::OSArray(OSArray<int> const&)
0026f5f9 T ZIPFile::Initialize(char const*)
0026f535 T ZIPFile::SortEntries()
0026f52d T ZIPFile::EntryCompare(void const*, void const*)
0026fd9d T ZIPFile::ReadExisting(void*, int, void*, unsigned int)
006d7164 B ZIPFile::storageFiles
0026a989 T ZIPFile::FindFromStorage(char const*, ZIPFile**)
00266fc1 T ZIPFile::OpenFromStorage(char const*, OSFileAccessType)
0026fc65 T ZIPFile::Find(char const*)
0026fd25 T ZIPFile::Open(int, OSFileAccessType, unsigned int*)
0026f58d T ZIPFile::~ZIPFile()
0026f58d T ZIPFile::~ZIPFile()
0027cb53 W _JNIEnv::CallIntMethod(_jobject*, _jmethodID*, ...)
0027cb01 W _JNIEnv::CallVoidMethod(_jobject*, _jmethodID*, ...)
0027d34f W _JNIEnv::CallFloatMethod(_jobject*, _jmethodID*, ...)
0027d307 W _JNIEnv::CallObjectMethod(_jobject*, _jmethodID*, ...)
0027cb25 W _JNIEnv::CallBooleanMethod(_jobject*, _jmethodID*, ...)
0027d32b W _JNIEnv::CallStaticObjectMethod(_jclass*, _jmethodID*, ...)
0027d373 W _JNIEnv::NewObject(_jclass*, _jmethodID*, ...)
003a7b79 T CAESound::Initialise(short, short, CAEAudioEntity*, CVector, float, float, float, float, unsigned char, unsigned short, float, short)
003a7e17 T CAESound::GetFrontEnd()
003a77fd T CAESound::SetPosition(CVector)
003a7e5d T CAESound::GetRolledOff()
003a7c45 T CAESound::NewVPSLentry()
003a7e49 T CAESound::GetUnduckable()
003a7e21 T CAESound::GetUnpausable()
003a7e71 T CAESound::GetForcedFront()
003a7efd T CAESound::UpdatePlayTime(short, short, short)
003a7f67 T CAESound::CalculateVolume()
003a7d85 T CAESound::UpdateFrequency()
003a7e3f T CAESound::GetMusicMastered()
003a7e67 T CAESound::GetSmoothDucking()
003a7e0d T CAESound::GetUncancellable()
003a7e7b T CAESound::SoundHasFinished()
003a7cf1 T CAESound::UpdateParameters(short)
003a7e2b T CAESound::GetPlayPhysically()
003a7d7b T CAESound::GetRequestUpdates()
003a7e53 T CAESound::GetUncompressable()
003a7cad T CAESound::CalculateFrequency()
003a7e35 T CAESound::GetStartPercentage()
003a7dc5 T CAESound::StopSoundAndForget()
003a7fef T CAESound::GetRelativePosition(CVector*)
003a7df7 T CAESound::SetIndividualEnvironment(unsigned short, unsigned short)
003a7d99 T CAESound::RegisterWithPhysicalEntity(CEntity*)
003a7a89 T CAESound::UnregisterWithPhysicalEntity()
003a7d4f T CAESound::GetLifespanTiedToPhysicalEntity()
003a8051 T CAESound::GetSlowMoFrequencyScalingFactor()
003a8011 T CAESound::GetRelativePlaybackFrequencyWithDoppler()
003a7d59 T CAESound::StopSound()
003a79b5 T CAESound::CAESound(CAESound&)
003a7759 T CAESound::CAESound(short, short, CAEAudioEntity*, CVector, float, float, float, float, unsigned char, unsigned short, float)
003a79b5 T CAESound::CAESound(CAESound&)
003a7759 T CAESound::CAESound(short, short, CAEAudioEntity*, CVector, float, float, float, float, unsigned char, unsigned short, float)
003a7a6d T CAESound::~CAESound()
003a7a6d T CAESound::~CAESound()
003a7aa5 T CAESound::operator=(CAESound&)
002ea401 T CCarCtrl::ChooseModel(int*)
002fc92d W CCarCtrl::WeaveForPed(CEntity*, CVehicle*, float*, float*)
002eb8dd T CCarCtrl::CreateConvoy(CVehicle*, int)
002e774d T CCarCtrl::InitSequence(int)
0079677c B CCarCtrl::NumParkedCars
00796770 B CCarCtrl::NumRandomCars
002ed3a9 T CCarCtrl::DragCarToPoint(CVehicle*, CVector*)
007967a0 B CCarCtrl::MiamiViceCycle
00796778 B CCarCtrl::NumMissionCars
002fb6ed T CCarCtrl::UpdateCarCount(CVehicle*, unsigned char)
002fcb15 W CCarCtrl::WeaveForObject(CEntity*, CVehicle*, float*, float*)
002ea745 T CCarCtrl::ChooseBoatModel()
002f0c41 T CCarCtrl::IsAnyoneParking()
002fb7f1 T CCarCtrl::ReconsiderRoute(CVehicle*)
002fb7d9 T CCarCtrl::BoatWithTallMast(unsigned int)
002ee375 T CCarCtrl::ScanForPedDanger(CVehicle*)
002ecc85 T CCarCtrl::UpdateCarOnRails(CVehicle*)
002fc361 W CCarCtrl::WeaveForOtherCar(CEntity*, CVehicle*, float*, float*)
002eb4a5 T CCarCtrl::CreatePoliceChase(CVehicle*, int, CNodeAddress)
002f33d9 T CCarCtrl::FindMaxSteerAngle(CVehicle*)
002f0d11 T CCarCtrl::FindPathDirection(CNodeAddress, CNodeAddress, CNodeAddress, bool*)
002ec525 T CCarCtrl::RemoveDistantCars()
002f7199 T CCarCtrl::SteerAIHeliToLand(CAutomobile*)
002ec521 T CCarCtrl::ChooseGangCarModel(int)
002ebe05 T CCarCtrl::CreateCarForScript(int, CVector, unsigned char)
002e833d T CCarCtrl::GenerateRandomCars()
00796774 B CCarCtrl::NumLawEnforcerCars
007967a8 B CCarCtrl::bCarIsBeingCreated
002f83b9 T CCarCtrl::DealWithBend_Racing(CVehicle*, CLinkAddress, CLinkAddress, CLinkAddress, CLinkAddress, signed char, signed char, signed char, signed char, float, float*, float*, float*, float*, CVector*)
002f1a45 T CCarCtrl::FindGhostRoadHeight(CVehicle*)
002e7789 T CCarCtrl::FindSequenceElement(int)
002f1b8d T CCarCtrl::FindSpeedMultiplier(float, float, float, float)
00796784 B CCarCtrl::NumAmbulancesOnDuty
00796788 B CCarCtrl::NumFireTrucksOnDuty
00685fbc D CCarCtrl::CarDensityMultiplier
002ec491 T CCarCtrl::ChooseCarModelToLoad(int)
002ea315 T CCarCtrl::ChoosePoliceCarModel(unsigned int)
002e848d T CCarCtrl::GenerateOneRandomCar()
002fae51 T CCarCtrl::IsThisVehicleOnRadar(CVehicle*, int*)
00685fc0 D CCarCtrl::MaxNumberOfCarsInUse
00796780 B CCarCtrl::NumPermanentVehicles
002ea755 T CCarCtrl::PickNextNodeRandomly(CVehicle*)
002ec2b9 T CCarCtrl::SetCoordsOfScriptCar(CVehicle*, float, float, float, unsigned char, unsigned char)
002eee01 T CCarCtrl::SlowCarDownForObject(CEntity*, CVehicle*, float*, float)
002f98a5 T CCarCtrl::TriggerDogFightMoves(CVehicle*, CVehicle*)
002ec0a5 T CCarCtrl::JoinCarWithRoadSystem(CVehicle*)
002f0e89 T CCarCtrl::PickNextNodeForPlayer(CVehicle*)
002f9b61 T CCarCtrl::PossiblyFireHSMissile(CVehicle*, CEntity*)
002ec621 T CCarCtrl::PossiblyRemoveVehicle(CVehicle*)
002f1d51 T CCarCtrl::SteerAICarWithPhysics(CVehicle*)
0079679c B CCarCtrl::CountDownToCarsAtStart
002f8f3d T CCarCtrl::FindIntersection2Lines(float, float, float, float, float, float, float, float, float*, float*)
002f75dd T CCarCtrl::GetAIPlaneToDoDogFight(CAutomobile*)
002fb7d5 T CCarCtrl::MapCouldMoveInThisArea(float, float)
002efa41 T CCarCtrl::PickNextNodeToChaseCar(CVehicle*, float, float, float, CVehicle*)
002ee571 T CCarCtrl::SlowCarDownForOtherCar(CEntity*, CVehicle*, float*, float)
002f6f2d T CCarCtrl::SteerAICarParkParallel(CVehicle*, float*, float*, float*, bool*)
002fab11 T CCarCtrl::FireHeliRocketsAtTarget(CAutomobile*, CEntity*)
002f66b5 T CCarCtrl::GetAIHeliToAttackPlayer(CAutomobile*)
002f075d T CCarCtrl::IsThisAnAppropriateNode(CVehicle*, CNodeAddress, CNodeAddress, CNodeAddress, bool, bool)
002fad9d T CCarCtrl::PruneVehiclesOfInterest()
002f6af5 T CCarCtrl::SteerAIHeliAsPoliceHeli(CAutomobile*)
002f1b89 T CCarCtrl::ThisRoadObjectCouldMove(unsigned int)
002f64d5 T CCarCtrl::GetAIPlaneToAttackPlayer(CAutomobile*)
002fbfc1 T CCarCtrl::IsPoliceVehicleInPursuit(int)
002ecc5d T CCarCtrl::IsThisVehicleInteresting(CVehicle*)
0079678c B CCarCtrl::LastTimeAmbulanceCreated
00796790 B CCarCtrl::LastTimeFireTruckCreated
002f0169 T CCarCtrl::PickNextNodeToFollowPath(CVehicle*)
002ed0fd T CCarCtrl::StopCarIfNodesAreInvalid(CVehicle*)
002e77d1 T CCarCtrl::GenerateCarCreationCoors2(CVector, float, float, float, bool, float, float, CVector*, CNodeAddress*, CNodeAddress*, float*, bool, bool)
002f6865 T CCarCtrl::GetAIHeliToFlyInDirection(CAutomobile*)
002facb9 T CCarCtrl::RegisterVehicleOfInterest(CVehicle*)
002f6669 T CCarCtrl::SteerAIHeliToCrashAndBurn(CAutomobile*)
002f6875 T CCarCtrl::SteerAIHeliToFollowEntity(CAutomobile*)
002f77ad T CCarCtrl::SteerPlayerWhilstCruising(CVehicle*, float*, float*, float*, bool*)
002f65c1 T CCarCtrl::GetAIPlaneToFlyInDirection(CAutomobile*)
00796794 B CCarCtrl::LastTimeLawEnforcerCreated
007967a4 B CCarCtrl::LastTimeMiamiViceGenerated
002f662f T CCarCtrl::SteerAIPlaneToCrashAndBurn(CAutomobile*)
002f65c5 T CCarCtrl::SteerAIPlaneToFollowEntity(CAutomobile*)
002eedd1 T CCarCtrl::SwitchVehicleToRealPhysics(CVehicle*)
002f9a6d T CCarCtrl::TestWhetherToFirePlaneGuns(CVehicle*, CEntity*)
002ef409 T CCarCtrl::WeaveThroughCarsSectorList(CPtrList&, CVehicle*, CPhysical*, float, float, float, float, float*, float*)
002ef511 T CCarCtrl::WeaveThroughPedsSectorList(CPtrList&, CVehicle*, CPhysical*, float, float, float, float, float*, float*)
0079679d B CCarCtrl::bCarsGeneratedAroundCamera
002fad89 T CCarCtrl::ClearInterestingVehicleList()
002f8bb9 T CCarCtrl::ClipTargetOrientationToLink(CVehicle*, CLinkAddress, signed char, float*, float, float)
002fae6d T CCarCtrl::FindLinksToGoWithTheseNodes(CVehicle*)
002fbb39 T CCarCtrl::FindNodesThisCarIsNearestTo(CVehicle*, CNodeAddress&, CNodeAddress&)
002f9cf1 T CCarCtrl::FlyAIHeliInCertainDirection(CHeli*, float, float, bool)
002eca8d T CCarCtrl::RemoveCarsIfThePoolGetsFull()
002f6c75 T CCarCtrl::SteerAICarParkPerpendicular(CVehicle*, float*, float*, float*, bool*)
002f91b1 T CCarCtrl::FlyAIPlaneInCertainDirection(CPlane*)
002ea10d T CCarCtrl::GenerateEmergencyServicesCar()
002edabd T CCarCtrl::SlowCarDownForCarsSectorList(CPtrList&, CVehicle*, float, float, float, float, float*, float)
002edc01 T CCarCtrl::SlowCarDownForPedsSectorList(CPtrList&, CVehicle*, float, float, float, float, float*, float)
002f196d T CCarCtrl::SwitchBetweenPhysicsAndGhost(CVehicle*)
002f8e95 T CCarCtrl::FindPercDependingOnDistToLink(CVehicle*, CLinkAddress)
002ed281 T CCarCtrl::PickNextNodeAccordingStrategy(CVehicle*)
002f72a5 T CCarCtrl::SteerAIHeliToKeepEntityInView(CAutomobile*)
002f5805 T CCarCtrl::SteerAIHeliTowardsTargetCoors(CAutomobile*)
002f0ca9 T CCarCtrl::ThisVehicleShouldTryNotToTurn(CVehicle*)
00796798 B CCarCtrl::TimeNextMadDriverChaseCreated
002ef5f9 T CCarCtrl::WeaveThroughObjectsSectorList(CPtrList&, CVehicle*, float, float, float, float, float*, float*)
002eef21 T CCarCtrl::FindAngleToWeaveThroughTraffic(CVehicle*, CPhysical*, float, float, float)
002f1c2d T CCarCtrl::JoinCarWithRoadSystemGotoCoors(CVehicle*, CVector const&, bool, bool)
002f616d T CCarCtrl::SteerAICarTowardsPointInEscort(CVehicle*, CVehicle*, float, float, float*, float*, float*, bool*)
002f58b5 T CCarCtrl::SteerAIPlaneTowardsTargetCoors(CAutomobile*)
002fb2c9 T CCarCtrl::GenerateOneEmergencyServicesCar(unsigned int, CVector)
002ee1f5 T CCarCtrl::SlowCarDownForObjectsSectorList(CPtrList&, CVehicle*, float, float, float, float, float*, float)
002f3a71 T CCarCtrl::SteerAICarWithPhysicsFollowPath(CVehicle*, float*, float*, float*, bool*)
002f6bed T CCarCtrl::SteerAIHeliFlyingAwayFromPlayer(CAutomobile*)
002e765d T CCarCtrl::GetNewVehicleDependingOnCarModel(int, unsigned char)
002fad49 T CCarCtrl::RemoveFromInterestingVehicleList(CVehicle*)
002eead1 T CCarCtrl::TestCollisionBetween2MovingRects(CVehicle*, CVehicle*, float, float, CVector*, CVector*)
002ec3d1 T CCarCtrl::JoinCarWithRoadAccordingToMission(CVehicle*)
002f2595 T CCarCtrl::SteerAICarWithPhysics_OnlyMission(CVehicle*, float*, float*, float*, bool*)
002fa689 T CCarCtrl::FlyAIHeliToTarget_FixedOrientation(CHeli*, float, CVector, bool)
002ebccd T CCarCtrl::SetUpDriverAndPassengersForVehicle(CVehicle*, int, int, bool, bool, int)
00685fc4 D CCarCtrl::bAllowEmergencyServicesToBeCreated
002ed7fd T CCarCtrl::FindMaximumSpeedForThisCarInTraffic(CVehicle*)
002f7779 T CCarCtrl::GetAIPlaneToDoDogFightAgainstPlayer(CAutomobile*)
002f5cf5 T CCarCtrl::SteerAIBoatWithPhysicsCirclingPlayer(CVehicle*, float*, float*, float*, bool*)
002eb481 T CCarCtrl::FindSpeedMultiplierWithSpeedFromNodes(signed char)
002fb68d T CCarCtrl::ScriptGenerateOneEmergencyServicesCar(unsigned int, CVector)
002ed19d T CCarCtrl::SlowCarOnRailsDownForTrafficAndLights(CVehicle*)
002f5a91 T CCarCtrl::SteerAIBoatWithPhysicsAttackingPlayer(CVehicle*, float*, float*, float*, bool*)
002f3431 T CCarCtrl::SteerAICarWithPhysicsHeadingForTarget(CVehicle*, CPhysical*, float, float, float*, float*, float*, bool*)
002f58f9 T CCarCtrl::SteerAIBoatWithPhysicsHeadingForTarget(CVehicle*, float, float, float*, float*, float*)
002f5f1d T CCarCtrl::SteerAICarBlockingPlayerForwardAndBack(CVehicle*, float*, float*, float*, bool*)
002f46c9 T CCarCtrl::SteerAICarWithPhysicsFollowPath_Racing(CVehicle*, float*, float*, float*, bool*)
002f3779 T CCarCtrl::SteerAICarWithPhysicsTryingToBlockTarget(CVehicle*, CEntity*, float, float, float, float, float*, float*, float*, bool*)
002f5425 T CCarCtrl::SteerAICarWithPhysicsFollowPreRecordedPath(CVehicle*, float*, float*, float*, bool*)
002f3851 T CCarCtrl::SteerAICarWithPhysicsTryingToBlockTarget_Stop(CVehicle*, float, float, float, float, float*, float*, float*, bool*)
002ee8f1 T CCarCtrl::TestCollisionBetween2MovingRects_OnlyFrontBumper(CVehicle*, CVehicle*, float, float, CVector*, CVector*)
002e7381 T CCarCtrl::Init()
002e7515 T CCarCtrl::ReInit()
00457581 T CClothes::RebuildPlayer(CPlayerPed*, bool)
009a74b0 B CClothes::ms_numRuleTags
00457ac5 T CClothes::LoadClothesFile()
009a6b50 B CClothes::ms_clothesRules
00457e9d T CClothes::ConstructPedModel(unsigned int, CPedClothesDesc&, CPedClothesDesc const*, bool)
009a74b4 B CClothes::ms_clothesImageId
004580c9 T CClothes::GetDependentTexture(int)
00457405 T CClothes::GetTextureDependency(int)
00457e5d T CClothes::RebuildCutscenePlayer(CPlayerPed*, int)
00457f49 T CClothes::RebuildPlayerIfNeeded(CPlayerPed*)
00457fa5 T CClothes::RequestMotionGroupAnims()
00458061 T CClothes::GetPlayerMotionGroupToLoad()
00458101 T CClothes::GetDefaultPlayerMotionGroup()
00457a29 T CClothes::Init()
002e207d T CColDisk::Set(float, CVector const&, CVector const&, float, unsigned char, unsigned char, unsigned char)
002d9707 T CColLine::Set(CVector const&, CVector const&)
002d96ed T CColLine::CColLine(CVector const&, CVector const&)
002d96ed T CColLine::CColLine(CVector const&, CVector const&)
006b15ec D CCoronas::LightsMult
00a25b40 B CCoronas::NumCoronas
006b15f0 D CCoronas::ScreenMult
00a25b30 B CCoronas::SunScreenX
00a25b34 B CCoronas::SunScreenY
005a3e41 T CCoronas::DoSunAndMoon()
005a3aad T CCoronas::RegisterCorona(unsigned int, CEntity*, unsigned char, unsigned char, unsigned char, unsigned char, CVector const&, float, float, RwTexture*, unsigned char, unsigned char, unsigned char, unsigned char, float, bool, float, bool, float, bool, bool)
005a3a21 T CCoronas::RegisterCorona(unsigned int, CEntity*, unsigned char, unsigned char, unsigned char, unsigned char, CVector const&, float, float, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, float, bool, float, bool, float, bool, bool)
005a2c05 T CCoronas::RenderReflections()
005a3d99 T CCoronas::UpdateCoronaCoors(unsigned int, CVector const&, float, float)
00a25b38 B CCoronas::SunBlockedByClouds
005a3165 T CCoronas::RenderSunReflection()
00a25b3c B CCoronas::bChangeBrightnessImmediately
005a3059 T CCoronas::RenderOutGeometryBufferForReflections()
005a3841 T CCoronas::Init()
005a23b9 T CCoronas::Render()
005a22c9 T CCoronas::Update()
006b15f4 D CCoronas::MoonSize
005a38d5 T CCoronas::Shutdown()
00a25b44 B CCoronas::aCoronas
0045cf05 T CCredits::RenderCredits()
00a26a48 B CCredits::bCreditsGoing
00462aed T CCredits::PrintCreditText(float, float, unsigned short*, unsigned int&, float, bool)
00a26a4c B CCredits::CreditsStartTime
00462c29 T CCredits::PrintCreditSpace(float, unsigned int&)
005a4ee5 T CCredits::Stop()
005a4ebd T CCredits::Start()
0045cebd T CCredits::Render()
005a4ef5 T CCredits::Update()
003f109b T CFileMgr::GetCdError()
003f0b75 T CFileMgr::Initialise()
00958778 B CFileMgr::ms_dirName
003f108b T CFileMgr::GetTotalSize(unsigned int)
003f1093 T CFileMgr::InitCdSystem()
009586f4 B CFileMgr::fileDataArea
009587f8 B CFileMgr::ms_dualLayer
009587fc B CFileMgr::ms_layerStart
009586f8 B CFileMgr::ms_rootDirName
003f109f T CFileMgr::GetCdErrorString(int)
003f1097 T CFileMgr::GetErrorReadWrite(unsigned int)
003f0cbd T CFileMgr::SetDirMyDocuments()
003f0ec1 T CFileMgr::OpenFileForWriting(char const*)
003f0ec9 T CFileMgr::OpenFileForAppending(char const*)
003f0f0d T CFileMgr::Seek(unsigned int, int, int)
003f108f T CFileMgr::Tell(unsigned int)
003f0ef9 T CFileMgr::Write(unsigned int, char*, int)
003f1095 T CFileMgr::InitCd()
003f10a7 T CFileMgr::ReadCd(unsigned int, char*, unsigned int)
003f0c55 T CFileMgr::SetDir(char const*)
003f10ab T CFileMgr::SyncCd()
003f0d71 T CFileMgr::LoadFile(char const*, unsigned char*, int, char const*)
003f0e25 T CFileMgr::OpenFile(char const*, char const*)
003f0f43 T CFileMgr::ReadLine(unsigned int, char*, int)
003f0ed1 T CFileMgr::Read_old(unsigned int, char*, int)
003f0be5 T CFileMgr::ChangeDir(char const*)
003f107b T CFileMgr::CloseFile(unsigned int)
003f10a3 T CFileMgr::GetCdFile(char const*, unsigned int&, unsigned int&)
003f0ee5 T CFileMgr::ReadBytes(unsigned int, char*, int)
007a4db3 B CGarages::NoResprays
007a4d94 B CGarages::NumGarages
007a4db1 B CGarages::BombsAreFree
007a4dd0 B CGarages::CrushedCarId
003139f5 T CGarages::IsGarageOpen(short)
007a4db4 B CGarages::CarsCollected
0031358d T CGarages::PrintMessages()
003139b1 T CGarages::ActivateGarage(short)
00311e31 T CGarages::IsCarSprayable(CVehicle*)
00313a1d T CGarages::IsGarageClosed(short)
007a4d9c B CGarages::MessageEndTime
007a4db0 B CGarages::PlayerInGarage
00311e8d T CGarages::TriggerMessage(char*, short, unsigned short, short)
003118ed T CGarages::FindGarageIndex(char*)
007a4da0 B CGarages::MessageIDString
007a4db2 B CGarages::RespraysAreFree
00311941 T CGarages::ChangeGarageType(short, unsigned char, unsigned int)
00313991 T CGarages::DeActivateGarage(short)
007a4d98 B CGarages::MessageStartTime
007a4de8 B CGarages::aCarsInSafeHouse
007a4db8 B CGarages::BankVansCollected
007a4dc0 B CGarages::CarTypesCollected
0030e5a5 T CGarages::Init_AfterRestart()
00314b79 T CGarages::IsModelIndexADoor(int)
00313a71 T CGarages::HasResprayHappened(short)
00314219 T CGarages::FindDoorHeightForMI(unsigned int)
003146c1 T CGarages::FindGarageForObject(CObject*)
00312219 T CGarages::GivePlayerDetonator()
007a4dd8 B CGarages::LastTimeHelpMessage
007a4dbc B CGarages::PoliceCarsCollected
007a4dd4 B CGarages::bCamShouldBeOutside
00314249 T CGarages::PlayerArrestedOrDied()
003144e5 T CGarages::StopCarFromBlowingUp(CAutomobile*)
007a4de0 B CGarages::bDebugDisplayGarages
00314209 T CGarages::CameraShouldBeOutside()
007a4ddc B CGarages::LastGaragePlayerWasIn
007a4da8 B CGarages::MessageNumberInString
00314bb9 T CGarages::AllRespraysCloseOrOpen(bool)
00314605 T CGarages::IsPointWithinAnyGarage(CVector&)
007a4dac B CGarages::MessageNumberInString2
00313971 T CGarages::HasCarBeenDroppedOffYet(short)
00312a29 T CGarages::CountCarsInHideoutGarage(unsigned char)
00313a95 T CGarages::IsThisCarWithinGarageArea(short, CEntity*)
0031412d T CGarages::IsPointInAGarageCameraZone(CVector)
00314531 T CGarages::IsPointWithinHideOutGarage(CVector&)
00313925 T CGarages::SetTargetCarForMissionGarage(short, CAutomobile*)
00314455 T CGarages::CloseHideOutGaragesBeforeSave()
00312a11 T CGarages::FindSafeHouseIndexForGarageType(int)
00314845 T CGarages::StoreCarInNearestImpoundingGarage(CVehicle*)
0030e449 T CGarages::Init()
0048b409 T CGarages::Load()
0048b019 T CGarages::Save()
00311481 T CGarages::AddOne(float, float, float, float, float, float, float, float, unsigned char, unsigned int, char*, unsigned int)
0030e761 T CGarages::Update()
0030e575 T CGarages::Shutdown()
007a2364 B CGarages::aGarages
003f4a1d T CGeneral::LimitAngle(float)
003f4ae5 T CGeneral::GetATanOfXY(float, float)
003f4d35 T CGeneral::SolveQuadratic(float, float, float, float&, float&)
003f4a79 T CGeneral::LimitRadianAngle(float)
003f48c1 T CGeneral::GetAngleBetweenPoints(float, float, float, float)
003f4c2d T CGeneral::GetNodeHeadingFromVector(float, float)
003f4975 T CGeneral::GetRadianAngleBetweenPoints(float, float, float, float)
005adb2d T CGridRef::GetAreaName(unsigned char, unsigned char)
00a410bc B CGridRef::displayWalls
00a410bf B CGridRef::displayGridRef
00a410be B CGridRef::displayCamCords
005adb51 T CGridRef::GetArtistBugstarID(unsigned char, unsigned char)
00a410bd B CGridRef::displayAllTheWalls
005ada85 T CGridRef::GetGridRefPositions(CVector, unsigned char*, unsigned char*)
005adac9 T CGridRef::GetGridRefPositions(unsigned char*, unsigned char*)
005ad999 T CGridRef::Init()
003d3b09 T CIdleCam::ProcessSlerp(float*, float*)
003d3781 T CIdleCam::IsTargetValid(CEntity*)
003d3d1d T CIdleCam::ProcessFOVZoom(float)
003d36ed T CIdleCam::SetTargetPlayer()
003d4075 T CIdleCam::FinaliseIdleCamera(float, float, float)
003d351d T CIdleCam::IsItTimeForIdleCam()
003d3669 T CIdleCam::ProcessIdleCamTicker()
003c01dd T CIdleCam::IdleCamGeneralProcess()
003d38f1 T CIdleCam::ProcessTargetSelection()
003d46a1 T CIdleCam::VectorToAnglesRotXRotZ(CVector*, float*, float*)
003d389d T CIdleCam::GetLookAtPositionOnTarget(CEntity*, CVector*)
003d370d T CIdleCam::Run()
003d3521 T CIdleCam::Init()
003d2439 T CIdleCam::Reset(bool)
003d35e1 T CIdleCam::Process()
003d3a69 T CIdleCam::SetTarget(CEntity*)
003f4d95 T CIniFile::LoadIniFile()
006aa7a4 D CIniFile::CarNumberMultiplier
006aa7a0 D CIniFile::PedNumberMultiplier
00a5a13c B CMirrors::reflBuffer
00a5a158 B CMirrors::MirrorFlags
00a5a15d B CMirrors::d3dRestored
005c4975 T CMirrors::CreateBuffer()
00a5a148 B CMirrors::MirrorNormal
00a5a154 B CMirrors::TypeOfMirror
005c56d9 T CMirrors::BuildCamMatrix(CMatrix*, CVector, CVector)
005c4d11 T CMirrors::BeforeMainRender()
005c5099 T CMirrors::RenderReflBuffer(bool)
005c4e31 T CMirrors::RenderReflections()
005c51c9 T CMirrors::RenderMirrorBuffer(bool)
00a5a15c B CMirrors::bRenderingReflection
005c465d T CMirrors::BeforeConstructRenderList()
005c4af5 T CMirrors::BuildCameraMatrixForScreens(CMatrix*)
005bfdd9 T CMirrors::Init()
00a5a144 B CMirrors::MirrorV
00a5a134 B CMirrors::pBuffer
005c0041 T CMirrors::ShutDown()
00a5a138 B CMirrors::pZBuffer
0045c505 T COctTree::InsertTree(unsigned char, unsigned char, unsigned char)
0045c309 T COctTree::ReduceTree()
009abf3c B COctTree::ms_bFailed
0045c791 T COctTree::FillPalette(unsigned char*)
0045c2bd T COctTree::NoOfChildren()
0045c1c9 T COctTree::ShutdownPool()
0045c225 T COctTree::RemoveChildren()
0045c961 T COctTree::FindNearestColour(unsigned char, unsigned char, unsigned char)
0045bfd9 T COctTree::empty()
0045c139 T COctTree::InitPool(void*, int)
009abf38 B COctTree::ms_level
0045bef5 T COctTree::COctTree()
0045bef5 T COctTree::COctTree()
0045bf25 T COctTree::~COctTree()
0045bf25 T COctTree::~COctTree()
0045c101 T COctTree::operator delete(void*)
0045c081 T COctTree::operator new(unsigned int)
005485a7 T CPedList::FillUpHoles()
00548663 T CPedList::ExtractPedsWithGuns(CPedList&)
005484bd T CPedList::BuildListOfPedsOfPedType(int)
005485e7 T CPedList::RemovePedsAttackingPedType(int)
0054833f T CPedList::BuildListFromGroup_NoLeader(CPedGroupMembership*)
00548545 T CPedList::RemovePedsThatDontListenToPlayer()
00548447 T CPedList::BuildListFromGroup_NotInCar_NoLeader(CPedGroupMembership*)
00548301 T CPedList::Empty()
005484a7 T CPedList::AddMember(CPed*)
0031bf15 T CPedPath::AddBlockade(CEntity*, CPedPathNode (*) [40], CVector*)
0031b5f9 T CPedPath::CalcPedRoute(unsigned char, CVector, CVector, CVector*, short*, short)
0031c1c1 T CPedPath::AddBuildingBlockade(CEntity*, CPedPathNode (*) [40], CVector*)
0031becd T CPedPath::AddBlockadeSectorList(CPtrList&, CPedPathNode (*) [40], CVector*)
0031c47d T CPedPath::AddBuildingBlockadeSectorList(CPtrList&, CPedPathNode (*) [40], CVector*)
004c340d T CPedType::GetPedFlag(int)
004c2f79 T CPedType::Initialise()
004c33b1 T CPedType::FindPedType(char*)
004c2fa9 T CPedType::LoadPedData()
009f0b0c B CPedType::ms_apPedTypes
004c3551 T CPedType::GetPedTypeAcquaintances(int)
004c3569 T CPedType::GetPedTypeAcquaintances(int, int)
004c3585 T CPedType::SetPedTypeAsAcquaintance(int, int, unsigned int)
004c3645 T CPedType::ClearPedTypeAcquaintances(int, int)
004c361d T CPedType::ClearPedTypeAsAcquaintance(int, int, unsigned int)
004c3661 T CPedType::PoliceDontCareAboutCrimesAgainstPedType(int)
0048e2b5 T CPedType::Load()
0048e1d9 T CPedType::Save()
004c3391 T CPedType::Shutdown()
007b4d30 B CPickups::NumMessages
003216d1 T CPickups::PictureTaken()
0031f4ed T CPickups::RemovePickUp(int)
00320879 T CPickups::DoMineEffects(CEntity*)
00320745 T CPickups::DoMoneyEffects(CEntity*)
0031ee55 T CPickups::GenerateNewOne(CVector, unsigned int, unsigned char, unsigned int, unsigned int, bool, char*)
0031f221 T CPickups::ModelForWeapon(eWeaponType)
003214bd T CPickups::PickedUpOyster()
007b4d8c B CPickups::StaticCamCoors
0031f305 T CPickups::WeaponForModel(int)
007b4d88 B CPickups::pPlayerVehicle
00320e41 T CPickups::CreateSomeMoney(CVector, int)
0031fc31 T CPickups::DoPickUpEffects(CEntity*)
0031f375 T CPickups::IsPickUpPickedUp(int)
00320b1d T CPickups::RenderPickUpText()
00321591 T CPickups::PickedUpHorseShoe()
0031f585 T CPickups::UpdateMoneyPerDay(int, unsigned short)
007b4d34 B CPickups::aPickUpsCollected
006866cc D CPickups::DisplayHelpMessage
007b4d98 B CPickups::StaticCamStartTime
003219c1 T CPickups::RemovePickUpsInArea(float, float, float, float, float, float)
00321951 T CPickups::RemovePickupObjects()
007b4d86 B CPickups::bPickUpcamActivated
007b4d84 B CPickups::CollectedPickUpIndex
003204a5 T CPickups::DoCollectableEffects(CEntity*)
0031f55d T CPickups::GetActualPickupIndex(int)
0031faa9 T CPickups::GetUniquePickupIndex(int)
007b4d9c B CPickups::PlayerOnWeaponPickup
00321b1d T CPickups::RemoveMissionPickUps()
0031f231 T CPickups::TryToMerge_WeaponType(CVector, eWeaponType, unsigned char, unsigned int, bool)
0032141d T CPickups::TestForPickupsInBubble(CVector, float)
00320469 T CPickups::FindPickUpForThisObject(CObject*)
0031f1b5 T CPickups::GetNewUniquePickupIndex(int)
00320ca1 T CPickups::RemoveUnnecessaryPickups(CVector const&, float)
0031f5b5 T CPickups::DetonateMinesHitByGunShot(CVector*, CVector*)
0031f1dd T CPickups::GenerateNewOne_WeaponType(CVector, eWeaponType, unsigned char, unsigned int, bool, char*)
0031ee15 T CPickups::AddToCollectedPickupsArray(int)
00321185 T CPickups::CreatePickupCoorsCloseToCoors(float, float, float, float*, float*, float*)
0031f7fd T CPickups::GivePlayerGoodiesWithPickUpMI(unsigned short, int)
0031f6d3 T CPickups::PlayerCanPickUpThisWeaponTypeAtThisMoment(eWeaponType)
0031cfd1 T CPickups::Init()
0048d0b5 T CPickups::Load()
0048d001 T CPickups::Save()
0031d04d T CPickups::ReInit()
0031d17d T CPickups::Update()
00321685 T CPickups::PassTime(unsigned int)
007afd70 B CPickups::aPickUps
007b4af0 B CPickups::aMessages
0040d611 T CProfile::Initialise()
0040d781 T CProfile::ShowResults()
0095ac98 B CProfile::ms_afEndTime
0040d735 T CProfile::SuspendProfile(eProfile)
0095acd0 B CProfile::ms_aBarColours
0095ac7c B CProfile::ms_afStartTime
0095ad08 B CProfile::ms_afMaxEndTime
0095acec B CProfile::ms_pProfileString
0095acb4 B CProfile::ms_afCumulativeTime
0095ad24 B CProfile::ms_afMaxCumulativeTime
0040db09 T CPtrList::CountElements()
0040db1b T CPtrList::IsMemberOfList(void*)
0040e6df T CRange2D::DebugShowRange(float, int)
0040e669 T CRange2D::GetRandomPointInRange()
0040e621 T CRange2D::IsInRange(CVector2D)
0040e615 T CRange2D::CRange2D(CVector2D, CVector2D)
0040e615 T CRange2D::CRange2D(CVector2D, CVector2D)
0040e61f T CRange2D::~CRange2D()
0040e61f T CRange2D::~CRange2D()
0040e815 T CRange3D::DebugShowRange(int)
0040e75f T CRange3D::GetRandomPointInRange()
0040e6f7 T CRange3D::IsInRange(CVector)
0040e6e1 T CRange3D::CRange3D(CVector, CVector)
0040e6e1 T CRange3D::CRange3D(CVector, CVector)
00324875 T CRestart::Initialise()
007b6f0c B CRestart::OverrideHeading
007b6f00 B CRestart::OverridePosition
007b6efc B CRestart::bOverrideRestart
00324ee1 T CRestart::OverrideNextRestart(CVector const&, float)
007b6e30 B CRestart::PoliceRestartPoints
00324a21 T CRestart::AddPoliceRestartPoint(CVector const&, float, int)
00324f19 T CRestart::CancelOverrideRestart()
007b6d68 B CRestart::HospitalRestartPoints
007b6ea8 B CRestart::PoliceRestartHeadings
007b6f10 B CRestart::bFadeInAfterNextDeath
007b6efa B CRestart::NumberOfPoliceRestarts
007b6ed0 B CRestart::PoliceRestartWhenToUse
007b6f11 B CRestart::bFadeInAfterNextArrest
003249b9 T CRestart::AddHospitalRestartPoint(CVector const&, float, int)
007b6de0 B CRestart::HospitalRestartHeadings
007b6e08 B CRestart::HospitalRestartWhenToUse
007b6ef8 B CRestart::NumberOfHospitalRestarts
007b6f14 B CRestart::ExtraHospitalRestartCoors
007b6f20 B CRestart::ExtraHospitalRestartRadius
007b6f24 B CRestart::ExtraHospitalRestartHeading
00324cb5 T CRestart::FindClosestPoliceRestartPoint(CVector, CVector*, float*)
007b6f28 B CRestart::ExtraPoliceStationRestartCoors
007b6f34 B CRestart::ExtraPoliceStationRestartRadius
00324a89 T CRestart::FindClosestHospitalRestartPoint(CVector, CVector*, float*)
007b6f38 B CRestart::ExtraPoliceStationRestartHeading
007b6f40 B CRestart::OverrideRespawnBasePointForMission
00324f29 T CRestart::SetRespawnPointForDurationOfMission(CVector)
007b6f3c B CRestart::bOverrideRespawnBasePointForMission
00324f55 T CRestart::ClearRespawnPointForDurationOfMission()
0048d515 T CRestart::Load()
0048d21d T CRestart::Save()
005b8809 T CRubbish::SetVisibility(bool)
00a48c34 B CShadows::aPolyBunches
005bdec1 T CShadows::TidyUpShadows()
005bdb11 T CShadows::PrintDebugPoly(CVector*, CVector*, CVector*)
00a51e74 B CShadows::aStaticShadows
005bd96d T CShadows::RemoveOilInArea(float, float, float, float)
00a48274 B CShadows::asShadowsStored
00a52a74 B CShadows::pEmptyBunchList
005b8d39 T CShadows::StoreStaticShadow(unsigned int, unsigned char, RwTexture*, CVector*, float, float, float, float, short, unsigned char, unsigned char, unsigned char, float, float, float, bool, float)
00a52a78 B CShadows::aPermanentShadows
005b8be5 T CShadows::AddPermanentShadow(unsigned char, RwTexture*, CVector*, float, float, float, float, short, unsigned char, unsigned char, unsigned char, float, unsigned int, float)
005bbbed T CShadows::CastShadowEntityXY(CEntity*, float, float, float, float, CVector*, float, float, float, float, short, unsigned char, unsigned char, unsigned char, float, float, CPolyBunch**, unsigned char*, int)
005ba4bd T CShadows::StoreShadowForPole(CEntity*, float, float, float, float, float, unsigned int)
005ba4b9 T CShadows::StoreShadowForTree(CEntity*)
005ba3f5 T CShadows::CalcPedShadowValues(CVector, float*, float*, float*, float*, float*, float*)
005be061 W CShadows::CastShadowEntityXYZ(CEntity*, CVector*, float, float, float, float, short, unsigned char, unsigned char, unsigned char, float, float, CPolyBunch**, CRealTimeShadow*, unsigned char*)
005bb335 T CShadows::RenderStaticShadows(bool)
005ba771 T CShadows::RenderStoredShadows(bool)
005b9d39 T CShadows::StoreCarLightShadow(CVehicle*, int, RwTexture*, CVector*, float, float, float, float, unsigned char, unsigned char, unsigned char, float)
005ba071 T CShadows::StoreRealTimeShadow(CPhysical*, float, float, float, float, float, float)
005bd27d T CShadows::UpdateStaticShadows()
005bb10d T CShadows::CastShadowSectorList(CPtrList&, float, float, float, float, CVector*, float, float, float, float, short, unsigned char, unsigned char, unsigned char, float, float, CPolyBunch**, unsigned char*, int)
005bd9fd T CShadows::GunShotSetsOilOnFire(CVector const*, CVector const*)
005bdf91 T CShadows::RenderIndicatorShadow(unsigned int, unsigned char, RwTexture*, CVector*, float, float, float, float, short)
005b958d T CShadows::StoreShadowForVehicle(CVehicle*, VEH_SHD_TYPE)
005bd371 T CShadows::UpdatePermanentShadows()
005b9e69 T CShadows::StoreShadowForPedObject(CEntity*, float, float, float, float, float, float)
005b92d1 T CShadows::StoreShadowToBeRendered(unsigned char, CVector*, float, float, float, float, short, unsigned char, unsigned char, unsigned char)
005b94a1 T CShadows::StoreShadowToBeRendered(unsigned char, RwTexture*, CVector*, float, float, float, float, short, unsigned char, unsigned char, unsigned char, float, bool, float, CRealTimeShadow*, bool)
005bb99d T CShadows::AffectColourWithLighting(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char*, unsigned char*, unsigned char*)
005bdb15 T CShadows::RenderExtraPlayerShadows()
00a48270 B CShadows::ShadowsStoredToBeRendered
005baf71 T CShadows::CastPlayerShadowSectorList(CPtrList&, float, float, float, float, CVector*, float, float, float, float, short, unsigned char, unsigned char, unsigned char, float, float, CPolyBunch**, unsigned char*, int)
005ba715 T CShadows::SetRenderModeForShadowType(unsigned char)
005bae01 T CShadows::CastRealTimeShadowSectorList(CPtrList&, float, float, float, float, CVector*, float, float, float, float, short, unsigned char, unsigned char, unsigned char, float, float, CPolyBunch**, CRealTimeShadow*, unsigned char*)
005b9069 T CShadows::GeneratePolysForStaticShadow(short)
005b8811 T CShadows::Init()
005b8b1d T CShadows::Shutdown()
0057bee9 T CTrailer::SetTowLink(CVehicle*, bool)
0057c091 T CTrailer::BreakTowLink()
0057be6d T CTrailer::GetTowBarPos(CVector&, bool, CVehicle*)
0057bdb5 T CTrailer::GetTowHitchPos(CVector&, bool, CVehicle*)
0057b375 T CTrailer::ProcessControl()
0057b57d T CTrailer::ScanForTowLink()
0057bd6d T CTrailer::ResetSuspension()
0057b6a5 T CTrailer::ProcessSuspension()
0057af99 T CTrailer::SetupSuspensionLines()
0057c0f5 T CTrailer::ProcessEntityCollision(CEntity*, CColPoint*)
006b1284 D CTrailer::m_fTrailerDampingForce
006b1280 D CTrailer::m_fTrailerSuspensionForce
0057bb6d T CTrailer::PreRender()
0057b479 T CTrailer::ProcessAI(unsigned int&)
0057af1d T CTrailer::CTrailer(int, unsigned char)
0057af1d T CTrailer::CTrailer(int, unsigned char)
0057af89 T CTrailer::~CTrailer()
0057af85 T CTrailer::~CTrailer()
0057af85 T CTrailer::~CTrailer()
0058cb2d T CVehicle::AddUpgrade(int, int)
0058a279 T CVehicle::DoSunGlare()
0058caad T CVehicle::GetUpgrade(int)
005689cd W CVehicle::SetTowLink(CVehicle*, bool)
0056d3b5 W CVehicle::PlayCarHorn()
0058d621 T CVehicle::RemoveWinch()
005848c5 T CVehicle::SetUpDriver(int, bool, bool)
00582335 T CVehicle::SetupRender()
0058d549 T CVehicle::UpdateWinch()
00585589 T CVehicle::ActivateBomb()
00584339 T CVehicle::AddPassenger(CPed*)
00584439 T CVehicle::AddPassenger(CPed*, unsigned char)
005689d1 W CVehicle::BreakTowLink()
0058d765 T CVehicle::GetTowBarPos(CVector&, bool, CVehicle*)
00582d01 T CVehicle::ProcessWheel(CVector&, CVector&, CVector&, CVector&, int, float, float, float, char, float*, tWheelState*, unsigned short)
005847cd T CVehicle::RemoveDriver(bool)
0058e501 T CVehicle::FirePlaneGuns()
00585701 T CVehicle::FlyingControl(eFlightModel, float, float, float, float)
00581ef5 T CVehicle::GetRemapIndex()
00583ccd T CVehicle::InflictDamage(CEntity*, eWeaponType, float, CVector)
0058d0e9 T CVehicle::RemoveUpgrade(int)
00582a3d T CVehicle::SetModelIndex(unsigned int)
00410711 T CVehicle::SetupLighting()
0056d3bb W CVehicle::VehicleDamage(float, unsigned short, CEntity*, CVector*, CVector*, eWeaponType)
00581c3d T CVehicle::DeleteRwObject()
00589cc1 T CVehicle::DoBoatSplashes(float)
0058de3d T CVehicle::FindWheelWidth(bool)
0058d711 T CVehicle::GetTowHitchPos(CVector&, bool, CVehicle*)
0058df19 T CVehicle::ProcessWeapons()
004107c1 T CVehicle::RemoveLighting(bool)
0058d517 T CVehicle::SetHasslePosId(int, bool)
005848ff T CVehicle::SetupPassenger(int, int, bool, bool)
00590741 T CVehicle::DoHeadLightBeam(int, CMatrix&, unsigned char)
005910e1 T CVehicle::DoVehicleLights(CMatrix&, unsigned int)
0058f53d T CVehicle::GetPlaneNumGuns()
005603fd W CVehicle::GetRideAnimData()
00585209 T CVehicle::ProcessCarAlarm()
0059189d T CVehicle::ProcessOpenDoor(CPed*, unsigned int, unsigned int, unsigned int, float)
00584549 T CVehicle::RemovePassenger(CPed*)
00587b21 T CVehicle::DoBladeCollision(CVector, CMatrix&, short, float, float)
0058fbd9 T CVehicle::DoPlaneGunFireFX(CWeapon*, CVector&, CVector&, int)
00583359 T CVehicle::ProcessBikeWheel(CVector&, CVector&, CVector&, CVector&, int, float, float, float, float, char, float*, tWheelState*, eBikeWheelSpecial, unsigned short)
005823f1 T CVehicle::ResetAfterRender()
0058a241 T CVehicle::UpdateClumpAlpha()
0058c66d T CVehicle::AddVehicleUpgrade(int)
0059032d T CVehicle::DoHeadLightEffect(int, CMatrix&, unsigned char, unsigned char)
00590e15 T CVehicle::DoTailLightEffect(int, CMatrix&, unsigned char, unsigned char, unsigned int, unsigned char)
00585519 T CVehicle::ExtinguishCarFire()
00591d11 T CVehicle::GetNewSteeringAmt()
00584adf T CVehicle::KillPedsInVehicle()
00581eb1 T CVehicle::RemoveAllUpgrades()
0058e47d T CVehicle::SelectPlaneWeapon(bool, eOrdnanceType)
0058c5e9 T CVehicle::SetGettingInFlags(unsigned char)
0058c61d T CVehicle::SetWindowOpenFlag(unsigned char)
0058db3d T CVehicle::UpdateTractorLink(bool, bool)
0058d7b9 T CVehicle::UpdateTrailerLink(bool, bool)
00587ead T CVehicle::BladeColSectorList(CPtrList&, CColModel&, CMatrix&, short, float)
005e26a9 T CVehicle::DoDriveByShootings()
005e2955 T CVehicle::DoFixedMachineGuns()
00591d15 T CVehicle::GetGasTankPosition()
0058b601 T CVehicle::GetHasDualExhausts()
0058c169 T CVehicle::GetSpecialColModel()
0058566d T CVehicle::HeightAboveCeiling(float, eFlightModel)
005889b1 T CVehicle::ProcessBoatControl(tBoatHandlingData*, float&, bool, bool)
0058c5f5 T CVehicle::SetGettingOutFlags(unsigned char)
0056d383 W CVehicle::SetUpWheelColModel(CColModel*)
00a12ee8 B CVehicle::m_aSpecialColModel
0058b091 T CVehicle::AddExhaustParticles()
00583c1d T CVehicle::CanVehicleBeDamaged(CEntity*, eWeaponType, unsigned char*)
0058c601 T CVehicle::ClearGettingInFlags(unsigned char)
0058c645 T CVehicle::ClearWindowOpenFlag(unsigned char)
0058d2a1 T CVehicle::CreateUpgradeAtomic(CBaseModelInfo*, UpgradePosnDesc const*, RwFrame*, bool)
0059178d T CVehicle::FillVehicleWithPeds(bool)
0058f0d5 T CVehicle::FireUnguidedMissile(eOrdnanceType, bool)
0056d3b7 W CVehicle::GetNumContactWheels()
0058d4df T CVehicle::GetSpareHasslePosId()
0058a7dd T CVehicle::PickRandomPassenger()
0058c265 T CVehicle::ProcessDrivingAnims(CPed*, unsigned char)
00590129 T CVehicle::ProcessSirenAndHorn(bool)
00583b31 T CVehicle::ReduceVehicleDamage(float&)
0056d381 W CVehicle::RemoveRefsToVehicle(CEntity*)
00591cdd T CVehicle::SetVehicleCreatedBy(int, bool)
0058a78d T CVehicle::UpdatePassengerList()
006b1300 D CVehicle::WHEELSPIN_FALL_RATE
006b12fc D CVehicle::WHEELSPIN_RISE_RATE
00a12ee4 B CVehicle::m_nLastControlInput
0058ab8d T CVehicle::AddWheelDirtAndWater(CColPoint&, unsigned int, unsigned char, unsigned char)
0058c60f T CVehicle::ClearGettingOutFlags(unsigned char)
005910dd T CVehicle::DoReverseLightEffect(int, CMatrix&, unsigned char, unsigned char, unsigned int, unsigned char)
00583a81 T CVehicle::FindTyreNearestPoint(float, float)
005e29d5 T CVehicle::FireFixedMachineGuns()
0058f78d T CVehicle::GetPlaneGunsPosition(int)
0058d6c9 T CVehicle::GetRopeHeightForHeli()
00581159 W CVehicle::ProcessControlInputs(unsigned char)
00582c9d T CVehicle::ProcessWheelRotation(tWheelState, CVector const&, CVector const&, float)
0058ff91 T CVehicle::ReactToVehicleDamage(CPed*)
0058cc2d T CVehicle::RemoveVehicleUpgrade(int)
005819ed T CVehicle::SetCollisionLighting(unsigned char)
005887e1 T CVehicle::SetComponentRotation(RwFrame*, int, float, bool)
0058d6ed T CVehicle::SetRopeHeightForHeli(float)
0056d393 W CVehicle::SetupDamageAfterLoad()
0056d38f W CVehicle::SetupSuspensionLines()
00a12fa8 B CVehicle::m_aSpecialColVehicle
00a12ee3 B CVehicle::m_bEnableMouseFlying
006b1304 D CVehicle::m_fAirResistanceMult
0058c991 T CVehicle::AddReplacementUpgrade(int, int)
00590de5 T CVehicle::DoHeadLightReflection(CMatrix&, unsigned int, unsigned char, unsigned char)
0058c959 T CVehicle::GetReplacementUpgrade(int)
0058d67d T CVehicle::PickUpEntityWithWinch(CEntity*)
00581e91 T CVehicle::SetRemapTexDictionary(char const*)
006b12f4 D CVehicle::WHEELSPIN_TARGET_RATE
005854c5 T CVehicle::ChangeLawEnforcerState(unsigned char)
0058edfd T CVehicle::FireHeatSeakingMissile(CEntity*, eOrdnanceType, bool)
0058f6ed T CVehicle::GetPlaneGunsRateOfFire()
00590231 T CVehicle::GetVehicleLightsStatus()
0056d38b W CVehicle::IsRoomForPedToLeaveCar(unsigned int, CVector*)
00588799 T CVehicle::SetComponentVisibility(RwFrame*, unsigned int)
0058c865 T CVehicle::SetVehicleUpgradeFlags(int, int, int&)
0058d4ad T CVehicle::SetupUpgradesAfterLoad()
00a12ee2 B CVehicle::m_bEnableMouseSteering
005855ed T CVehicle::ActivateBombWhenEntered()
005689b7 W CVehicle::AddMovingCollisionSpeed(CVector&)
0058b611 T CVehicle::AddSingleWheelParticles(tWheelState, unsigned int, float, float, CColPoint*, CVector*, float, int, unsigned int, bool*, unsigned int)
0058ae19 T CVehicle::AddWaterSplashParticles()
0058d39d T CVehicle::CreateReplacementAtomic(CBaseModelInfo*, RwFrame*, int, bool, bool)
0058f6b1 T CVehicle::GetFiringRateMultiplier()
0058525d T CVehicle::IsSphereTouchingVehicle(float, float, float, float)
005842e9 T CVehicle::ProcessDelayedExplosion()
0058a225 T CVehicle::SetComponentAtomicAlpha(RpAtomic*, int)
0058f649 T CVehicle::SetFiringRateMultiplier(float)
00591da1 T CVehicle::SetTappedGasTankVehicle(CEntity*)
005888ad T CVehicle::SetTransmissionRotation(RwFrame*, float, float, CVector, bool)
00a12fb8 B CVehicle::m_aSpecialHydraulicData
00a131f4 B CVehicle::m_pTappedGasTankVehicle
006b1308 D CVehicle::ms_fRailTrackResistance
00589ac1 T CVehicle::ApplyBoatWaterResistance(tBoatHandlingData*, float)
0058cf91 T CVehicle::ClearVehicleUpgradeFlags(int, int)
0058f5a5 T CVehicle::GetPlaneGunsAutoAimAngle()
0058f995 T CVehicle::GetPlaneOrdnancePosition(eOrdnanceType)
00584b85 T CVehicle::KillPedsGettingInVehicle()
0058d069 T CVehicle::RemoveReplacementUpgrade(int)
00a12ee0 B CVehicle::bDisableRemoteDetonation
00a13058 B CVehicle::ms_forceVehicleLightsOff
005689af W CVehicle::BlowUpCarCutSceneNoExtras(bool, bool, bool, bool)
00583ba9 T CVehicle::CanUseCameraHeightSetting()
00590ce5 T CVehicle::DoHeadLightReflectionTwin(CMatrix&)
0058115b W CVehicle::GetComponentWorldPosition(int, CVector&)
0058de45 T CVehicle::RenderDriverAndPassengers()
0058a8cd T CVehicle::AddDamagedVehicleParticles()
0056d395 W CVehicle::DoBurstAndSoftGroundRatios()
0058f8fd T CVehicle::GetPlaneOrdnanceRateOfFire(eOrdnanceType)
0058e175 T CVehicle::GetPlaneWeaponFiringStatus(bool&, eOrdnanceType&)
00590b75 T CVehicle::DoHeadLightReflectionSingle(CMatrix&, unsigned char)
006b12f8 D CVehicle::WHEELSPIN_INAIR_TARGET_RATE
00582b35 T CVehicle::CustomCarPlate_TextureCreate(CVehicleModelInfo*)
00582281 T CVehicle::PreRenderDriverAndPassengers()
0056d35d W CVehicle::ProcessControlCollisionCheck(bool)
0058d6a5 T CVehicle::QueryPickedUpEntityWithWinch()
00585515 T CVehicle::ShufflePassengersToMakeSpace()
00581c9d T CVehicle::CustomCarPlate_TextureDestroy()
00581fa9 T CVehicle::UpdateLightingFromStoredPolys()
00a13059 B CVehicle::s_bPlaneGunsEjectShellCasings
00581fc5 T CVehicle::CalculateLightingFromCollision()
005602c5 W CVehicle::FlagToDestroyWhenNextProcessed()
0058d659 T CVehicle::ReleasePickedUpEntityWithWinch()
0058254d T CVehicle::SpecialEntityPreCollisionStuff(CPhysical*, bool, bool&, bool&, bool&, bool&)
006b130c D CVehicle::ms_fRailTrackResistanceDefault
0058282d T CVehicle::SpecialEntityCalcCollisionSteps(bool&, bool&)
0058eb99 T CVehicle::PossiblyDropFreeFallBombForPlayer(eOrdnanceType, bool)
00a12ee1 B CVehicle::bDisableRemoteDetonationOnContact
0058fa71 T CVehicle::ScanAndMarkTargetForHeatSeekingMissile(CEntity*)
0056d391 W CVehicle::Fix()
00487971 T CVehicle::Load()
004878a1 T CVehicle::Save()
0058242d T CVehicle::Render()
00568983 W CVehicle::OpenDoor(CPed*, int, eDoors, float, bool)
00581f4d T CVehicle::SetRemap(int)
00581d21 T CVehicle::Shutdown()
00581161 W CVehicle::BlowUpCar(CEntity*, unsigned char)
0056d387 W CVehicle::BurstTyre(unsigned char, bool)
0058d533 T CVehicle::InitWinch(int)
0058aa29 T CVehicle::MakeDirty(CColPoint&)
005820e9 T CVehicle::PreRender()
005845fd T CVehicle::SetDriver(CPed*)
005816a5 T CVehicle::CVehicle(unsigned char)
005816a5 T CVehicle::CVehicle(unsigned char)
00581cb9 T CVehicle::~CVehicle()
005819f9 T CVehicle::~CVehicle()
005819f9 T CVehicle::~CVehicle()
00581cf1 T CVehicle::operator delete(void*)
00581e61 T CVehicle::operator delete(void*, int)
00581da9 T CVehicle::operator new(unsigned int)
00581e0d T CVehicle::operator new(unsigned int, int)
00a7d1e8 B CWeather::Earthquake
00a7d1c0 B CWeather::TwisterPos
00a7d15c B CWeather::WaterDepth
005cdd69 T CWeather::AddHeatHaze()
00a7d17c B CWeather::WindClipped
00a7d150 B CWeather::Foggyness_SF
005cdf79 T CWeather::ForceWeather(short)
00a7d160 B CWeather::InTunnelness
00a7d1e4 B CWeather::TwisterIndex
00a7d148 B CWeather::CloudCoverage
00a7d13a B CWeather::WeatherRegion
00a7d154 B CWeather::ExtraSunnyness
00a7d1a0 B CWeather::LightningBurst
00a7d1a1 B CWeather::LightningFlash
00a7d1a4 B CWeather::LightningStart
00a7d136 B CWeather::NewWeatherType
00a7d134 B CWeather::OldWeatherType
005ce11d T CWeather::ReleaseWeather()
00a7d158 B CWeather::UnderWaterness
005cdf89 T CWeather::ForceWeatherNow(short)
005ceaa9 T CWeather::ForecastWeather(int, int)
00a7d1b4 B CWeather::LightningStartX
00a7d1b8 B CWeather::LightningStartY
00a7d138 B CWeather::ForcedWeatherType
00a7d190 B CWeather::HeatHazeFXControl
00a7d1a8 B CWeather::LightningDuration
005ce2e5 T CWeather::RenderRainStreaks()
00a7d198 B CWeather::WaterFogFXControl
00a7d13c B CWeather::WeatherTypeInList
00a7d1ec B CWeather::bScriptsForceRain
005ce131 T CWeather::AddStreamAfterRain()
00a7d19c B CWeather::HeadLightsSpectrum
00a7d140 B CWeather::InterpolationValue
005cdd6d T CWeather::UpdateInTunnelness()
005cd599 T CWeather::UpdateWeatherRegion(CVector*)
005cd6bd T CWeather::FindWeatherTypesList()
006b240c D CWeather::StreamAfterRainTimer
00a7d0b4 B CWeather::m_WeatherAudioEntity
005ce135 T CWeather::AddSandStormParticles()
00a7d1f0 B CWeather::TrafficLightsBrightness
00a7d1b0 B CWeather::LightningFlashLastChange
00a7d1ac B CWeather::WhenToPlayLightningSound
00a7d1bc B CWeather::CurrentRainParticleStrength
005cdfb1 T CWeather::SetWeatherToAppropriateTypeNow()
005cc215 T CWeather::Init()
00a7d164 B CWeather::Rain
00a7d16c B CWeather::Wind
005cc2e9 T CWeather::Update()
005cd6ed T CWeather::AddRain()
00a7d184 B CWeather::Rainbow
00a7d170 B CWeather::WindDir
00a7d18c B CWeather::HeatHaze
00a7d188 B CWeather::SunGlare
00a7d194 B CWeather::WaterFog
00a7d180 B CWeather::Wavyness
00a7d144 B CWeather::WetRoads
00a7d14c B CWeather::Foggyness
00a7d168 B CWeather::Sandstorm
005cfa95 T CZoneDef::FindCenter()
005cfbfb T CZoneDef::IsPointWithin(CVector)
005cfb29 T CZoneDef::FindBoundingBox(CVector*, CVector*)
004d414d T C_PcSave::DeleteSlot(signed char)
004d3f31 T C_PcSave::PopulateSlotInfo()
004d3d9d T C_PcSave::SetSaveDirectory(char const*)
004d3eb9 T C_PcSave::GenerateGameFilename(int, char*)
004d3ded T C_PcSave::SaveSlot(signed char, bool)
003697d3 T FxInfo_c::~FxInfo_c()
003697d1 T FxInfo_c::~FxInfo_c()
003697d1 T FxInfo_c::~FxInfo_c()
0036dd5f T FxPrim_c::Enable(unsigned char)
0036dd29 T FxPrim_c::FxPrim_c()
0036dd5d T FxPrim_c::~FxPrim_c()
0036dd45 T FxPrim_c::~FxPrim_c()
0036dd45 T FxPrim_c::~FxPrim_c()
006dfd40 B LoadTask::lastHandle
0027e8c5 W LoadTask::TryLoadSound(int, SoundData&)
0027e779 W LoadTask::Load()
006dfd3c B LoadTask::lastZIP
002a8bbd W OkScreen::OkFunc(SelectScreen*, int)
002a8c0d W OkScreen::~OkScreen()
0067a3d8 D RQMatrix::Identity
001bb021 W RQMatrix::operator*=(RQMatrix const&)
001cf9b9 T RQShader::BuildSource(unsigned int, char const**, char const**)
001cdc83 W TDBArray<RQCompiledShader>::~TDBArray()
001ead59 W TDBArray<TextureDatabaseRuntime*>::~TDBArray()
001ead73 W TDBArray<RwTexture*>::~TDBArray()
0059c95d T C2dEffect::PluginAttach()
0059cf09 T C2dEffect::Roadsign_GetNumLinesFromFlags(CRoadsignAttrFlags)
0059cf4f T C2dEffect::Roadsign_GetPaletteIDFromFlags(CRoadsignAttrFlags)
0059cf2b T C2dEffect::Roadsign_GetNumLettersFromFlags(CRoadsignAttrFlags)
005c33f1 T C3dMarker::UpdateZCoordinate(CVector, float)
005c3185 T C3dMarker::DeleteMarkerObject()
005c34d1 T C3dMarker::IsZCoordinateUpToDate()
005c3505 T C3dMarker::SetZCoordinateIfNotUpToDate(float)
005c31b1 T C3dMarker::Render()
005c304d T C3dMarker::AddMarker(unsigned int, unsigned short, float, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, float, short)
003614f9 T CBoundBox::IsPointWithin(CVector const&)
00280199 T CBuilding::ReplaceWithNewModel(int)
002800d5 T CBuilding::CBuilding()
002800d5 T CBuilding::CBuilding()
0028028d W CBuilding::~CBuilding()
00280169 T CBuilding::operator delete(void*)
00280105 T CBuilding::operator new(unsigned int)
00465fc1 T CColAccel::startCache()
00466455 T CColAccel::addCacheCol(int, CColModel const&)
009ae274 B CColAccel::m_colBounds
00466899 T CColAccel::addIPLEntity(CEntity**, int, int)
004664d1 T CColAccel::cacheLoadCol()
009ae250 B CColAccel::m_iCacheState
006af178 D CColAccel::mp_cCacheName
00466295 T CColAccel::isCacheLoading()
009ae258 B CColAccel::m_iNumColItems
009ae264 B CColAccel::m_iNumIPLItems
009ae268 B CColAccel::m_iNumSections
009ae26c B CColAccel::m_iSectionSize
00466709 T CColAccel::cacheIPLSection(CEntity**, int)
009ae278 B CColAccel::m_iNumColBounds
009ae254 B CColAccel::mp_caccColItems
009ae260 B CColAccel::mp_caccIPLItems
009ae25c B CColAccel::m_iCachingColSize
006af17c D CColAccel::m_iCachingIPLSize
004662ad T CColAccel::endCache()
004665a9 T CColAccel::addColDef(ColDef)
00466611 T CColAccel::getColDef(ColDef&)
004666cd T CColAccel::getIplDef(int)
009ae270 B CColAccel::m_iplDefs
00466669 T CColAccel::setIplDef(int, IplDef)
002e1ad9 T CColModel::AllocateData(int)
002e19d1 T CColModel::AllocateData(int, int, int, int, int, bool)
002e199f T CColModel::AllocateData()
002e1845 T CColModel::MakeMultipleAlloc()
002e1bdb T CColModel::RemoveTrianglePlanes()
002e1af9 T CColModel::RemoveCollisionVolumes()
002e1b71 T CColModel::CalculateTrianglePlanes()
002e1791 T CColModel::CColModel()
002e1791 T CColModel::CColModel()
002e17d1 T CColModel::~CColModel()
002e17d1 T CColModel::~CColModel()
002e1965 T CColModel::operator=(CColModel const&)
002e1935 T CColModel::operator delete(void*)
002e18d1 T CColModel::operator new(unsigned int)
002e1c79 T CColPoint::operator=(CColPoint const&)
002e21a1 T CColStore::AddColSlot(char const*)
002e20b1 T CColStore::Initialise()
002e261d T CColStore::FindColSlot(char const*)
00796108 B CColStore::ms_pColPool
00796110 B CColStore::ms_pQuadTree
002e291d T CColStore::LoadCollision(CVector, bool)
002e24a9 T CColStore::RemoveColSlot(int)
002e26f9 T CColStore::GetBoundingBox(int)
002e319d T CColStore::LoadAllCollision()
002e2e51 T CColStore::RequestCollision(CVector const&, int)
002e2719 T CColStore::IncludeModelIndex(int, int)
002e2f91 T CColStore::HasCollisionLoaded(CVector const&, int)
002e30e9 T CColStore::RemoveAllCollision()
002e3141 T CColStore::LoadAllBoundingBoxes()
002e28a9 T CColStore::SetCollisionRequired(CVector const&, int)
002e2751 T CColStore::AddCollisionNeededAtPosn(CVector const&)
002e31f1 T CColStore::BoundingBoxesPostProcess()
002e2c51 T CColStore::EnsureCollisionIsInMemory(CVector const&)
002e26c1 T CColStore::AddRef(int)
002e2625 T CColStore::LoadCol(int, char const*)
002e265d T CColStore::LoadCol(int, unsigned char*, int)
002e23f5 T CColStore::Shutdown()
0079610c B CColStore::m_onlyBB
002e25a1 T CColStore::RemoveCol(int)
002e26dd T CColStore::RemoveRef(int)
004bd571 T CDecision::SetDefault()
004bd691 T CDecision::Add(int, float*, int*)
004bd5b1 T CDecision::Set(int*, float (*) [4], int (*) [2], float (*) [6])
004bd8dd T CDecision::From(CDecision const&)
004bd531 T CDecision::CDecision()
004bd531 T CDecision::CDecision()
004c2649 W CDecision::operator=(CDecision const&)
0049ed9d T CDummyPed::CDummyPed()
0049ed9d T CDummyPed::CDummyPed()
0049edb9 T CDummyPed::~CDummyPed()
0049edb5 T CDummyPed::~CDummyPed()
0049edb5 T CDummyPed::~CDummyPed()
0049eef9 T CGangInfo::CGangInfo()
0049eef9 T CGangInfo::CGangInfo()
0049ef07 T CGangInfo::~CGangInfo()
0049ef07 T CGangInfo::~CGangInfo()
007a22dc B CGangWars::Difficulty
0030c5dd T CGangWars::EndGangWar(bool)
007a2334 B CGangWars::FightTimer
007a233c B CGangWars::GangRatings
007a2304 B CGangWars::Provocation
007a2300 B CGangWars::TimeStarted
007a2314 B CGangWars::WarFerocity
0030b5f9 T CGangWars::CheerVictory()
007a2328 B CGangWars::PointOfAttack
0030e339 T CGangWars::GangWarGoingOn()
007a2318 B CGangWars::LastTimeInArea
007a22e4 B CGangWars::aSpecificZones
0030aba9 T CGangWars::ClearTheStreets()
007a22c8 B CGangWars::bGangWarsActive
0030c901 T CGangWars::CreateAttackWave(int, int)
007a22e0 B CGangWars::NumSpecificZones
0030aff5 T CGangWars::PickZoneToAttack()
007a22d8 B CGangWars::bPlayerIsCloseby
007a22c9 B CGangWars::bTrainingMission
007a22d0 B CGangWars::pZoneToFightOver
0030a539 T CGangWars::InitAtStartOfGame()
0030e22d T CGangWars::SetGangWarsActive(bool)
0030ac2d T CGangWars::TellGangMembersTo(int)
0030d5cd T CGangWars::AttackWaveOvercome()
007a2348 B CGangWars::GangRatingStrength
007a2324 B CGangWars::TimeTillNextAttack
0030e0fd T CGangWars::DontCreateCivilians()
006866c8 D CGangWars::ZoneInfoForTraining
007a2358 B CGangWars::bIsPlayerOnAMission
0030e051 T CGangWars::AddKillToProvocation(int)
0030d7b9 T CGangWars::CreateDefendingGroup(int)
0030e2b5 T CGangWars::SwitchGangWarsActive()
007a22cc B CGangWars::pZoneInfoToFightOver
0030adf1 T CGangWars::StartDefensiveGangWar()
0030a599 T CGangWars::StartOffensiveGangWar()
0030e359 T CGangWars::GangWarFightingGoingOn()
0030b581 T CGangWars::ReleaseCarsInAttackWave()
0030b3a5 T CGangWars::ReleasePedsInAttackWave(bool, bool)
0030e111 T CGangWars::PedStreamedInForThisGang(int)
007a2308 B CGangWars::CoorsOfPlayerAtStartOfWar
0030e385 T CGangWars::DoesPlayerControlThisZone(CZoneInfo*)
0030ab11 T CGangWars::CanPlayerStartAGangWarHere(CZoneInfo*)
0030b215 T CGangWars::CalculateTimeTillNextAttack()
0030b261 T CGangWars::DoStuffWhenPlayerVictorious()
0030df75 T CGangWars::MakeEnemyGainInfluenceInZone(int, int)
0030e17d T CGangWars::PickStreamedInPedForThisGang(int, int*)
0030d6e5 T CGangWars::MakePlayerGainInfluenceInZone(float)
0030e421 T CGangWars::SetSpecificZoneToTriggerGangWar(int)
0030dff1 T CGangWars::StrengthenPlayerInfluenceInZone(int)
007a2354 B CGangWars::TerritoryUnderControlPercentage
0030e39d T CGangWars::TellStreamingWhichGangsAreNeeded(int*)
007a22d9 B CGangWars::bCanTriggerGangWarWhenOnAMission
0030e40d T CGangWars::ClearSpecificZonesToTriggerGangWar()
0030c771 T CGangWars::UpdateTerritoryUnderControlPercentage()
0048e891 T CGangWars::Load()
0048e615 T CGangWars::Save()
007a22d4 B CGangWars::Gang1
007a231c B CGangWars::Gang2
007a22fc B CGangWars::State
007a2320 B CGangWars::State2
0030b749 T CGangWars::Update()
007a2338 B CGangWars::RadarBlip
002803d1 T CIplStore::AddIplSlot(char const*)
002808c1 T CIplStore::GetIplName(int)
002802d1 T CIplStore::Initialise()
00280901 T CIplStore::FindIplSlot(char const*)
00281d41 T CIplStore::RequestIpls(CVector const&, int)
006dfd90 B CIplStore::ms_pQuadTree
0028113d T CIplStore::IncludeEntity(int, CEntity*)
00280665 T CIplStore::RemoveAllIpls()
002806bd T CIplStore::RemoveIplSlot(int)
002808e5 T CIplStore::SetIsInterior(int, bool)
002811d5 T CIplStore::GetBoundingBox(int)
00281e15 T CIplStore::HaveIplsLoaded(CVector const&, int)
002818b1 T CIplStore::SetIplsRequired(CVector const&, int)
0028134d T CIplStore::SetupRelatedIpls(char const*, int, CEntity**)
002816a1 T CIplStore::RemoveRelatedIpls(int)
00281249 T CIplStore::FindRelatedIplSlot(char const*)
00280d15 T CIplStore::LoadIplBoundingBox(int, unsigned char*, int)
00282061 T CIplStore::RemoveIplAndIgnore(int)
002811f5 T CIplStore::AddIplsNeededAtPosn(CVector const&)
00282029 T CIplStore::RequestIplAndIgnore(int)
00281f0d T CIplStore::LoadAllRemainingIpls()
00282099 T CIplStore::RemoveIplWhenFarAway(int)
00281219 T CIplStore::ClearIplsNeededAtPosn()
00281bb9 T CIplStore::EnsureIplsAreInMemory(CVector const&)
00281229 T CIplStore::EnableDynamicStreaming(int, bool)
0028112d T CIplStore::GetIplEntityIndexArray(int)
002820c5 T CIplStore::GetNewIplEntityIndexArray(int)
0048e475 T CIplStore::Load()
0048e3f9 T CIplStore::Save()
00280959 T CIplStore::LoadIpl(int, unsigned char*, int)
0028195d T CIplStore::LoadIpls(CVector, bool)
00280499 T CIplStore::Shutdown()
006dfd8c B CIplStore::m_onlyBB
006dfd88 B CIplStore::ms_pPool
00280759 T CIplStore::RemoveIpl(int)
0054d5ab T CKeyArray::BinarySearch(unsigned int, CKeyEntry*, short, short)
0054d4c9 T CKeyArray::Load(unsigned int, unsigned int, unsigned int*, unsigned char)
0054d539 T CKeyArray::Search(char const*, unsigned char*)
0054d4ff T CKeyArray::Unload()
0054d517 T CKeyArray::Update(unsigned short*)
00a59e8c B CLightFxs::backBufferRas
00a59488 B CLightFxs::m_aLightFxArray
00a59e88 B CLightFxs::NumActiveLightFxs
0054c24d T CMessages::AddMessage(char const*, unsigned short*, unsigned int, unsigned short, bool)
009ffb88 B CMessages::BIGMessages
0054c62d T CMessages::AddBigMessage(unsigned short*, unsigned int, unsigned short)
00a00288 B CMessages::BriefMessages
0054c46d T CMessages::ClearMessages(unsigned char)
0054b77b T CMessages::GxtStringCopy(unsigned short*, unsigned short*, unsigned short)
0054c679 T CMessages::AddBigMessageQ(unsigned short*, unsigned int, unsigned short)
0054cda9 T CMessages::ClearThisPrint(unsigned short*)
00a00448 B CMessages::PreviousBriefs
0054c3c9 T CMessages::AddMessageJumpQ(char const*, unsigned short*, unsigned int, unsigned short, bool)
0054b815 T CMessages::GxtStringCompare(unsigned short*, unsigned short*, unsigned short)
0054d1a1 T CMessages::ClearThisBigPrint(unsigned short*)
0054b75d T CMessages::GetGxtStringLength(unsigned short*)
0054c781 T CMessages::AddMessageWithNumber(char const*, unsigned short*, unsigned int, unsigned short, int, int, int, int, int, int, bool)
0054cb69 T CMessages::AddMessageWithString(unsigned short*, unsigned int, unsigned short, unsigned short*, bool)
0054d42d T CMessages::ClearThisBigPrintNow(unsigned int)
0054be85 T CMessages::InsertNumberInString(unsigned short*, int, int, int, int, int, int, unsigned short*)
0054bffd T CMessages::InsertStringInString(unsigned short*, unsigned short*)
0054c5e9 T CMessages::ClearSmallMessagesOnly()
0054c9fd T CMessages::AddBigMessageWithNumber(unsigned short*, unsigned int, unsigned short, int, int, int, int, int, int)
0054bcad T CMessages::AddToPreviousBriefArray(char const*, unsigned short*, int, int, int, int, int, int, unsigned short*)
0054b711 T CMessages::ClearPreviousBriefArray()
0054ca7d T CMessages::AddBigMessageWithNumberQ(unsigned short*, unsigned int, unsigned short, int, int, int, int, int, int)
0054c731 T CMessages::ReloadPreviousBriefArray()
0054c959 T CMessages::AddMessageJumpQWithNumber(unsigned short*, unsigned int, unsigned short, int, int, int, int, int, int, bool)
0054cced T CMessages::AddMessageJumpQWithString(unsigned short*, unsigned int, unsigned short, unsigned short*, bool)
0054d471 T CMessages::ClearAllMessagesDisplayedByGame(unsigned char)
0054b571 T CMessages::Init()
0054bdd5 T CMessages::Display(unsigned char)
0054b8a1 T CMessages::Process()
0054c1e1 T CMessages::CutString(short, char*, char**)
005aeafd T COccluder::NearCamera()
005afc99 T COccluder::ProcessLineSegment(int, int, CActiveOccluder*)
005aebb1 T COccluder::ProcessOneOccluder(CActiveOccluder*)
003157dd T CPathFind::ComputeRoute(unsigned char, CVector const&, CVector const&, CNodeAddress const&, CNodeRoute&)
00315899 T CPathFind::DoPathSearch(unsigned char, CVector, CNodeAddress, CVector, CNodeAddress*, short*, int, float*, float, CNodeAddress*, float, bool, CNodeAddress, bool, bool)
0031622f T CPathFind::AddNodeToList(CPathNode*, int)
0031846f T CPathFind::RegisterMarker(CVector*)
0031afa5 T CPathFind::RemoveInterior(unsigned int)
0031a27d T CPathFind::AddInteriorLink(int, int)
0031720d T CPathFind::CalcRoadDensity(float, float)
0031532f T CPathFind::PreparePathData()
00318c91 T CPathFind::TestCrossesRoad(CNodeAddress, CNodeAddress)
003195f5 T CPathFind::UpdateStreaming(bool)
00315399 T CPathFind::LoadPathFindData(RwStream*, int)
00315331 T CPathFind::LoadPathFindData(int)
0031a165 T CPathFind::StartNewInterior(unsigned int)
00318467 T CPathFind::StoreNodeInfoCar(short, short, signed char, signed char, short, short, short, float, signed char, signed char, bool, bool, unsigned char, bool, bool, unsigned char, unsigned char)
00318469 T CPathFind::StoreNodeInfoPed(short, short, signed char, signed char, short, short, short, float, bool, unsigned char, bool, unsigned char)
0031a0d1 T CPathFind::IsWaterNodeNearby(CVector, float)
00316e65 T CPathFind::FindRegionForCoors(float, float)
00316281 T CPathFind::RemoveBadStartNode(CVector, CNodeAddress*, short*)
00316265 T CPathFind::RemoveNodeFromList(CPathNode*)
00317181 T CPathFind::TestCoorsCloseness(CVector, unsigned char, CVector)
00315755 T CPathFind::UnLoadPathFindData(int)
0031a65d T CPathFind::CompleteNewInterior(CNodeAddress*)
003176b9 T CPathFind::FindXCoorsForRegion(int)
00317651 T CPathFind::FindXRegionForCoors(float)
003176e1 T CPathFind::FindYCoorsForRegion(int)
00317685 T CPathFind::FindYRegionForCoors(float)
003194c1 T CPathFind::MarkRegionsForCoors(CVector, float)
00317d49 T CPathFind::RecordNodesInCircle(CVector const&, float, unsigned char, int, CNodeAddress*, bool, bool, bool, bool, bool)
0031a325 T CPathFind::RemoveInteriorLinks(int)
0031a1c9 T CPathFind::AddNodeToNewInterior(float, float, float, bool, signed char, signed char, signed char, signed char, signed char, signed char)
00316349 T CPathFind::CountFloodFillGroups(unsigned char)
0031b40d T CPathFind::FindLinkBetweenNodes(CNodeAddress, CNodeAddress)
00318d55 T CPathFind::SetLinksBridgeLights(float, float, float, float, bool)
0031850d T CPathFind::SwitchRoadsOffInArea(float, float, float, float, float, float, bool, bool, bool)
00319d89 T CPathFind::AreNodesLoadedForArea(float, float, float, float)
00316505 T CPathFind::FindNextNodeWandering(unsigned char, CVector, CNodeAddress*, CNodeAddress*, unsigned char, unsigned char*)
0031b48d T CPathFind::FindParkingNodeInArea(float, float, float, float, float, float)
00319e91 T CPathFind::LoadSceneForPathNodes(CVector)
00315325 T CPathFind::ReleaseRequestedNodes()
00315d91 T CPathFind::FindNodeClosestToCoors(CVector, unsigned char, float, bool, bool, bool, bool, bool)
00318e15 T CPathFind::FindNodeCoorsForScript(CNodeAddress, bool*)
00318fe9 T CPathFind::FindNodeCoorsForScript(CNodeAddress, CNodeAddress, float*, bool*)
00318d19 T CPathFind::FindStartPointOfRegion(int, int, float&, float&)
00318a2b T CPathFind::TestForPedTrafficLight(CNodeAddress, CNodeAddress)
00317ccd T CPathFind::These2NodesAreAdjacent(CNodeAddress, CNodeAddress)
00318465 T CPathFind::AllocatePathFindInfoMem()
003174d1 T CPathFind::FindNodeClosestInRegion(CNodeAddress*, unsigned short, CVector, unsigned char, float*, bool, bool, bool, bool)
0031b38d T CPathFind::ReturnInteriorNodeIndex(unsigned int, int)
003186eb T CPathFind::SwitchPedRoadsOffInArea(float, float, float, float, float, float, bool, bool)
003188f1 T CPathFind::SwitchRoadsInAngledArea(float, float, float, float, float, float, float, unsigned char, unsigned char)
0031784d T CPathFind::Find2NodesForCarCreation(CVector, CNodeAddress*, CNodeAddress*, bool)
003168d1 T CPathFind::GeneratePedCreationCoors(float, float, float, float, float, float, CVector*, CNodeAddress*, CNodeAddress*, float*, bool, CMatrix*)
00318961 T CPathFind::MarkRoadNodeAsDontWander(float, float, float)
003195d1 T CPathFind::SetPathsNeededAtPosition(CVector const&)
0031846d T CPathFind::StoreDetachedNodeInfoCar(int, signed char, int, float, float, float, float, signed char, signed char, bool, bool, unsigned char, bool, bool, unsigned char, bool, unsigned char)
0031846b T CPathFind::StoreDetachedNodeInfoPed(int, signed char, int, float, float, float, float, bool, bool, bool, unsigned char, bool, unsigned char, bool)
00317709 T CPathFind::FindNthNodeClosestToCoors(CVector, unsigned char, float, bool, bool, int, bool, bool, CNodeAddress*)
00317ba1 T CPathFind::RecordNodesClosestToCoors(CVector, unsigned char, int, CNodeAddress*, float, bool, bool, bool, bool)
00318001 T CPathFind::FindNodePairClosestToCoors(CVector, unsigned char, CNodeAddress*, CNodeAddress*, float*, float, float, bool, bool, bool)
00318739 T CPathFind::SwitchOffNodeAndNeighbours(CPathNode*, CPathNode**, CPathNode**, bool, bool)
0031871f T CPathFind::ThisNodeHasToBeSwitchedOff(CPathNode*)
0031ad35 T CPathFind::AddDynamicLinkBetween2Nodes(CNodeAddress, CNodeAddress)
003173a5 T CPathFind::CalcDistToAnyConnectingLinks(CPathNode*, CVector)
00319c69 T CPathFind::HaveRequestedNodesBeenLoaded()
00318a25 T CPathFind::MarkRoadsBetweenLevelsInArea(float, float, float, float, float, float)
003193b1 T CPathFind::TakeWidthIntoAccountForCoors(CNodeAddress, CNodeAddress, unsigned short, float*, float*)
00318471 T CPathFind::ThisNodeWillLeadIntoADeadEnd(CPathNode*, CPathNode*)
0031a2ed T CPathFind::AddInteriorLinkToExternalNode(int, CNodeAddress)
00319c39 T CPathFind::MakeRequestForNodesToBeLoaded(float, float, float, float)
003188f3 T CPathFind::CountNeighboursToBeSwitchedOff(CPathNode*)
003186db T CPathFind::TidyUpNodeSwitchesAfterMission()
003189b7 T CPathFind::UnMarkAllRoadNodesAsDontWander()
00318a27 T CPathFind::PedMarkRoadsBetweenLevelsInArea(float, float, float, float, float, float)
003155e1 T CPathFind::SwitchRoadsOffInAreaForOneRegion(float, float, float, float, float, float, bool, bool, int, bool)
003192e9 T CPathFind::TakeWidthIntoAccountForWandering(CNodeAddress, unsigned short)
00316ec1 T CPathFind::GeneratePedCreationCoors_Interior(float, float, CVector*, CNodeAddress*, CNodeAddress*, float*)
003182f5 T CPathFind::FindNodeOrientationForCarPlacement(CNodeAddress)
0031ad57 T CPathFind::AddDynamicLinkBetween2Nodes_For1Node(CNodeAddress, CNodeAddress)
0031a3c9 T CPathFind::FindNearestExteriorNodeToInteriorNode(int)
00317e85 T CPathFind::FindNodeClosestToCoorsFavourDirection(CVector, unsigned char, float, float)
00318a29 T CPathFind::MarkRoadsBetweenLevelsNodeAndNeighbours(int)
0031529d T CPathFind::Init()
0048cfc1 T CPathFind::Load()
0048cf45 T CPathFind::Save()
00318461 T CPathFind::FindNodeOrientationForCarPlacementFacingDestination(CNodeAddress, float, float, bool)
00315315 T CPathFind::ReInit()
00319231 T CPathFind::Shutdown()
003164cf T CPathFind::CheckGrid()
004b7085 T CPedGroup::GetClosestGroupPed(CPed*, float*)
004b6dc5 T CPedGroup::RemoveAllFollowers()
004b6f2d T CPedGroup::PlayerGaveCommand_Attack(CPed*, CPed*)
004b6fad T CPedGroup::PlayerGaveCommand_Gather(CPed*)
004b7201 T CPedGroup::FindDistanceToNearestMember(CPed**)
004b7185 T CPedGroup::FindDistanceToFurthestMember()
004b6da7 T CPedGroup::Flush()
004b6d8d T CPedGroup::Process()
004b6dcd T CPedGroup::Teleport(CVector const&)
004b6d35 T CPedGroup::CPedGroup()
004b6d35 T CPedGroup::CPedGroup()
004b6d73 T CPedGroup::~CPedGroup()
004b6d73 T CPedGroup::~CPedGroup()
00470e01 T CPedStats::Initialise()
00473fb1 T CPedStats::LoadPedStats()
009f0b10 B CPedStats::ms_apPedStats
004c3435 T CPedStats::GetPedStatInfo(char*)
004c3469 T CPedStats::GetPedStatType(char*)
004c34a1 T CPedStats::FindIndexWithPedStat(CPedStats*)
004c341d T CPedStats::Shutdown()
003fd619 T CPhysical::ApplyForce(CVector, CVector, bool)
003fda95 T CPhysical::ApplySpeed()
003feedd T CPhysical::SkipPhysics()
003fe785 T CPhysical::ApplyGravity()
00401141 T CPhysical::ProcessShift()
003fd0ad T CPhysical::RemoveAndAdd()
00405f5d T CPhysical::ApplyFriction(CPhysical*, float, CColPoint&)
003fe2a9 T CPhysical::ApplyFriction(float, CColPoint&)
003fe819 T CPhysical::ApplyFriction()
004019bd T CPhysical::TestCollision(bool)
00401b75 T CPhysical::ApplyCollision(CEntity*, CColPoint&, float&)
00401e81 T CPhysical::ApplyCollision(CPhysical*, CColPoint&, float&, float&)
003fd4d9 T CPhysical::ApplyMoveForce(CVector)
003fd86d T CPhysical::ApplyMoveSpeed()
003fd541 T CPhysical::ApplyTurnForce(CVector, CVector)
003fd8d5 T CPhysical::ApplyTurnSpeed()
003ff655 T CPhysical::CheckCollision()
003fedcd T CPhysical::ProcessControl()
003fd335 T CPhysical::AddToMovingList()
003fef49 T CPhysical::ProcessCollision()
00403a6d T CPhysical::ApplyCollisionAlt(CEntity*, CColPoint&, float&, CVector&, CVector&)
00401a79 T CPhysical::AddCollisionRecord(CEntity*)
003fe9dd T CPhysical::ApplyAirResistance()
003fec71 T CPhysical::ApplyFrictionForce(CVector, CVector)
004040ed T CPhysical::ApplySoftCollision(CEntity*, CColPoint&, float&)
00404499 T CPhysical::ApplySoftCollision(CPhysical*, CColPoint&, float&, float&)
00401b0d T CPhysical::GetHasCollidedWith(CEntity*)
00406af1 T CPhysical::RemoveRefsToEntity(CEntity*)
00406c45 T CPhysical::ApplyScriptCollision(CVector, float, float, CVector*)
00405a11 T CPhysical::ApplySpringCollision(float, CVector&, CVector&, float, float, float&)
00405bbd T CPhysical::ApplySpringDampening(float, float, CVector&, CVector&, CVector&)
00406d13 T CPhysical::AttachEntityToEntity(CEntity*, CVector, CVector)
00407869 T CPhysical::AttachEntityToEntity(CEntity*, CVector*, RtQuat*)
00407f21 T CPhysical::CanPhysicalBeDamaged(eWeaponType, unsigned char*)
003fd37d T CPhysical::RemoveFromMovingList()
003fd3d5 T CPhysical::SetDamagedPieceRecord(float, CEntity*, CColPoint&, float)
003fe725 T CPhysical::UnsetIsInSafePosition()
003feb0d T CPhysical::ApplyFrictionMoveForce(CVector)
003feb75 T CPhysical::ApplyFrictionTurnForce(CVector, CVector)
00406ddd T CPhysical::PositionAttachedEntity()
0040696d T CPhysical::ProcessEntityCollision(CEntity*, CColPoint*)
004014e5 T CPhysical::ProcessShiftSectorList(int, int)
00405ab5 T CPhysical::ApplySpringCollisionAlt(float, CVector&, CVector&, float, float, CVector&, float&)
00405ded T CPhysical::ApplySpringDampeningOld(float, float, CVector&, CVector&, CVector&)
00407a69 T CPhysical::DettachEntityFromEntity(float, float, float, bool)
003ff5f9 T CPhysical::CheckCollision_SimpleCar()
00407cd1 T CPhysical::DettachAutoAttachedEntity()
003ff7fd T CPhysical::ProcessCollisionSectorList(int, int)
00401b43 T CPhysical::GetHasCollidedWithAnyObject()
00406b69 T CPhysical::PlacePhysicalRelativeToOtherPhysical(CPhysical*, CPhysical*, CVector)
00400c8d T CPhysical::ProcessCollisionSectorList_SimpleCar(CRepeatSector*)
003fce3d T CPhysical::Add()
003fd02d T CPhysical::Remove()
003fd775 T CPhysical::GetSpeed(CVector)
003fcc81 T CPhysical::CPhysical()
003fcc81 T CPhysical::CPhysical()
003fcda5 T CPhysical::~CPhysical()
003fcd65 T CPhysical::~CPhysical()
003fcd65 T CPhysical::~CPhysical()
002cf009 T CPlantMgr::Initialise()
0070cb28 B CPlantMgr::m_scanCode
002cf129 T CPlantMgr::ReloadConfig()
0070cb44 B CPlantMgr::m_LocTrisTab
002ce0ed T CPlantMgr::_UpdateLocTris(CVector const&, int)
0070cb2a B CPlantMgr::m_AmbientColor
002ceefd T CPlantMgr::DbgRenderLocTris()
002cef4d T CPlantMgr::MoveColEntToList(CPlantColEntEntry**, CPlantColEntEntry**, CPlantColEntEntry*)
002cef0d T CPlantMgr::MoveLocTriToList(CPlantLocTri**, CPlantLocTri**, CPlantLocTri*)
00711f4c B CPlantMgr::m_ColEntCacheTab
007122bc B CPlantMgr::PC_PlantModelsTab0
007122cc B CPlantMgr::PC_PlantModelsTab1
007122dc B CPlantMgr::PC_PlantModelsTab2
007122ec B CPlantMgr::PC_PlantModelsTab3
002cdc31 T CPlantMgr::UpdateAmbientColor()
0071226c B CPlantMgr::PC_PlantTextureTab0
0071227c B CPlantMgr::PC_PlantTextureTab1
0071228c B CPlantMgr::PC_PlantTextureTab2
0071229c B CPlantMgr::PC_PlantTextureTab3
002ce321 T CPlantMgr::_ColEntityCache_Add(CEntity*, unsigned char)
002cdcc9 T CPlantMgr::CalculateWindBending()
007122fc B CPlantMgr::PC_PlantModelSlotTab
00711f48 B CPlantMgr::m_CloseColEntListHead
0070cb34 B CPlantMgr::m_CloseLocTriListHead
002cef09 T CPlantMgr::DbgCountCachedEntities(unsigned int*)
007122ac B CPlantMgr::PC_PlantSlotTextureTab
002ce409 T CPlantMgr::_ColEntityCache_Remove(CEntity*)
002cde11 T CPlantMgr::_ColEntityCache_Update(CVector const&, unsigned char)
00711f44 B CPlantMgr::m_UnusedColEntListHead
0070cb30 B CPlantMgr::m_UnusedLocTriListHead
002cef01 T CPlantMgr::DbgRenderCachedEntities(unsigned int*)
002cef05 T CPlantMgr::DbgCountLocTrisAndPlants(unsigned int, unsigned int*, unsigned int*)
002ce2fd T CPlantMgr::_ColEntityCache_FindInCache(CEntity*)
002cdb49 T CPlantMgr::PreUpdateOnceForNewCameraPos(CVector const&)
002cef8d T CPlantMgr::SetPlantFriendlyFlagInAtomicMI(CAtomicModelInfo*)
002ce42d T CPlantMgr::_ProcessEntryCollisionDataSections(CPlantColEntEntry*, CVector const&, int)
002ce795 T CPlantMgr::_ProcessEntryCollisionDataSections_AddLocTris(CPlantColEntEntry*, CVector const&, int, int, int)
002ce559 T CPlantMgr::_ProcessEntryCollisionDataSections_RemoveLocTris(CPlantColEntEntry*, CVector const&, int, int, int)
002ce265 T CPlantMgr::Render()
002ce121 T CPlantMgr::Update(CVector const&)
002cd739 T CPlantMgr::Shutdown()
002cd735 T CPlantMgr::CPlantMgr()
002cd735 T CPlantMgr::CPlantMgr()
002cd737 T CPlantMgr::~CPlantMgr()
002cd737 T CPlantMgr::~CPlantMgr()
004717e1 T CPopCycle::Initialise()
009f3848 B CPopCycle::m_fPercCops
009f12a4 B CPopCycle::m_nPercCops
009f10c4 B CPopCycle::m_nPercGang
009f3834 B CPopCycle::m_pCurrZone
004cbf99 T CPopCycle::IsPedInGroup(int, int)
009f3844 B CPopCycle::m_fPercGangs
009f384c B CPopCycle::m_fPercOther
009f1484 B CPopCycle::m_nPercOther
009f0d04 B CPopCycle::m_nMaxNumCars
009f0b24 B CPopCycle::m_nMaxNumPeds
004cb50d T CPopCycle::FindNewPedType(ePedType*, int*, bool, bool)
009f3868 B CPopCycle::m_NumCops_Cars
009f3858 B CPopCycle::m_NumCops_Peds
009f3840 B CPopCycle::m_fPercDealers
009f0ee4 B CPopCycle::m_nPercDealers
009f3864 B CPopCycle::m_NumGangs_Cars
009f3854 B CPopCycle::m_NumGangs_Peds
009f386c B CPopCycle::m_NumOther_Cars
009f385c B CPopCycle::m_NumOther_Peds
009f3830 B CPopCycle::m_pCurrZoneInfo
004cb21d T CPopCycle::UpdateIsGangArea()
009f1664 B CPopCycle::m_nPercTypeGroup
004caaa5 T CPopCycle::UpdatePercentages()
009f3860 B CPopCycle::m_NumDealers_Cars
009f3850 B CPopCycle::m_NumDealers_Peds
004cba55 T CPopCycle::GetCurrentPercCops()
009f382c B CPopCycle::m_nCurrentZoneType
004cba11 T CPopCycle::GetCurrentPercGangs()
004cc181 T CPopCycle::PlayerKilledADealer()
004cb101 T CPopCycle::UpdateAreaDodgyness()
009f3824 B CPopCycle::m_nCurrentTimeIndex
004cbbe9 T CPopCycle::GetCurrentMaxNumCars()
004cbba5 T CPopCycle::GetCurrentMaxNumPeds()
009f3828 B CPopCycle::m_nCurrentTimeOfWeek
004cb9cd T CPopCycle::GetCurrentPercDealers()
004cafd9 T CPopCycle::UpdateDealerStrengths()
004cc071 T CPopCycle::GetCurrentPercTypeGroup(int)
009f3838 B CPopCycle::m_fCurrentZoneDodgyness
004cba99 T CPopCycle::GetCurrentPercOther_Cars()
004cbadd T CPopCycle::GetCurrentPercOther_Peds()
009f383c B CPopCycle::m_bCurrentZoneIsGangArea
004cb27d T CPopCycle::PickGangToCreateMembersOf()
004cc0c5 T CPopCycle::PickARandomGroupOfOtherPeds()
004cc1a1 T CPopCycle::PedIsAcceptableInCurrentZone(int)
004cbe91 T CPopCycle::IsPedAppropriateForCurrentZone(int)
004cbc2d T CPopCycle::PickPedMIToStreamInForCurrentZone()
004ca835 T CPopCycle::Update()
004cb279 T CPopCycle::Display()
0057a2f1 T CQuadBike::ProcessControl()
0057af17 W CQuadBike::GetRideAnimData()
0057a2ed T CQuadBike::ResetSuspension()
0057ac69 T CQuadBike::ProcessSuspension()
0057ac6d T CQuadBike::ProcessDrivingAnims(CPed*, unsigned char)
0057abb5 T CQuadBike::ProcessControlInputs(unsigned char)
0057aee9 T CQuadBike::SetupDamageAfterLoad()
0057a2e1 T CQuadBike::SetupSuspensionLines()
0057ae65 T CQuadBike::Fix()
0057ac99 T CQuadBike::PreRender()
0057a5dd T CQuadBike::ProcessAI(unsigned int&)
0057a1fd T CQuadBike::CQuadBike(int, unsigned char)
0057a1fd T CQuadBike::CQuadBike(int, unsigned char)
0057a2b5 T CQuadBike::~CQuadBike()
0057a28d T CQuadBike::~CQuadBike()
0057a28d T CQuadBike::~CQuadBike()
0040fbc5 T CRenderer::RenderRoads()
00962e59 B CRenderer::ms_bInTheSky
0040fc71 T CRenderer::RenderOneRoad(CEntity*)
00410921 T CRenderer::ScanSectorList(int, int)
006aad54 D CRenderer::ms_lodDistScale
0041030d T CRenderer::RenderOneNonRoad(CEntity*)
00960b60 B CRenderer::ms_fFarClipPlane
00962e58 B CRenderer::m_loadingPriority
00962e69 B CRenderer::ms_bRenderTunnels
00960b5c B CRenderer::ms_fCameraHeading
00962e60 B CRenderer::ms_pLodRenderList
00411725 T CRenderer::AddToLodRenderList(CEntity*, float)
00961b40 B CRenderer::ms_aVisibleLodPtrs
006aad58 D CRenderer::ms_lowLodDistScale
0040f6fd T CRenderer::ConstructRenderList()
0041215d T CRenderer::GetObjectsInFrustum(CEntity**, float, RwMatrixTag*)
0040ef7d T CRenderer::ResetLodRenderLists()
00410dbd T CRenderer::ScanBigBuildingList(int, int)
00960b68 B CRenderer::ms_nNoOfVisibleLods
00412361 T CRenderer::GetLodRenderListBase()
00960b50 B CRenderer::ms_vecCameraPosition
00410fe9 T CRenderer::AddEntityToRenderList(CEntity*, float)
0040f425 T CRenderer::ProcessLodRenderLists()
00411079 T CRenderer::SetupEntityVisibility(CEntity*, float&)
00411959 T CRenderer::ShouldModelBeStreamed(CEntity*, CVector const&, float)
00962e5c B CRenderer::m_pFirstPersonVehicle
00960b80 B CRenderer::ms_aVisibleEntityPtrs
00962e64 B CRenderer::ms_pLodDontRenderList
00412381 T CRenderer::AddToLodDontRenderList(CEntity*, float)
00410637 T CRenderer::RemoveVehiclePedLights(CPhysical*, bool)
0040fc9f T CRenderer::RenderFadingInEntities()
0040edf9 T CRenderer::ConstructReflectionList()
00411af5 T CRenderer::RequestObjectsInFrustum(RwMatrixTag*, int)
00962c00 B CRenderer::ms_aInVisibleEntityPtrs
00962b00 B CRenderer::ms_aVisibleSuperLodPtrs
00960b64 B CRenderer::ms_nNoOfVisibleEntities
00412371 T CRenderer::GetLodDontRenderListBase()
0040fd65 T CRenderer::RenderEverythingBarRoads()
00410405 T CRenderer::RenderFirstPersonVehicle()
00412399 W CRenderer::SetupMapEntityVisibility(CEntity*, CBaseModelInfo*, float, bool)
00962e68 B CRenderer::ms_bRenderOutsideTunnels
00960b70 B CRenderer::ms_nNoOfVisibleSuperLods
00411a41 T CRenderer::RequestObjectsInDirection(CVector const&, float, int)
004118ed T CRenderer::ScanPtrList_RequestModels(CPtrList&)
00411d59 T CRenderer::ScanSectorList_ListModels(int, int)
00960b6c B CRenderer::ms_nNoOfInVisibleEntities
00411549 T CRenderer::SetupBigBuildingVisibility(CEntity*, float&)
0041173d T CRenderer::ScanSectorList_RequestModels(int, int)
0040fccb T CRenderer::RenderFadingInUnderwaterEntities()
0041200d T CRenderer::ScanSectorList_ListModelsVisible(int, int)
0040edf5 T CRenderer::Init()
0040edf7 T CRenderer::Shutdown()
0040f991 T CRenderer::PreRender()
0040efb1 T CRenderer::ScanWorld()
0035f361 T CSetPiece::TryToGenerateCopCar(CVector2D, CVector2D)
0035f4c1 T CSetPiece::TryToGenerateCopPed(CVector2D)
0035e529 T CSetPiece::Update()
003607bd T CShopping::GetNameTag(unsigned int)
0035fccd T CShopping::LoadPrices(char const*)
0035fbb5 T CShopping::FindSection(unsigned int, char const*)
003608dd T CShopping::UpdateStats(int, bool)
0081fa70 B CShopping::ms_shopType
00360805 T CShopping::GetExtraInfo(unsigned int, int)
0035fa95 T CShopping::GetItemIndex(unsigned int)
0081c9f4 B CShopping::ms_numPrices
0036087d T CShopping::IncrementStat(int, int)
0081f840 B CShopping::ms_bHasBought
0081fa74 B CShopping::ms_shopLoaded
0035fc59 T CShopping::GetNextSection(unsigned int)
003608b5 T CShopping::IncrementStat2(int, int)
00361491 T CShopping::HasPlayerBought(unsigned int)
00686738 D CShopping::ms_sectionNames
0081fa90 B CShopping::ms_shopContents
0036045d T CShopping::AddPriceModifier(char const*, char const*, int)
00360545 T CShopping::AddPriceModifier(unsigned int, int)
0035fa49 T CShopping::RemoveLoadedShop()
00361105 T CShopping::StoreVehicleMods()
0081ef80 B CShopping::ms_statModifiers
00361075 T CShopping::StoreClothesState()
0081fa8c B CShopping::ms_numItemsInShop
0081e620 B CShopping::ms_priceModifiers
00360075 T CShopping::RemoveLoadedPrices()
003611dd T CShopping::RestoreVehicleMods()
00361069 T CShopping::SetCurrentProperty(CMultiBuilding*)
003614c5 T CShopping::SetPlayerHasBought(unsigned int)
0035f9dd T CShopping::ShutdownForRestart()
0081c9fc B CShopping::ms_numBuyableItems
00360631 T CShopping::RemovePriceModifier(char const*, char const*)
003606d9 T CShopping::RemovePriceModifier(unsigned int)
003610bd T CShopping::RestoreClothesState()
003600b5 T CShopping::FindSectionInSection(unsigned int, char const*, char const*)
0081c9f8 B CShopping::ms_numPriceModifiers
0081c9f0 B CShopping::ms_priceSectionLoaded
0035f651 T CShopping::GetPriceSectionFromName(char const*)
003609fd T CShopping::Buy(unsigned int, int)
0035f771 T CShopping::Init()
0048e5a5 T CShopping::Load()
0048e4f5 T CShopping::Save()
0035fac1 T CShopping::GetKey(char const*, int)
0081e6c0 B CShopping::ms_keys
003605fd T CShopping::FindItem(unsigned int)
00360745 T CShopping::GetPrice(unsigned int)
003600d9 T CShopping::LoadShop(char const*)
0035f7d9 T CShopping::LoadStats()
0081ca00 B CShopping::ms_prices
005db031 T CShotInfo::Initialise()
00a86170 B CShotInfo::ms_afRandTable
005db7ad T CShotInfo::GetPositionOfPossibleFlame(unsigned char, CVector&)
005db309 T CShotInfo::Update()
005db11d T CShotInfo::AddShot(CEntity*, eWeaponType, CVector, CVector)
005db119 T CShotInfo::Shutdown()
005ca409 T CSprite2d::DrawTxRect(CRect const&, CRGBA const&)
005c8889 T CSprite2d::SetTexture(char*)
005c8985 T CSprite2d::SetTexture(char*, char*)
00a7c264 B CSprite2d::maVertices
005c8a51 T CSprite2d::AddToBuffer(CRect const&, CRGBA const&, float, float, float, float, float, float, float, float)
005ca735 T CSprite2d::DrawAnyRect(float, float, float, float, float, float, float, float, CRGBA const&, CRGBA const&, CRGBA const&, CRGBA const&)
005ca621 T CSprite2d::DrawRectXLU(CRect const&, CRGBA const&, CRGBA const&, CRGBA const&, CRGBA const&)
005c99e3 T CSprite2d::DrawRotated(CRect&, float, CRGBA const&)
005c9afd T CSprite2d::DrawRotated(CVector2D const&, float, float, float, float, float, float, float, float, float, CRGBA const&)
00a7c348 B CSprite2d::NearScreenZ
005c8d69 T CSprite2d::SetVertices(RwOpenGLVertex*, CRect const&, CRGBA const&, CRGBA const&, CRGBA const&, CRGBA const&, float, float, float, float, float, float, float, float)
005c9065 T CSprite2d::SetVertices(CRect const&, CRGBA const&, CRGBA const&, CRGBA const&, CRGBA const&)
005c9755 T CSprite2d::SetVertices(CRect const&, CRGBA const&, CRGBA const&, CRGBA const&, CRGBA const&, float, float, float, float, float, float, float, float)
005c9d55 T CSprite2d::SetVertices(float, float, float, float, float, float, float, float, CRGBA const&, CRGBA const&, CRGBA const&, CRGBA const&)
005ca33d T CSprite2d::SetVertices(int, float*, CRGBA*)
005c9395 T CSprite2d::SetVertices(int, float*, float*, CRGBA const&)
005c9f61 T CSprite2d::DrawBarChart(float, float, unsigned short, unsigned char, float, signed char, unsigned char, unsigned char, CRGBA, CRGBA)
005c9281 T CSprite2d::DrawTriangle(float*, float*, CRGBA const&)
005c89f9 T CSprite2d::InitPerFrame()
005c9e49 T CSprite2d::Draw2DPolygon(float, float, float, float, float, float, float, float, CRGBA const&)
00a7c344 B CSprite2d::RecipNearClip
005c89dd T CSprite2d::SetAddressing(RwTextureAddressMode)
005c915d T CSprite2d::SetRenderState()
005c89b7 T CSprite2d::SetAddressingUV(RwTextureAddressMode, RwTextureAddressMode)
005ca3b5 T CSprite2d::SetMaskVertices(int, float*, float)
00a7c350 B CSprite2d::nextBufferIndex
005c8885 T CSprite2d::SetRecipNearClip()
00a7c34c B CSprite2d::nextBufferVertex
005c8e69 T CSprite2d::IsVertexBufferFull()
005c8ea1 T CSprite2d::RenderVertexBuffer()
005c8f09 T CSprite2d::IsVertexBufferEmpty()
005ca875 T CSprite2d::DrawCircleAtNearClip(CVector2D const&, float, CRGBA const&, int)
005caabd T CSprite2d::SetVerticesForSniper(CRect const&, CRGBA const&, CRGBA const&, CRGBA const&, CRGBA const&)
005c941d T CSprite2d::DrawWithBilinearOffset(CRect const&, CRGBA const&)
005c9589 T CSprite2d::OffsetTexCoordForBilinearFiltering(float, float)
005c9171 T CSprite2d::Draw(CRect const&, CRGBA const&)
005c9871 T CSprite2d::Draw(CRect const&, CRGBA const&, CRGBA const&, CRGBA const&, CRGBA const&)
005c9611 T CSprite2d::Draw(CRect const&, CRGBA const&, float, float, float, float, float, float, float, float)
005c8f21 T CSprite2d::Draw(float, float, float, float, CRGBA const&)
005c9c19 T CSprite2d::Draw(float, float, float, float, float, float, float, float, CRGBA const&)
005c886d T CSprite2d::Delete()
005ca235 T CSprite2d::DrawRect(CRect const&, CRGBA const&)
005ca4e9 T CSprite2d::DrawRect(CRect const&, CRGBA const&, CRGBA const&, CRGBA const&, CRGBA const&)
005c8851 T CSprite2d::CSprite2d()
005c8851 T CSprite2d::CSprite2d()
005c8857 T CSprite2d::~CSprite2d()
005c8857 T CSprite2d::~CSprite2d()
0042d33d T CTheZones::CreateZone(char*, eZoneType, float, float, float, float, float, float, eLevelName, char*)
0042df1d T CTheZones::GetMapZone(unsigned short)
0042dd51 T CTheZones::GetZoneInfo(CVector const*, CZone**)
0098f0e4 B CTheZones::m_CurrLevel
0098ec00 B CTheZones::MapZoneArray
0098d252 B CTheZones::ZonesVisited
0098d2bc B CTheZones::ZoneInfoArray
0098d2b8 B CTheZones::ZonesRevealed
0042d97b T CTheZones::PostZoneCreation()
0042dbc9 T CTheZones::GetNavigationZone(unsigned short)
0042d19d T CTheZones::ResetZonesRevealed()
0098a2d0 B CTheZones::NavigationZoneArray
0042d97d T CTheZones::PointLiesWithinZone(CVector const*, CZone*)
0042dda1 T CTheZones::SetZoneRadarColours(int, unsigned char, unsigned char, unsigned char, unsigned char)
0042d929 T CTheZones::CheckZonesForOverlap()
0042d1e5 T CTheZones::GetLevelFromPosition(CVector const*)
0098f0e0 B CTheZones::TotalNumberOfMapZones
0098ebf8 B CTheZones::TotalNumberOfZoneInfos
0042ddf1 T CTheZones::FillZonesWithGangColours(bool)
0042cff1 T CTheZones::SetCurrentZoneAsUnlocked()
0042d879 T CTheZones::AssignZoneInfoForThisZone(unsigned short)
0042df2d T CTheZones::Calc2DDistanceBetween2Zones(CZone*, CZone*)
0042dc41 T CTheZones::FindSmallestZoneForPosition(CVector const*, unsigned char)
0042cf1d T CTheZones::InitZonesPopulationSettings()
0098d250 B CTheZones::TotalNumberOfNavigationZones
0042dbd9 T CTheZones::FindZoneByLabelAndReturnIndex(char*, eZoneType)
0042d2c5 T CTheZones::GetCurrentZoneLockedOrUnlocked(float, float)
0042da15 T CTheZones::DoesPointLieWithinZoneWithGivenName(CVector const*, unsigned long long, eZoneType)
0042d92b T CTheZones::ZoneIsEntirelyContainedWithinOtherZone(CZone*, CZone*)
0042cd71 T CTheZones::Init()
0048ae15 T CTheZones::Load()
0048ac25 T CTheZones::Save()
0042cf55 T CTheZones::Update()
00384d51 T CTimeInfo::FindOtherTimeModel(char const*)
005d3b85 T CTxdStore::AddTxdSlot(char const*, char const*, bool)
005d3e35 T CTxdStore::GetNumRefs(int)
005d3a91 T CTxdStore::Initialise()
00a83ed8 B CTxdStore::ms_curName
005d3eb1 T CTxdStore::FindTxdSlot(char const*)
00a83ecc B CTxdStore::ms_pTxdPool
00a83ed4 B CTxdStore::ms_storedDB
005d3dad T CTxdStore::GameShutdown()
005d42dd T CTxdStore::GetTxdParent(RwTexDictionary*)
005d3d11 T CTxdStore::PluginAttach()
005d4031 T CTxdStore::SetTxdParent(RwTexDictionary*, RwTexDictionary*)
005d4065 T CTxdStore::StartLoadTxd(int, RwStream*)
005d4069 T CTxdStore::FinishLoadTxd(int, RwStream*)
005d4215 T CTxdStore::PopCurrentTxd()
005d3e51 T CTxdStore::RemoveTxdSlot(int)
005d4145 T CTxdStore::SetCurrentTxd(int, char const*)
00a83f18 B CTxdStore::ms_storedName
005d41d5 T CTxdStore::PushCurrentTxd()
005d3fb9 T CTxdStore::SetupTxdParent(int)
005d3c35 T CTxdStore::TxdStoreFindCB(char const*)
00a83f58 B CTxdStore::ms_lastSlotFound
005d42cd T CTxdStore::GetSpecialTxdSlot(int)
005d3f6d T CTxdStore::FindTxdSlotFromHashKey(int)
005d42ad T CTxdStore::RemoveRefWithoutDelete(int)
005d4041 T CTxdStore::AddRef(int)
005d406d T CTxdStore::Create(int)
005d4061 T CTxdStore::LoadTxd(int, RwStream*)
005d3fb5 T CTxdStore::LoadTxd(int, char const*)
005d3d61 T CTxdStore::Shutdown()
00a83ed0 B CTxdStore::ms_curDB
005d4125 T CTxdStore::RemoveRef(int)
005d40b9 T CTxdStore::RemoveTxd(int)
001cc671 T ES2Shader::CheckCompile(unsigned int, unsigned int, char const*)
006b8be4 B ES2Shader::activeShader
001cd1a5 T ES2Shader::SetBonesConstant(int, float const*)
001cd125 T ES2Shader::SetColorAttribute(float const*)
001cd141 T ES2Shader::SetMatrixConstant(RQShaderMatrixConstantID, float const*)
001ccfdd T ES2Shader::SetVectorConstant(RQShaderVectorConstantID, float const*, int)
001cc74d T ES2Shader::InitializeAfterCompile()
001ccb85 T ES2Shader::Build(char const*, char const*)
001cd2e9 T ES2Shader::Select()
001cca81 T ES2Shader::SetActive()
006b8bb8 B ES2Shader::aBindings
001cde45 W ES2Shader::ES2Shader()
001ccb19 T ES2Shader::~ES2Shader()
001ccab5 T ES2Shader::~ES2Shader()
001ccab5 T ES2Shader::~ES2Shader()
001c07bd T EmuShader::AssignShader(bool)
006b4180 B EmuShader::ShaderCloset
006b329c B EmuShader::curCustomShader
001c1471 T EmuShader::RecompileShaders()
006b4580 B EmuShader::curSelectedShader
001c0cdd T EmuShader::EvaluateRenderFlags()
001c0b65 T EmuShader::ReevaluateLightingFlags(bool)
001c0ee1 T EmuShader::Select(bool)
001c14e9 T EmuShader::Recompile()
001c1589 T EmuShader::EmuShader(char const*, char const*)
001c152d T EmuShader::EmuShader(unsigned int)
001c1589 T EmuShader::EmuShader(char const*, char const*)
001c152d T EmuShader::EmuShader(unsigned int)
001c15c3 T EmuShader::~EmuShader()
001c15c3 T EmuShader::~EmuShader()
004d2f8d T IKChain_c::IsAtTarget(float, float*)
004d2825 T IKChain_c::SetupBones(int, RwV3d, int, AnimBlendFrameData*)
004d2d3f T IKChain_c::ClampLimits(int, unsigned char, unsigned char, unsigned char, int)
004d2e9b T IKChain_c::GetPriority()
004d2e35 T IKChain_c::GetBoneSpeed(int)
004d2e6b T IKChain_c::SetBoneSpeed(int, float)
004d2d39 T IKChain_c::SetOffsetPos(RwV3d)
004d2ea1 T IKChain_c::UpdateEntity(CEntity*)
004d2eb5 T IKChain_c::UpdateOffset(int, RwV3d)
004d2ec1 T IKChain_c::UpdateTarget(unsigned char)
004d2ec9 T IKChain_c::IsFacingTarget()
004d2d35 T IKChain_c::SetOffsetBoneTag(int)
004d2a29 T IKChain_c::MoveBonesToTarget()
004d2d8d T IKChain_c::GetBoneNodeFromTag(int)
004d2981 T IKChain_c::Exit()
004d2721 T IKChain_c::Init(char*, int, CPed*, int, RwV3d, int, CEntity*, int, RwV3d, float, int)
004d29c5 T IKChain_c::Update(float)
004d2d31 T IKChain_c::SetBlend(float)
004d2dbb T IKChain_c::GetLimits(int, int, float*, float*)
004d2df9 T IKChain_c::SetLimits(int, int, float, float)
004d2719 T IKChain_c::IKChain_c()
004d2719 T IKChain_c::IKChain_c()
004d271d T IKChain_c::~IKChain_c()
004d271d T IKChain_c::~IKChain_c()
0027f7c1 T OALBuffer::OALBuffer(void*, unsigned int, void*, unsigned int, unsigned int, unsigned int)
0027f749 T OALBuffer::OALBuffer(void*, unsigned int, unsigned int, unsigned int)
0027f7c1 T OALBuffer::OALBuffer(void*, unsigned int, void*, unsigned int, unsigned int, unsigned int)
0027f749 T OALBuffer::OALBuffer(void*, unsigned int, unsigned int, unsigned int)
0027f919 T OALBuffer::~OALBuffer()
0027f8b1 T OALBuffer::~OALBuffer()
0027f8b1 T OALBuffer::~OALBuffer()
0027fd9d T OALSource::QueueBuffer(OALBuffer*)
0027fb8d T OALSource::ObtainSource()
006dfd78 B OALSource::activeSources
0027facd T OALSource::UnqueueBuffers()
0027fe3b T OALSource::Play()
0027fe27 T OALSource::Pause()
0027f6e5 T OALSource::Update()
0027fc69 T OALSource::SetData(void*, unsigned int, unsigned int, unsigned int)
0027fd59 T OALSource::SetZero(unsigned int, unsigned int)
0027ff01 T OALSource::GetVolume()
0027fd1d T OALSource::SetBuffer(OALBuffer*)
0027fd97 T OALSource::SetStream()
0027ff31 T OALSource::SetVolume(float)
0027f985 T OALSource::OALSource()
0027f985 T OALSource::OALSource()
0027fb7b T OALSource::~OALSource()
0027f9e1 T OALSource::~OALSource()
0027f9e1 T OALSource::~OALSource()
001d36ad T RQTexture::SetMipMode(RQMipMode)
001d38ad T RQTexture::GetMipOffset(unsigned int, unsigned int, RQTextureFormat, unsigned int)
001d42c1 T RQTexture::ConvertToRaw16(unsigned char*, unsigned char*, unsigned int, unsigned int, RQTextureFormat)
001d3d21 T RQTexture::ConvertToRaw32(unsigned char*, unsigned char*, unsigned int, unsigned int, RQTextureFormat)
001d3815 T RQTexture::GetTextureSize(unsigned int, unsigned int, RQTextureFormat)
001cffa1 T RQTexture::Create(RQTextureFormat, unsigned int, unsigned int, bool)
001d0099 T RQTexture::Delete(RQTexture*)
001d35cd T RQTexture::SetWrap(RQWrapMode, RQWrapMode)
001d34f9 T RQTexture::SetAniso(RQAnisoMode)
006bccf0 B RQTexture::selected
001d44db W RQTexture::~RQTexture()
001d44d9 W RQTexture::~RQTexture()
002acda9 T Telemetry::SendTelemetry()
0056fa11 T cBuoyancy::PreCalcSetup(CPhysical*, float)
005705e5 T cBuoyancy::FindWaterLevel(CVector const&, CVector*, tWaterLevel*)
0056f805 T cBuoyancy::ProcessBuoyancy(CPhysical*, float, CVector*, CVector*)
0057054d T cBuoyancy::CalcBuoyancyForce(CPhysical*, CVector*, CVector*)
0056fdad T cBuoyancy::AddSplashParticles(CPhysical*, CVector, CVector, CVector, unsigned char)
0057068b T cBuoyancy::FindWaterLevelNorm(CVector const&, CVector*, tWaterLevel*, CVector*)
00570249 T cBuoyancy::SimpleCalcBuoyancy(CPhysical*)
005708c5 T cBuoyancy::ProcessBuoyancyBoat(CVehicle*, float, CVector*, CVector*, bool)
00570731 T cBuoyancy::SimpleSumBuoyancyData(CVector&, tWaterLevel)
00570c59 W cBuoyancy::~cBuoyancy()
002e1ce1 T CColSphere::IntersectRay(CVector const&, CVector const&, CVector&, CVector&) const
002e1e03 T CColSphere::IntersectEdge(CVector const&, CVector const&, CVector&, CVector&) const
002e1ff5 T CColSphere::IntersectPoint(CVector const&) const
002e2035 T CColSphere::IntersectSphere(CColSphere const&) const
004089f1 T CPlaceable::IsWithinArea(float, float, float, float) const
00408a6b T CPlaceable::IsWithinArea(float, float, float, float, float, float) const
004c9321 T CPlayerPed::DrawTriangleForMouseRecruitPed() const
004c665d T CPlayerPed::IsHidden() const
0056f3af T CTrainDoor::IsFullyOpen() const
0056f3f9 T CTrainDoor::RetTranslationWhenOpen() const
0056f38b T CTrainDoor::RetTranslationWhenClosed() const
0056f359 T CTrainDoor::IsClosed() const
00550ac1 T CAutomobile::IsDoorReady(eDoors) const
005602fd W CAutomobile::IsDoorReady(unsigned int) const
00550b21 T CAutomobile::IsDoorClosed(eDoors) const
00560379 W CAutomobile::IsDoorClosed(unsigned int) const
00550b49 T CAutomobile::IsOpenTopCar() const
00550b31 T CAutomobile::IsDoorMissing(eDoors) const
005603b5 W CAutomobile::IsDoorMissing(unsigned int) const
00550af1 T CAutomobile::IsDoorFullyOpen(eDoors) const
0056033d W CAutomobile::IsDoorFullyOpen(unsigned int) const
00560401 W CAutomobile::GetHeightAboveRoad() const
005507e3 T CAutomobile::IsComponentPresent(int) const
0055cb01 T CAutomobile::GetAllWheelsOffGround() const
00550ab1 T CAutomobile::GetDooorAngleOpenRatio(eDoors) const
005602c9 W CAutomobile::GetDooorAngleOpenRatio(unsigned int) const
00558a7d T CAutomobile::RcbanditCheckHitWheels() const
0055d9f1 T CAutomobile::RcbanditCheck1CarWheels(CPtrList&) const
00318ab5 T CAutomobile::HasCarStoppedBecauseOfLight() const
00373afd T CEventDeath::AffectsPed(CPed*) const
00379995 W CEventDeath::GetLifeTime() const
0037998d W CEventDeath::GetEventType() const
00379991 W CEventDeath::GetEventPriority() const
00379999 W CEventDeath::Clone() const
0036f735 T CEventGroup::GetEventOfType(int) const
0036f6e7 T CEventGroup::HasEventOfType(CEvent const*) const
0036f875 T CEventGroup::GetHighestPriorityEvent() const
0036f8eb T CEventGroup::HasScriptCommandOfTaskType(int) const
0036f777 T CEventGroup::HasEvent(CEvent const*) const
003766ad T CEventInAir::AffectsPed(CPed*) const
0037a769 W CEventInAir::GetLifeTime() const
0037a761 W CEventInAir::GetEventType() const
0037a765 W CEventInAir::GetEventPriority() const
0037a76d W CEventInAir::Clone() const
005d27c5 T CMemoryHeap::GetSizeOfHoles() const
005d2717 T CMemoryHeap::IntegrityCheck() const
005d2829 T CMemoryHeap::ParseHeap() const
004baee1 T CPedScanner::GetClosestPedInRange() const
004502e7 T CQuaternion::Get(RwMatrixTag*) const
004504c9 T CQuaternion::Get(RwV3d*, float*) const
00450381 T CQuaternion::Get(float*, float*, float*) const
00307781 W CTaskSimple::GetSubTask() const
00307785 W CTaskSimple::IsSimpleTask() const
003727a9 T CEventDamage::AffectsPed(CPed*) const
0037997d W CEventDamage::GetLifeTime() const
00379975 W CEventDamage::GetEventType() const
003725a1 T CEventDamage::CloneEditable() const
00372cf1 T CEventDamage::ProcessDamage(CPed*) const
00372ab9 T CEventDamage::AffectsPedGroup(CPedGroup*) const
00372e81 T CEventDamage::ComputeHeadShot(bool&) const
0037265f T CEventDamage::GetSourceEntity() const
00372685 T CEventDamage::IsCriminalEvent() const
00379979 W CEventDamage::GetEventPriority() const
00372bed T CEventDamage::TakesPriorityOver(CEvent const&) const
00379981 W CEventDamage::GetLocalSoundLevel() const
003726c7 T CEventDamage::ReportCriminalEvent(CPed*) const
00372dbd T CEventDamage::ComputeBodyPartToRemove(int&) const
00372785 T CEventDamage::DoInformVehicleOccupants(CPed*) const
00379989 W CEventDamage::CanBeInterruptedBySameEvent() const
00377f49 T CEventDanger::AffectsPed(CPed*) const
0037b125 W CEventDanger::GetLifeTime() const
0037b11d W CEventDanger::GetEventType() const
0037b129 W CEventDanger::CloneEditable() const
00377fbd T CEventDanger::AffectsPedGroup(CPedGroup*) const
00378051 T CEventDanger::GetSourceEntity() const
0037b121 W CEventDanger::GetEventPriority() const
00376981 T CEventOnFire::AffectsPed(CPed*) const
0037897d W CEventOnFire::GetLifeTime() const
00378975 W CEventOnFire::GetEventType() const
00378979 W CEventOnFire::GetEventPriority() const
003789f9 W CEventOnFire::GetLocalSoundLevel() const
00378981 W CEventOnFire::Clone() const
00333e05 W CTaskComplex::GetSubTask() const
00333e09 W CTaskComplex::IsSimpleTask() const
00533aa3 T CTaskManager::GetActiveTask() const
00533c71 T CTaskManager::FindTaskByType(int, int) const
00533aff T CTaskManager::GetSimplestTask(int) const
00533d47 T CTaskManager::GetTaskSecondary(int) const
00533d4f T CTaskManager::HasTaskSecondary(CTask const*) const
00533b21 T CTaskManager::FindActiveTaskByType(int) const
00533ac3 T CTaskManager::GetSimplestActiveTask() const
004c34c9 T CAcquaintance::GetAcquaintances(int) const
00373bf5 T CEventDeadPed::AffectsPed(CPed*) const
00379a25 W CEventDeadPed::GetLifeTime() const
00379a1d W CEventDeadPed::GetEventType() const
00379a35 W CEventDeadPed::CloneEditable() const
00379a29 W CEventDeadPed::GetSourceEntity() const
00379a21 W CEventDeadPed::GetEventPriority() const
00379a2d W CEventDeadPed::GetLocalSoundLevel() const
00370ce5 T CEventGunShot::AffectsPed(CPed*) const
003794ad W CEventGunShot::GetLifeTime() const
003794a5 W CEventGunShot::GetEventType() const
003794d1 W CEventGunShot::CloneEditable() const
003794b1 W CEventGunShot::GetSourceEntity() const
00370ebd T CEventGunShot::IsCriminalEvent() const
003794a9 W CEventGunShot::GetEventPriority() const
00370c61 T CEventGunShot::TakesPriorityOver(CEvent const&) const
003794b5 W CEventGunShot::GetLocalSoundLevel() const
00370ee5 T CEventGunShot::ReportCriminalEvent(CPed*) const
003794cd W CEventGunShot::CanBeInterruptedBySameEvent() const
0037b645 T CEventHandler::GetCurrentEventType() const
0037b661 T CEventHandler::SetEventResponseTask(CEvent const&) const
00376cb5 T CEventInWater::AffectsPed(CPed*) const
0037a9d1 W CEventInWater::GetLifeTime() const
0037a9c9 W CEventInWater::GetEventType() const
0037a9cd W CEventInWater::GetEventPriority() const
00376ced T CEventInWater::TakesPriorityOver(CEvent const&) const
0037a9d5 W CEventInWater::Clone() const
00374731 T CEventRevived::AffectsPed(CPed*) const
0037a02d W CEventRevived::GetLifeTime() const
0037a025 W CEventRevived::GetEventType() const
0037a029 W CEventRevived::GetEventPriority() const
0037a031 W CEventRevived::Clone() const
00375309 T CEventSeenCop::AffectsPed(CPed*) const
003782e1 W CEventSeenCop::GetEventType() const
003782e9 W CEventSeenCop::CloneEditable() const
003782e5 W CEventSeenCop::GetEventPriority() const
003748d9 T CEventSexyPed::AffectsPed(CPed*) const
0037a14d W CEventSexyPed::GetLifeTime() const
0037a145 W CEventSexyPed::GetEventType() const
0037a155 W CEventSexyPed::CloneEditable() const
0037a151 W CEventSexyPed::GetSourceEntity() const
0037a149 W CEventSexyPed::GetEventPriority() const
0037abad W CEventSpecial::AffectsPed(CPed*) const
0037aba9 W CEventSpecial::GetLifeTime() const
0037aba1 W CEventSpecial::GetEventType() const
0037abb1 W CEventSpecial::CloneEditable() const
0037aba5 W CEventSpecial::GetEventPriority() const
004a8f07 T CPedAttractor::GetQueueSlot(CPed const*) const
004a8761 T CPedAttractor::GetTaskForPed(CPed*) const
004a8f4b T CPedAttractor::GetHeadOfQueue() const
004a8f59 T CPedAttractor::GetTailOfQueue() const
004a8c6d T CPedAttractor::ComputeDeltaPos() const
004a8753 T CPedAttractor::ComputeFreeSlot() const
004a8f3d T CPedAttractor::IsAtHeadOfQueue(CPed*) const
004a8b9d T CPedAttractor::ComputeAttractPos(int, CVector&) const
004a8b8b T CPedAttractor::ComputeAttractTime(int, bool, float&) const
004a8d15 T CPedAttractor::ComputeDeltaHeading() const
004a8a3d T CPedAttractor::IsRegisteredWithPed(CPed const*) const
004a8ca9 T CPedAttractor::ComputeAttractHeading(int, float&) const
004a8757 T CPedAttractor::GetNoOfRegisteredPeds() const
002e1bf7 T CCollisionData::GetNoVectors() const
002e1c37 T CCollisionData::GetNoShadVectors() const
002e16fb T CCollisionData::GetTrianglePoint(CVector&, int) const
002e171d T CCollisionData::GetShadTrianglePoint(CVector&, int) const
0056e7cd T CDamageManager::GetDoorStatus(eDoors) const
0056e7d9 T CDamageManager::GetDoorStatus(int) const
0056e763 T CDamageManager::GetLightStatus(eLights) const
0056e78b T CDamageManager::GetPanelStatus(int) const
0056e79f T CDamageManager::GetWheelStatus(int) const
0056e7ff T CDamageManager::GetEngineStatus() const
0056e821 T CDamageManager::GetAeroplaneCompStatus(int) const
004baf19 T CObjectScanner::GetClosestObjectInRange() const
004f26b5 W CTaskSimpleDie::GetTaskType() const
004f2639 W CTaskSimpleDie::Clone() const
00357545 W CTaskSimpleSay::GetTaskType() const
00357515 W CTaskSimpleSay::Clone() const
001e7659 T TextureListing::GetMipSize(unsigned int) const
001e7613 T TextureListing::GetMipCount() const
001e77b1 T TextureListing::GetRQFormat() const
001e7451 T TextureListing::GetTotalSize() const
001e7769 T TextureListing::GetRLESegSize() const
004bdced T CDecisionSimple::MakeDecision(int, short&, int&) const
00377b4d T CEventAreaCodes::AffectsPed(CPed*) const
0037b08d W CEventAreaCodes::GetLifeTime() const
0037b089 W CEventAreaCodes::GetEventType() const
00379245 W CEventAreaCodes::GetEventPriority() const
00377c03 T CEventAreaCodes::TakesPriorityOver(CEvent const&) const
0037b091 W CEventAreaCodes::Clone() const
00374d1d T CEventAttractor::AffectsPed(CPed*) const
0037a3bd W CEventAttractor::GetLifeTime() const
0037a3b5 W CEventAttractor::GetEventType() const
0037a3c1 W CEventAttractor::CloneEditable() const
0037a3b9 W CEventAttractor::GetEventPriority() const
00377e09 T CEventEscalator::AffectsPed(CPed*) const
00379431 W CEventEscalator::GetLifeTime() const
00379429 W CEventEscalator::GetEventType() const
0037942d W CEventEscalator::GetEventPriority() const
00377e59 T CEventEscalator::TakesPriorityOver(CEvent const&) const
00379435 W CEventEscalator::Clone() const
0037686f T CEventHealthLow::AffectsPed(CPed*) const
003783c9 W CEventHealthLow::GetLifeTime() const
003783c1 W CEventHealthLow::GetEventType() const
003783d9 W CEventHealthLow::CloneEditable() const
003783c5 W CEventHealthLow::GetEventPriority() const
00374bf5 T CEventPedToFlee::AffectsPed(CPed*) const
0037a325 W CEventPedToFlee::GetLifeTime() const
0037a31d W CEventPedToFlee::GetEventType() const
0037a321 W CEventPedToFlee::GetEventPriority() const
0037a329 W CEventPedToFlee::Clone() const
00377911 T CEventSoundLoud::AffectsPed(CPed*) const
00378fc9 W CEventSoundLoud::GetLifeTime() const
00378fc1 W CEventSoundLoud::GetEventType() const
00378fd5 W CEventSoundLoud::CloneEditable() const
00378fcd W CEventSoundLoud::GetSourceEntity() const
00378fc5 W CEventSoundLoud::GetEventPriority() const
00378fd1 W CEventSoundLoud::GetLocalSoundLevel() const
004b7c5d T CPedGroupPlacer::PlaceGroup(ePedType, int, CVector const&, int) const
004b8149 T CPedGroupPlacer::PlaceChatGroup(ePedType, int, CVector const&, int) const
004b870d T CPedGroupPlacer::PlaceRandomGroup(ePedType, int, CVector const&, int) const
004b7c99 T CPedGroupPlacer::PlaceFormationGroup(ePedType, int, CVector const&, int) const
004bceb1 T CSexyPedScanner::IsScanPermitted(CPed const&) const
004f2a51 W CTaskComplexDie::GetTaskType() const
004eb675 T CTaskComplexDie::SayDeathSample(CPed*) const
004f29f1 W CTaskComplexDie::Clone() const
004980f5 W CTaskSimpleChat::IsInterruptable(CPed const*) const
00497f2d W CTaskSimpleChat::Clone() const
004f2c09 W CTaskSimpleDead::GetTaskType() const
004f2bd1 W CTaskSimpleDead::Clone() const
00543fcd W CTaskSimpleDuck::GetTaskType() const
00543f71 W CTaskSimpleDuck::Clone() const
00532abd W CTaskSimpleFall::GetTaskType() const
00532a81 W CTaskSimpleFall::Clone() const
005331b1 W CTaskSimpleJump::GetTaskType() const
00533175 W CTaskSimpleJump::Clone() const
00532f55 W CTaskSimpleLand::GetTaskType() const
00532f15 W CTaskSimpleLand::Clone() const
004b8d6d W CTaskSimpleNone::GetTaskType() const
004b8d4d W CTaskSimpleNone::Clone() const
0053c855 W CTaskSimpleSwim::GetTaskType() const
0053c7b1 W CTaskSimpleSwim::Clone() const
004baebd T CVehicleScanner::GetClosestVehicleInRange() const
003bf109 T CAccidentManager::ComputeNoOfFreeAccidents() const
003775e1 T CEventFireNearby::AffectsPed(CPed*) const
0037ae6d W CEventFireNearby::GetLifeTime() const
0037ae65 W CEventFireNearby::GetEventType() const
0037ae71 W CEventFireNearby::CloneEditable() const
0037ae69 W CEventFireNearby::GetEventPriority() const
00377607 T CEventFireNearby::TakesPriorityOver(CEvent const&) const
00373dc9 T CEventGroupEvent::AffectsPed(CPed*) const
00379ae9 W CEventGroupEvent::GetLifeTime() const
00379ae1 W CEventGroupEvent::GetEventType() const
00373dcd T CEventGroupEvent::AffectsPedGroup(CPedGroup*) const
00379ae5 W CEventGroupEvent::GetEventPriority() const
00379b7d W CEventGroupEvent::GetLocalSoundLevel() const
00373dd9 T CEventGroupEvent::BaseEventTakesPriorityOverBaseEvent(CEventGroupEvent const&) const
00379aed W CEventGroupEvent::Clone() const
0037626b T CEventGunAimedAt::AffectsPed(CPed*) const
0037a6b9 W CEventGunAimedAt::GetLifeTime() const
0037a6b1 W CEventGunAimedAt::GetEventType() const
0037a6c1 W CEventGunAimedAt::CloneEditable() const
0037a6bd W CEventGunAimedAt::GetSourceEntity() const
0037642d T CEventGunAimedAt::IsCriminalEvent() const
0037a6b5 W CEventGunAimedAt::GetEventPriority() const
00376209 T CEventGunAimedAt::TakesPriorityOver(CEvent const&) const
00376449 T CEventGunAimedAt::ReportCriminalEvent(CPed*) const
00378f41 W CEventPassObject::AffectsPed(CPed*) const
00378eb5 W CEventPassObject::GetLifeTime() const
00378ead W CEventPassObject::GetEventType() const
00378eb1 W CEventPassObject::GetEventPriority() const
00378eb9 W CEventPassObject::Clone() const
00376f0b T CEventPassObject::IsValid(CPed*) const
00374b3d T CEventPedToChase::AffectsPed(CPed*) const
0037a28d W CEventPedToChase::GetLifeTime() const
0037a285 W CEventPedToChase::GetEventType() const
0037a289 W CEventPedToChase::GetEventPriority() const
0037a291 W CEventPedToChase::Clone() const
003777f5 T CEventSoundQuiet::AffectsPed(CPed*) const
003790f5 W CEventSoundQuiet::GetLifeTime() const
003790ed W CEventSoundQuiet::GetEventType() const
00379105 W CEventSoundQuiet::CloneEditable() const
003790f9 W CEventSoundQuiet::GetSourceEntity() const
003790f1 W CEventSoundQuiet::GetEventPriority() const
003790fd W CEventSoundQuiet::GetLocalSoundLevel() const
00379101 W CEventSoundQuiet::CanBeInterruptedBySameEvent() const
00376dfd T CEventStuckInAir::AffectsPed(CPed*) const
0037aa59 W CEventStuckInAir::GetLifeTime() const
0037aa55 W CEventStuckInAir::GetEventType() const
00376e5b T CEventStuckInAir::GetEventPriority() const
00376e19 T CEventStuckInAir::TakesPriorityOver(CEvent const&) const
0037aae9 W CEventStuckInAir::CanBeInterruptedBySameEvent() const
0037aa5d W CEventStuckInAir::Clone() const
004ac41d W CPedAtmAttractor::GetType() const
004c06af T CPedIntelligence::GetTaskDuck(bool) const
004c0647 T CPedIntelligence::GetTaskHold(bool) const
004ba61d T CPedIntelligence::GetTaskSwim() const
004ba67b T CPedIntelligence::GetTaskClimb() const
004c0709 T CPedIntelligence::GetTaskInAir() const
004c060f T CPedIntelligence::GetTaskThrow() const
004c05d7 T CPedIntelligence::GetTaskUseGun() const
004bff81 T CPedIntelligence::FindTaskByType(int) const
004c0ca7 T CPedIntelligence::GetEffectInUse() const
004ba645 T CPedIntelligence::GetTaskJetPack() const
004c137b T CPedIntelligence::IsFriendlyWith(CPed const&) const
004c13d1 T CPedIntelligence::IsThreatenedBy(CPed const&) const
004c05a1 T CPedIntelligence::GetTaskFighting() const
004c0429 T CPedIntelligence::IsInSeeingRange(CEntity*) const
004c039d T CPedIntelligence::IsInSeeingRange(CVector const&) const
004c0349 T CPedIntelligence::IsInHearingRange(CVector const&) const
004c072d T CPedIntelligence::GetUsingParachute() const
004c0515 T CPedIntelligence::IsRespondingToEvent(int) const
004bcb05 T CPedIntelligence::CanSeeEntityWithLights(CEntity const*, bool) const
004bbe79 T CPedIntelligence::GetMoveStateFromGoToTask() const
004c14e9 T CPedIntelligence::IsPedGoingSomewhereOnFoot() const
004bce75 T CPedIntelligence::Respects(CPed const&) const
0040867d T CSimpleTransform::UpdateMatrix(CMatrix*) const
00408619 T CSimpleTransform::UpdateRwMatrix(RwMatrixTag*) const
00537391 W CTaskComplexChat::GetTaskType() const
0053589d T CTaskComplexChat::Clone() const
00533269 W CTaskComplexJump::GetTaskType() const
0053323d W CTaskComplexJump::Clone() const
004e9d55 W CTaskSimpleBeHit::GetTaskType() const
004e9ced W CTaskSimpleBeHit::Clone() const
005333a9 W CTaskSimpleClimb::GetTaskType() const
0052e579 T CTaskSimpleClimb::StartSpeech(CPed*) const
00533305 W CTaskSimpleClimb::Clone() const
00357755 W CTaskSimpleCower::IsInterruptable(CPed const*) const
003576a5 W CTaskSimpleCower::Clone() const
004f28f5 W CTaskSimpleDrown::GetTaskType() const
004f28a9 W CTaskSimpleDrown::Clone() const
004e94c1 W CTaskSimpleFight::GetTaskType() const
004e9441 W CTaskSimpleFight::Clone() const
004da2a1 T CTaskSimpleFight::GetRange() const
00532989 W CTaskSimpleGetUp::GetTaskType() const
00532965 W CTaskSimpleGetUp::Clone() const
00532e25 W CTaskSimpleInAir::GetTaskType() const
00532dc1 W CTaskSimpleInAir::Clone() const
003573fd W CTaskSimplePause::GetTaskType() const
003573d1 W CTaskSimplePause::Clone() const
004f2d05 W CTaskSimpleTired::GetTaskType() const
004f2cd5 W CTaskSimpleTired::Clone() const
004bb67d T CAttractorScanner::GetNearestAttractorInRange(C2dEffect*&, CEntity*&) const
003747fd T CEventChatPartner::AffectsPed(CPed*) const
0037a0b1 W CEventChatPartner::GetLifeTime() const
0037a0a9 W CEventChatPartner::GetEventType() const
0037a0ad W CEventChatPartner::GetEventPriority() const
0037a0b5 W CEventChatPartner::Clone() const
00374a6d T CEventSexyVehicle::AffectsPed(CPed*) const
0037a1f5 W CEventSexyVehicle::GetLifeTime() const
0037a1ed W CEventSexyVehicle::GetEventType() const
0037a1f1 W CEventSexyVehicle::GetEventPriority() const
0037a1f9 W CEventSexyVehicle::Clone() const
00378d11 W CEventSignalAtPed::AffectsPed(CPed*) const
00378c79 W CEventSignalAtPed::GetLifeTime() const
00378c71 W CEventSignalAtPed::GetEventType() const
00378c75 W CEventSignalAtPed::GetEventPriority() const
00378c7d W CEventSignalAtPed::Clone() const
00376eb3 T CEventSignalAtPed::IsValid(CPed*) const
0037681d T CEventVehicleDied::AffectsPed(CPed*) const
0037a7ed W CEventVehicleDied::GetLifeTime() const
0037a7e5 W CEventVehicleDied::GetEventType() const
0037a7e9 W CEventVehicleDied::GetEventPriority() const
0037a7f1 W CEventVehicleDied::Clone() const
004ac855 W CPedParkAttractor::GetType() const
004ac4a9 W CPedSeatAttractor::GetType() const
004ac8e1 W CPedStepAttractor::GetType() const
004ac591 W CPedStopAttractor::GetType() const
0035f639 W CTaskComplexBeCop::GetTaskType() const
0035f5c5 W CTaskComplexBeCop::Clone() const
00333e0d W CTaskComplexClimb::GetTaskType() const
00333de5 W CTaskComplexClimb::Clone() const
0049840d W CTaskSimpleAbseil::IsInterruptable(CPed const*) const
004982e9 W CTaskSimpleAbseil::Clone() const
00543a55 W CTaskSimpleFacial::GetTaskType() const
00543a25 W CTaskSimpleFacial::Clone() const
0035791d W CTaskSimpleUseAtm::IsInterruptable(CPed const*) const
00357871 W CTaskSimpleUseAtm::Clone() const
004e95c5 W CTaskSimpleUseGun::GetTaskType() const
004e952d W CTaskSimpleUseGun::Clone() const
00386dff T CVehicleModelInfo::CLinkedUpgradeList::FindOtherUpgrade(short) const
0037573d T CEventKnockOffBike::AffectsPed(CPed*) const
0037a5ad W CEventKnockOffBike::GetLifeTime() const
0037a5a5 W CEventKnockOffBike::GetEventType() const
003760f5 T CEventKnockOffBike::IsCriminalEvent() const
0037a5a9 W CEventKnockOffBike::GetEventPriority() const
0037a6a9 W CEventKnockOffBike::GetLocalSoundLevel() const
003760f9 T CEventKnockOffBike::ReportCriminalEvent(CPed*) const
0037a5b1 W CEventKnockOffBike::Clone() const
004ac61d W CPedPizzaAttractor::GetType() const
00543b8d W CTaskComplexFacial::GetTaskType() const
00543b25 W CTaskComplexFacial::Clone() const
004f3bd5 W CTaskComplexOnFire::GetTaskType() const
004ef639 T CTaskComplexOnFire::CreateSubTask(int) const
004f3bb5 W CTaskComplexOnFire::Clone() const
005213e5 T CTaskComplexWander::ValidNodes() const
005128ed W CTaskComplexWander::GetTaskType() const
005213a5 T CTaskComplexWander::ComputeTargetPos(CPed const*, CVector&, CNodeAddress const&) const
005216e1 T CTaskComplexWander::ScanForBlockedNode(CPed*, CNodeAddress const&) const
00521829 T CTaskComplexWander::ScanForBlockedNode(CVector const&, CEntity const*) const
00521411 T CTaskComplexWander::ComputeTargetHeading(CPed const*) const
0051c511 W CTaskGangHasslePed::GetTaskType() const
0051c4b9 W CTaskGangHasslePed::Clone() const
0051c5c7 W CTaskLeanOnVehicle::GetTaskType() const
0051aa65 T CTaskLeanOnVehicle::Clone() const
004e9bf5 W CTaskSimpleChoking::GetTaskType() const
004e9b69 W CTaskSimpleChoking::Clone() const
005122f1 W CTaskSimpleGiveCPR::GetTaskType() const
005103d1 T CTaskSimpleGiveCPR::ReviveDeadPed(CPed*) const
005122bd W CTaskSimpleGiveCPR::Clone() const
0035785d W CTaskSimpleHandsUp::IsInterruptable(CPed const*) const
00357769 W CTaskSimpleHandsUp::Clone() const
0050edc5 W CTaskSimpleHitHead::GetTaskType() const
0050eda1 W CTaskSimpleHitHead::Clone() const
00497de5 W CTaskSimpleHitWall::IsInterruptable(CPed const*) const
00497cc1 W CTaskSimpleHitWall::Clone() const
004f20f1 W CTaskSimpleIKChain::GetTaskType() const
004eff55 T CTaskSimpleIKChain::Clone() const
0053363d W CTaskSimpleJetPack::GetTaskType() const
005335a1 W CTaskSimpleJetPack::Clone() const
003576e5 W CTaskSimpleRunAnim::GetTaskType() const
004d80dd W CTaskSimpleRunAnim::Clone() const
004f2dcd W CTaskSimpleSitDown::GetTaskType() const
004f2da1 W CTaskSimpleSitDown::Clone() const
004f2e91 W CTaskSimpleSitIdle::GetTaskType() const
004f2e59 W CTaskSimpleSitIdle::Clone() const
004f2f79 W CTaskSimpleStandUp::GetTaskType() const
004f2f4d W CTaskSimpleStandUp::Clone() const
004f33e1 W CTaskSimpleTurn180::GetTaskType() const
004f33bd W CTaskSimpleTurn180::Clone() const
004bc8fb T CDecisionMakerTypes::HasResponse(CPed const&, int const*, int) const
004bde61 T CDecisionMakerTypes::MakeDecision(CPed const&, int, int, bool, int, int, int, int, bool, short&, short&) const
004bdf1d T CDecisionMakerTypes::MakeDecision(CPedGroup const&, int, int, bool, int, int, int, int) const
003773f1 T CEventCarUpsideDown::AffectsPed(CPed*) const
0037ace9 W CEventCarUpsideDown::GetLifeTime() const
0037ace1 W CEventCarUpsideDown::GetEventType() const
0037ace5 W CEventCarUpsideDown::GetEventPriority() const
0037aced W CEventCarUpsideDown::Clone() const
00371ae5 T CEventDraggedOutCar::AffectsPed(CPed*) const
003798b9 W CEventDraggedOutCar::GetLifeTime() const
003798b1 W CEventDraggedOutCar::GetEventType() const
003798c9 W CEventDraggedOutCar::CloneEditable() const
00371b03 T CEventDraggedOutCar::AffectsPedGroup(CPedGroup*) const
003798bd W CEventDraggedOutCar::GetSourceEntity() const
003798b5 W CEventDraggedOutCar::GetEventPriority() const
003798c1 W CEventDraggedOutCar::GetLocalSoundLevel() const
00378e2d W CEventLeanOnVehicle::AffectsPed(CPed*) const
00378d99 W CEventLeanOnVehicle::GetLifeTime() const
00378d91 W CEventLeanOnVehicle::GetEventType() const
00378d95 W CEventLeanOnVehicle::GetEventPriority() const
00378d9d W CEventLeanOnVehicle::Clone() const
00376edf T CEventLeanOnVehicle::IsValid(CPed*) const
004ca77d W CEventNewGangMember::AffectsPed(CPed*) const
004ca741 W CEventNewGangMember::GetLifeTime() const
004ca739 W CEventNewGangMember::GetEventType() const
004ca73d W CEventNewGangMember::GetEventPriority() const
004ca745 W CEventNewGangMember::Clone() const
003765d5 T CEventScriptCommand::AffectsPed(CPed*) const
0037a75d W CEventScriptCommand::GetLifeTime() const
0037a759 W CEventScriptCommand::GetEventType() const
00376599 T CEventScriptCommand::CloneScriptTask() const
003765f3 T CEventScriptCommand::GetEventPriority() const
00376663 T CEventScriptCommand::TakesPriorityOver(CEvent const&) const
00376505 T CEventScriptCommand::Clone() const
003765a9 T CEventScriptCommand::IsValid(CPed*) const
003770eb T CEventVehicleDamage::AffectsPed(CPed*) const
0037ab95 W CEventVehicleDamage::GetLifeTime() const
0037713f T CEventVehicleDamage::GetSourceEntity() const
00377165 T CEventVehicleDamage::IsCriminalEvent() const
0037ab91 W CEventVehicleDamage::GetEventPriority() const
0037ab99 W CEventVehicleDamage::GetLocalSoundLevel() const
003771a7 T CEventVehicleDamage::ReportCriminalEvent(CPed*) const
00376a8d T CEventVehicleOnFire::AffectsPed(CPed*) const
0037a881 W CEventVehicleOnFire::GetLifeTime() const
0037a879 W CEventVehicleOnFire::GetEventType() const
0037a88d W CEventVehicleOnFire::CloneEditable() const
0037a87d W CEventVehicleOnFire::GetEventPriority() const
0037a885 W CEventVehicleOnFire::GetLocalSoundLevel() const
003753fd T CEventVehicleThreat::AffectsPed(CPed*) const
0037a509 W CEventVehicleThreat::GetLifeTime() const
0037a501 W CEventVehicleThreat::GetEventType() const
0037a50d W CEventVehicleThreat::CloneEditable() const
0037a505 W CEventVehicleThreat::GetEventPriority() const
004acf33 T CPedDebugVisualiser::VisualiseFOV(CPed const&) const
004acdc9 T CPedDebugVisualiser::VisualiseText(CPed const&) const
004acf31 T CPedDebugVisualiser::VisualiseTasks(CPed const&) const
004acf2f T CPedDebugVisualiser::VisualiseEvents(CPed const&) const
004acf35 T CPedDebugVisualiser::VisualisePosition(CPed const&) const
004aceb5 T CPedDebugVisualiser::VisualiseTextViaMenu(CPed const&) const
004accf1 T CPedDebugVisualiser::VisualiseOneAttractor(CVector const&, CVector const&, CVector const&, CVector const&) const
004aceb7 T CPedDebugVisualiser::VisualiseBoundingVolumes(CPed&) const
004aceef T CPedDebugVisualiser::VisualiseHitSidesToPlayer(CPed&) const
004aca4d T CPedDebugVisualiser::VisualiseNearbyAttractors(CPed const&) const
004acbc9 T CPedDebugVisualiser::VisualiseAttractorsInPtrList(CPtrList&, CPed const&) const
004b2185 T CPedGroupMembership::IsFollower(CPed const*) const
004b23bf T CPedGroupMembership::CountMembers() const
004b23f9 T CPedGroupMembership::CountMembersExcludingLeader() const
004b23ab T CPedGroupMembership::IsLeader(CPed const*) const
004b2361 T CPedGroupMembership::IsMember(CPed const*) const
004b235d T CPedGroupMembership::GetLeader() const
004b23a3 T CPedGroupMembership::GetMember(int) const
004ac73d W CPedLookAtAttractor::GetType() const
004f1ed5 W CTaskComplexBeStill::GetTaskType() const
004f1eb5 W CTaskComplexBeStill::Clone() const
004f41a9 W CTaskComplexInWater::GetTaskType() const
004f4189 W CTaskComplexInWater::Clone() const
00536fb3 W CTaskComplexPartner::GetTaskType() const
00506b7d W CTaskSimpleCarAlign::GetTaskType() const
00506b21 W CTaskSimpleCarAlign::Clone() const
004fec2d W CTaskSimpleCarDrive::GetTaskType() const
004feb95 W CTaskSimpleCarDrive::Clone() const
00506d99 W CTaskSimpleCarGetIn::GetTaskType() const
00506d49 W CTaskSimpleCarGetIn::Clone() const
004982d5 W CTaskSimpleDetonate::IsInterruptable(CPed const*) const
00498109 W CTaskSimpleDetonate::Clone() const
004f26fd W CTaskSimpleDieInCar::GetTaskType() const
004f26b9 W CTaskSimpleDieInCar::Clone() const
0049711d W CTaskSimpleHailTaxi::IsInterruptable(CPed const*) const
00497005 W CTaskSimpleHailTaxi::Clone() const
004f3cdf W CTaskSimpleIKLookAt::GetTaskType() const
004f02f5 T CTaskSimpleIKLookAt::Clone() const
0037b517 T CEventHandlerHistory::GetCurrentEvent() const
0037b2a5 T CEventHandlerHistory::IsRespondingToEvent(int) const
0037b523 T CEventHandlerHistory::GetStoredActiveEvent() const
0037b4fd T CEventHandlerHistory::GetCurrentEventPriority() const
0037501d T CEventVehicleToSteal::AffectsPed(CPed*) const
0037a471 W CEventVehicleToSteal::GetLifeTime() const
0037a469 W CEventVehicleToSteal::GetEventType() const
0037a46d W CEventVehicleToSteal::GetEventPriority() const
0037a475 W CEventVehicleToSteal::Clone() const
004ab2ad T CPedAttractorManager::HasEmptySlot(C2dEffect const*, CEntity const*) const
004aae29 T CPedAttractorManager::RemoveEffect(C2dEffect const*) const
004ab235 T CPedAttractorManager::RemoveEffect(C2dEffect const*, SArray<CPedAttractor*> const&) const
004ab9e7 T CPedAttractorManager::IsPedRegistered(CPed*, SArray<CPedAttractor*> const&) const
004abb7f T CPedAttractorManager::GetRelevantAttractor(CPed const*, C2dEffect const*, CEntity const*) const
004ac013 T CPedAttractorManager::GetRelevantAttractor(CPed const*, C2dEffect const*, CEntity const*, SArray<CPedAttractor*> const&) const
004ab337 T CPedAttractorManager::FindAssociatedAttractor(C2dEffect const*, CEntity const*, SArray<CPedAttractor*> const&) const
004aa92b T CPedAttractorManager::IsPedRegisteredWithEffect(CPed*) const
004a9c05 T CPedAttractorManager::IsPedRegisteredWithEffect(CPed*, C2dEffect const*, CEntity const*) const
004aba49 T CPedAttractorManager::IsPedRegisteredWithEffect(CPed*, C2dEffect const*, CEntity const*, SArray<CPedAttractor*> const&) const
004a9289 T CPedShelterAttractor::IsAtHeadOfQueue(CPed*) const
004a928d T CPedShelterAttractor::ComputeAttractPos(int, CVector&) const
004a94d5 T CPedShelterAttractor::ComputeAttractHeading(int, float&) const
004ac38f W CPedShelterAttractor::GetType() const
0054b565 W CTaskAllocatorAttack::GetType() const
004fed35 W CTaskComplexCarDrive::GetTaskType() const
004fbaf9 T CTaskComplexCarDrive::CreateSubTask(int, CPed*) const
004fbff5 T CTaskComplexCarDrive::CreateSubTaskCannotGetInCar(CPed*) const
004fecd9 W CTaskComplexCarDrive::Clone() const
004fbffd T CTaskComplexCarDrive::SetUpCar() const
00540b6d W CTaskComplexCopInCar::GetTaskType() const
0053fe0d T CTaskComplexCopInCar::CreateSubTask(int, CPed*) const
00540ad1 W CTaskComplexCopInCar::Clone() const
004f27f1 W CTaskComplexDieInCar::GetTaskType() const
004eb26d T CTaskComplexDieInCar::CreateSubTask(int, CPed*) const
004eb0cd T CTaskComplexDieInCar::PreparePedVehicleForPedDeath(CVehicle*) const
004f27c5 W CTaskComplexDieInCar::Clone() const
004fe421 W CTaskComplexLeaveCar::GetTaskType() const
004fe3ad W CTaskComplexLeaveCar::Clone() const
004ea64d W CTaskComplexRoadRage::GetTaskType() const
004e7b4d T CTaskComplexRoadRage::CreateSubTask(int, CPed*) const
004ea615 W CTaskComplexRoadRage::Clone() const
004ee839 T CTaskComplexSequence::GetTaskType() const
004f3901 W CTaskComplexSequence::Clone() const
004fe2d1 W CTaskComplexStealCar::GetTaskType() const
004fe28d W CTaskComplexStealCar::Clone() const
004f3605 W CTaskComplexSunbathe::GetTaskType() const
004f35ed W CTaskComplexSunbathe::Clone() const
0052b03f W CTaskInteriorUseInfo::GetTaskType() const
0052988d T CTaskInteriorUseInfo::Clone() const
005409c1 W CTaskSimpleArrestPed::GetTaskType() const
00540981 W CTaskSimpleArrestPed::Clone() const
00506fcd W CTaskSimpleCarGetOut::GetTaskType() const
00506f7d W CTaskSimpleCarGetOut::Clone() const
005274ad W CTaskSimpleGoToPoint::GetTaskType() const
00527445 W CTaskSimpleGoToPoint::Clone() const
004f3cd9 W CTaskSimpleIKManager::GetTaskType() const
004efbf5 T CTaskSimpleIKManager::Clone() const
00357ae1 W CTaskSimpleLookAbout::IsInterruptable(CPed const*) const
003579f5 W CTaskSimpleLookAbout::Clone() const
005439b1 W CTaskSimpleShakeFist::GetTaskType() const
0054398d W CTaskSimpleShakeFist::Clone() const
001e73f9 T TextureDatabaseEntry::operator==(TextureDatabaseEntry const&) const
00375211 T CEventAcquaintancePed::AffectsPed(CPed*) const
002fce61 W CEventAcquaintancePed::GetLifeTime() const
0037516d T CEventAcquaintancePed::AffectsPedGroup(CPedGroup*) const
002fce8b W CEventAcquaintancePed::GetSourceEntity() const
00375103 T CEventAcquaintancePed::TakesPriorityOver(CEvent const&) const
002fce97 W CEventAcquaintancePed::CanBeInterruptedBySameEvent() const
00376875 T CEventHealthReallyLow::AffectsPed(CPed*) const
00378495 W CEventHealthReallyLow::GetLifeTime() const
0037848d W CEventHealthReallyLow::GetEventType() const
00378499 W CEventHealthReallyLow::CloneEditable() const
00378491 W CEventHealthReallyLow::GetEventPriority() const
00378bf1 W CEventInteriorUseInfo::AffectsPed(CPed*) const
00378b5d W CEventInteriorUseInfo::GetLifeTime() const
00378b55 W CEventInteriorUseInfo::GetEventType() const
00378b59 W CEventInteriorUseInfo::GetEventPriority() const
00378b61 W CEventInteriorUseInfo::Clone() const
00376e87 T CEventInteriorUseInfo::IsValid(CPed*) const
00379249 W CEventLeaderEntryExit::GetLifeTime() const
00379241 W CEventLeaderEntryExit::GetEventType() const
00377c3b T CEventLeaderEntryExit::AffectsPedGroup(CPedGroup*) const
00377c37 T CEventLeaderEntryExit::TakesPriorityOver(CEvent const&) const
003792e5 W CEventLeaderEntryExit::CanBeInterruptedBySameEvent() const
0037924d W CEventLeaderEntryExit::Clone() const
0037164d T CEventObjectCollision::AffectsPed(CPed*) const
00379735 W CEventObjectCollision::GetLifeTime() const
0037972d W CEventObjectCollision::GetEventType() const
00379731 W CEventObjectCollision::GetEventPriority() const
00371681 T CEventObjectCollision::IsHeadOnCollision(CPed const&) const
003716e1 T CEventObjectCollision::TakesPriorityOver(CEvent const&) const
00379739 W CEventObjectCollision::Clone() const
00377a31 T CEventSeenPanickedPed::AffectsPed(CPed*) const
0037afe9 W CEventSeenPanickedPed::GetLifeTime() const
0037afe1 W CEventSeenPanickedPed::GetEventType() const
0037aff1 W CEventSeenPanickedPed::CloneEditable() const
0037afed W CEventSeenPanickedPed::GetSourceEntity() const
0037afe5 W CEventSeenPanickedPed::GetEventPriority() const
004b36b3 T CPedGroupIntelligence::GetTaskMain(CPed*) const
004b3937 T CPedGroupIntelligence::GetTaskSlot(CPed*, CPedTaskPair const*) const
004b3a09 T CPedGroupIntelligence::GetTaskDefault(CPed*) const
004b3855 T CPedGroupIntelligence::GetTaskSecondary(CPed*) const
004b3caf T CPedGroupIntelligence::IsGroupResponding() const
004b3d9d T CPedGroupIntelligence::IsCurrentEventValid() const
004b3999 T CPedGroupIntelligence::GetTaskScriptCommand(CPed*) const
004b38c5 T CPedGroupIntelligence::GetTaskSecondarySlot(CPed*) const
004b37f5 T CPedGroupIntelligence::GetTask(CPed*, CPedTaskPair const*) const
004ac7c9 W CPedScriptedAttractor::GetType() const
0054b485 W CTaskAllocatorRetreat::GetType() const
00540a05 W CTaskComplexArrestPed::GetTaskType() const
005409c9 W CTaskComplexArrestPed::Clone() const
004f3a15 W CTaskComplexBeInGroup::GetTaskType() const
004f39d9 W CTaskComplexBeInGroup::Clone() const
00514c29 W CTaskComplexFleePoint::GetTaskType() const
00514bbd W CTaskComplexFleePoint::Clone() const
004fe5a5 W CTaskComplexLeaveBoat::GetTaskType() const
004f962b T CTaskComplexLeaveBoat::CreateSubTask(int) const
004fe561 W CTaskComplexLeaveBoat::Clone() const
004f3661 W CTaskComplexUseEffect::GetTaskType() const
004f360d W CTaskComplexUseEffect::Clone() const
0035f64b W CTaskComplexWanderCop::GetWanderType() const
00523a0d T CTaskComplexWanderCop::ShouldPursuePlayer(CPed*) const
00526ef1 W CTaskComplexWanderCop::Clone() const
0052b029 W CTaskInteriorBeInShop::GetTaskType() const
0052b02f W CTaskInteriorBeInShop::GetWanderType() const
00529181 T CTaskInteriorBeInShop::Clone() const
0052b039 W CTaskInteriorGoToInfo::GetTaskType() const
00529559 T CTaskInteriorGoToInfo::Clone() const
0052b04b W CTaskInteriorLieInBed::GetTaskType() const
0052a385 T CTaskInteriorLieInBed::Clone() const
00507349 W CTaskSimpleBikeJacked::GetTaskType() const
005072d1 W CTaskSimpleBikeJacked::Clone() const
005073a1 W CTaskSimpleCarFallOut::GetTaskType() const
00505ac1 T CTaskSimpleCarFallOut::ComputeAnimID(int&, int&) const
00507351 W CTaskSimpleCarFallOut::Clone() const
00507055 W CTaskSimpleCarJumpOut::GetTaskType() const
00506fd5 W CTaskSimpleCarJumpOut::Clone() const
00506df1 W CTaskSimpleCarShuffle::GetTaskType() const
00506da1 W CTaskSimpleCarShuffle::Clone() const
004f2981 W CTaskSimpleDrownInCar::GetTaskType() const
004f2961 W CTaskSimpleDrownInCar::Clone() const
004f258d W CTaskSimpleDuckToggle::GetTaskType() const
004f2569 W CTaskSimpleDuckToggle::Clone() const
004e988d W CTaskSimpleGunControl::GetTaskType() const
004e97d5 W CTaskSimpleGunControl::Clone() const
00543d7d W CTaskSimpleHoldEntity::GetTaskType() const
00543c55 W CTaskSimpleHoldEntity::Clone() const
004f3ce5 W CTaskSimpleIKPointArm::GetTaskType() const
004f0609 T CTaskSimpleIKPointArm::Clone() const
00506c91 W CTaskSimplePickUpBike::GetTaskType() const
00506c41 W CTaskSimplePickUpBike::Clone() const
004f238d W CTaskSimpleStandStill::GetTaskType() const
004f2351 W CTaskSimpleStandStill::Clone() const
004f37f9 W CTaskSimpleWaitForBus::GetTaskType() const
004f37d5 W CTaskSimpleWaitForBus::Clone() const
004bd375 T CVehicleThreatScanner::ScanForVehicleThreatEvents(CPed const&, CVehicleThreats const&, CEntity**, int, CEventGroup*) const
0037086d T CEventEditableResponse::InformGroup(CPed*) const
00370861 T CEventEditableResponse::WillRespond() const
00370acd T CEventEditableResponse::TriggerLookAt(CPed*) const
002fce87 W CEventEditableResponse::HasEditableResponse() const
003708b7 T CEventEditableResponse::InformRespectedFriends(CPed*) const
00370a0d T CEventEditableResponse::InformVehicleOccupants(CPed*) const
003707cd T CEventEditableResponse::ComputeResponseTaskOfType(CPed*, int) const
002fce65 W CEventEditableResponse::Clone() const
003776d5 T CEventGunShotWhizzedBy::AffectsPed(CPed*) const
0037af0d W CEventGunShotWhizzedBy::GetLifeTime() const
0037af05 W CEventGunShotWhizzedBy::GetEventType() const
0037af15 W CEventGunShotWhizzedBy::CloneEditable() const
0037af09 W CEventGunShotWhizzedBy::GetEventPriority() const
0037af11 W CEventGunShotWhizzedBy::CanBeInterruptedBySameEvent() const
00376c39 T CEventHitByWaterCannon::AffectsPed(CPed*) const
0037a92d W CEventHitByWaterCannon::GetLifeTime() const
0037a925 W CEventHitByWaterCannon::GetEventType() const
0037a929 W CEventHitByWaterCannon::GetEventPriority() const
0037a9c1 W CEventHitByWaterCannon::GetLocalSoundLevel() const
0037a931 W CEventHitByWaterCannon::Clone() const
0037687b T CEventLowAngerAtPlayer::AffectsPed(CPed*) const
00378555 W CEventLowAngerAtPlayer::GetLifeTime() const
0037854d W CEventLowAngerAtPlayer::GetEventType() const
00378559 W CEventLowAngerAtPlayer::CloneEditable() const
00378551 W CEventLowAngerAtPlayer::GetEventPriority() const
00370fd5 T CEventVehicleCollision::AffectsPed(CPed*) const
00379595 W CEventVehicleCollision::GetLifeTime() const
0037958d W CEventVehicleCollision::GetEventType() const
00379591 W CEventVehicleCollision::GetEventPriority() const
00370fd1 T CEventVehicleCollision::TakesPriorityOver(CEvent const&) const
00379599 W CEventVehicleCollision::Clone() const
00379eed W CEventVehicleHitAndRun::AffectsPed(CPed*) const
00379e5d W CEventVehicleHitAndRun::GetLifeTime() const
00379e55 W CEventVehicleHitAndRun::GetEventType() const
00379ef3 W CEventVehicleHitAndRun::IsCriminalEvent() const
00379e59 W CEventVehicleHitAndRun::GetEventPriority() const
00379f5f W CEventVehicleHitAndRun::GetLocalSoundLevel() const
00379f13 W CEventVehicleHitAndRun::ReportCriminalEvent(CPed*) const
00379e61 W CEventVehicleHitAndRun::Clone() const
0053753d W CTaskComplexBeInCouple::GetTaskType() const
005374e5 W CTaskComplexBeInCouple::Clone() const
004ea3d5 W CTaskComplexDestroyCar::GetTaskType() const
004ea385 W CTaskComplexDestroyCar::Clone() const
00514c9d W CTaskComplexFleeEntity::GetTaskType() const
00514c31 W CTaskComplexFleeEntity::Clone() const
0051c45d W CTaskComplexGangLeader::GetTaskType() const
0051c421 W CTaskComplexGangLeader::Clone() const
0051c619 W CTaskComplexPassObject::GetTaskType() const
0051c5cd W CTaskComplexPassObject::Clone() const
00498535 W CTaskComplexSeekEntity<CEntitySeekPosCalculator>::GetTaskType() const
004991ad W CTaskComplexSeekEntity<CEntitySeekPosCalculator>::CreateSubTask(int, CPed*) const
0049846d W CTaskComplexSeekEntity<CEntitySeekPosCalculator>::Clone() const
0049c5fd W CTaskComplexSeekEntity<CEntitySeekPosCalculatorDriving>::GetTaskType() const
0049d325 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorDriving>::CreateSubTask(int, CPed*) const
0049c521 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorDriving>::Clone() const
0049d671 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorFixedPos>::GetTaskType() const
0049e399 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorFixedPos>::CreateSubTask(int, CPed*) const
0049d595 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorFixedPos>::Clone() const
00333fa9 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorStandard>::GetTaskType() const
00334a4d W CTaskComplexSeekEntity<CEntitySeekPosCalculatorStandard>::CreateSubTask(int, CPed*) const
00333ee1 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorStandard>::Clone() const
004994cd W CTaskComplexSeekEntity<CEntitySeekPosCalculatorXYOffset>::GetTaskType() const
0049a1f5 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorXYOffset>::CreateSubTask(int, CPed*) const
004993f1 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorXYOffset>::Clone() const
0049b589 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorVehicleId>::GetTaskType() const
0049c2b1 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorVehicleId>::CreateSubTask(int, CPed*) const
0049b4bd W CTaskComplexSeekEntity<CEntitySeekPosCalculatorVehicleId>::Clone() const
0049a52d W CTaskComplexSeekEntity<CEntitySeekPosCalculatorEntitySurface>::GetTaskType() const
0049b24d W CTaskComplexSeekEntity<CEntitySeekPosCalculatorEntitySurface>::CreateSubTask(int, CPed*) const
0049a465 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorEntitySurface>::Clone() const
0035d715 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorRadiusAngleOffset>::GetTaskType() const
0035e18d W CTaskComplexSeekEntity<CEntitySeekPosCalculatorRadiusAngleOffset>::CreateSubTask(int, CPed*) const
0035d641 W CTaskComplexSeekEntity<CEntitySeekPosCalculatorRadiusAngleOffset>::Clone() const
0051c517 W CTaskComplexStareAtPed::GetTaskType() const
0051994d T CTaskComplexStareAtPed::Clone() const
00533839 W CTaskComplexStuckInAir::GetTaskType() const
00533819 W CTaskComplexStuckInAir::Clone() const
004f4111 W CTaskComplexUseGoggles::GetTaskType() const
004f40f1 W CTaskComplexUseGoggles::Clone() const
004f3769 W CTaskComplexWaitForBus::GetTaskType() const
004f3745 W CTaskComplexWaitForBus::Clone() const
005374dd W CTaskComplexWaitForPed::GetTaskType() const
0053748d W CTaskComplexWaitForPed::Clone() const
00514bb5 W CTaskComplexWanderFlee::GetWanderType() const
00514b79 W CTaskComplexWanderFlee::Clone() const
00528c91 W CTaskComplexWanderGang::GetWanderType() const
00528c19 W CTaskComplexWanderGang::Clone() const
0051c4b1 W CTaskGangHassleVehicle::GetTaskType() const
005185d1 T CTaskGangHassleVehicle::Clone() const
0052b01d W CTaskInteriorBeInHouse::GetTaskType() const
00528cd1 T CTaskInteriorBeInHouse::Clone() const
0052b051 W CTaskInteriorSitAtDesk::GetTaskType() const
0052a91d T CTaskInteriorSitAtDesk::Clone() const
004f3f11 W CTaskSimpleClearLookAt::GetTaskType() const
004f3ef1 W CTaskSimpleClearLookAt::Clone() const
0050f1c5 W CTaskSimpleEvasiveDive::GetTaskType() const
0050f185 W CTaskSimpleEvasiveDive::Clone() const
0050ee79 W CTaskSimpleEvasiveStep::GetTaskType() const
0050ee39 W CTaskSimpleEvasiveStep::Clone() const
0032ec85 W CTaskSimpleFinishBrain::GetTaskType() const
0032ec65 W CTaskSimpleFinishBrain::Clone() const
004ea199 W CTaskSimpleGangDriveBy::GetTaskType() const
004ea0ed W CTaskSimpleGangDriveBy::Clone() const
00497435 W CTaskSimpleHitFromBack::IsInterruptable(CPed const*) const
00497311 W CTaskSimpleHitFromBack::Clone() const
004976a1 W CTaskSimpleHitFromLeft::IsInterruptable(CPed const*) const
0049757d W CTaskSimpleHitFromLeft::Clone() const
004f1e09 W CTaskSimpleOnEscalator::GetTaskType() const
004f1dd1 W CTaskSimpleOnEscalator::Clone() const
003579e1 W CTaskSimpleScratchHead::IsInterruptable(CPed const*) const
00357931 W CTaskSimpleScratchHead::Clone() const
004ea731 W CTaskSimpleStealthKill::GetTaskType() const
004ea6dd W CTaskSimpleStealthKill::Clone() const
003717c1 T CEventBuildingCollision::AffectsPed(CPed*) const
00378a5d W CEventBuildingCollision::GetLifeTime() const
003797f1 W CEventBuildingCollision::GetEventType() const
003797f5 W CEventBuildingCollision::GetEventPriority() const
00371999 T CEventBuildingCollision::IsHeadOnCollision(CPed const&) const
0037179d T CEventBuildingCollision::TakesPriorityOver(CEvent const&) const
00378b21 W CEventBuildingCollision::CanBeInterruptedBySameEvent() const
003797f9 W CEventBuildingCollision::Clone() const
00377015 T CEventCopCarBeingStolen::AffectsPed(CPed*) const
0037aaf5 W CEventCopCarBeingStolen::GetLifeTime() const
0037aaed W CEventCopCarBeingStolen::GetEventType() const
0037aaf1 W CEventCopCarBeingStolen::GetEventPriority() const
0037aaf9 W CEventCopCarBeingStolen::Clone() const
004b8e01 W CEventCreatePartnerTask::AffectsPed(CPed*) const
004b8da9 W CEventCreatePartnerTask::GetLifeTime() const
004b8da1 W CEventCreatePartnerTask::GetEventType() const
004b8da5 W CEventCreatePartnerTask::GetEventPriority() const
004b8dad W CEventCreatePartnerTask::Clone() const
00376881 T CEventHighAngerAtPlayer::AffectsPed(CPed*) const
00378615 W CEventHighAngerAtPlayer::GetLifeTime() const
0037860d W CEventHighAngerAtPlayer::GetEventType() const
00378619 W CEventHighAngerAtPlayer::CloneEditable() const
00378611 W CEventHighAngerAtPlayer::GetEventPriority() const
004c2569 W CEventScriptedAttractor::GetEventType() const
004c256d W CEventScriptedAttractor::CloneEditable() const
004bc45d T CPedAcquaintanceScanner::IsScanPermitted(CPed const&) const
0052819d W CTaskComplexAvoidEntity::GetTaskType() const
00528125 W CTaskComplexAvoidEntity::Clone() const
0050f00d W CTaskComplexEvasiveStep::GetTaskType() const
0050b019 T CTaskComplexEvasiveStep::CreateSubTask(int) const
0050b005 T CTaskComplexEvasiveStep::ComputeTargetHeading() const
0050efc1 W CTaskComplexEvasiveStep::Clone() const
0053304d W CTaskComplexFallToDeath::GetTaskType() const
00532ff1 W CTaskComplexFallToDeath::Clone() const
004f3475 W CTaskComplexHitResponse::GetTaskType() const
004f3451 W CTaskComplexHitResponse::Clone() const
004fd3b5 W CTaskComplexLeaveAnyCar::GetTaskType() const
004fd38d W CTaskComplexLeaveAnyCar::Clone() const
005371e5 W CTaskComplexPartnerChat::GetTaskType() const
00537119 W CTaskComplexPartnerChat::Clone() const
0053705d W CTaskComplexPartnerDeal::GetTaskType() const
00536fb9 W CTaskComplexPartnerDeal::Clone() const
0051c571 W CTaskComplexSignalAtPed::GetTaskType() const
0051c525 W CTaskComplexSignalAtPed::Clone() const
0051c4ab W CTaskComplexTrackEntity::GetTaskType() const
00517e4d T CTaskComplexTrackEntity::Clone() const
004f4269 W CTaskComplexUseSequence::GetTaskType() const
004f421d W CTaskComplexUseSequence::Clone() const
00512791 W CTaskComplexUseSwatRope::GetTaskType() const
00511d2d T CTaskComplexUseSwatRope::CreateSubTask(int, CPed*) const
00512795 W CTaskComplexUseSwatRope::IsInterruptable(CPed const*) const
00512711 W CTaskComplexUseSwatRope::Clone() const
005128f3 W CTaskComplexWanderMedic::GetWanderType() const
005128a9 W CTaskComplexWanderMedic::Clone() const
0051c5c1 W CTaskGoToVehicleAndLean::GetTaskType() const
0051c579 W CTaskGoToVehicleAndLean::Clone() const
0052b023 W CTaskInteriorBeInOffice::GetTaskType() const
00528f09 T CTaskInteriorBeInOffice::Clone() const
0052b033 W CTaskInteriorShopKeeper::GetTaskType() const
00529411 T CTaskInteriorShopKeeper::Clone() const
0052b045 W CTaskInteriorSitInChair::GetTaskType() const
00529cc5 T CTaskInteriorSitInChair::Clone() const
00507119 W CTaskSimpleCarSetPedOut::GetTaskType() const
005070ad W CTaskSimpleCarSetPedOut::Clone() const
0051c51d W CTaskSimpleDoHandSignal::GetTaskType() const
00519e29 T CTaskSimpleDoHandSignal::Clone() const
00497569 W CTaskSimpleHitFromFront::IsInterruptable(CPed const*) const
00497449 W CTaskSimpleHitFromFront::Clone() const
004977d5 W CTaskSimpleHitFromRight::IsInterruptable(CPed const*) const
004976b5 W CTaskSimpleHitFromRight::Clone() const
00544335 W CTaskSimplePickUpEntity::GetTaskType() const
005441dd W CTaskSimplePickUpEntity::Clone() const
004f3c69 W CTaskSimplePlayerOnFire::GetTaskType() const
004f3c41 W CTaskSimplePlayerOnFire::Clone() const
0053c73d W CTaskSimplePlayerOnFoot::GetTaskType() const
0053c6f5 W CTaskSimplePlayerOnFoot::Clone() const
004d7f31 W CTaskSimpleRunNamedAnim::GetTaskType() const
004d7ee9 W CTaskSimpleRunNamedAnim::Clone() const
003577b9 W CTaskSimpleRunTimedAnim::GetTaskType() const
004d819d W CTaskSimpleRunTimedAnim::Clone() const
00528849 W CTaskSimpleSlideToCoord::GetTaskType() const
00528785 W CTaskSimpleSlideToCoord::Clone() const
004e9afd W CTaskSimpleThrowControl::GetTaskType() const
004e9a99 W CTaskSimpleThrowControl::Clone() const
004f20e9 W CTaskSimpleTriggerEvent::GetTaskType() const
004f20b5 W CTaskSimpleTriggerEvent::Clone() const
004f3891 W CTaskSimpleWaitForPizza::GetTaskType() const
004f3869 W CTaskSimpleWaitForPizza::Clone() const
001e8cf9 T TextureListingContainer::CreateRaster(TextureDatabaseEntry const&) const
004991a9 W CEntitySeekPosCalculator::ComputeEntitySeekPos(CPed const&, CEntity const&, CVector&) const
0054b561 W CTaskAllocatorKillOnFoot::GetType() const
004ff2c1 W CTaskComplexDriveToPoint::GetTaskType() const
004fc5ed T CTaskComplexDriveToPoint::IsTargetBlocked(CPed*) const
004fc679 T CTaskComplexDriveToPoint::IsTargetBlocked(CPed*, CEntity**, int) const
004fc405 T CTaskComplexDriveToPoint::CreateSubTaskCannotGetInCar(CPed*) const
004ff22d W CTaskComplexDriveToPoint::Clone() const
004fc431 T CTaskComplexDriveToPoint::SetUpCar() const
0050ff99 W CTaskComplexEvasiveCower::GetTaskType() const
0050e781 T CTaskComplexEvasiveCower::CreateSubTask(int) const
0050e76d T CTaskComplexEvasiveCower::ComputeTargetHeading() const
0050ff4d W CTaskComplexEvasiveCower::Clone() const
00532af5 W CTaskComplexFallAndGetUp::GetTaskType() const
00532ac1 W CTaskComplexFallAndGetUp::Clone() const
0052bb53 T CTaskComplexFallAndGetUp::IsFalling() const
00515045 W CTaskComplexFleeAnyMeans::GetTaskType() const
00514611 T CTaskComplexFleeAnyMeans::CreateSubTask(int, CPed*) const
00514f91 W CTaskComplexFleeAnyMeans::Clone() const
00514f89 W CTaskComplexFleeShooting::GetTaskType() const
00514edd W CTaskComplexFleeShooting::Clone() const
0051c463 W CTaskComplexGangFollower::GetTaskType() const
005165ed T CTaskComplexGangFollower::Clone() const
00532d15 W CTaskComplexInAirAndLand::GetTaskType() const
00532cdd W CTaskComplexInAirAndLand::Clone() const
00540ac9 W CTaskComplexKillCriminal::GetTaskType() const
0053e80d T CTaskComplexKillCriminal::CreateSubTask(int, CPed*, bool) const
00540a45 W CTaskComplexKillCriminal::Clone() const
00537111 W CTaskComplexPartnerGreet::GetTaskType() const
00537065 W CTaskComplexPartnerGreet::Clone() const
00537435 W CTaskComplexPartnerShove::GetTaskType() const
00537399 W CTaskComplexPartnerShove::Clone() const
004ff7dd W CTaskComplexShuffleSeats::GetTaskType() const
004ff79d W CTaskComplexShuffleSeats::Clone() const
004f36b5 W CTaskComplexUseAttractor::GetTaskType() const
004f3691 W CTaskComplexUseAttractor::Clone() const
00527089 W CTaskComplexUseEntryExit::GetTaskType() const
00527059 W CTaskComplexUseEntryExit::Clone() const
0050f8ed W CTaskComplexWalkRoundCar::GetTaskType() const
0050cd61 T CTaskComplexWalkRoundCar::GoingForDoor() const
0050f855 W CTaskComplexWalkRoundCar::Clone() const
00334cad W CTaskSimpleCarDriveTimed::GetTaskType() const
00334c79 W CTaskSimpleCarDriveTimed::Clone() const
0051c4a5 W CTaskSimpleGoToPointFine::GetTaskType() const
0051c469 W CTaskSimpleGoToPointFine::Clone() const
00497f19 W CTaskSimpleHitFromBehind::IsInterruptable(CPed const*) const
00497df9 W CTaskSimpleHitFromBehind::Clone() const
0054449d W CTaskSimplePutDownEntity::GetTaskType() const
0054434d W CTaskSimplePutDownEntity::Clone() const
004f3ceb W CTaskSimpleTriggerLookAt::GetTaskType() const
004f08ed T CTaskSimpleTriggerLookAt::Clone() const
00220e2b W _rpGeometryStreamBuilder::WriteStreamInfo(RwStream*) const
002fce59 W CEventAcquaintancePedHate::GetEventType() const
002fce9d W CEventAcquaintancePedHate::CloneEditable() const
002fce5d W CEventAcquaintancePedHate::GetEventPriority() const
004c25e1 W CEventAcquaintancePedLike::GetEventType() const
004c25e9 W CEventAcquaintancePedLike::CloneEditable() const
004c25e5 W CEventAcquaintancePedLike::GetEventPriority() const
004ca7f5 W CEventDontJoinPlayerGroup::AffectsPed(CPed*) const
004ca7b9 W CEventDontJoinPlayerGroup::GetLifeTime() const
004ca7b1 W CEventDontJoinPlayerGroup::GetEventType() const
004ca7b5 W CEventDontJoinPlayerGroup::GetEventPriority() const
004ca7bd W CEventDontJoinPlayerGroup::Clone() const
00377311 T CEventGotKnockedOverByCar::AffectsPed(CPed*) const
0037ac3d W CEventGotKnockedOverByCar::GetLifeTime() const
0037ac35 W CEventGotKnockedOverByCar::GetEventType() const
0037ac49 W CEventGotKnockedOverByCar::CloneEditable() const
00377331 T CEventGotKnockedOverByCar::GetSourceEntity() const
0037ac39 W CEventGotKnockedOverByCar::GetEventPriority() const
0037ac41 W CEventGotKnockedOverByCar::GetLocalSoundLevel() const
003713d5 T CEventPedCollisionWithPed::AffectsPed(CPed*) const
00379669 W CEventPedCollisionWithPed::GetLifeTime() const
00379661 W CEventPedCollisionWithPed::GetEventType() const
00379665 W CEventPedCollisionWithPed::GetEventPriority() const
003713a1 T CEventPedCollisionWithPed::TakesPriorityOver(CEvent const&) const
0037966d W CEventPedCollisionWithPed::Clone() const
003746b1 T CEventPedEnteredMyVehicle::AffectsPed(CPed*) const
00379f6f W CEventPedEnteredMyVehicle::GetLifeTime() const
00379f67 W CEventPedEnteredMyVehicle::GetEventType() const
00379f81 W CEventPedEnteredMyVehicle::CloneEditable() const
00379f73 W CEventPedEnteredMyVehicle::GetSourceEntity() const
00379f6b W CEventPedEnteredMyVehicle::GetEventPriority() const
00379f77 W CEventPedEnteredMyVehicle::GetLocalSoundLevel() const
00373f0d T CEventPotentialGetRunOver::AffectsPed(CPed*) const
00379b8d W CEventPotentialGetRunOver::GetLifeTime() const
00379b85 W CEventPotentialGetRunOver::GetEventType() const
00379ba9 W CEventPotentialGetRunOver::CloneEditable() const
00379b91 W CEventPotentialGetRunOver::GetSourceEntity() const
00379b89 W CEventPotentialGetRunOver::GetEventPriority() const
00379b9f W CEventPotentialGetRunOver::GetLocalSoundLevel() const
004ea803 W CEventVehicleDamageWeapon::GetEventType() const
004ea809 W CEventVehicleDamageWeapon::CloneEditable() const
0050746d W CTaskComplexGetOnBoatSeat::GetTaskType() const
00507435 W CTaskComplexGetOnBoatSeat::Clone() const
005281ed W CTaskComplexGoToAttractor::GetTaskType() const
005281a5 W CTaskComplexGoToAttractor::Clone() const
0050f4a9 W CTaskComplexHitPedWithCar::GetTaskType() const
0050b885 T CTaskComplexHitPedWithCar::HitHurtsPed(CPed*) const
0050b851 T CTaskComplexHitPedWithCar::HitKillsPed(CPed*) const
0050f45d W CTaskComplexHitPedWithCar::Clone() const
004e9e69 W CTaskComplexKillPedOnFoot::GetTaskType() const
004e9dbd W CTaskComplexKillPedOnFoot::Clone() const
00540a3d W CTaskComplexPolicePursuit::GetTaskType() const
0053da51 T CTaskComplexPolicePursuit::CreateSubTask(int, CPed*) const
00540a0d W CTaskComplexPolicePursuit::Clone() const
004e9db5 W CTaskComplexReactToAttack::GetTaskType() const
004e9d5d W CTaskComplexReactToAttack::Clone() const
005123e9 W CTaskComplexTreatAccident::GetTaskType() const
00510759 T CTaskComplexTreatAccident::ComputeHeading(CPed const&) const
005123c5 W CTaskComplexTreatAccident::Clone() const
00548045 W CTaskComplexWaitForBackup::GetTaskType() const
00547fe1 W CTaskComplexWaitForBackup::Clone() const
00510159 W CTaskComplexWalkRoundFire::GetTaskType() const
00510111 W CTaskComplexWalkRoundFire::Clone() const
005274f1 W CTaskSimpleAchieveHeading::GetTaskType() const
005274b5 W CTaskSimpleAchieveHeading::Clone() const
005070a1 W CTaskSimpleCarForcePedOut::GetTaskType() const
0050705d W CTaskSimpleCarForcePedOut::Clone() const
0050f749 W CTaskSimpleHurtPedWithCar::GetTaskType() const
0050f701 W CTaskSimpleHurtPedWithCar::Clone() const
0050f5f5 W CTaskSimpleKillPedWithCar::GetTaskType() const
0050bf81 T CTaskSimpleKillPedWithCar::DamageCarBonnet(CPed const*) const
0050b9f5 T CTaskSimpleKillPedWithCar::SetPlayerPadJolt() const
0050f5b1 W CTaskSimpleKillPedWithCar::Clone() const
00379349 W CEventPlayerCommandToGroup::AffectsPed(CPed*) const
00379345 W CEventPlayerCommandToGroup::GetLifeTime() const
00377c9f T CEventPlayerCommandToGroup::AffectsPedGroup(CPedGroup*) const
0037934d W CEventPlayerCommandToGroup::GetSourceEntity() const
00377d6b T CEventPlayerCommandToGroup::TakesPriorityOver(CEvent const&) const
003743c5 T CEventPotentialWalkIntoPed::AffectsPed(CPed*) const
00379da1 W CEventPotentialWalkIntoPed::GetLifeTime() const
00379d99 W CEventPotentialWalkIntoPed::GetEventType() const
00379da9 W CEventPotentialWalkIntoPed::CloneEditable() const
00379da5 W CEventPotentialWalkIntoPed::GetSourceEntity() const
00379d9d W CEventPotentialWalkIntoPed::GetEventPriority() const
003744cf T CEventPotentialWalkIntoPed::TakesPriorityOver(CEvent const&) const
004ac6b1 W CPedTriggerScriptAttractor::GetType() const
004fef01 W CTaskComplexCarDriveWander::GetTaskType() const
004fc175 T CTaskComplexCarDriveWander::CreateSubTaskCannotGetInCar(CPed*) const
004fee99 W CTaskComplexCarDriveWander::Clone() const
004fc0d1 T CTaskComplexCarDriveWander::SetUpCar() const
004fdb59 W CTaskComplexDragPedFromCar::GetTaskType() const
004fdad9 W CTaskComplexDragPedFromCar::Clone() const
0051270d W CTaskComplexDriveFireTruck::GetTaskType() const
00511971 T CTaskComplexDriveFireTruck::CreateSubTask(int, CPed*) const
005126a9 W CTaskComplexDriveFireTruck::Clone() const
00543e05 W CTaskComplexGoPickUpEntity::GetTaskType() const
00543d91 W CTaskComplexGoPickUpEntity::Clone() const
004ea689 W CTaskComplexKillAllThreats::GetTaskType() const
004e8195 T CTaskComplexKillAllThreats::GetNextThreatPed(CPed&) const
004ea655 W CTaskComplexKillAllThreats::Clone() const
004fd245 W CTaskComplexLeaveCarAndDie::GetTaskType() const
004fd1c1 W CTaskComplexLeaveCarAndDie::Clone() const
004fd861 W CTaskComplexOpenDriverDoor::GetTaskType() const
004fd7d1 W CTaskComplexOpenDriverDoor::Clone() const
005126a5 W CTaskComplexPresentIDToCop::GetTaskType() const
005116d5 T CTaskComplexPresentIDToCop::CreateSubTask(int, CPed const*) const
00511805 T CTaskComplexPresentIDToCop::ComputeTargetHeading(CPed const&) const
00512671 W CTaskComplexPresentIDToCop::Clone() const
00514d15 W CTaskComplexSmartFleePoint::GetTaskType() const
00513747 T CTaskComplexSmartFleePoint::ComputeFleeDir(CPed*) const
00513719 T CTaskComplexSmartFleePoint::SetDefaultTaskWanderDir(CPed*) const
00514ca5 W CTaskComplexSmartFleePoint::Clone() const
004f404d W CTaskComplexUseMobilePhone::GetTaskType() const
004f401d W CTaskComplexUseMobilePhone::Clone() const
005127c1 W CTaskComplexUseWaterCannon::GetTaskType() const
0051279d W CTaskComplexUseWaterCannon::Clone() const
00526fcd W CTaskComplexWanderCriminal::GetWanderType() const
00526f6d W CTaskComplexWanderCriminal::Clone() const
00526ebd W CTaskComplexWanderStandard::GetWanderType() const
00526e5d W CTaskComplexWanderStandard::Clone() const
00523947 T CTaskComplexWanderStandard::WillChat(CPed const&, CPed const&) const
004e9525 W CTaskSimpleFightingControl::GetTaskType() const
004e94c9 W CTaskSimpleFightingControl::Clone() const
004e9a91 W CTaskSimpleThrowProjectile::GetTaskType() const
004e9a2d W CTaskSimpleThrowProjectile::Clone() const
00307789 W CTaskSimpleUninterruptable::GetTaskType() const
00307761 W CTaskSimpleUninterruptable::Clone() const
00377509 T CEventPotentialWalkIntoFire::AffectsPed(CPed*) const
0037ad81 W CEventPotentialWalkIntoFire::GetLifeTime() const
0037ad79 W CEventPotentialWalkIntoFire::GetEventType() const
0037ad85 W CEventPotentialWalkIntoFire::CloneEditable() const
0037ad7d W CEventPotentialWalkIntoFire::GetEventPriority() const
004d67b1 T CPlayerRelationshipRecorder::GetRelationshipWithPlayer(CPed const*) const
004ff08d W CTaskComplexCarDriveMission::GetTaskType() const
004ff009 W CTaskComplexCarDriveMission::Clone() const
004fc271 T CTaskComplexCarDriveMission::SetUpCar() const
004ea60d W CTaskComplexDestroyCarArmed::GetTaskType() const
004ea595 W CTaskComplexDestroyCarArmed::Clone() const
004ea58d W CTaskComplexDestroyCarMelee::GetTaskType() const
004ea539 W CTaskComplexDestroyCarMelee::Clone() const
004ff511 W CTaskComplexDrivePointRoute::GetTaskType() const
004ff489 W CTaskComplexDrivePointRoute::Clone() const
005481d1 W CTaskComplexExtinguishFires::GetTaskType() const
00547a51 T CTaskComplexExtinguishFires::GetNearestFire(CPed*) const
005481ad W CTaskComplexExtinguishFires::Clone() const
00532c15 W CTaskComplexFallAndStayDown::GetTaskType() const
00532bed W CTaskComplexFallAndStayDown::Clone() const
00527f75 W CTaskComplexFollowNodeRoute::GetTaskType() const
00520005 T CTaskComplexFollowNodeRoute::CreateSubTask(int, CPed*) const
0052082d T CTaskComplexFollowNodeRoute::CanGoStraightThere(CPed const&, CVector const&, CVector const&, float) const
00527e99 W CTaskComplexFollowNodeRoute::Clone() const
0051c649 W CTaskComplexGangJoinRespond::GetTaskType() const
0051c621 W CTaskComplexGangJoinRespond::Clone() const
00527895 W CTaskComplexGoToPointAiming::GetTaskType() const
0051dc1d T CTaskComplexGoToPointAiming::CreateSubTask(int) const
005277ad W CTaskComplexGoToPointAiming::Clone() const
0052877d W CTaskComplexGotoDoorAndOpen::GetTaskType() const
00525afd T CTaskComplexGotoDoorAndOpen::Clone() const
004ea771 W CTaskComplexKillPedFromBoat::GetTaskType() const
004ea739 W CTaskComplexKillPedFromBoat::Clone() const
004fe8b1 W CTaskComplexLeaveCarAndFlee::GetTaskType() const
004f9aed T CTaskComplexLeaveCarAndFlee::CreateSubTask(int) const
004fe851 W CTaskComplexLeaveCarAndFlee::Clone() const
0050fed5 W CTaskComplexMoveBackAndJump::GetTaskType() const
0050e629 T CTaskComplexMoveBackAndJump::CreateSubTask(int) const
0050feb5 W CTaskComplexMoveBackAndJump::Clone() const
00514d95 W CTaskComplexSmartFleeEntity::GetTaskType() const
00514d1d W CTaskComplexSmartFleeEntity::Clone() const
004f368d W CTaskComplexWaitAtAttractor::GetTaskType() const
004f3665 W CTaskComplexWaitAtAttractor::Clone() const
0050fd09 W CTaskComplexWalkRoundObject::GetTaskType() const
0050e001 T CTaskComplexWalkRoundObject::CreateSubTask(int, CPed const*) const
0050e075 T CTaskComplexWalkRoundObject::CreateRouteTask(CPed const*) const
0050fca1 W CTaskComplexWalkRoundObject::Clone() const
004e9b61 W CTaskSimpleBeHitWhileMoving::GetTaskType() const
004e9b31 W CTaskSimpleBeHitWhileMoving::Clone() const
004e9b29 W CTaskSimpleBeKickedOnGround::GetTaskType() const
004e9b05 W CTaskSimpleBeKickedOnGround::Clone() const
004ff955 W CTaskSimpleCarSetTempAction::GetTaskType() const
004ff8b5 W CTaskSimpleCarSetTempAction::Clone() const
004972fd W CTaskSimpleHailTaxiAndPause::IsInterruptable(CPed const*) const
00497131 W CTaskSimpleHailTaxiAndPause::Clone() const
00497b79 W CTaskSimpleHitByGunFromLeft::IsInterruptable(CPed const*) const
00497a55 W CTaskSimpleHitByGunFromLeft::Clone() const
0049790d W CTaskSimpleHitByGunFromRear::IsInterruptable(CPed const*) const
004977e9 W CTaskSimpleHitByGunFromRear::Clone() const
004c261d W CEventAcquaintancePedDislike::GetEventType() const
004c2625 W CEventAcquaintancePedDislike::CloneEditable() const
004c2621 W CEventAcquaintancePedDislike::GetEventPriority() const
004c25a5 W CEventAcquaintancePedRespect::GetEventType() const
004c25ad W CEventAcquaintancePedRespect::CloneEditable() const
004c25a9 W CEventAcquaintancePedRespect::GetEventPriority() const
004c27c5 W CEventPedCollisionWithPlayer::GetEventType() const
004c27c9 W CEventPedCollisionWithPlayer::Clone() const
004c2773 W CEventPlayerCollisionWithPed::GetEventType() const
004c2779 W CEventPlayerCollisionWithPed::Clone() const
0056041d W CEventVehicleDamageCollision::GetEventType() const
00560421 W CEventVehicleDamageCollision::CloneEditable() const
004fd525 W CTaskComplexEnterCarAsDriver::GetTaskType() const
004fd499 W CTaskComplexEnterCarAsDriver::Clone() const
00527cb1 W CTaskComplexFollowPointRoute::GetTaskType() const
00527bd5 W CTaskComplexFollowPointRoute::Clone() const
004f3535 W CTaskComplexHitByGunResponse::GetTaskType() const
004f3511 W CTaskComplexHitByGunResponse::Clone() const
00546339 W CTaskComplexSeekEntityAiming::GetTaskType() const
005462f1 W CTaskComplexSeekEntityAiming::Clone() const
004f461d W CTaskComplexUseEffectRunning::GetTaskType() const
004f45b9 W CTaskComplexUseEffectRunning::Clone() const
004f44d9 W CTaskComplexUseScriptedBrain::GetTaskType() const
004f44a1 W CTaskComplexUseScriptedBrain::Clone() const
00537485 W CTaskComplexWalkAlongsidePed::GetTaskType() const
00535d21 T CTaskComplexWalkAlongsidePed::CreateSubTask(int, CPed*) const
0053743d W CTaskComplexWalkAlongsidePed::Clone() const
00527045 W CTaskComplexWanderProstitute::GetWanderType() const
00526fe1 W CTaskComplexWanderProstitute::Clone() const
00507179 W CTaskSimpleCarSlowDragPedOut::GetTaskType() const
00504229 T CTaskSimpleCarSlowDragPedOut::ComputeAnimID(int&, int&) const
00507125 W CTaskSimpleCarSlowDragPedOut::Clone() const
00506e3d W CTaskSimpleCarWaitToSlowDown::GetTaskType() const
00506df9 W CTaskSimpleCarWaitToSlowDown::Clone() const
005074b1 W CTaskSimpleCreateCarAndGetIn::GetTaskType() const
00507475 W CTaskSimpleCreateCarAndGetIn::Clone() const
00497a41 W CTaskSimpleHitByGunFromFront::IsInterruptable(CPed const*) const
00497921 W CTaskSimpleHitByGunFromFront::Clone() const
00497cad W CTaskSimpleHitByGunFromRight::IsInterruptable(CPed const*) const
00497b8d W CTaskSimpleHitByGunFromRight::Clone() const
00378801 W CEventLeaderExitedCarAsDriver::AffectsPed(CPed*) const
003787fd W CEventLeaderExitedCarAsDriver::GetLifeTime() const
003787f5 W CEventLeaderExitedCarAsDriver::GetEventType() const
00378805 W CEventLeaderExitedCarAsDriver::CloneEditable() const
003768ef T CEventLeaderExitedCarAsDriver::AffectsPedGroup(CPedGroup*) const
003787f9 W CEventLeaderExitedCarAsDriver::GetEventPriority() const
003768eb T CEventLeaderExitedCarAsDriver::TakesPriorityOver(CEvent const&) const
00374215 T CEventPotentialWalkIntoObject::AffectsPed(CPed*) const
00379cf5 W CEventPotentialWalkIntoObject::GetLifeTime() const
00379ced W CEventPotentialWalkIntoObject::GetEventType() const
00379cf9 W CEventPotentialWalkIntoObject::CloneEditable() const
00379cf1 W CEventPotentialWalkIntoObject::GetEventPriority() const
003742f5 T CEventPotentialWalkIntoObject::TakesPriorityOver(CEvent const&) const
004bbbe1 T CPedPotentialCollisionScanner::ScanForPedPotentialCollisionEvents(CPed const&, CPed*) const
004fe1b1 W CTaskComplexEnterBoatAsDriver::GetTaskType() const
004f84b1 T CTaskComplexEnterBoatAsDriver::CreateSubTask(int) const
004fe179 W CTaskComplexEnterBoatAsDriver::Clone() const
00528611 W CTaskComplexFollowPatrolRoute::GetTaskType() const
005285e1 W CTaskComplexFollowPatrolRoute::Clone() const
00528259 W CTaskComplexGoToPointAnyMeans::GetTaskType() const
00524979 T CTaskComplexGoToPointAnyMeans::CreateSubTask(int, CPed*) const
005281f5 W CTaskComplexGoToPointAnyMeans::Clone() const
005289c9 W CTaskComplexGoToPointShooting::GetTaskType() const
005288d5 W CTaskComplexGoToPointShooting::Clone() const
004fe6fd W CTaskComplexLeaveCarAndWander::GetTaskType() const
004f9805 T CTaskComplexLeaveCarAndWander::CreateSubTask(int) const
004fe6ad W CTaskComplexLeaveCarAndWander::Clone() const
004fd9d1 W CTaskComplexOpenPassengerDoor::GetTaskType() const
004fd93d W CTaskComplexOpenPassengerDoor::Clone() const
0051c72d W CTaskComplexProstituteSolicit::GetTaskType() const
0051c6e1 W CTaskComplexProstituteSolicit::Clone() const
00547f05 W CTaskComplexReactToGunAimedAt::GetTaskType() const
00547ec5 W CTaskComplexReactToGunAimedAt::Clone() const
004f36d9 W CTaskComplexWaitForDryWeather::GetTaskType() const
004f36b9 W CTaskComplexWaitForDryWeather::Clone() const
004d84fd W CTaskSimplePlayHandSignalAnim::GetTaskType() const
004d84ad W CTaskSimplePlayHandSignalAnim::Clone() const
005073e1 W CTaskSimpleSetPedAsAutoDriver::GetTaskType() const
005073a9 W CTaskSimpleSetPedAsAutoDriver::Clone() const
004f241d W CTaskSimpleSetStayInSamePlace::GetTaskType() const
004f23f9 W CTaskSimpleSetStayInSamePlace::Clone() const
00378725 W CEventLeaderEnteredCarAsDriver::AffectsPed(CPed*) const
00378721 W CEventLeaderEnteredCarAsDriver::GetLifeTime() const
00378719 W CEventLeaderEnteredCarAsDriver::GetEventType() const
0037872d W CEventLeaderEnteredCarAsDriver::CloneEditable() const
0037688b T CEventLeaderEnteredCarAsDriver::AffectsPedGroup(CPedGroup*) const
0037871d W CEventLeaderEnteredCarAsDriver::GetEventPriority() const
00376887 T CEventLeaderEnteredCarAsDriver::TakesPriorityOver(CEvent const&) const
00378729 W CEventLeaderEnteredCarAsDriver::CanBeInterruptedBySameEvent() const
0037400d T CEventPotentialWalkIntoVehicle::AffectsPed(CPed*) const
00379c49 W CEventPotentialWalkIntoVehicle::GetLifeTime() const
00379c41 W CEventPotentialWalkIntoVehicle::GetEventType() const
00379c4d W CEventPotentialWalkIntoVehicle::CloneEditable() const
00379c45 W CEventPotentialWalkIntoVehicle::GetEventPriority() const
00374151 T CEventPotentialWalkIntoVehicle::TakesPriorityOver(CEvent const&) const
0054b569 W CTaskAllocatorKillThreatsBasic::GetType() const
00546549 W CTaskComplexFollowPedFootsteps::GetTaskType() const
005464d5 W CTaskComplexFollowPedFootsteps::Clone() const
00532a15 W CTaskComplexGetUpAndStandStill::GetTaskType() const
005329f5 W CTaskComplexGetUpAndStandStill::Clone() const
00547ded W CTaskComplexInvestigateDeadPed::GetTaskType() const
00547d95 W CTaskComplexInvestigateDeadPed::Clone() const
004ea6d5 W CTaskComplexKillPedGroupOnFoot::GetTaskType() const
004e83b5 T CTaskComplexKillPedGroupOnFoot::CreateSubTask(int, CPed*) const
004e84cd T CTaskComplexKillPedGroupOnFoot::ComputeNearestLivingGroupPed(CPed const&, bool) const
004ea691 W CTaskComplexKillPedGroupOnFoot::Clone() const
004ea0e5 W CTaskComplexKillPedOnFootArmed::GetTaskType() const
004e3bf1 T CTaskComplexKillPedOnFootArmed::IsPedInLeaderFiringLine(CPed*) const
004ea041 W CTaskComplexKillPedOnFootArmed::Clone() const
004ea031 W CTaskComplexKillPedOnFootMelee::GetTaskType() const
004e9fd9 W CTaskComplexKillPedOnFootMelee::Clone() const
004d864d W CTaskComplexPlayHandSignalAnim::GetTaskType() const
004d861d W CTaskComplexPlayHandSignalAnim::Clone() const
0054662d W CTaskComplexSeekEntityAnyMeans<CEntitySeekPosCalculatorXYOffset>::GetTaskType() const
005465ad W CTaskComplexSeekEntityAnyMeans<CEntitySeekPosCalculatorXYOffset>::Clone() const
004f46d5 W CTaskComplexUseEffectSprinting::GetTaskType() const
004f4671 W CTaskComplexUseEffectSprinting::Clone() const
004f3b31 W CTaskComplexUsePairedAttractor::GetTaskType() const
004f3b01 W CTaskComplexUsePairedAttractor::Clone() const
00506f71 W CTaskSimpleCarSetPedInAsDriver::GetTaskType() const
00506f11 W CTaskSimpleCarSetPedInAsDriver::Clone() const
005071d5 W CTaskSimpleCarSlowBeDraggedOut::GetTaskType() const
005047e1 T CTaskSimpleCarSlowBeDraggedOut::ComputeAnimID(int&, int&) const
00507181 W CTaskSimpleCarSlowBeDraggedOut::Clone() const
004d84a5 W CTaskSimpleRunAnimLoopedMiddle::GetTaskType() const
004d838d W CTaskSimpleRunAnimLoopedMiddle::Clone() const
00507555 W CTaskSimpleWaitUntilPedIsInCar::GetTaskType() const
00507519 W CTaskSimpleWaitUntilPedIsInCar::Clone() const
005445e5 T CEntitySeekPosCalculatorDriving::ComputeEntitySeekPos(CPed const&, CEntity const&, CVector&) const
00376b41 T CEventPotentialWalkIntoBuilding::AffectsPed(CPed*) const
00378a55 W CEventPotentialWalkIntoBuilding::GetEventType() const
00378a59 W CEventPotentialWalkIntoBuilding::GetEventPriority() const
00378a61 W CEventPotentialWalkIntoBuilding::Clone() const
0050727d W CTaskComplexCarSlowBeDraggedOut::GetTaskType() const
0050722d W CTaskComplexCarSlowBeDraggedOut::Clone() const
004ff725 W CTaskComplexEnterAnyCarAsDriver::GetTaskType() const
004ff705 W CTaskComplexEnterAnyCarAsDriver::Clone() const
004fd69d W CTaskComplexEnterCarAsPassenger::GetTaskType() const
004fd601 W CTaskComplexEnterCarAsPassenger::Clone() const
0050f2fd W CTaskComplexEvasiveDiveAndGetUp::GetTaskType() const
0050b43d T CTaskComplexEvasiveDiveAndGetUp::CreateSubTask(int) const
0050b3b9 T CTaskComplexEvasiveDiveAndGetUp::ComputeTargetHeading() const
0050f2a1 W CTaskComplexEvasiveDiveAndGetUp::Clone() const
004f3b89 W CTaskComplexUseAttractorPartner::GetTaskType() const
004f3b61 W CTaskComplexUseAttractorPartner::Clone() const
004f212d W CTaskSimpleSetCharDecisionMaker::GetTaskType() const
004f2109 W CTaskSimpleSetCharDecisionMaker::Clone() const
0050750d W CTaskSimpleWaitUntilPedIsOutCar::GetTaskType() const
005074bd W CTaskSimpleWaitUntilPedIsOutCar::Clone() const
0054473b T CEntitySeekPosCalculatorFixedPos::ComputeEntitySeekPos(CPed const&, CEntity const&, CVector&) const
00334a31 W CEntitySeekPosCalculatorStandard::ComputeEntitySeekPos(CPed const&, CEntity const&, CVector&) const
005444b1 T CEntitySeekPosCalculatorXYOffset::ComputeEntitySeekPos(CPed const&, CEntity const&, CVector&) const
0037933d W CEventPlayerCommandToGroupAttack::GetEventType() const
00379351 W CEventPlayerCommandToGroupAttack::CloneEditable() const
00377d6f T CEventPlayerCommandToGroupAttack::AffectsPedGroup(CPedGroup*) const
00379341 W CEventPlayerCommandToGroupAttack::GetEventPriority() const
004ca809 W CEventPlayerCommandToGroupGather::GetEventType() const
004ca811 W CEventPlayerCommandToGroupGather::CloneEditable() const
004ca80d W CEventPlayerCommandToGroupGather::GetEventPriority() const
0054b56d W CTaskAllocatorKillThreatsDriveby::GetType() const
004f3b5d W CTaskComplexAttractorPartnerWait::GetTaskType() const
004f3b35 W CTaskComplexAttractorPartnerWait::Clone() const
005127f1 W CTaskComplexExtinguishFireOnFoot::GetTaskType() const
005127c5 W CTaskComplexExtinguishFireOnFoot::Clone() const
005462e9 W CTaskComplexFollowLeaderAnyMeans::GetTaskType() const
005453e1 T CTaskComplexFollowLeaderAnyMeans::CreateSubTask(int, CPed const*) const
00546295 W CTaskComplexFollowLeaderAnyMeans::Clone() const
004e9fd1 W CTaskComplexKillPedOnFootStealth::GetTaskType() const
004e9f11 W CTaskComplexKillPedOnFootStealth::Clone() const
00512521 W CTaskComplexMedicTreatInjuredPed::GetTaskType() const
005124bd W CTaskComplexMedicTreatInjuredPed::Clone() const
004f3131 W CTaskComplexObserveTrafficLights::GetTaskType() const
004f3109 W CTaskComplexObserveTrafficLights::Clone() const
004fea8d W CTaskComplexScreamInCarThenLeave::GetTaskType() const
004fea41 W CTaskComplexScreamInCarThenLeave::Clone() const
004f3bb1 W CTaskComplexUseScriptedAttractor::GetTaskType() const
004f3b8d W CTaskComplexUseScriptedAttractor::Clone() const
005445fd T CEntitySeekPosCalculatorVehicleId::ComputeEntitySeekPos(CPed const&, CEntity const&, CVector&) const
00375249 T CEventAcquaintancePedHateBadlyLit::AffectsPed(CPed*) const
00378191 W CEventAcquaintancePedHateBadlyLit::GetEventType() const
0037819d W CEventAcquaintancePedHateBadlyLit::CloneEditable() const
00378195 W CEventAcquaintancePedHateBadlyLit::GetEventPriority() const
00378199 W CEventAcquaintancePedHateBadlyLit::CanBeInterruptedBySameEvent() const
004b29b5 T CPedGroupDefaultTaskAllocatorChat::AllocateDefaultTasks(CPedGroup*, CPed*) const
004b8d31 W CPedGroupDefaultTaskAllocatorChat::GetType() const
0054b4e1 W CTaskAllocatorPlayerCommandAttack::GetType() const
004fdcb9 W CTaskComplexEnterCarAsDriverTimed::GetTaskType() const
004fdc61 W CTaskComplexEnterCarAsDriverTimed::Clone() const
0050742d W CTaskComplexGoToBoatSteeringWheel::GetTaskType() const
005073ed W CTaskComplexGoToBoatSteeringWheel::Clone() const
00506ce9 W CTaskSimpleCarCloseDoorFromInside::GetTaskType() const
005015dd T CTaskSimpleCarCloseDoorFromInside::ComputeAnimID(int&, int&) const
00506c99 W CTaskSimpleCarCloseDoorFromInside::Clone() const
00506be1 W CTaskSimpleCarOpenDoorFromOutside::GetTaskType() const
00500ce1 T CTaskSimpleCarOpenDoorFromOutside::ComputeAnimID(int&, int&) const
00506b85 W CTaskSimpleCarOpenDoorFromOutside::Clone() const
00506f05 W CTaskSimpleCarSetPedInAsPassenger::GetTaskType() const
00506ea1 W CTaskSimpleCarSetPedInAsPassenger::Clone() const
00544125 W CTaskSimpleDuckWhileShotsWhizzing::GetTaskType() const
005440c1 W CTaskSimpleDuckWhileShotsWhizzing::Clone() const
004f1f81 W CTaskSimpleTogglePedThreatScanner::GetTaskType() const
004f1f59 W CTaskSimpleTogglePedThreatScanner::Clone() const
0054b511 W CTaskAllocatorPlayerCommandRetreat::GetType() const
00384765 W CTaskComplexCarDriveMissionKillPed::GetTaskType() const
0038472d W CTaskComplexCarDriveMissionKillPed::Clone() const
00526d15 W CTaskComplexGoToPointAndStandStill::GetTaskType() const
0051d4a5 T CTaskComplexGoToPointAndStandStill::CreateSubTask(int, CPed*) const
0051d731 T CTaskComplexGoToPointAndStandStill::SelectMoveState(CTaskSimpleGoToPoint*, CPed*, float, float) const
005275f5 W CTaskComplexGoToPointAndStandStill::Clone() const
0052889d W CTaskComplexInvestigateDisturbance::GetTaskType() const
00528851 W CTaskComplexInvestigateDisturbance::Clone() const
00506d41 W CTaskSimpleCarCloseDoorFromOutside::GetTaskType() const
00506cf1 W CTaskSimpleCarCloseDoorFromOutside::Clone() const
00507221 W CTaskSimpleCarSetPedSlowDraggedOut::GetTaskType() const
005071dd W CTaskSimpleCarSetPedSlowDraggedOut::Clone() const
004f24d1 W CTaskSimpleSetKindaStayInSamePlace::GetTaskType() const
004f24ad W CTaskSimpleSetKindaStayInSamePlace::Clone() const
004f43bd W CTaskSimpleWaitUntilAreaCodesMatch::GetTaskType() const
004f436d W CTaskSimpleWaitUntilAreaCodesMatch::Clone() const
0037893d W CEventLeaderQuitEnteringCarAsDriver::AffectsPed(CPed*) const
003788c1 W CEventLeaderQuitEnteringCarAsDriver::GetLifeTime() const
003788b9 W CEventLeaderQuitEnteringCarAsDriver::GetEventType() const
0037695d T CEventLeaderQuitEnteringCarAsDriver::AffectsPedGroup(CPedGroup*) const
003788bd W CEventLeaderQuitEnteringCarAsDriver::GetEventPriority() const
0037697d T CEventLeaderQuitEnteringCarAsDriver::TakesPriorityOver(CEvent const&) const
003788c5 W CEventLeaderQuitEnteringCarAsDriver::Clone() const
004b2d15 T CPedGroupDefaultTaskAllocatorRandom::AllocateDefaultTasks(CPedGroup*, CPed*) const
004b8d35 W CPedGroupDefaultTaskAllocatorRandom::GetType() const
004fdedd W CTaskComplexEnterCarAsPassengerWait::GetTaskType() const
004f7a91 T CTaskComplexEnterCarAsPassengerWait::CreateSubTask(int, CPed*) const
004fde71 W CTaskComplexEnterCarAsPassengerWait::Clone() const
0054628d W CTaskComplexFollowLeaderInFormation::GetTaskType() const
0054622d W CTaskComplexFollowLeaderInFormation::Clone() const
00527245 W CTaskComplexFollowNodeRouteShooting::GetTaskType() const
00527135 W CTaskComplexFollowNodeRouteShooting::Clone() const
004fe09d W CTaskComplexLeaveCarAsPassengerWait::GetTaskType() const
004f8059 T CTaskComplexLeaveCarAsPassengerWait::CreateSubTask(int, CPed*) const
004f82e3 T CTaskComplexLeaveCarAsPassengerWait::GetNextPassengerToLeave() const
004f8381 T CTaskComplexLeaveCarAsPassengerWait::SetPedInZerothPassengerSeat(CPed*) const
004fe065 W CTaskComplexLeaveCarAsPassengerWait::Clone() const
0052845d W CTaskComplexTurnToFaceEntityOrCoord::GetTaskType() const
00524ec5 T CTaskComplexTurnToFaceEntityOrCoord::ComputeTargetHeading(CPed*) const
005283c9 W CTaskComplexTurnToFaceEntityOrCoord::Clone() const
00543c49 W CTaskSimpleAffectSecondaryBehaviour::GetTaskType() const
00543c05 W CTaskSimpleAffectSecondaryBehaviour::Clone() const
003844ed W CTaskComplexCarDriveMissionFleeScene::GetTaskType() const
003844b5 W CTaskComplexCarDriveMissionFleeScene::Clone() const
004fddc9 W CTaskComplexEnterCarAsPassengerTimed::GetTaskType() const
004fdd65 W CTaskComplexEnterCarAsPassengerTimed::Clone() const
00506945 W CTaskComplexGoToCarDoorAndStandStill::GetTaskType() const
004ffca1 T CTaskComplexGoToCarDoorAndStandStill::CreateSubTask(int, CPed*) const
004ffe53 T CTaskComplexGoToCarDoorAndStandStill::IsVehicleInRange(CPed const&) const
005068bd W CTaskComplexGoToCarDoorAndStandStill::Clone() const
004e8fd1 T CTaskComplexSeekCoverUntilTargetDead::GetCoverPed(CPed*) const
004ea7ed W CTaskComplexSeekCoverUntilTargetDead::GetTaskType() const
004e909d T CTaskComplexSeekCoverUntilTargetDead::GetTargetPed() const
004ea779 W CTaskComplexSeekCoverUntilTargetDead::Clone() const
0050faad W CTaskComplexWalkRoundBuildingAttempt::GetTaskType() const
0050d11d T CTaskComplexWalkRoundBuildingAttempt::CreateSubTask(int, CPed*) const
0050d451 T CTaskComplexWalkRoundBuildingAttempt::ComputeMoveDir(CPed const&, CVector&) const
0050d509 T CTaskComplexWalkRoundBuildingAttempt::AddNormalToMoveDir(CVector&) const
0050fa1d W CTaskComplexWalkRoundBuildingAttempt::Clone() const
00544731 T CEntitySeekPosCalculatorEntitySurface::ComputeEntitySeekPos(CPed const&, CEntity const&, CVector&) const
00506e8d W CTaskSimpleCarWaitForDoorNotToBeInUse::GetTaskType() const
00506e45 W CTaskSimpleCarWaitForDoorNotToBeInUse::Clone() const
004f3031 W CTaskComplexSitDownThenIdleThenStandUp::GetTaskType() const
004f3005 W CTaskComplexSitDownThenIdleThenStandUp::Clone() const
004b27dd T CPedGroupDefaultTaskAllocatorStandStill::AllocateDefaultTasks(CPedGroup*, CPed*) const
004b8d2d W CPedGroupDefaultTaskAllocatorStandStill::GetType() const
00528011 W CTaskComplexAvoidOtherPedWhileWandering::GetTaskType() const
00527f7d W CTaskComplexAvoidOtherPedWhileWandering::Clone() const
005276e1 W CTaskComplexGoToPointAndStandStillTimed::Clone() const
00506c39 W CTaskSimpleCarOpenLockedDoorFromOutside::GetTaskType() const
00506be9 W CTaskSimpleCarOpenLockedDoorFromOutside::Clone() const
004e9435 W CTaskSimpleSetCharIgnoreWeaponRangeFlag::GetTaskType() const
004e9411 W CTaskSimpleSetCharIgnoreWeaponRangeFlag::Clone() const
004f2279 W CTaskSimpleWaitUntilLeaderAreaCodesMatch::GetTaskType() const
004f2209 W CTaskSimpleWaitUntilLeaderAreaCodesMatch::Clone() const
00544509 T CEntitySeekPosCalculatorRadiusAngleOffset::ComputeEntitySeekPos(CPed const&, CEntity const&, CVector&) const
0054b55d W CTaskAllocatorKillThreatsBasicRandomGroup::GetType() const
005072c9 W CTaskComplexCarSlowBeDraggedOutAndStandUp::GetTaskType() const
00507285 W CTaskComplexCarSlowBeDraggedOutAndStandUp::Clone() const
004b26e5 T CPedGroupDefaultTaskAllocatorFollowLimited::AllocateDefaultTasks(CPedGroup*, CPed*) const
004b8d29 W CPedGroupDefaultTaskAllocatorFollowLimited::GetType() const
004f32d5 W CTaskComplexCrossRoadLookAndAchieveHeading::GetTaskType() const
004ecd4d T CTaskComplexCrossRoadLookAndAchieveHeading::CreateSubTask(int, CPed*) const
004f32ad W CTaskComplexCrossRoadLookAndAchieveHeading::Clone() const
0050ecf9 W CTaskComplexDiveFromAttachedEntityAndGetUp::GetTaskType() const
0050ecc5 W CTaskComplexDiveFromAttachedEntityAndGetUp::Clone() const
004b25f1 T CPedGroupDefaultTaskAllocatorFollowAnyMeans::AllocateDefaultTasks(CPedGroup*, CPed*) const
004b8d25 W CPedGroupDefaultTaskAllocatorFollowAnyMeans::GetType() const
004b2dd5 T CPedGroupDefaultTaskAllocatorSitInLeaderCar::AllocateDefaultTasks(CPedGroup*, CPed*) const
004b8d39 W CPedGroupDefaultTaskAllocatorSitInLeaderCar::GetType() const
004f3fa9 W CTaskComplexUseClosestFreeScriptedAttractor::GetTaskType() const
004f0b69 T CTaskComplexUseClosestFreeScriptedAttractor::ComputeClosestFreeScriptedEffect(CPed const&) const
004f3f85 W CTaskComplexUseClosestFreeScriptedAttractor::Clone() const
003845fd W CTaskComplexUseClosestFreeScriptedAttractorRun::GetTaskType() const
003845d9 W CTaskComplexUseClosestFreeScriptedAttractorRun::Clone() const
00526c59 W CTaskComplexGoToPointUntilCollisionAndStandStill::Clone() const
00506e97 W CTaskSimpleCarGoToPointNearDoorUntilDoorNotInUse::GetTaskType() const
005026a5 T CTaskSimpleCarGoToPointNearDoorUntilDoorNotInUse::ComputeTarget(CVector&) const
00502575 T CTaskSimpleCarGoToPointNearDoorUntilDoorNotInUse::Clone() const
004f31c5 W CTaskComplexObserveTrafficLightsAndAchieveHeading::GetTaskType() const
004ecc45 T CTaskComplexObserveTrafficLightsAndAchieveHeading::CreateSubTask(int) const
004f319d W CTaskComplexObserveTrafficLightsAndAchieveHeading::Clone() const
003846a9 W CTaskComplexUseClosestFreeScriptedAttractorSprint::GetTaskType() const
00384685 W CTaskComplexUseClosestFreeScriptedAttractorSprint::Clone() const
004a4bad T CPed::IsAlive() const
0049f68f T CPed::IsPlayer() const
00527ac9 W CTaskComplexGoToPointAndStandStillAndAchieveHeading::GetTaskType() const
00527a75 W CTaskComplexGoToPointAndStandStillAndAchieveHeading::Clone() const
00568987 W CBike::IsDoorReady(eDoors) const
0056899b W CBike::IsDoorReady(unsigned int) const
0056898f W CBike::IsDoorClosed(eDoors) const
005689a3 W CBike::IsDoorClosed(unsigned int) const
00568993 W CBike::IsDoorMissing(eDoors) const
005689a7 W CBike::IsDoorMissing(unsigned int) const
0056898b W CBike::IsDoorFullyOpen(eDoors) const
0056899f W CBike::IsDoorFullyOpen(unsigned int) const
005689c1 W CBike::GetHeightAboveRoad() const
00560d0b T CBike::IsComponentPresent(int) const
0056b275 T CBoat::IsComponentPresent(int) const
004d3b6b T CDate::operator==(CDate const&) const
004d3ae7 T CDate::operator>(CDate const&) const
004d3b29 T CDate::operator<(CDate const&) const
0056f329 T CDoor::IsFullyOpen() const
0056f2e5 T CDoor::GetAngleOpenRatio() const
0056f311 T CDoor::IsClosed() const
003794a1 W CEvent::AffectsPed(CPed*) const
0036fc19 T CEvent::GetSoundLevel(CEntity const*, CVector const&) const
003783cd W CEvent::AffectsPedGroup(CPedGroup*) const
003783d1 W CEvent::GetSourceEntity() const
002fce81 W CEvent::IsCriminalEvent() const
0037811b W CEvent::TakesPriorityOver(CEvent const&) const
002fce8f W CEvent::GetLocalSoundLevel() const
00378941 W CEvent::HasEditableResponse() const
002fce85 W CEvent::ReportCriminalEvent(CPed*) const
002fce93 W CEvent::DoInformVehicleOccupants(CPed*) const
003783d5 W CEvent::CanBeInterruptedBySameEvent() const
0036fbf5 T CEvent::IsValid(CPed*) const
0057f0bb T CTrain::GetDooorAngleOpenRatio(eDoors) const
0057f089 T CTrain::GetDooorAngleOpenRatio(unsigned int) const
003ebd21 T CEntity::GetBoundRect() const
003ed389 T CEntity::GetIsTouching(CEntity*) const
003ed48d T CEntity::GetIsTouching(CVector const&, float) const
003ebfe5 T CEntity::GetBoundCentre(CVector&) const
003ebf8d T CEntity::GetBoundCentre() const
0044fb29 T CMatrix::CopyToRwMatrix(RwMatrixTag*) const
0044ee3f T CMatrix::UpdateRwMatrix(RwMatrixTag*) const
0044edb5 T CMatrix::UpdateRW() const
004227e1 T CWanted::IsClosestCop(CPed*, int) const
00422469 T CWanted::CanCopJoinPursuit(CCopPed*) const
005e25d9 T CWeapon::IsTypeMelee() const
00585647 T CVehicle::CarHasRoof() const
0058ff21 T CVehicle::CanBeDriven() const
0056d361 W CVehicle::IsDoorReady(eDoors) const
0056d371 W CVehicle::IsDoorReady(unsigned int) const
00584db1 T CVehicle::IsOnItsSide() const
005849e9 T CVehicle::IsPassenger(CPed const*) const
00584a3b T CVehicle::IsPassenger(int) const
00582b83 T CVehicle::CanBeDeleted() const
0056d369 W CVehicle::IsDoorClosed(eDoors) const
0056d379 W CVehicle::IsDoorClosed(unsigned int) const
005689ab W CVehicle::IsOpenTopCar() const
00584d91 T CVehicle::IsUpsideDown() const
00591c8d T CVehicle::CanPedLeanOut(CPed*) const
0056d36d W CVehicle::IsDoorMissing(eDoors) const
0056d37d W CVehicle::IsDoorMissing(unsigned int) const
00584e39 T CVehicle::CanPedEnterCar() const
00584de9 T CVehicle::CanPedOpenLocks(CPed const*) const
0056d365 W CVehicle::IsDoorFullyOpen(eDoors) const
0056d375 W CVehicle::IsDoorFullyOpen(unsigned int) const
00585489 T CVehicle::IsVehicleNormal() const
00585001 T CVehicle::CanPedJumpOutCar(CPed*) const
00584ed5 T CVehicle::CanPedStepOutCar(bool) const
00584e1d T CVehicle::CanDoorsBeDamaged() const
0056d399 W CVehicle::GetHeightAboveRoad() const
0058115d W CVehicle::IsComponentPresent(int) const
00582a09 T CVehicle::GetVehicleAppearance() const
00591899 T CVehicle::GetDooorAngleOpenRatio(eDoors) const
00568997 W CVehicle::GetDooorAngleOpenRatio(unsigned int) const
00584d45 T CVehicle::IsLawEnforcementVehicle() const
00584ab3 T CVehicle::IsDriver(CPed const*) const
00584ac9 T CVehicle::IsDriver(int) const
00584ced T CVehicle::UsesSiren() const
003bee8d T CAccident::IsFree() const
004bdd85 T CDecision::HasResponse() const
004bd9f9 T CDecision::MakeDecision(int, bool, int, int, int, int, short&, short&) const
004b7119 T CPedGroup::IsAnyoneUsingCar(CVehicle const&) const
003fcde9 T CPhysical::GetBoundRect() const
00407e29 T CPhysical::GetLightingTotal() const
00407d71 T CPhysical::GetLightingFromCol(bool) const
001d39c5 T RQTexture::GetMipSize(unsigned int) const
001d3779 T RQTexture::GetMipDimensions(unsigned int, int&, int&) const
001d3b21 T RQTexture::GetNumComponents() const
00667974 D vtable for CBugstarPC
00667da4 D vtable for CNetworkPC
00667d0c D vtable for CPlaceable
00669270 D vtable for CPlayerPed
00663fc8 D vtable for CWidgetMap
006608d4 V vtable for ES2Texture
006625f8 V vtable for FlowScreen
00665d00 V vtable for FxPrimBP_c
0066285c V vtable for GameScreen
00662ae8 V vtable for LoadScreen
00662588 D vtable for MenuScreen
00662cb0 V vtable for SaveScreen
00662914 V vtable for AudioScreen
00662a54 V vtable for BriefScreen
0066d670 D vtable for CAutomobile
00666028 D vtable for CEventDeath
00665d4c D vtable for CEventGroup
006666e0 D vtable for CEventInAir
00667e28 D vtable for CHandObject
00669264 V vtable for CPedScanner
00667ef8 D vtable for CProjectile
00669410 D vtable for CTaskSimple
00663e00 D vtable for CWidgetList
00664184 D vtable for CWidgetPool
00665978 D vtable for FxEmitter_c
00665c0c D vtable for FxInfoDir_c
006629f8 V vtable for StatsScreen
00662d94 V vtable for YesNoScreen
00668a8c D vtable for CCivilianPed
00667dc4 D vtable for CDummyObject
00665fd8 D vtable for CEventDamage
00666c10 D vtable for CEventDanger
00666f2c D vtable for CEventOnFire
006620d4 D vtable for CHIDJoystick
006624a0 D vtable for CHIDKeyboard
00667f70 D vtable for COctTreeBase
00669444 D vtable for CTaskComplex
00664340 D vtable for CWidgetRadar
006652f8 D vtable for CWidgetWager
00662bcc V vtable for DeleteScreen
00665bf4 D vtable for FxInfoFlat_c
00665b94 D vtable for FxInfoSize_c
00665b04 D vtable for FxInfoWind_c
00662720 V vtable for SelectScreen
00661f50 D vtable for CAEMP3Decoder
00668bd8 D vtable for CEmergencyPed
00666074 D vtable for CEventDeadPed
00665e08 D vtable for CEventGunShot
00666814 D vtable for CEventInWater
006662ec D vtable for CEventRevived
00666cb0 D vtable for CEventSeenCop
00666384 D vtable for CEventSexyPed
00666948 D vtable for CEventSpecial
0066dc54 D vtable for CMonsterTruck
00668de0 D vtable for CPedAttractor
00667650 D vtable for CPedModelInfo
00662ef8 D vtable for CWidgetButton
006642ac D vtable for CWidgetRacing
006643d4 D vtable for CWidgetRegion
00664ed0 D vtable for CWidgetReplay
0066508c D vtable for CWidgetSlider
006628b8 V vtable for DisplayScreen
00665950 D vtable for FxEmitterBP_c
006659e4 D vtable for FxInfoEmDir_c
00665a2c D vtable for FxInfoEmPos_c
00665b4c D vtable for FxInfoFloat_c
00665a8c D vtable for FxInfoForce_c
00665a74 D vtable for FxInfoNoise_c
00665c84 D vtable for FxInfoSmoke_c
00665bdc D vtable for FxInfoTrail_c
00667790 D vtable for CAEAudioEntity
0066790c D vtable for CAEWaveDecoder
006674d4 D vtable for CBaseModelInfo
00669068 D vtable for CEntityScanner
00662524 D vtable for CHIDKeyboardPC
006690c4 V vtable for CObjectScanner
0066d5e0 D vtable for CTaskAllocator
00669cc4 D vtable for CTaskSimpleDie
0066577c V vtable for CTaskSimpleSay
006675b8 V vtable for CTimeModelInfo
00662668 V vtable for ControlsScreen
00662c54 V vtable for DownloadScreen
00660878 V vtable for ES2IndexBuffer
00660888 V vtable for ES2VertexState
00665b7c D vtable for FxInfoColour_c
00665a14 D vtable for FxInfoEmLife_c
0066599c D vtable for FxInfoEmRate_c
006659b4 D vtable for FxInfoEmSize_c
00665b1c D vtable for FxInfoJitter_c
00665c9c D vtable for FxInterpInfo_c
0066299c V vtable for LanguageScreen
006625c0 V vtable for MainMenuScreen
00662630 V vtable for SettingsScreen
00667760 D vtable for CAEAudioChannel
0066751c D vtable for CClumpModelInfo
00668440 D vtable for CCutsceneObject
00666b74 D vtable for CEventAreaCodes
006664b8 D vtable for CEventAttractor
00667230 D vtable for CEventEscalator
00666d00 D vtable for CEventHealthLow
0066646c D vtable for CEventPedToFlee
006670f4 D vtable for CEventSoundLoud
00662374 D vtable for CHIDJoystickPS3
00669dd0 D vtable for CTaskComplexDie
00669480 D vtable for CTaskSimpleAnim
00668870 V vtable for CTaskSimpleChat
00669e0c D vtable for CTaskSimpleDead
0066d1f4 D vtable for CTaskSimpleDuck
0066c9f0 D vtable for CTaskSimpleFall
0066c098 D vtable for CTaskSimpleGoTo
0066cb7c D vtable for CTaskSimpleJump
0066cb0c D vtable for CTaskSimpleLand
00668fe8 V vtable for CTaskSimpleNone
0066cf54 D vtable for CTaskSimpleSwim
00669258 V vtable for CVehicleScanner
00663c44 D vtable for CWidgetHelpText
00663e98 D vtable for CWidgetListShop
00663f30 D vtable for CWidgetListText
00665120 D vtable for CWidgetTapMeter
00662d38 V vtable for CloudWaitScreen
00660868 V vtable for ES2VertexBuffer
006659fc D vtable for FxInfoEmAngle_c
006659cc D vtable for FxInfoEmSpeed_c
00665c54 D vtable for FxInfoSelfLit_c
00662ab0 V vtable for StartGameScreen
0066091c D vtable for TextureDatabase
00661f40 D vtable for CAEMP3BankLoader
00667858 D vtable for CAEStaticChannel
0066743c D vtable for CAtomicModelInfo
00666a84 D vtable for CEventFireNearby
006660c4 D vtable for CEventGroupEvent
00666640 D vtable for CEventGunAimedAt
006670a8 D vtable for CEventPassObject
00666420 D vtable for CEventPedToChase
00667144 D vtable for CEventSoundQuiet
00666860 D vtable for CEventStuckInAir
00668e28 V vtable for CPedAtmAttractor
0066cde8 D vtable for CTaskComplexChat
0066cbb0 D vtable for CTaskComplexJump
006697c8 D vtable for CTaskSimpleBeHit
0066cbec D vtable for CTaskSimpleClimb
006657b0 V vtable for CTaskSimpleCower
00669d68 D vtable for CTaskSimpleDrown
006695f4 D vtable for CTaskSimpleFight
0066c980 D vtable for CTaskSimpleGetUp
0066cad8 D vtable for CTaskSimpleInAir
00665748 V vtable for CTaskSimplePause
00669e40 D vtable for CTaskSimpleTired
006676f0 D vtable for CWeaponModelInfo
00663d6c D vtable for CWidgetInfoFrame
006626c4 V vtable for CharSelectScreen
00665aa4 D vtable for FxInfoFriction_c
00665bc4 D vtable for FxInfoHeatHaze_c
00665b34 D vtable for FxInfoRotSpeed_c
00665cd8 D vtable for FxInterpInfo32_c
00662b44 V vtable for SaveSelectScreen
006677e4 D vtable for CAEPedAudioEntity
00662014 D vtable for CAnimatedBuilding
00667954 D vtable for CBugstarInterface
00666338 D vtable for CEventChatPartner
00665d5c D vtable for CEventGlobalGroup
006663d4 D vtable for CEventSexyVehicle
00667010 D vtable for CEventSignalAtPed
0066672c D vtable for CEventVehicleDied
00667604 V vtable for CLodTimeModelInfo
00668f28 V vtable for CPedParkAttractor
00668e4c V vtable for CPedSeatAttractor
00668f4c V vtable for CPedStepAttractor
00668e70 V vtable for CPedStopAttractor
00665904 V vtable for CTaskComplexBeCop
00665690 V vtable for CTaskComplexClimb
006688e0 V vtable for CTaskSimpleAbseil
0066d0e0 D vtable for CTaskSimpleFacial
00665820 V vtable for CTaskSimpleUseAtm
0066965c D vtable for CTaskSimpleUseGun
006676a0 D vtable for CVehicleModelInfo
00663710 V vtable for CWidgetButtonDrop
00663838 D vtable for CWidgetButtonHorn
00663a88 D vtable for CWidgetButtonSwim
00663bb0 D vtable for CWidgetButtonZoom
006640f0 D vtable for CWidgetPlayerInfo
0066474c D vtable for CWidgetRegionGang
006647e0 D vtable for CWidgetRegionLook
00664874 D vtable for CWidgetRegionMove
00665248 D vtable for CWidgetVitalStats
00665abc D vtable for FxInfoAttractPt_c
00665a44 D vtable for FxInfoEmWeather_c
00665cec D vtable for FxInterpInfo255_c
006677a8 D vtable for CAEDoorAudioEntity
006677c0 D vtable for CAEFireAudioEntity
006665f4 D vtable for CEventKnockOffBike
00662134 D vtable for CHIDJoystickAmazon
00668e94 V vtable for CPedPizzaAttractor
0066d114 D vtable for CTaskComplexFacial
0066a3e4 D vtable for CTaskComplexOnFire
0066c29c D vtable for CTaskComplexWander
0066be8c D vtable for CTaskGangHasslePed
0066bfb0 D vtable for CTaskLeanOnVehicle
00669794 D vtable for CTaskSimpleChoking
0066b984 D vtable for CTaskSimpleGiveCPR
006657e8 V vtable for CTaskSimpleHandsUp
0066b628 D vtable for CTaskSimpleHitHead
00668800 V vtable for CTaskSimpleHitWall
0066a488 D vtable for CTaskSimpleIKChain
0066cc20 D vtable for CTaskSimpleJetPack
006694b4 D vtable for CTaskSimpleRunAnim
00669e74 D vtable for CTaskSimpleSitDown
00669ea8 D vtable for CTaskSimpleSitIdle
00669edc D vtable for CTaskSimpleStandUp
0066a000 D vtable for CTaskSimpleTurn180
00664218 D vtable for CWidgetRaceResults
006646b8 D vtable for CWidgetRegionFlick
00664bec D vtable for CWidgetRegionSteer
006651b4 D vtable for CWidgetThumbCircle
00665a5c D vtable for FxInfoEmRotation_c
00665bac D vtable for FxInfoSpriteRect_c
00665b64 D vtable for FxInfoUnderwater_c
00665cc4 D vtable for FxInterpInfoU255_c
00667888 D vtable for CAEStreamingChannel
006678b8 D vtable for CAEStreamingDecoder
006669e8 D vtable for CEventCarUpsideDown
00665f88 D vtable for CEventDraggedOutCar
0066705c D vtable for CEventLeanOnVehicle
006692e4 V vtable for CEventNewGangMember
00666690 D vtable for CEventScriptCommand
006668f8 D vtable for CEventVehicleDamage
00666778 D vtable for CEventVehicleOnFire
006665a4 D vtable for CEventVehicleThreat
00662314 D vtable for CHIDJoystickMogaPro
006623d4 D vtable for CHIDJoystickXbox360
0066756c D vtable for CLodAtomicModelInfo
00668ee0 V vtable for CPedLookAtAttractor
0066a768 D vtable for CTaskComplexBeStill
0066a64c D vtable for CTaskComplexInWater
0066ccc8 D vtable for CTaskComplexPartner
0066aff0 D vtable for CTaskSimpleCarAlign
0066ad00 D vtable for CTaskSimpleCarDrive
0066b128 D vtable for CTaskSimpleCarGetIn
006688a8 V vtable for CTaskSimpleDetonate
00669cf8 D vtable for CTaskSimpleDieInCar
006685d0 V vtable for CTaskSimpleHailTaxi
0066a4c0 D vtable for CTaskSimpleIKLookAt
006630b4 D vtable for CWidgetButtonAttack
00663398 D vtable for CWidgetButtonRocket
0066342c D vtable for CWidgetButtonSchool
006639f4 D vtable for CWidgetButtonSprint
00663cd8 D vtable for CWidgetHorseResults
00664b58 D vtable for CWidgetRegionSprint
00664f64 D vtable for CWidgetRouletteSpin
006608c8 V vtable for ES2TextureContainer
00665c24 D vtable for FxInfoAnimTexture_c
00665ad4 D vtable for FxInfoAttractLine_c
00665c3c D vtable for FxInfoColourRange_c
00665cb0 D vtable for FxInterpInfoFloat_c
0066784c D vtable for CAEScriptAudioEntity
0066793c D vtable for CAEWeaponAudioEntity
00666508 D vtable for CEventVehicleToSteal
00668e04 D vtable for CPedShelterAttractor
0066d550 D vtable for CTaskAllocatorAttack
0066ad34 D vtable for CTaskComplexCarDrive
0066d070 D vtable for CTaskComplexCopInCar
00669d2c D vtable for CTaskComplexDieInCar
0066a8ec D vtable for CTaskComplexEnterCar
0066abd4 D vtable for CTaskComplexLeaveCar
00669a10 D vtable for CTaskComplexRoadRage
0066a27c D vtable for CTaskComplexSequence
0066ab98 D vtable for CTaskComplexStealCar
0066a0ac D vtable for CTaskComplexSunbathe
0066c8a4 D vtable for CTaskInteriorUseInfo
0066cf88 D vtable for CTaskSimpleArrestPed
0066b294 D vtable for CTaskSimpleCarGetOut
0066c0cc D vtable for CTaskSimpleGoToPoint
0066a454 D vtable for CTaskSimpleIKManager
00665890 V vtable for CTaskSimpleLookAbout
0066d0ac D vtable for CTaskSimpleShakeFist
00663b1c D vtable for CWidgetButtonVCShoot
0066405c D vtable for CWidgetMissionTimers
006608bc V vtable for ES2ResourceContainer
00665c6c D vtable for FxInfoColourBright_c
006678f4 D vtable for CAEVehicleAudioEntity
00667948 D vtable for CAEWeatherAudioEntity
00667750 D vtable for CAnimBlendAssociation
00666554 D vtable for CEventAcquaintancePed
00666d50 D vtable for CEventHealthReallyLow
00666fc4 D vtable for CEventInteriorUseInfo
00667194 D vtable for CEventLeaderEntryExit
00665ef0 D vtable for CEventObjectCollision
00666b24 D vtable for CEventSeenPanickedPed
00662194 D vtable for CHIDJoystickAndroidTV
00662254 D vtable for CHIDJoystickIOSSimple
00668f04 V vtable for CPedScriptedAttractor
0066d604 D vtable for CTaskAllocatorRetreat
0066cfbc D vtable for CTaskComplexArrestPed
0066a2b8 D vtable for CTaskComplexBeInGroup
0066bbfc D vtable for CTaskComplexFleePoint
0066ac10 D vtable for CTaskComplexLeaveBoat
0066a0e8 D vtable for CTaskComplexUseEffect
0066c5d0 D vtable for CTaskComplexWanderCop
0066c7e0 D vtable for CTaskInteriorBeInShop
0066c868 D vtable for CTaskInteriorGoToInfo
0066c914 D vtable for CTaskInteriorLieInBed
0066b478 D vtable for CTaskSimpleBikeJacked
0066b4ac D vtable for CTaskSimpleCarFallOut
0066b2c8 D vtable for CTaskSimpleCarJumpOut
0066b15c D vtable for CTaskSimpleCarShuffle
00669d9c D vtable for CTaskSimpleDrownInCar
00669c90 D vtable for CTaskSimpleDuckToggle
00669690 D vtable for CTaskSimpleGunControl
0066d184 D vtable for CTaskSimpleHoldEntity
0066a4f8 D vtable for CTaskSimpleIKPointArm
0066b08c D vtable for CTaskSimplePickUpBike
00669bf4 D vtable for CTaskSimpleStandStill
0066a214 D vtable for CTaskSimpleWaitForBus
00662f8c D vtable for CWidgetButtonAnimated
006637a4 D vtable for CWidgetButtonEnterCar
006631dc V vtable for CWidgetButtonHelpText
00664a30 D vtable for CWidgetRegionResponse
00665aec D vtable for FxInfoGroundCollide_c
006677cc D vtable for CAEFrontendAudioEntity
006678e8 D vtable for CAETwinLoopSoundEntity
00667488 D vtable for CDamageAtomicModelInfo
00665db8 D vtable for CEventEditableResponse
00666ad4 D vtable for CEventGunShotWhizzedBy
006667c8 D vtable for CEventHitByWaterCannon
00666da0 D vtable for CEventLowAngerAtPlayer
00665e58 D vtable for CEventVehicleCollision
00666250 D vtable for CEventVehicleHitAndRun
006622b4 D vtable for CHIDJoystickMogaPocket
0066cee4 D vtable for CTaskComplexBeInCouple
0066995c D vtable for CTaskComplexDestroyCar
0066bc38 D vtable for CTaskComplexFleeEntity
0066bd64 D vtable for CTaskComplexGangLeader
0066bfe4 D vtable for CTaskComplexPassObject
00668918 V vtable for CTaskComplexSeekEntity<CEntitySeekPosCalculator>
00668a14 V vtable for CTaskComplexSeekEntity<CEntitySeekPosCalculatorDriving>
00668a50 V vtable for CTaskComplexSeekEntity<CEntitySeekPosCalculatorFixedPos>
006656cc V vtable for CTaskComplexSeekEntity<CEntitySeekPosCalculatorStandard>
00668960 V vtable for CTaskComplexSeekEntity<CEntitySeekPosCalculatorXYOffset>
006689d8 V vtable for CTaskComplexSeekEntity<CEntitySeekPosCalculatorVehicleId>
0066899c V vtable for CTaskComplexSeekEntity<CEntitySeekPosCalculatorEntitySurface>
006658c8 V vtable for CTaskComplexSeekEntity<CEntitySeekPosCalculatorRadiusAngleOffset>
0066bec8 D vtable for CTaskComplexStareAtPed
0066cc54 D vtable for CTaskComplexStuckInAir
0066a610 D vtable for CTaskComplexUseGoggles
0066a1d8 D vtable for CTaskComplexWaitForBus
0066cea8 D vtable for CTaskComplexWaitForPed
0066bbb0 D vtable for CTaskComplexWanderFlee
0066c71c V vtable for CTaskComplexWanderGang
0066be50 D vtable for CTaskGangHassleVehicle
0066c768 D vtable for CTaskInteriorBeInHouse
0066c948 D vtable for CTaskInteriorSitAtDesk
0066a564 D vtable for CTaskSimpleClearLookAt
0066b6cc D vtable for CTaskSimpleEvasiveDive
0066b65c D vtable for CTaskSimpleEvasiveStep
0066565c V vtable for CTaskSimpleFinishBrain
00669928 D vtable for CTaskSimpleGangDriveBy
00668640 V vtable for CTaskSimpleHitFromBack
006686b0 V vtable for CTaskSimpleHitFromLeft
0066a734 D vtable for CTaskSimpleOnEscalator
00665858 V vtable for CTaskSimpleScratchHead
00669ac4 D vtable for CTaskSimpleStealthKill
006635e8 D vtable for CWidgetButtonTargeting
0066277c V vtable for KeyboardControlsScreen
0066092c D vtable for TextureDatabaseRuntime
0066779c D vtable for CAECollisionAudioEntity
006677b4 D vtable for CAEExplosionAudioEntity
006677f0 D vtable for CAEPedSpeechAudioEntity
00668dd4 V vtable for CAEPedWeaponAudioEntity
00665f3c D vtable for CEventBuildingCollision
006668ac D vtable for CEventCopCarBeingStolen
0066901c V vtable for CEventCreatePartnerTask
00666df0 D vtable for CEventHighAngerAtPlayer
00669074 V vtable for CEventScriptedAttractor
006621f4 D vtable for CHIDJoystickIOSExtended
0066c324 D vtable for CTaskComplexAvoidEntity
0066b690 D vtable for CTaskComplexEvasiveStep
0066cb40 D vtable for CTaskComplexFallToDeath
0066a034 D vtable for CTaskComplexHitResponse
0066af78 D vtable for CTaskComplexLeaveAnyCar
0066cda0 D vtable for CTaskComplexPartnerChat
0066cd10 D vtable for CTaskComplexPartnerDeal
0066bf38 D vtable for CTaskComplexSignalAtPed
0066be14 D vtable for CTaskComplexTrackEntity
0066a688 D vtable for CTaskComplexUseSequence
0066baa8 D vtable for CTaskComplexUseSwatRope
0066bb64 V vtable for CTaskComplexWanderMedic
0066bf74 D vtable for CTaskGoToVehicleAndLean
0066c7a4 D vtable for CTaskInteriorBeInOffice
0066c82c D vtable for CTaskInteriorShopKeeper
0066c8e0 D vtable for CTaskInteriorSitInChair
0066b330 D vtable for CTaskSimpleCarSetPedOut
0066bf04 D vtable for CTaskSimpleDoHandSignal
00668678 V vtable for CTaskSimpleHitFromFront
006686e8 V vtable for CTaskSimpleHitFromRight
0066d25c V vtable for CTaskSimplePickUpEntity
0066a420 D vtable for CTaskSimplePlayerOnFire
0066cf20 D vtable for CTaskSimplePlayerOnFoot
006694e8 D vtable for CTaskSimpleRunNamedAnim
0066951c D vtable for CTaskSimpleRunTimedAnim
0066c4d8 D vtable for CTaskSimpleSlideToCoord
006696f8 D vtable for CTaskSimpleThrowControl
0066a7d8 D vtable for CTaskSimpleTriggerEvent
0066a248 D vtable for CTaskSimpleWaitForPizza
00663270 D vtable for CWidgetButtonHydraulics
00664c80 D vtable for CWidgetRegionHydraulics
00664da8 D vtable for CWidgetRegionSwipeRadio
00664ff8 D vtable for CWidgetSaveNotification
00668954 V vtable for CEntitySeekPosCalculator
0066d52c D vtable for CTaskAllocatorKillOnFoot
0066ae0c D vtable for CTaskComplexDriveToPoint
0066b8d0 D vtable for CTaskComplexEvasiveCower
0066ca24 D vtable for CTaskComplexFallAndGetUp
0066bd28 D vtable for CTaskComplexFleeAnyMeans
0066bcec D vtable for CTaskComplexFleeShooting
0066bda4 D vtable for CTaskComplexGangFollower
0066ca9c D vtable for CTaskComplexInAirAndLand
0066d034 D vtable for CTaskComplexKillCriminal
0066cd58 D vtable for CTaskComplexPartnerGreet
0066ce24 D vtable for CTaskComplexPartnerShove
0066aecc D vtable for CTaskComplexShuffleSeats
0066a160 D vtable for CTaskComplexUseAttractor
0066c668 D vtable for CTaskComplexUseEntryExit
0066b7e0 D vtable for CTaskComplexWalkRoundCar
00665714 V vtable for CTaskSimpleCarDriveTimed
0066bde0 D vtable for CTaskSimpleGoToPointFine
00668838 V vtable for CTaskSimpleHitFromBehind
0066d290 V vtable for CTaskSimplePutDownEntity
0066a530 D vtable for CTaskSimpleTriggerLookAt
00663554 D vtable for CWidgetButtonSwapWeapons
00664468 D vtable for CWidgetRegionArcadeStick
00664590 D vtable for CWidgetRegionColorPicker
00664624 D vtable for CWidgetRegionDriveHybrid
0066499c D vtable for CWidgetRegionPoolEnglish
00667900 D vtable for CAEWaterCannonAudioEntity
0066538c V vtable for CEventAcquaintancePedHate
00669120 V vtable for CEventAcquaintancePedLike
00669330 V vtable for CEventDontJoinPlayerGroup
00666998 D vtable for CEventGotKnockedOverByCar
00665ea4 D vtable for CEventPedCollisionWithPed
0066629c D vtable for CEventPedEnteredMyVehicle
00666110 D vtable for CEventPotentialGetRunOver
00669ba4 V vtable for CEventVehicleDamageWeapon
0066b550 D vtable for CTaskComplexGetOnBoatSeat
0066c3ac D vtable for CTaskComplexGoToAttractor
0066b73c D vtable for CTaskComplexHitPedWithCar
00669838 D vtable for CTaskComplexKillPedOnFoot
0066cff8 D vtable for CTaskComplexPolicePursuit
006697fc D vtable for CTaskComplexReactToAttack
0066b9b8 D vtable for CTaskComplexTreatAccident
0066d4b4 D vtable for CTaskComplexWaitForBackup
0066b90c D vtable for CTaskComplexWalkRoundFire
0066c100 D vtable for CTaskSimpleAchieveHeading
0066b2fc D vtable for CTaskSimpleCarForcePedOut
0066b7ac D vtable for CTaskSimpleHurtPedWithCar
0066b778 D vtable for CTaskSimpleKillPedWithCar
00663304 D vtable for CWidgetButtonMissionStart
006634c0 D vtable for CWidgetButtonSkipCutscene
0066367c D vtable for CWidgetButtonVehicleShoot
00664ac4 D vtable for CWidgetRegionRhythmSelect
006677d8 D vtable for CAEGlobalWeaponAudioEntity
00666bc0 D vtable for CEventPlayerCommandToGroup
00666200 D vtable for CEventPotentialWalkIntoPed
00668ebc V vtable for CPedTriggerScriptAttractor
0066ad7c D vtable for CTaskComplexCarDriveWander
0066aa2c D vtable for CTaskComplexDragPedFromCar
0066ba6c D vtable for CTaskComplexDriveFireTruck
0066d1b8 D vtable for CTaskComplexGoPickUpEntity
00669a4c D vtable for CTaskComplexKillAllThreats
0066af3c D vtable for CTaskComplexLeaveCarAndDie
0066a9ac D vtable for CTaskComplexOpenDriverDoor
0066ba30 D vtable for CTaskComplexPresentIDToCop
0066bc74 D vtable for CTaskComplexSmartFleePoint
0066a5d4 D vtable for CTaskComplexUseMobilePhone
0066baec D vtable for CTaskComplexUseWaterCannon
0066c61c D vtable for CTaskComplexWanderCriminal
0066c584 D vtable for CTaskComplexWanderStandard
00669628 D vtable for CTaskSimpleFightingControl
006696c4 D vtable for CTaskSimpleThrowProjectile
006653dc V vtable for CTaskSimpleUninterruptable
00663960 D vtable for CWidgetButtonMissionCancel
00667818 D vtable for CAEPedlessSpeechAudioEntity
00667840 D vtable for CAEPoliceScannerAudioEntity
00667740 D vtable for CAnimBlendStaticAssociation
00666a34 D vtable for CEventPotentialWalkIntoFire
00662434 D vtable for CHIDJoystickXbox360Standard
0066adc4 D vtable for CTaskComplexCarDriveMission
006699d4 D vtable for CTaskComplexDestroyCarArmed
00669998 D vtable for CTaskComplexDestroyCarMelee
0066ae54 D vtable for CTaskComplexDrivePointRoute
0066d4f0 D vtable for CTaskComplexExtinguishFires
0066ca60 D vtable for CTaskComplexFallAndStayDown
0066c260 D vtable for CTaskComplexFollowNodeRoute
0066c020 D vtable for CTaskComplexGangJoinRespond
0066c1ac D vtable for CTaskComplexGoToPointAiming
0066c49c D vtable for CTaskComplexGotoDoorAndOpen
00669af8 D vtable for CTaskComplexKillPedFromBoat
0066ac88 D vtable for CTaskComplexLeaveCarAndFlee
0066b894 D vtable for CTaskComplexMoveBackAndJump
0066bcb0 D vtable for CTaskComplexSmartFleeEntity
0066a124 D vtable for CTaskComplexWaitAtAttractor
0066b858 D vtable for CTaskComplexWalkRoundObject
00669760 D vtable for CTaskSimpleBeHitWhileMoving
0066972c D vtable for CTaskSimpleBeKickedOnGround
0066af08 D vtable for CTaskSimpleCarSetTempAction
00668608 V vtable for CTaskSimpleHailTaxiAndPause
00668790 V vtable for CTaskSimpleHitByGunFromLeft
00668720 V vtable for CTaskSimpleHitByGunFromRear
00663020 D vtable for CWidgetButtonAnimatedArcade
006638cc D vtable for CWidgetButtonAutoHydraulics
006644fc D vtable for CWidgetRegionBasketBallJump
00664908 D vtable for CWidgetRegionPoolBallInHand
00669170 V vtable for CEventAcquaintancePedDislike
006690d0 V vtable for CEventAcquaintancePedRespect
0066920c V vtable for CEventPedCollisionWithPlayer
006691c0 V vtable for CEventPlayerCollisionWithPed
0066d798 V vtable for CEventVehicleDamageCollision
0066a92c D vtable for CTaskComplexEnterCarAsDriver
0066c224 D vtable for CTaskComplexFollowPointRoute
0066a070 D vtable for CTaskComplexHitByGunResponse
0066d33c D vtable for CTaskComplexSeekEntityAiming
0066a874 V vtable for CTaskComplexUseEffectRunning
0066a6f8 D vtable for CTaskComplexUseScriptedBrain
0066ce6c D vtable for CTaskComplexWalkAlongsidePed
0066c360 D vtable for CTaskComplexWanderProstitute
0066b364 D vtable for CTaskSimpleCarSlowDragPedOut
0066b190 D vtable for CTaskSimpleCarWaitToSlowDown
0066b58c D vtable for CTaskSimpleCreateCarAndGetIn
00668758 V vtable for CTaskSimpleHitByGunFromFront
006687c8 V vtable for CTaskSimpleHitByGunFromRight
00663148 D vtable for CWidgetButtonBasketballShoot
00666e90 D vtable for CEventLeaderExitedCarAsDriver
006661b0 D vtable for CEventPotentialWalkIntoObject
0066ab5c D vtable for CTaskComplexEnterBoatAsDriver
0066c460 D vtable for CTaskComplexFollowPatrolRoute
0066c3e8 D vtable for CTaskComplexGoToPointAnyMeans
0066c6e0 V vtable for CTaskComplexGoToPointShooting
0066ac4c D vtable for CTaskComplexLeaveCarAndWander
0066a9ec D vtable for CTaskComplexOpenPassengerDoor
0066c05c D vtable for CTaskComplexProstituteSolicit
0066d478 D vtable for CTaskComplexReactToGunAimedAt
0066a19c D vtable for CTaskComplexWaitForDryWeather
00669584 D vtable for CTaskSimplePlayHandSignalAnim
0066b4e0 D vtable for CTaskSimpleSetPedAsAutoDriver
00669c28 D vtable for CTaskSimpleSetStayInSamePlace
00666e40 D vtable for CEventLeaderEnteredCarAsDriver
00666160 D vtable for CEventPotentialWalkIntoVehicle
0066d598 D vtable for CTaskAllocatorKillThreatsBasic
0066d378 D vtable for CTaskComplexFollowPedFootsteps
0066c9b4 D vtable for CTaskComplexGetUpAndStandStill
0066d43c D vtable for CTaskComplexInvestigateDeadPed
00669a88 D vtable for CTaskComplexKillPedGroupOnFoot
006698ec D vtable for CTaskComplexKillPedOnFootArmed
006698b0 D vtable for CTaskComplexKillPedOnFootMelee
006695b8 D vtable for CTaskComplexPlayHandSignalAnim
0066d400 V vtable for CTaskComplexSeekEntityAnyMeans<CEntitySeekPosCalculatorXYOffset>
0066a8b0 V vtable for CTaskComplexUseEffectSprinting
0066a2f4 D vtable for CTaskComplexUsePairedAttractor
0066b260 D vtable for CTaskSimpleCarSetPedInAsDriver
0066b398 D vtable for CTaskSimpleCarSlowBeDraggedOut
00669550 D vtable for CTaskSimpleRunAnimLoopedMiddle
0066b5f4 D vtable for CTaskSimpleWaitUntilPedIsInCar
00664d14 D vtable for CWidgetRegionSteeringSelection
0066d3e8 D vtable for CEntitySeekPosCalculatorDriving
00666f78 D vtable for CEventPotentialWalkIntoBuilding
0066b400 D vtable for CTaskComplexCarSlowBeDraggedOut
0066ae90 D vtable for CTaskComplexEnterAnyCarAsDriver
0066a96c D vtable for CTaskComplexEnterCarAsPassenger
0066b700 D vtable for CTaskComplexEvasiveDiveAndGetUp
0066a36c D vtable for CTaskComplexUseAttractorPartner
0066a80c D vtable for CTaskSimpleSetCharDecisionMaker
0066b5c0 D vtable for CTaskSimpleWaitUntilPedIsOutCar
0066d3f4 D vtable for CEntitySeekPosCalculatorFixedPos
00665708 V vtable for CEntitySeekPosCalculatorStandard
0066d3c4 D vtable for CEntitySeekPosCalculatorXYOffset
006671e0 D vtable for CEventPlayerCommandToGroupAttack
0066937c V vtable for CEventPlayerCommandToGroupGather
0066d5bc D vtable for CTaskAllocatorKillThreatsDriveby
0066a330 D vtable for CTaskComplexAttractorPartnerWait
0066bb28 D vtable for CTaskComplexExtinguishFireOnFoot
0066d300 D vtable for CTaskComplexFollowLeaderAnyMeans
00669874 D vtable for CTaskComplexKillPedOnFootStealth
0066b9f4 D vtable for CTaskComplexMedicTreatInjuredPed
00669f4c D vtable for CTaskComplexObserveTrafficLights
0066acc4 D vtable for CTaskComplexScreamInCarThenLeave
0066a3a8 D vtable for CTaskComplexUseScriptedAttractor
0066d3dc D vtable for CEntitySeekPosCalculatorVehicleId
00666c60 D vtable for CEventAcquaintancePedHateBadlyLit
00668fa0 D vtable for CPedGroupDefaultTaskAllocatorChat
0066d574 D vtable for CTaskAllocatorPlayerCommandAttack
0066aa6c D vtable for CTaskComplexEnterCarAsDriverTimed
0066b514 D vtable for CTaskComplexGoToBoatSteeringWheel
0066b0c0 D vtable for CTaskSimpleCarCloseDoorFromInside
0066b024 D vtable for CTaskSimpleCarOpenDoorFromOutside
0066b22c D vtable for CTaskSimpleCarSetPedInAsPassenger
0066d228 D vtable for CTaskSimpleDuckWhileShotsWhizzing
0066a7a4 D vtable for CTaskSimpleTogglePedThreatScanner
00664e3c D vtable for CWidgetRegionTouchLayoutSelection
0066d628 D vtable for CTaskAllocatorPlayerCommandRetreat
0066733c V vtable for CTaskComplexCarDriveMissionKillPed
0066c134 D vtable for CTaskComplexGoToPointAndStandStill
0066c50c D vtable for CTaskComplexInvestigateDisturbance
0066b0f4 D vtable for CTaskSimpleCarCloseDoorFromOutside
0066b3cc D vtable for CTaskSimpleCarSetPedSlowDraggedOut
00669c5c D vtable for CTaskSimpleSetKindaStayInSamePlace
0066a6c4 D vtable for CTaskSimpleWaitUntilAreaCodesMatch
00666ee0 D vtable for CEventLeaderQuitEnteringCarAsDriver
00668fb0 D vtable for CPedGroupDefaultTaskAllocatorRandom
0066aae4 D vtable for CTaskComplexEnterCarAsPassengerWait
0066d2c4 D vtable for CTaskComplexFollowLeaderInFormation
0066c6a4 D vtable for CTaskComplexFollowNodeRouteShooting
0066ab20 D vtable for CTaskComplexLeaveCarAsPassengerWait
0066c424 D vtable for CTaskComplexTurnToFaceEntityOrCoord
0066d150 D vtable for CTaskSimpleAffectSecondaryBehaviour
0066727c V vtable for CTaskComplexCarDriveMissionFleeScene
0066aaa8 D vtable for CTaskComplexEnterCarAsPassengerTimed
0066afb4 D vtable for CTaskComplexGoToCarDoorAndStandStill
00669b34 D vtable for CTaskComplexSeekCoverUntilTargetDead
0066b81c D vtable for CTaskComplexWalkRoundBuildingAttempt
0066d3d0 D vtable for CEntitySeekPosCalculatorEntitySurface
0066b1c4 D vtable for CTaskSimpleCarWaitForDoorNotToBeInUse
00669f10 D vtable for CTaskComplexSitDownThenIdleThenStandUp
00668f90 D vtable for CPedGroupDefaultTaskAllocatorStandStill
0066c2e8 D vtable for CTaskComplexAvoidOtherPedWhileWandering
0066c170 D vtable for CTaskComplexGoToPointAndStandStillTimed
0066b058 D vtable for CTaskSimpleCarOpenLockedDoorFromOutside
00669b70 D vtable for CTaskSimpleSetCharIgnoreWeaponRangeFlag
0066a840 D vtable for CTaskSimpleWaitUntilLeaderAreaCodesMatch
0066d3b8 D vtable for CEntitySeekPosCalculatorRadiusAngleOffset
0066d64c D vtable for CTaskAllocatorKillThreatsBasicRandomGroup
0066b43c D vtable for CTaskComplexCarSlowBeDraggedOutAndStandUp
00668f80 D vtable for CPedGroupDefaultTaskAllocatorFollowLimited
00669fc4 D vtable for CTaskComplexCrossRoadLookAndAchieveHeading
0066b948 D vtable for CTaskComplexDiveFromAttachedEntityAndGetUp
00668f70 D vtable for CPedGroupDefaultTaskAllocatorFollowAnyMeans
00668fc0 D vtable for CPedGroupDefaultTaskAllocatorSitInLeaderCar
0066a598 D vtable for CTaskComplexUseClosestFreeScriptedAttractor
006672c4 V vtable for CTaskComplexUseClosestFreeScriptedAttractorRun
0066c548 D vtable for CTaskComplexGoToPointUntilCollisionAndStandStill
0066b1f8 D vtable for CTaskSimpleCarGoToPointNearDoorUntilDoorNotInUse
00669f88 D vtable for CTaskComplexObserveTrafficLightsAndAchieveHeading
00667300 V vtable for CTaskComplexUseClosestFreeScriptedAttractorSprint
0066d900 D vtable for CBmx
00662078 V vtable for CHID
00668c50 D vtable for CPed
0066c1e8 D vtable for CTaskComplexGoToPointAndStandStillAndAchieveHeading
0066d7e8 D vtable for CBike
0066da18 D vtable for CBoat
0066db2c D vtable for CHeli
006693e4 D vtable for CTask
00667bcc D vtable for CDummy
00665d6c D vtable for CEvent
0066dd7c D vtable for CPlane
0066e0f4 D vtable for CTrain
00661f34 V vtable for APKFile
00667994 D vtable for CCamera
00668b00 D vtable for CCopPed
00667c30 D vtable for CEntity
00667e90 D vtable for CObject
00662e64 D vtable for CWidget
00661fa0 V vtable for OALBase
00661e20 D vtable for ZIPFile
00667f60 D vtable for COctTree
0066dfcc D vtable for CTrailer
0066e208 D vtable for CVehicle
00665d28 V vtable for FxPrim_c
00662df0 V vtable for OkScreen
00661fb0 V vtable for CBuilding
00668b74 D vtable for CDummyPed
00667ca4 D vtable for CPhysical
0066dea4 D vtable for CQuadBike
00660898 D vtable for ES2Shader
00661f80 D vtable for OALBuffer
00661f90 D vtable for OALSource
006608f8 D vtable for RQTexture
00662ba0 V vtable for LoadScreen::LoadScreenSelection
00662d0c V vtable for SaveScreen::SaveScreenSelection
00662970 V vtable for AudioScreen::RadioSelection
00662c28 V vtable for DeleteScreen::DeleteScreenSelection
00662804 V vtable for SelectScreen::ActionSelection
00662830 V vtable for SelectScreen::SettingSelection
006627d8 V vtable for KeyboardControlsScreen::KeyboardMappingSelection
006e01c0 V SelectScreen::SettingSelection::HandleInput(SelectScreen*, float)::WaitingForScreenRecordingResponse
006e01c2 V SaveSelectScreen::SaveSelection::GetTitle()::chars
006e01b4 V KeyboardControlsScreen::ManageScrolling(float)::lastMouseCoords
006857f0 V KeyboardControlsScreen::Update(float)::LastSelectedItem
         U operator delete[](void*)
         U operator delete(void*)
001d34d1 T operator==(RQMatrix const&, RQMatrix const&)
00450b3f T operator*(CMatrix const&, CVector const&)
0044fb69 T operator*(CMatrix const&, CMatrix const&)
         U operator new[](unsigned int)
001d34e7 T operator!=(RQMatrix const&, RQMatrix const&)
         U operator new(unsigned int)
0044fd09 T operator+(CMatrix const&, CMatrix const&)
005e8470 T __aeabi_cdcmpeq
005e8470 T __aeabi_cdcmple
005e8454 T __aeabi_cdrcmple
005e8378 T __aeabi_d2lz
         U __aeabi_d2ulz
005e8484 T __aeabi_dcmpeq
005e84c0 T __aeabi_dcmpge
005e84d4 T __aeabi_dcmpgt
005e84ac T __aeabi_dcmple
005e8498 T __aeabi_dcmplt
         U __aeabi_idiv
         U __aeabi_idivmod
         U __aeabi_l2d
         U __aeabi_l2f
         U __aeabi_ldivmod
         U __aeabi_memclr@LIBC_N
         U __aeabi_memclr4@LIBC_N
         U __aeabi_memclr8@LIBC_N
         U __aeabi_memcpy@LIBC_N
         U __aeabi_memcpy4@LIBC_N
         U __aeabi_memcpy8@LIBC_N
         U __aeabi_memmove@LIBC_N
         U __aeabi_memmove4@LIBC_N
         U __aeabi_memmove8@LIBC_N
         U __aeabi_memset@LIBC_N
         U __aeabi_memset4@LIBC_N
         U __aeabi_memset8@LIBC_N
         U __aeabi_uidiv
         U __aeabi_uidivmod
         U __aeabi_ul2d
         U __aeabi_ul2f
         U __aeabi_uldivmod
         U __aeabi_unwind_cpp_pr0
         U __aeabi_unwind_cpp_pr1
         U __android_log_print
         U __assert2@LIBC
00a98ff0 A __bss_end__
006b2d85 A __bss_start
006b2d85 A __bss_start__
005e83cc T __cmpdf2
         U __cxa_atexit@LIBC
         U __cxa_finalize@LIBC
         U __cxa_guard_acquire
         U __cxa_guard_release
         U __cxa_pure_virtual
00a98ff0 A __end__
005e83cc T __eqdf2
         U __errno@LIBC
005e8378 T __fixdfdi
005e83bc T __gedf2
005e83bc T __gtdf2
         U __isfinite@LIBC
005e83c4 T __ledf2
005e83c4 T __ltdf2
005e83cc T __nedf2
         U __sF@LIBC
         U __signbit@LIBC
         U __stack_chk_fail@LIBC
         U __stack_chk_guard@LIBC
00a98ff0 A _bss_end__
005ef9b0 R _dist_code
006b2d85 A _edata
00a98ff0 A _end
005efbb0 R _length_code
00a26a80 B _numOfQuadWords
006b70cc B _rpMatFXOpenGLBumpMapRender
006b70d0 B _rpMatFXOpenGLDualRender
006b70c8 B _rpMatFXOpenGLEnvMapRender
006b70d4 B _rpMatFXOpenGLUVAnimRender
006b7178 B _rpMultiTextureModule
001c7bd9 T _rpSkinDeinitialize
001c7825 T _rpSkinGetMeshBoneRLE
001c7821 T _rpSkinGetMeshBoneRLECount
001c781d T _rpSkinGetMeshBoneRemapIndices
006b7274 B _rpSkinGlobals
001c7b05 T _rpSkinInitialize
001c7829 T _rpSkinSplitDataCreate
001c78b1 T _rpSkinSplitDataDestroy
0067a1bc D _rpUVAnimDictSchema
0067a1f0 D _rpUVAnimLinearInterpolatorInfo
0067a220 D _rpUVAnimParamInterpolatorInfo
006bd514 B _rtgBuffer
006bcf94 B _rwIm3DGlobals
006bcf8c B _rwIm3DModule
0068243c D _rwMsbBit
006bd74c B _rwOpenGLColorArrayEnabled
006bd6f4 B _rwOpenGLColorMaterialEnabled
006bd6f0 B _rwOpenGLLightingEnabled
006bd748 B _rwOpenGLNormalArrayEnabled
006bd6f8 B _rwOpenGLNormalizeEnabled
006bd6e0 B _rwOpenGLOpaqueBlack
006bd728 B _rwOpenGLPrimConvTbl
006bd750 B _rwOpenGLTexCoordArrayEnabled
006bd744 B _rwOpenGLVertexArrayEnabled
0067a05c D _rwRaster_cFlags
0067a058 D _rwRaster_cType
0067a044 D _rwRaster_cpPixels
0067a050 D _rwRaster_nDepth
0067a04c D _rwRaster_nHeight
0067a054 D _rwRaster_nStride
0067a048 D _rwRaster_nWidth
006b2dc4 B _rwV2d_nX
0067a030 D _rwV2d_nY
006b2dc8 B _rwV3d_nX
0067a038 D _rwV3d_nY
0067a03c D _rwV3d_nZ
006bcfc4 B _rxExecCtxGlobal
006bcfe0 B _rxHeapGlobal
006826a8 D _rxHeapInitialSize
006bcf98 B _rxPipelineGlobalsOffset
006826ac D _rxPipelineMaxNodes
0020f895 T _tr_align
0020fa21 T _tr_flush_block
0020f63d T _tr_init
0020f797 T _tr_stored_block
00210a19 T _tr_tally
006b15c0 D aAlphaFade
006a6d30 D aAudioPedTypeNames
00a01cfc B aAutomobileColPoints
0068c314 D aBONETAG_ENUM_TAB
007967b4 B aCarsToKeepTime
006b138c D aDriveAnimIdsBad
006b139c D aDriveAnimIdsBadSlow
006b137c D aDriveAnimIdsBoat
006b13fc D aDriveAnimIdsKart
006b136c D aDriveAnimIdsLow
006b13cc D aDriveAnimIdsPro
006b13dc D aDriveAnimIdsProSlow
006b13ac D aDriveAnimIdsStd
006b13bc D aDriveAnimIdsStdSlow
006b13ec D aDriveAnimIdsTruck
007af2f8 B aExteriorNodeLinkedTo
007af2d8 B aInteriorNodeLinkedToExterior
006af95c D aPedTypeNames
006ab480 D aScreens
00687cac D aStdAnimDescs
006af180 D aStdAnimations
009ed488 B aStdBonePosisions
006b03c0 D aTestAnimList
008204dc B aTrafficLightColoursB
00686767 D aTrafficLightColoursG
00686764 D aTrafficLightColoursR
00a86288 B aWeaponInfo
009f0b19 B abTempNeverLeavesGroup
         U abort@LIBC
006d6aec B accelerometerValues
006d7124 B achievementCount
006d7120 B achievements
         U acosf@LIBC
006b8b10 B activeDesc
0020a6f9 T adler32
006ae188 D airstrip_table
0023e5a9 T alAuxiliaryEffectSlotf
0023e6c1 T alAuxiliaryEffectSlotfv
0023e0dd T alAuxiliaryEffectSloti
0023e501 T alAuxiliaryEffectSlotiv
00246cd5 T alBuffer3f
00246ee5 T alBuffer3i
0023f56d T alBufferData
00246149 T alBufferSamplesSOFT
0023fe71 T alBufferSubDataSOFT
002462b1 T alBufferSubSamplesSOFT
00246c3d T alBufferf
00246d6d T alBufferfv
00246e4d T alBufferi
00246f7d T alBufferiv
0025da01 T alDeferUpdatesSOFT
0023d6dd T alDeleteAuxiliaryEffectSlots
0023f23d T alDeleteBuffers
00252eed T alDeleteEffects
00254605 T alDeleteFilters
002562a5 T alDeleteSources
0025ce65 T alDisable
0025d989 T alDistanceModel
0025d7f1 T alDopplerFactor
0025d879 T alDopplerVelocity
00253739 T alEffectf
002537bd T alEffectfv
002531e1 T alEffecti
00253695 T alEffectiv
0025cdf9 T alEnable
00254b09 T alFilterf
00254b8d T alFilterfv
002548ed T alFilteri
00254a69 T alFilteriv
0023c781 T alGenAuxiliaryEffectSlots
0023ef2d T alGenBuffers
00252b2d T alGenEffects
002542c1 T alGenFilters
00255e9d T alGenSources
0023e8d1 T alGetAuxiliaryEffectSlotf
0023e98d T alGetAuxiliaryEffectSlotfv
0023e765 T alGetAuxiliaryEffectSloti
0023e82d T alGetAuxiliaryEffectSlotiv
0025cf3d T alGetBoolean
0025d1e5 T alGetBooleanv
00247519 T alGetBuffer3f
00247a15 T alGetBuffer3i
00246651 T alGetBufferSamplesSOFT
002472ad T alGetBufferf
00247609 T alGetBufferfv
00247701 T alGetBufferi
00247b05 T alGetBufferiv
0025cfe5 T alGetDouble
0025d32d T alGetDoublev
002539c1 T alGetEffectf
00253a45 T alGetEffectfv
00253841 T alGetEffecti
002538dd T alGetEffectiv
00254275 T alGetEnumValue
00254129 T alGetError
00254d89 T alGetFilterf
00254e0d T alGetFilterfv
00254c11 T alGetFilteri
00254ca9 T alGetFilteriv
0025d09d T alGetFloat
0025d481 T alGetFloatv
0025d14d T alGetInteger
0025d5d5 T alGetIntegerv
0025589d T alGetListener3f
00255c1d T alGetListener3i
002557d9 T alGetListenerf
002559bd T alGetListenerfv
00255b91 T alGetListeneri
00255d61 T alGetListeneriv
0025422d T alGetProcAddress
00259619 T alGetSource3dSOFT
002591e5 T alGetSource3f
00259ccd T alGetSource3i
0025a3f1 T alGetSource3i64SOFT
002594ad T alGetSourcedSOFT
00259741 T alGetSourcedvSOFT
00258c9d T alGetSourcef
0025931d T alGetSourcefv
002598c5 T alGetSourcei
00259f85 T alGetSourcei64SOFT
0025a531 T alGetSourcei64vSOFT
00259e09 T alGetSourceiv
0025d70d T alGetString
0023e0ab T alIsAuxiliaryEffectSlot
0023f535 T alIsBuffer
00246bf3 T alIsBufferFormatSupportedSOFT
0025319d T alIsEffect
0025ced1 T alIsEnabled
00254175 T alIsExtensionPresent
002548b5 T alIsFilter
0025666d T alIsSource
0025522d T alListener3f
00255641 T alListener3i
002550ed T alListenerf
002553fd T alListenerfv
002555e9 T alListeneri
002556d1 T alListeneriv
0025db2d T alProcessUpdatesSOFT
002615cd T alSetConfigMOB
0023cd69 T alSetError
00257589 T alSource3dSOFT
00257209 T alSource3f
002583c1 T alSource3i
00258a19 T alSource3i64SOFT
0025a9ab T alSourcePause
0025a9c1 T alSourcePausev
0025a6c1 T alSourcePlay
0025a6d5 T alSourcePlayv
0025ad99 T alSourceQueueBuffers
0025ac4d T alSourceRewind
0025ac61 T alSourceRewindv
0025aaf1 T alSourceStop
0025ab05 T alSourceStopv
0025c879 T alSourceUnqueueBuffers
00257455 T alSourcedSOFT
00257671 T alSourcedvSOFT
0025669d T alSourcef
002572e5 T alSourcefv
00257811 T alSourcei
00258611 T alSourcei64SOFT
00258b0d T alSourcei64vSOFT
00258495 T alSourceiv
0025d901 T alSpeedOfSound
0023cdad T al_calloc
0023ce61 T al_free
002612f5 T al_malloc
00247fb5 T al_print
0024dd05 T alcCaptureCloseDevice
0024d939 T alcCaptureOpenDevice
0024e0e9 T alcCaptureSamples
0024de25 T alcCaptureStart
0024df89 T alcCaptureStop
0024d669 T alcCloseDevice
0024a541 T alcCreateContext
0024bb45 T alcDestroyContext
00248079 T alcDeviceEnableHrtfMOB
0024bc15 T alcGetContextsDevice
0024bd99 T alcGetCurrentContext
0024d829 T alcGetDeviceReferenceCount
0024a3f1 T alcGetEnumValue
002491fd T alcGetError
00249da9 T alcGetIntegerv
0025f721 T alcGetJavaVM
0024a2ad T alcGetProcAddress
00249319 T alcGetString
0024bdbd T alcGetThreadContext
0024a125 T alcIsExtensionPresent
0024e51d T alcIsRenderFormatSupportedSOFT
0024e281 T alcLoopbackOpenDeviceSOFT
0024bdcd T alcMakeContextCurrent
0024bf41 T alcOpenDevice
00249317 T alcProcessContext
0024e69d T alcRenderSamplesSOFT
0025f799 T alcResume
0024bed9 T alcSetThreadContext
0025f785 T alcSuspend
00249315 T alcSuspendContext
002601f5 T alc_audiotrack_deinit
002601bd T alc_audiotrack_init
00260265 T alc_audiotrack_probe
0026185d T alc_loopback_deinit
00261825 T alc_loopback_init
0026185f T alc_loopback_probe
0025fa81 T alc_null_deinit
0025fa49 T alc_null_init
0025fa85 T alc_null_probe
00261899 T alc_opensl_deinit
00261861 T alc_opensl_init
0026189d T alc_opensl_probe
006b37c0 B alphaStack
0024bad9 T aluHandleDisconnect
0025fb31 T aluInitPanning
0024e809 T aluMixData
0025f6b9 T android_JNI_OnLoad
009fc8ea B anytimeMissionScript
007967ac B apCarsToKeep
00a98fcc B apportableOpenALFuncs
         U asinf@LIBC
         U atan2f@LIBC
         U atanf@LIBC
         U atof@LIBC
         U atoi@LIBC
00952e95 B bAvoidTest1
00951fa1 B bDidWeProcessAnyCinemaCam
00a46d3d B bDispayOccDebugStuff
006b1278 D bDoQuadDamping
007a9eb0 B bDontBuildPaths
006b2d84 D bFirstTime
00952e94 B bForceOldWaft
00a5a15e B bFudgeNow
00a01cf0 B bHeliControl
007aee05 B bInteriorBeingBuilt
00792f3c B bLoadingScene
00a987ec B bPendingPause
00990bdd B bSaveSettings
007967c4 B bSequenceOtherWay
006b1588 D bSplitBigPolys
00a987c0 B bSuppressPrintfs
006b0564 D bTestDbg
006b4058 B backTarget
006dfd20 B bankInfo
00685d18 D baseID
006d70c8 B base_time
006d7104 B billingMutex
0067a264 D blurPShader
0025fa2d T bs2b_clear
0025f5d1 T bs2b_cross_feed
0025f8d9 T bs2b_get_level
0025fa29 T bs2b_get_srate
0025f7b1 T bs2b_set_level
0025f8e1 T bs2b_set_srate
0067a3d4 D bufferChanged
006bcc64 B cachedDescription
         U calloc@LIBC
0067a41c D cameraTKList
006d81d8 B capsLockOn
006b1310 D carLodLerp
0070be40 B cdSemaphore
         U ceilf@LIBC
00992480 B circleTex
006d81a1 B clearInputNextUpdate
         U clock_gettime@LIBC
         U close@LIBC
         U closedir@LIBC
006ae53c D clothesIDs
006ae510 D clothesTextureNames
00685708 D cloudFilename
         U cloudGetBufferLen
         U cloudGetBufferPtr
         U cloudGetFree
         U cloudIsBusy
         U cloudModAddWatch
         U cloudModFind
         U cloudModReset
         U cloudStartCheckMod
         U cloudStartDownload
         U cloudStartUpload
006b32a0 B colorInterp
006bcc40 B commandLog
0020a8ad T compress
0020a849 T compress2
006d81b4 B context
006b4064 B contrastAdd
0067a11c D contrastMult
0067a25c D contrastPShader
0067a258 D contrastVShader
         U cos@LIBC
         U cosf@LIBC
0020a91d T crc32
         U ctime@LIBC
006bcbf4 B cullDisabled
006bcbec B cullEnabled
0067a10c D curAlphaModulate
006b4584 B curAssignedShader
006b7098 B curEmulatorStateFlags
006b40a0 B curGPUResource
0067a0e8 D curGlobalMode
009599a8 B curMS
006bcbf0 B curMode
006b5888 B curNumShaders
006b409c B curPreallocSource
006b7094 B curShaderStateFlags
0067a110 D curStack
006855c8 D curWakeLock
00959ac8 B currentActivePadID
006f237c B currentDayindex
009ecd08 B currentLoadFenceCount
006d7074 B currentLoops
00796898 B currentMissionPage
00951fa4 B currentPad
009ecd0c B currentSaveFenceCount
0079689c B currentSkipToMissionNumber
0067a103 D debug_AlphaTest
0067a104 D debug_BlendDrawing
0067a100 D debug_DrawCalls
0067a101 D debug_Lighting
0067a102 D debug_Texturing
006b2d64 D defaultFullscreenRes
006857f8 D defaultName
006857fc D defaultValues
006855d4 D definedDevice
0020aea1 T deflate
0020b24d T deflateCopy
0020ac15 T deflateEnd
0020aa2d T deflateInit2_
0020aa09 T deflateInit_
0020ae05 T deflateParams
0020ac89 T deflateReset
0020ad41 T deflateSetDictionary
005ef6f0 R deflate_copyright
00a297ac B deletingEscalator
006b330c B desc
0067a178 D detailTilingFactor
006855cc D deviceChip
006855d0 D deviceForm
006d7034 B deviceRegion
006b31f4 B dgGGlobals
006b5884 B dirtyCache
00796114 B displayCollisionInMemory
006d70b8 B doubleClickDelay
006d81bc B e
         U eglGetDisplay
         U eglGetProcAddress
         U eglQueryString
0067a175 D emu_4444Conversion
006b4174 B emu_InternalBlendEnabled
0067a174 D emu_TrilinearEnabled
006b4168 B emu_cameraPosition
0067a180 D emu_cameraPositionDirty
0067a190 D emu_fogcolor
0067a19c D emu_fogdirty
0067a184 D emu_fogdistances
0067a17c D envMapCoefficient
006bcc00 B es2TexPool
0067a0dc D es2TextureType
         U exit@LIBC
         U exp@LIBC
         U exp2@LIBC
         U exp2f@LIBC
006aabac D extraOffset
006aa264 D fAngleDist
006aa2bc D fAvoidProbTimerDamp
006aa2c0 D fAvoidTweakFOV
006aa260 D fBaseDist
006aa250 D fBike1stPersonOffsetZ
006b0578 D fBikeBurstFallSpeed
006b057c D fBikeBurstFallSpeedPlayer
006b0574 D fBikeBurstForceMult
006b05f0 D fBoatVolumeDistribution
006b0614 D fBoatVolumeDistributionCat
006b065c D fBoatVolumeDistributionDinghy
006b0638 D fBoatVolumeDistributionSail
006b0680 D fBoatVolumeDistributionSpeed
006b132c D fBurstBikeSpeedMax
006b1328 D fBurstBikeTyreMod
006b0554 D fBurstForceMult
006b1318 D fBurstSpeedMax
006b1314 D fBurstTyreMod
006a9e1c D fCloseNearClipLimit
006b1368 D fDamagePosSpeedShift
006aa278 D fDefaultAlphaOrient
006aa258 D fDuckingBackOffset
006aa254 D fDuckingRightOffset
006aa268 D fFalloff
006b0560 D fFlySpeedMult
006aa374 D fHeliMinHeightAboveWater
006b2c6c D fPlayerAimRotRate
006b2c64 D fPlayerAimScale
006b2c68 D fPlayerAimScaleDist
006b05a8 D fRangeMult
006a9e18 D fRangePlayerRadius
006b2c80 D fReloadAnimSampleFraction
006b122c D fRotRamp
006aa378 D fSeaplaneMinHeightAboveWater
006b05a0 D fShapeLength
006b05a4 D fShapeTime
006af484 D fShootingRange
006b1350 D fSpeedMult
006b0568 D fSteerAng1
006b056c D fSteerAng2
006b0570 D fSteerAng3
006aa26c D fStickSens
006af4c0 D fTempBikeY
006af4c4 D fTempBikeZ
006af914 D fTempTestTorsoRoll
006af9ec D fTestPlayerWeaponReAimRate
00a01cf4 B fTestRotateAngle
006a9fcc D fTestShiftHeliCamTarget
00a0262c B fTimeMult
006aa270 D fTranslateCamUp
006b1330 D fTweakBikeWheelTurnForce
006b05e0 D fTweakLimitMaxY
006b05e4 D fTweakLimitMinY
006b05e8 D fTweakLimitMinZ
006b159c D fUnder1
006b15a0 D fUnder2
006b15a4 D fUnder3
006b05ec D fVolMultiplier
006b1594 D fWave2Ampl
006b158c D fWave2InvLength
006b1590 D fWave2NormScale
006aa280 D fWheelCamBikeXOffset
006aa27c D fWheelCamCarXOffset
006b1234 D fWheelExtensionRate
006ae508 D faceTex
006ae4e8 D faceTxdName
006ae50c D fatFaceTex
006ae500 D fatLegsTex
006ae4f4 D fatTorsoTex
         U fclose@LIBC
         U fdopen@LIBC
006ae4dc D feetDffName
006ae4ec D feetTxdName
         U fegetround@LIBC
         U feof@LIBC
         U ferror@LIBC
         U fesetround@LIBC
         U fflush@LIBC
         U fgetc@LIBC
         U fgets@LIBC
006d6874 B fileMutex
006dfd50 B finishedTasks
006e08a8 B firstStartTime
         U floor@LIBC
         U floorf@LIBC
006b4084 B flushedSinceSwap
         U fmodf@LIBC
         U fopen@LIBC
006b1e24 D foreign_table
0067a298 D formatTable
         U fprintf@LIBC
         U fputc@LIBC
         U fputs@LIBC
         U fputwc@LIBC
00682554 D frameTKList
         U fread@LIBC
         U free@LIBC
         U fseek@LIBC
         U ftell@LIBC
         U fwrite@LIBC
00a1fb18 B g2dEffectPluginOffset
00951fa0 B gAllowScriptedFixedCameraCollision
006af868 D gArse1
006af870 D gArse2
0068c3d0 D gAudioZoneToReverbEnvironmentMap
0068d298 D gBeatTrackLookup
009a7570 B gBoneIndices
009584e8 B gBuildings
006aa390 D gCamColVars
0070b640 B gCdImageNames
00a46da8 B gCenterOnScreen
006a9efd D gCinematicModeSwitchDir
0068c668 D gCollisionLookup
009598c0 B gColourBottom
009598bc B gColourTop
00a8620c B gCrossHair
006aa2b8 D gCurCamColVars
006a9f1c D gCurDistForCam
006aa648 D gDWCamMaxDurationMs
006aa644 D gDWCineyCamEndTime
006aa640 D gDWCineyCamStartTime
006a9f14 D gDWLastModeForCineyCam
0095a940 B gDummyMatrix
0069912c D gEmgSpeechLookup
00698d38 D gEmgSpeechVoiceLookup
006990d0 D gEmgSpeechVoiceToBankLookup
00a46d3e B gFaceFacingCamera
00958800 B gFireManager
00952de4 B gForceCamBehindPlayer
009595ea B gGameCracked1
009595eb B gGameCracked2
00a987c8 B gGameState
0068e50a D gGenSpeechLookup
0068d314 D gGenSpeechVoiceLookup
0068e368 D gGenSpeechVoiceToBankLookup
006a2f08 D gGfdSpeechLookup
006a2d7c D gGfdSpeechVoiceLookup
006a2ee4 D gGfdSpeechVoiceToBankLookup
009445f8 B gGlobalSpeechContextNextPlayTime
0069d27c D gGngSpeechLookup
0069ce04 D gGngSpeechVoiceLookup
0069d214 D gGngSpeechVoiceToBankLookup
00a011f8 B gGxtString
00a01644 B gGxtString2
00953000 B gHCM
00951c1c B gHandShaker
009598b8 B gHorZ
00952cbc B gIdleCam
00952de0 B gLastCamDist
006aa63c D gLastFrameProcessedDWCineyCam
00952f9c B gLastRadiusUsedInCollisionPreventionOfCamera
006869b0 D gLightOffSurfProps
006869a4 D gLightSurfProps
00685fb0 D gLimitPrecisionOfBinarySearch
0095a988 B gMatrixList
00a46e20 B gMaxXInOccluder
00a46e28 B gMaxYInOccluder
00a46e1c B gMinXInOccluder
00a46e24 B gMinYInOccluder
006e0074 B gMobileMenu
0093153c B gModelInfoAccelerator
006a56a4 D gModelVoiceLookup
006aa690 D gMovieCamMaxDist
006aa66c D gMovieCamMinDist
006b328c B gNoDetailTextures
007960b4 B gNumColCacheEntries
007960b8 B gNumEntitiesSetInvisible
006b2d68 D gNumVidModes
00a46d48 B gOccluderCoors
00a46db4 B gOccluderCoorsOnScreen
00a46e14 B gOccluderCoorsValid
006af86c D gOldArse
006a510a D gPainLookup
006a50c8 D gPainVoiceLookup
006a5104 D gPainVoiceToBankLookup
00952f98 B gPedClipDist
006aa634 D gPedCylinderWidth
006aa630 D gPedMaxHeight
009595cc B gPerfCounter1
009595d0 B gPerfCounter2
009595d4 B gPerfCounter3
009595d8 B gPerfCounter4
007af330 B gPhoneInfo
006a9e14 D gPlayerPedVisible
0069ab54 D gPlySpeechLookup
0069a99c D gPlySpeechVoiceLookup
0069ab2c D gPlySpeechVoiceToBankLookup
009595dc B gPrintStuff
00992240 B gRadarTextures
006a6d48 D gRadioAdverts
006a6d50 D gRadioDJBanterBB
006a6db0 D gRadioDJBanterBC
006a6e10 D gRadioDJBanterBO
006a6e70 D gRadioDJBanterGN
006a6ed0 D gRadioDJBanterNW
006a6f30 D gRadioDJBanterTE
006a6f90 D gRadioDJBanterTM
006a6ff0 D gRadioDJBanterTN
006a7110 D gRadioDJBanterWF
006a7050 D gRadioDJBanterWR
006a70b0 D gRadioDJBanterWS
006a7170 D gRadioIdents
006a77d0 D gRadioMusicIntros
006a8370 D gRadioMusicOutros
006a7200 D gRadioMusicTracks
006a71d0 D gRadioNumMusicTracksPerStation
006aa638 D gRadiusScalarForLengthToVehicle
0068c5f0 D gScriptBanksLookup
006a5596 D gSpecialPedVoiceLookup
006a5212 D gSpecialPedVoiceNameLookup
006a56ae D gSpeechContextLookup
00958214 B gString
00958374 B gString2
00951f94 B gTargetCoordsForLookingBehind
00796101 B gTopSphereCastTest
00a8416c B gVehicleDistanceFromCamera
0099e514 B g_BreakablePlugin
009ef9d8 B g_InterestingEvents
009595ec B g_LoadMonitor
006da0dc B g_NVLogFile
006855f8 D g_NVLogMask
006d81ac B g_accessMutex
009fc8f8 B g_bSaving
009598b4 B g_bUsingAnimViewer
0068677c D g_blendFunctions
009f5140 B g_boneNodeMan
0099dd14 B g_breakMan
006d81b0 B g_cond
00997d90 B g_currFurnitureId
00996f8c B g_currSubGroupId
00661c38 D g_ex_configPairs
00994f14 B g_furnitureMan
00997d94 B g_furnitureStore
00820520 B g_fx
00820594 B g_fxMan
009f9d4c B g_ikChainMan
00999194 B g_interiorMan
00a98fc8 B g_mob_configGlobals
00942ecc B g_numSoundChannelsUsed
0082058c B g_numTris
00820590 B g_numVertices
00820580 B g_pMatrix
0082057c B g_pRaster
00820584 B g_pVertex3d
009a1f3c B g_procObjMan
00a98db8 B g_protCheck_00
00a98dbc B g_protCheck_01
00a98dc0 B g_protCheck_02
00a98dc4 B g_protCheck_03
00a98dc8 B g_protCheck_04
00a98dcc B g_protCheck_05
00a98dd0 B g_protCheck_06
00a98dd4 B g_protCheck_07
00a98dd8 B g_protCheck_08
00a98ddc B g_protCheck_09
00a98de0 B g_protCheck_10
00a98de4 B g_protCheck_11
00a98de8 B g_protCheck_12
00a98dec B g_protCheck_13
00a98df0 B g_protCheck_14
00a98df4 B g_protCheck_15
00a98df8 B g_protCheck_16
00a98dfc B g_protCheck_17
00a98e00 B g_protCheck_18
00a98e04 B g_protCheck_19
00a98e08 B g_protCheck_20
00a98e0c B g_protCheck_21
00a98e10 B g_protCheck_22
00a98e14 B g_protCheck_23
00a98e18 B g_protCheck_24
00a98e1c B g_protCheck_25
00a98e20 B g_protCheck_26
00a98e24 B g_protCheck_27
00a98e28 B g_protCheck_28
00a98e2c B g_protCheck_29
00a98e30 B g_protCheck_30
00a98e34 B g_protCheck_31
00a4816c B g_realTimeShadowMan
00820588 B g_rwFlags
00996f90 B g_subGroupStore
00965af0 B g_surfaceInfos
006d81a8 B g_thread
009ba2a0 B g_tmp_buffer
009ba2a8 B g_tmp_buffer_offset
009ba2a4 B g_tmp_buffer_size
006d81a4 B g_touchSense
00a14350 B g_waterCreatureMan
0068676c D g_windDir
00686778 D g_windStrength
006af4a8 D gaGangColoursB
006af49e D gaGangColoursG
006af494 D gaGangColoursR
00a84b40 B gaProjectileInfo
00989b94 B gaTempSphereColPoints
00959906 B gameAlreadyInitialised
006d7114 B gameServiceMutex
009595a8 B gameTxdSlot
006d7ba0 B gamepads
009595e6 B gbBigWhiteDebugLightSwitchedOn
006a9e15 D gbCineyCamMessageDisplayed
00952cb8 B gbCineyCamProcessedOnFrame
009595e9 B gbDebugStuffInRelease
00952ff4 B gbExitCam
00951c18 B gbFirstPersonRunThisFrame
00932094 B gbInAnimCallback
009595e4 B gbLARiots
009595e5 B gbLARiots_NoPoliceCars
00990bdc B gbModelViewer
009595e7 B gbShowCarRoadGroups
009595e8 B gbShowPedRoadGroups
00931558 B gbUseCarColTex
0020a911 T get_crc_table
         U getenv@LIBC
         U gettid@LIBC
         U gettimeofday@LIBC
006a9d28 D gfCarriageFrequencyVariations
0068d2e8 D gfExplosionFrequencyVariations
0068d2f4 D gfFireFrequencyVariations
006aa798 D gfLaRiotsLightMult
0068d308 D gfRocketFrequencyVariations
006a9dc4 D gfThunderFrequencyVariations
006aa79c D gfTommyFatness
006a9dbc D gfWeaponPlaneFrequencyVariations
         U glActiveTexture
         U glAttachShader
         U glBindAttribLocation
         U glBindBuffer
         U glBindFramebuffer
         U glBindRenderbuffer
         U glBindTexture
         U glBlendFunc
         U glBlendFuncSeparate
         U glBufferData
         U glCheckFramebufferStatus
         U glClear
         U glClearColor
         U glClearDepthf
         U glClearStencil
         U glCompileShader
         U glCompressedTexImage2D
         U glCreateProgram
         U glCreateShader
         U glCullFace
         U glDeleteBuffers
         U glDeleteFramebuffers
         U glDeleteProgram
         U glDeleteRenderbuffers
         U glDeleteShader
         U glDeleteTextures
         U glDepthFunc
         U glDepthMask
         U glDisable
         U glDisableVertexAttribArray
         U glDrawArrays
         U glDrawElements
         U glEnable
         U glEnableVertexAttribArray
         U glFramebufferRenderbuffer
         U glFramebufferTexture2D
         U glFrontFace
         U glGenBuffers
         U glGenFramebuffers
         U glGenRenderbuffers
         U glGenTextures
         U glGetAttribLocation
         U glGetError
         U glGetIntegerv
         U glGetProgramInfoLog
         U glGetProgramiv
         U glGetShaderInfoLog
         U glGetShaderiv
         U glGetString
         U glGetUniformLocation
         U glHint
         U glLinkProgram
         U glPolygonOffset
         U glReadPixels
         U glRenderbufferStorage
         U glScissor
         U glShaderSource
         U glTexImage2D
         U glTexParameterf
         U glTexParameteri
         U glUniform1fv
         U glUniform1i
         U glUniform2fv
         U glUniform3fv
         U glUniform4fv
         U glUniformMatrix3fv
         U glUniformMatrix4fv
         U glUseProgram
         U glVertexAttrib4fv
         U glVertexAttribPointer
         U glViewport
006d9a38 B globalVM
         U gmtime@LIBC
007960e8 B gnBottom
007960e4 B gnLeft
00a26aa4 B gnNumMLO
00a26aa0 B gnNumSimple
006a8f8c D gnRadioStationRestrictedAdverts
006a9438 D gnRadioStationSpecificNewsLookup
007960ec B gnRight
006a8f10 D gnTalkRadioShowLengthsMs
007960f0 B gnTop
00a48260 B gpBloodPoolTex
009595a4 B gpBoat
00952f94 B gpCamColVars
009595a0 B gpCar
00a23de8 B gpCloudTex
007960ac B gpColCache
007960b0 B gpColCache2
00a25b08 B gpCoronaTexture
00a48268 B gpCrackedGlassTex
00a86264 B gpCrossHairTex
00a86268 B gpCrossHairTexFlight
00a59f2c B gpFinishFlagTex
00a48264 B gpHandManTex
007960bc B gpMadeInvisibleEntities
00a23df0 B gpMoonMask
0079676c B gpPhysicsCar
00a4826c B gpPostShadowTex
00a1c460 B gpSeaBedTex
00a48250 B gpShadowBaronTex
00a4824c B gpShadowBikeTex
00a48240 B gpShadowCarTex
00a48254 B gpShadowExplosionTex
00a48258 B gpShadowHeadLightsTex
00a4825c B gpShadowHeadLightsTex2
00a48248 B gpShadowHeliTex
00a48244 B gpShadowPedTex
00796768 B gpTestCar
009595e0 B gpTraceObject
007960fc B gpVehicleGettingInto
00a1c45c B gpWaterTex
00a1c464 B gpWaterWakeTex
00931870 B gpWhiteTexture
006b4078 B gradeBlur
0067a260 D gradingPShader
009ee2f4 B gs_iNumWorldProcessLineOfSightUnCached
0020d011 T gzclose
0020c36d T gzdopen
0020cfff T gzeof
0020d17d T gzerror
0020cdcf T gzflush
0020cc1d T gzgetc
0020cc3d T gzgets
0020c145 T gzopen
0020cd19 T gzprintf
0020cd91 T gzputc
0020cdb5 T gzputs
0020c429 T gzread
0020cfa9 T gzrewind
0020ce73 T gzseek
0020c3cd T gzsetparams
0020cff9 T gztell
0020cc99 T gzwrite
00a9882c B hackNextTick
006b405c B hackTarget
006ae4d4 D handsDffName
00792fcc B hasSortError
         U hasTouchScreen
006ae4d0 D headDffName
0020e929 T inflate
0020e7d5 T inflateEnd
0020e809 T inflateInit2_
0020e921 T inflateInit_
0020e79d T inflateReset
0020ecb5 T inflateSetDictionary
0020ed29 T inflateSync
0020ee05 T inflateSyncPoint
0020d2f9 T inflate_blocks
0020dced T inflate_blocks_free
0020d279 T inflate_blocks_new
0020d225 T inflate_blocks_reset
0020dd69 T inflate_blocks_sync_point
0020dda9 T inflate_codes
0020e311 T inflate_codes_free
0020dd75 T inflate_codes_new
005ef774 R inflate_copyright
0020e31d T inflate_fast
0020f549 T inflate_flush
00683a90 D inflate_mask
0020dd51 T inflate_set_dictionary
0020ee21 T inflate_trees_bits
0020f395 T inflate_trees_dynamic
0020f51d T inflate_trees_fixed
006d81c0 B initializedTouchsense
006d81a0 B inputUpdateFromApp
006b8aec B invalidateActiveAttribs
006f3798 B isDirty
006d7038 B isLowMemoryDevice
00950c74 B isPostLoading
0070b63c B isRecording
006e000a B isWatching
         U islower@LIBC
         U isprint@LIBC
         U isspace@LIBC
006d7108 B items
00a3ebb0 B jCount
0061d310 R jpeg_natural_order
006b3204 B keepingCPU
006d7338 B keys
006dfd38 B killLoaderThread
006e0124 B lastDevice
00a9882d B lastEnterWasTouch
006d6a7c B lastGamepadAxis
006d6adc B lastGamepadMask
006855a4 D lastGamepadType
006857ec D lastSaveForResume
00a887a8 B lastScriptname
006f2388 B lastTelemetrySend
006f3794 B lastUpdateProfilestatsTime
006f3790 B lastUpdateTime
006d70d0 B last_tv
         U ldexpf@LIBC
00a987fc B leftStickPos
006ae4d8 D legsDffName
006ae4fc D legsTex
006ae4e4 D legsTxdName
006dfd5c B loaderMutex
006dfd34 B loaderSemaphore
006dfd44 B loaderTasks
006dfd30 B loaderThread
009eccf8 B loadingPed
         U localtime_r@LIBC
006d7078 B lockPointer
         U log@LIBC
         U log10f@LIBC
         U logf@LIBC
         U longjmp@LIBC
00254e91 T lpCoeffCalc
         U lseek@LIBC
006e0140 B maVertices
00a98dac B mainThread
         U malloc@LIBC
006e0128 B mapModeOpacity
006e03c8 B mapScroll
0067a02c D mat_mwx
0067a028 D mat_mwy
0067a024 D mat_mwz
006b2dc0 B mat_mxx
0067a00c D mat_mxy
0067a018 D mat_mxz
0067a004 D mat_myx
0067a010 D mat_myy
0067a01c D mat_myz
0067a008 D mat_mzx
0067a014 D mat_mzy
0067a020 D mat_mzz
009599ac B maxIndex
00a83d70 B memMoved
         U memchr@LIBC
         U memcmp@LIBC
006bd5fc B meshModule
007968b8 B missionLabel
0079c8b8 B missionList
00a8879c B missionReplaySetting
007b7788 B missionRetryScriptIndex
009ecd10 B missionScript
         U mkdir@LIBC
00a065e8 B mod_Buoyancy
00a066b8 B mod_HandlingManager
006bd6a5 B modelForceColorAlpha
006bd6a4 B modelNightBoost
         U modf@LIBC
         U modff@LIBC
00234885 T mpg123_add_string
002348a1 T mpg123_add_substring
00230ecd T mpg123_clip
0022f689 T mpg123_close
00234811 T mpg123_copy_string
00233d55 T mpg123_current_decoder
00230c95 T mpg123_decode
00230bc1 T mpg123_decode_frame
0022f055 T mpg123_decoder
00233d71 T mpg123_decoders
002336ed T mpg123_delete
00225925 T mpg123_delete_pars
0023340d T mpg123_enc_from_id3
00223da1 T mpg123_encodings
00223db9 T mpg123_encsize
0022f4db T mpg123_eq
00233829 T mpg123_errcode
0022ee63 T mpg123_exit
00223d41 T mpg123_feature
00230e05 T mpg123_feed
00231859 T mpg123_feedseek
00224a0d T mpg123_fmt
0022495d T mpg123_fmt_all
002248f5 T mpg123_fmt_none
00224fbb T mpg123_fmt_support
002249e9 T mpg123_format
00224939 T mpg123_format_all
002248a5 T mpg123_format_none
00224e41 T mpg123_format_support
00230631 T mpg123_framebyframe_decode
0023090d T mpg123_framebyframe_next
00227049 T mpg123_free_string
0022f541 T mpg123_geteq
00230ee1 T mpg123_getformat
0022f3e1 T mpg123_getpar
0022f3b9 T mpg123_getparam
0022f4a1 T mpg123_getstate
00226be1 T mpg123_getvolume
00234797 T mpg123_grow_string
002333bd T mpg123_icy
00233407 T mpg123_icy2utf8
00233347 T mpg123_id3
002336af T mpg123_index
00225ee9 T mpg123_info
0022ec6d T mpg123_init
0023478d T mpg123_init_string
00231d31 T mpg123_length
00233339 T mpg123_meta_check
0022ee65 T mpg123_new
002258c5 T mpg123_new_pars
0022f5a9 T mpg123_open
0022f839 T mpg123_open_fd
0022fb41 T mpg123_open_feed
0022f971 T mpg123_open_handle
00230621 T mpg123_outblock
0022f2a1 T mpg123_par
0022f269 T mpg123_param
0022ee6d T mpg123_parnew
002337c9 T mpg123_plain_strerror
002342d1 T mpg123_position
00223d89 T mpg123_rates
00230c79 T mpg123_read
002259b9 T mpg123_replace_buffer
0022fced T mpg123_replace_reader
0022fdd5 T mpg123_replace_reader_handle
00225581 T mpg123_reset_eq
002347c7 T mpg123_resize_string
002259b3 T mpg123_safe_buffer
00231531 T mpg123_scan
00231395 T mpg123_seek
00231c29 T mpg123_seek_frame
00231d1b T mpg123_set_filesize
002336db T mpg123_set_index
0023368d T mpg123_set_string
0023493d T mpg123_set_substring
0023342d T mpg123_store_utf8
00233839 T mpg123_strerror
00234947 T mpg123_strlen
00233d7d T mpg123_supported_decoders
00231035 T mpg123_tell
0023137f T mpg123_tell_stream
00231349 T mpg123_tellframe
00230f49 T mpg123_timeframe
00230fd5 T mpg123_tpf
00226a4d T mpg123_volume
00226a0f T mpg123_volume_change
00959908 B msCollected
006dfe88 B myCloudSaves
006dfd61 B myDebugging
006856bc D nAdjustmentModeFlags
006aa274 D nFadeControlThreshhold
006b15bc D nMaskAlpha
006af9e8 D nTestPlayerWeaponAccuracy
006b0550 D nTestRotateAxis
00952e64 B nUsingWhichCamera
006b1598 D nWakeAlpha
006d81d0 B names
         U nanosleep@LIBC
006e0069 B needsAmazonDownload
009584ec B numBBfailed
006d710c B numItems
0095ab84 B numMatrices
007968a0 B numMissions
00a29a10 B numOfPunctIndexes
0079612c B numTris
00792fc8 B numberOfEntries
009599c4 B obrstr
00959a44 B obrstr2
006b3200 B oldTarget
         U open@LIBC
         U opendir@LIBC
006bd6d0 B openglAmbientLight
006bd6b0 B openglLightApplied
00a83ccc B pAmbient
00a83cd0 B pDirect
007a235c B pDriveByCar
009ba2ac B pDst
00a83cd4 B pExtraDirectionals
00944580 B pFogHorn
009ee2f0 B pNastyClump
007a4de4 B pOldToGarageWeAreIn
00952e68 B pStoredCopPed
006b2c44 D pTempStrings
00796890 B pTestPlaneO
00a12e7c B pTrackNodes
00944584 B pWaterfall
006b8bcc B pixelShaders
001ee3f3 T png_access_version_number
001f2b83 T png_app_error
001f2b71 T png_app_warning
001f0c25 T png_ascii_from_fixed
001f0721 T png_ascii_from_fp
001f2a55 T png_benign_error
001f12a1 T png_build_gamma_table
001ee261 T png_build_grayscale_palette
001ed9c7 T png_calculate_crc
001f3f51 T png_calloc
001f02f9 T png_check_IHDR
001fd7cd T png_check_chunk_length
001fd759 T png_check_chunk_name
001f0549 T png_check_fp_number
001f06e1 T png_check_fp_string
00203025 T png_check_keyword
001f2d01 T png_chunk_benign_error
001f2b49 T png_chunk_error
001f2d59 T png_chunk_report
001ee389 T png_chunk_unknown_handling
001f2af9 T png_chunk_warning
001effa1 T png_colorspace_set_ICC
001ee649 T png_colorspace_set_chromaticities
001ef019 T png_colorspace_set_endpoints
001ee429 T png_colorspace_set_gamma
001f0019 T png_colorspace_set_rgb_coefficients
001ef5c9 T png_colorspace_set_sRGB
001ee5d7 T png_colorspace_sync
001ee589 T png_colorspace_sync_info
00200045 T png_combine_row
002066f9 T png_compress_IDAT
00203f29 T png_convert_from_struct_tm
00203f49 T png_convert_from_time_t
001ee1c5 T png_convert_to_rfc1123
001ee081 T png_convert_to_rfc1123_buffer
001fd9a5 T png_crc_error
001fd8b1 T png_crc_finish
001fd87d T png_crc_read
001edc25 T png_create_info_struct
001edb31 T png_create_png_struct
001f55a9 T png_create_read_struct
001f55e7 T png_create_read_struct_2
00203f81 T png_create_write_struct
00204001 T png_create_write_struct_2
001ee009 T png_data_freer
002038b1 T png_default_flush
001f92c1 T png_default_read_data
0020386d T png_default_write_data
001f11b1 T png_destroy_gamma_table
001edc4d T png_destroy_info_struct
001f3ecd T png_destroy_png_struct
001f6269 T png_destroy_read_struct
00204437 T png_destroy_write_struct
002035b5 T png_do_bgr
00203651 T png_do_check_palette_indexes
00203313 T png_do_invert
0020340d T png_do_packswap
00200541 T png_do_read_interlace
001fafb9 T png_do_read_transformations
00203455 T png_do_strip_channel
002033b1 T png_do_swap
00208fc5 T png_do_write_interlace
002059c5 T png_do_write_transformations
001f2351 T png_error
001f0d99 T png_fixed
001f2e05 T png_fixed_error
002038a5 T png_flush
001f23e9 T png_format_number
001f2971 T png_formatted_warning
001f3f35 T png_free
0020620d T png_free_buffer_list
001edc8f T png_free_data
001f418d T png_free_default
001f2f11 T png_free_jmpbuf
001f1049 T png_gamma_16bit_correct
001f0fc9 T png_gamma_8bit_correct
001f10c9 T png_gamma_correct
001f0f29 T png_gamma_significant
001f3a59 T png_get_IHDR
001f3d1b T png_get_PLTE
001f35d1 T png_get_bKGD
001f316f T png_get_bit_depth
001f35f9 T png_get_cHRM
001f36e1 T png_get_cHRM_XYZ
001f37e1 T png_get_cHRM_XYZ_fixed
001f3857 T png_get_cHRM_fixed
001f35b1 T png_get_channels
001f3e91 T png_get_chunk_cache_max
001f3e9d T png_get_chunk_malloc_max
001f3181 T png_get_color_type
001f3e5d T png_get_compression_buffer_size
001f31b7 T png_get_compression_type
001ee209 T png_get_copyright
0020382f T png_get_current_pass_number
00203821 T png_get_current_row_number
001f39c5 T png_get_eXIf
001f3a05 T png_get_eXIf_1
001f2f99 T png_get_error_ptr
001f3193 T png_get_filter_type
001f38e9 T png_get_gAMA
001f38c3 T png_get_gAMA_fixed
001f3a33 T png_get_hIST
001ee221 T png_get_header_ver
001ee22d T png_get_header_version
001f3951 T png_get_iCCP
001f315d T png_get_image_height
001f314b T png_get_image_width
001fd4e7 T png_get_int_32
001f31a5 T png_get_interlace_type
001f3eaf T png_get_io_chunk_type
001ee065 T png_get_io_ptr
001f3ea9 T png_get_io_state
001ee215 T png_get_libpng_ver
001f41a7 T png_get_mem_ptr
001f3aed T png_get_oFFs
001f3b39 T png_get_pCAL
001f3cd7 T png_get_pHYs
001f3511 T png_get_pHYs_dpi
001f3eb5 T png_get_palette_max
001f3239 T png_get_pixel_aspect_ratio
001f3271 T png_get_pixel_aspect_ratio_fixed
001f3349 T png_get_pixels_per_inch
001f3215 T png_get_pixels_per_meter
001f559d T png_get_progressive_ptr
001f3e45 T png_get_rgb_to_gray_status
001f3125 T png_get_rowbytes
001f3137 T png_get_rows
001f3d49 T png_get_sBIT
001f3c51 T png_get_sCAL
001f3bc9 T png_get_sCAL_fixed
001f3ca3 T png_get_sCAL_s
001f39ab T png_get_sPLT
001f3929 T png_get_sRGB
001f35c3 T png_get_signature
001f3d95 T png_get_tIME
001f3dbd T png_get_tRNS
001f3d6f T png_get_text
001fd513 T png_get_uint_16
001fd4c1 T png_get_uint_31
001fd4e1 T png_get_uint_32
001f3e2b T png_get_unknown_chunks
001f3e51 T png_get_user_chunk_ptr
001f3e85 T png_get_user_height_max
00203815 T png_get_user_transform_ptr
001f3e79 T png_get_user_width_max
001f3111 T png_get_valid
001f3481 T png_get_x_offset_inches
001f3421 T png_get_x_offset_inches_fixed
001f32b5 T png_get_x_offset_microns
001f3301 T png_get_x_offset_pixels
001f3395 T png_get_x_pixels_per_inch
001f31c9 T png_get_x_pixels_per_meter
001f34c9 T png_get_y_offset_inches
001f3451 T png_get_y_offset_inches_fixed
001f32db T png_get_y_offset_microns
001f3325 T png_get_y_offset_pixels
001f33db T png_get_y_pixels_per_inch
001f31ef T png_get_y_pixels_per_meter
001fdd35 T png_handle_IEND
001fda01 T png_handle_IHDR
001fdb41 T png_handle_PLTE
001ee351 T png_handle_as_unknown
001fec95 T png_handle_bKGD
001fdf59 T png_handle_cHRM
001fee15 T png_handle_eXIf
001fdd81 T png_handle_gAMA
001fef65 T png_handle_hIST
001fe23d T png_handle_iCCP
001ffbed T png_handle_iTXt
001ff11d T png_handle_oFFs
001ff249 T png_handle_pCAL
001ff041 T png_handle_pHYs
001fde25 T png_handle_sBIT
001ff4a5 T png_handle_sCAL
001fe825 T png_handle_sPLT
001fe179 T png_handle_sRGB
001ff761 T png_handle_tEXt
001ff68d T png_handle_tIME
001feaa9 T png_handle_tRNS
001ffe11 T png_handle_unknown
001ff8b5 T png_handle_zTXt
001efaa1 T png_icc_check_header
001efa45 T png_icc_check_length
001efd51 T png_icc_check_tag_table
001efe25 T png_icc_set_sRGB
001f6835 T png_image_begin_read_from_file
001f691d T png_image_begin_read_from_memory
001f6541 T png_image_begin_read_from_stdio
001f1f75 T png_image_error
001f6a85 T png_image_finish_read
001f1ec9 T png_image_free
00205515 T png_image_write_to_file
00204911 T png_image_write_to_memory
00204b7d T png_image_write_to_stdio
001edfd3 T png_info_init_3
001ee071 T png_init_io
001fa4f1 T png_init_read_transformations
001f2f69 T png_longjmp
001f3f9d T png_malloc
001f3fed T png_malloc_array
001f3fd1 T png_malloc_base
001f4125 T png_malloc_default
001f4159 T png_malloc_warn
001f0269 T png_muldiv
001f0e09 T png_muldiv_warn
00202cb1 T png_permit_mng_features
001f4d35 T png_process_IDAT_data
001f41b5 T png_process_data
001f4247 T png_process_data_pause
001f43e9 T png_process_data_skip
001f4221 T png_process_some_data
001f555d T png_progressive_combine_row
001f4c99 T png_push_fill_buffer
001f4d1d T png_push_have_end
001f4d29 T png_push_have_info
001f5431 T png_push_have_row
001f4ee5 T png_push_process_row
001f4ab1 T png_push_read_IDAT
001f452d T png_push_read_chunk
001f43fd T png_push_read_sig
001f4211 T png_push_restore_buffer
001f4275 T png_push_save_buffer
00200905 T png_read_IDAT_data
001fd5c9 T png_read_chunk_header
001f9291 T png_read_data
001f5e99 T png_read_end
0020087d T png_read_filter_row
00200af9 T png_read_finish_IDAT
00200b5d T png_read_finish_row
001f5de5 T png_read_image
001f5629 T png_read_info
001f6379 T png_read_png
001f5449 T png_read_push_finish_row
001f5a11 T png_read_row
001f5d7d T png_read_rows
001fd51d T png_read_sig
00200ca5 T png_read_start_row
001fade1 T png_read_transform_info
001f59b5 T png_read_update_info
001f4069 T png_realloc_array
001f0eb9 T png_reciprocal
001f0f41 T png_reciprocal2
001ed9b1 T png_reset_crc
001ee3e1 T png_reset_zstream
005edd14 R png_sRGB_base
005ee114 R png_sRGB_delta
005edb14 R png_sRGB_table
001f2fa5 T png_safe_error
001f30b5 T png_safe_execute
001f3069 T png_safe_warning
001f23b9 T png_safecat
001ee07b T png_save_int_32
00205f91 T png_save_uint_16
00205f81 T png_save_uint_32
00201bd5 T png_set_IHDR
002021fd T png_set_PLTE
0020325d T png_set_add_alpha
001f97f1 T png_set_alpha_mode
001f961d T png_set_alpha_mode_fixed
00201645 T png_set_bKGD
001f94a9 T png_set_background
001f93f5 T png_set_background_fixed
00202ffd T png_set_benign_errors
00203149 T png_set_bgr
0020173d T png_set_cHRM
00201855 T png_set_cHRM_XYZ
002016d3 T png_set_cHRM_XYZ_fixed
0020166f T png_set_cHRM_fixed
00203013 T png_set_check_for_invalid_index
00202fe9 T png_set_chunk_cache_max
00202ff3 T png_set_chunk_malloc_max
00202ef9 T png_set_compression_buffer_size
0020465d T png_set_compression_level
00204667 T png_set_compression_mem_level
002046c9 T png_set_compression_method
00204671 T png_set_compression_strategy
00204689 T png_set_compression_window_bits
001f9341 T png_set_crc_action
00201985 T png_set_eXIf
002019bd T png_set_eXIf_1
001f2f8b T png_set_error_fn
001fa1cd T png_set_expand
001fa2a5 T png_set_expand_16
001fa23d T png_set_expand_gray_1_2_4_to_8
002031f5 T png_set_filler
002044c5 T png_set_filter
00204659 T png_set_filter_heuristics
0020465b T png_set_filter_heuristics_fixed
002043ef T png_set_flush
00201a9d T png_set_gAMA
00201a75 T png_set_gAMA_fixed
001f9fd1 T png_set_gamma
001f9ee1 T png_set_gamma_fixed
001fa2dd T png_set_gray_to_rgb
00201ae9 T png_set_hIST
00202369 T png_set_iCCP
002031d3 T png_set_interlace_handling
00202fcd T png_set_invalid
002032ef T png_set_invert_alpha
00203301 T png_set_invert_mono
00202cc5 T png_set_keep_unknown_chunks
001f2e55 T png_set_longjmp_fn
001f419b T png_set_mem_fn
00201c6d T png_set_oFFs
001f1e81 T png_set_option
00201c8d T png_set_pCAL
002021dd T png_set_pHYs
00203177 T png_set_packing
00203197 T png_set_packswap
001fa205 T png_set_palette_to_rgb
001f556d T png_set_progressive_read_fn
001f989d T png_set_quantize
001f92f9 T png_set_read_fn
001f636d T png_set_read_status_fn
00202eb5 T png_set_read_user_chunk_fn
001fa4dd T png_set_read_user_transform_fn
001fa465 T png_set_rgb_to_gray
001fa30d T png_set_rgb_to_gray_fixed
00202ebf T png_set_rows
002022e5 T png_set_sBIT
00202035 T png_set_sCAL
00202121 T png_set_sCAL_fixed
00201ec1 T png_set_sCAL_s
0020293d T png_set_sPLT
00202309 T png_set_sRGB
00202331 T png_set_sRGB_gAMA_and_cHRM
001f958d T png_set_scale_16
002031b3 T png_set_shift
001ed8d1 T png_set_sig_bytes
001f95bd T png_set_strip_16
001f95ed T png_set_strip_alpha
0020315b T png_set_swap
002032dd T png_set_swap_alpha
002027a9 T png_set_tIME
0020281d T png_set_tRNS
001fa26d T png_set_tRNS_to_alpha
002024d1 T png_set_text
0020250d T png_set_text_2
002046f1 T png_set_text_compression_level
002046fb T png_set_text_compression_mem_level
00204751 T png_set_text_compression_method
00204705 T png_set_text_compression_strategy
00204711 T png_set_text_compression_window_bits
00202bf1 T png_set_unknown_chunk_location
00202aa1 T png_set_unknown_chunks
00202fdf T png_set_user_limits
002037a5 T png_set_user_transform_info
002038c1 T png_set_write_fn
00204779 T png_set_write_status_fn
00204783 T png_set_write_user_transform_fn
001ed915 T png_sig_cmp
001f59f1 T png_start_read_image
001eda29 T png_user_version_check
001f251d T png_warning
001f25fd T png_warning_parameter
001f27c1 T png_warning_parameter_signed
001f263d T png_warning_parameter_unsigned
00206de9 T png_write_IEND
00206231 T png_write_IHDR
0020654d T png_write_PLTE
00207b51 T png_write_bKGD
002077b9 T png_write_cHRM_fixed
00206109 T png_write_chunk
00206091 T png_write_chunk_data
002060cb T png_write_chunk_end
00205fe5 T png_write_chunk_start
0020383d T png_write_data
00207dc1 T png_write_eXIf
00203db9 T png_write_end
002091c1 T png_write_find_filter
00208ec1 T png_write_finish_row
00204401 T png_write_flush
00206e91 T png_write_gAMA_fixed
00207eb5 T png_write_hIST
00207059 T png_write_iCCP
0020835d T png_write_iTXt
002043a1 T png_write_image
00203b1d T png_write_info
00203921 T png_write_info_before_PLTE
0020868d T png_write_oFFs
002087a1 T png_write_pCAL
00208b61 T png_write_pHYs
00204799 T png_write_png
002040bd T png_write_row
00204091 T png_write_rows
00207659 T png_write_sBIT
00208a11 T png_write_sCAL_s
00207455 T png_write_sPLT
00206f65 T png_write_sRGB
00205f99 T png_write_sig
00208dcd T png_write_start_row
00207fe5 T png_write_tEXt
00208c99 T png_write_tIME
002078c9 T png_write_tRNS
00208159 T png_write_zTXt
001ed949 T png_zalloc
001ed9ad T png_zfree
001ee3f9 T png_zstream_error
006d7178 B pointers
002251a3 T postprocess_buffer
         U pow@LIBC
         U powf@LIBC
00a84170 B preAlloc
006df758 B priceBuffer
009abf5c B printingCredits
         U pthread_attr_destroy@LIBC
         U pthread_attr_getschedparam@LIBC
         U pthread_attr_getstacksize@LIBC
         U pthread_attr_init@LIBC
         U pthread_attr_setschedparam@LIBC
         U pthread_attr_setstacksize@LIBC
         U pthread_cond_broadcast@LIBC
         U pthread_cond_destroy@LIBC
         U pthread_cond_init@LIBC
         U pthread_cond_signal@LIBC
         U pthread_cond_timedwait@LIBC
         U pthread_cond_wait@LIBC
         U pthread_create@LIBC
         U pthread_getspecific@LIBC
         U pthread_join@LIBC
         U pthread_key_create@LIBC
         U pthread_key_delete@LIBC
         U pthread_mutex_destroy@LIBC
         U pthread_mutex_init@LIBC
         U pthread_mutex_lock@LIBC
         U pthread_mutex_unlock@LIBC
         U pthread_mutexattr_destroy@LIBC
         U pthread_mutexattr_init@LIBC
         U pthread_mutexattr_settype@LIBC
         U pthread_once@LIBC
         U pthread_self@LIBC
         U pthread_setname_np@LIBC
         U pthread_setschedparam@LIBC
         U pthread_setspecific@LIBC
009599b0 B pumpHack
         U puts@LIBC
         U qsort@LIBC
006d7154 B queries
         U raise@LIBC
         U rand@LIBC
00a83ebc B rasLoadTime
00a83ec0 B rasNumLoaded
         U read@LIBC
         U readdir@LIBC
         U realloc@LIBC
006b45c4 B regShaders
         U remove@LIBC
006b4080 B renderHeight
006bcc54 B renderQueue
006b407c B renderWidth
006d7079 B resetPointer
006bd07c B resourcesModule
         U rewind@LIBC
00a9880c B rightStickPos
006ae504 D rippedLegsTex
006ae4f8 D rippedTorsoTex
005ea4bc R rpUVAnimInvPivot
006b8adc B rpUVAnimModule
005ea4b0 R rpUVAnimPivot
006b8bb4 B rqRenderer
006b8bb0 B rqVendor
006b1f24 D russian_table
006b2024 D russian_unicode_table
006828f0 D rw_errcomcstr
00682874 D rw_errcomstr
006df80c B s_CancelLeaderboardQueryMethod
006df238 B s_ConvertToBitmap
006df234 B s_CreateTextBox
006df1a4 B s_DeleteFile
006df1c0 B s_FileGetArchiveName
006df1a8 B s_FileRename
006df7f0 B s_GameServiceExists
006df1b8 B s_GetAndroidBuildinfo
006df214 B s_GetAppId
006df1bc B s_GetDeviceID
006df1b4 B s_GetDeviceInfo
006df1ac B s_GetDeviceLocale
006df1b0 B s_GetDeviceType
006df1f4 B s_GetSpecialBuildType
006df1c4 B s_IsAppInstalled
006df1d8 B s_IsCloudAvailable
006d6afc B s_IsKeyboardShown
006df1a0 B s_IsMoviePlaying
006df228 B s_IsNetworkAvailable
006df230 B s_IsTV
006df22c B s_IsWifiAvailable
006df1cc B s_LoadAllGamesFromCloud
006df1d0 B s_LoadGameFromCloud
006df1f0 B s_MovieClearText
006df1e8 B s_MovieDisplayText
006df19c B s_MovieIsSkippable
006df1e0 B s_MovieKeepAspectRatio
006df1e4 B s_MovieSetText
006df1ec B s_MovieTextScale
006df1dc B s_NewCloudSaveAvailable
006df1c8 B s_OpenLink
006df18c B s_PlayMovie
006df190 B s_PlayMovieInFile
006df194 B s_PlayMovieInWindow
006df1d4 B s_SaveGameToCloud
006df218 B s_ScreenSetWakeLock
006df1f8 B s_SendStatEvent
006df1fc B s_SendStatEventParam
006df200 B s_SendTimedStatEventEnd
006df21c B s_ServiceAppCommand
006df224 B s_ServiceAppCommandInt
006df220 B s_ServiceAppCommandValue
006d6af8 B s_ShowKeyboard
006df198 B s_StopMovie
006df808 B s_SubmitLeaderboardQueryMethod
006df23c B s_VibratePhone
006df240 B s_VibratePhoneEffect
006df744 B s_addSku
006df838 B s_deleteAllSnapshots
006df834 B s_deleteSnapshot
006df20c B s_getAvailableMemory
006df7ec B s_getConnectionStatus
006df184 B s_getGamepadAxis
006df180 B s_getGamepadButtons
006df188 B s_getGamepadTrack
006df17c B s_getGamepadType
006df208 B s_getLowThreshhold
006df840 B s_getPlayerName
006df210 B s_getScreenWidthInches
006df204 B s_getTotalMemory
006df7f8 B s_incrementAchievement
006df748 B s_initBilling
006df84c B s_invitePlayers
006df854 B s_leaveRoom
006df820 B s_loadFromCloud
006df828 B s_loadSnapshot
006df82c B s_loadSnapshotCount
006df750 B s_localizedPrice
006df810 B s_refreshData
006df74c B s_requestPurchase
006df818 B s_resolveState
006df83c B s_saveScreenshot
006df830 B s_saveSnapshot
006df81c B s_saveToCloud
006df850 B s_sendData
006df754 B s_setBillingKey
006df85c B s_setPopupView
006df7e8 B s_showAchievementList
006df800 B s_showLeaderboard
006df7fc B s_showLeaderboards
006df7e0 B s_showSignInUI
006df824 B s_showSnapshotList
006df7e4 B s_signOut
006df848 B s_startInvitedGame
006df844 B s_startQuickGame
006df804 B s_submitScore
006df7f4 B s_unlockAchievement
006df858 B s_updateMuliplayer
006df874 B s_warAddLineFeeds
006df7d8 B s_warGameService
006df7dc B s_warGameService_class
006df814 B s_warGameService_ctor
006df860 B s_warHttp
006df868 B s_warHttpGet
006df870 B s_warHttpGetData
006df86c B s_warHttpPost
006df864 B s_warHttp_class
006df878 B s_warHttp_ctor
0022514f T samples_to_storage
         U sched_get_priority_max@LIBC
         U sched_get_priority_min@LIBC
         U sched_yield@LIBC
         U scmainUpdate
006d7118 B screenshotData
006d711c B screenshotSize
00683bfc D sectorTKList
         U sem_destroy@LIBC
         U sem_getvalue@LIBC
         U sem_init@LIBC
         U sem_post@LIBC
         U sem_trywait@LIBC
         U sem_wait@LIBC
00685618 D separators
         U setjmp@LIBC
0068590c D setupValues
0067a268 D shadowResolvePShader
006b4060 B shadowTarget
006b4165 B sharingGPUResource
         U sigaction@LIBC
         U sigemptyset@LIBC
         U sin@LIBC
         U sinf@LIBC
006e006c B sizeDownloadedMB
0067a060 D sizeof_rwRaster
0067a034 D sizeof_rwV2d
0067a040 D sizeof_rwV3d
006b7090 B skin_dirty
006b588c B skin_map
006b708c B skin_num
006bd754 B skipBlendRender
006aa6d0 D skipDebugLog
009ecd14 B skipFirstMissionSave
009599b4 B skipFrame
009eccf0 B skipMissionStartCount
006bd755 B skipNonblendRender
         U slCreateEngine
00792fc4 B sorted
006dfd2c B soundInfoFile
         U srand@LIBC
         U sscanf@LIBC
006e004c B startDownloadTime
00a987c4 B startupDeactivate
         U stat@LIBC
006e221c B statValue
006f221c B statValueLength
006df244 B staticAppId
006df344 B staticBuildinfo
006df644 B staticDeviceID
006b40a4 B staticState
         U stderr@LIBC
006b3304 B storageInited
006d7170 B storageMutex
         U strcasecmp@LIBC
         U strcat@LIBC
         U strchr@LIBC
         U strcmp@LIBC
         U strcpy@LIBC
0022314f T strdup
006bd698 B streams
         U strerror@LIBC
006f2390 B strforjson
         U strlen@LIBC
         U strncasecmp@LIBC
         U strncat@LIBC
         U strncmp@LIBC
         U strncpy@LIBC
         U strpbrk@LIBC
         U strrchr@LIBC
         U strstr@LIBC
         U strtof@LIBC
         U strtok@LIBC
         U strtol@LIBC
         U strtoul@LIBC
         U syscall@LIBC
         U sysconf@LIBC
         U tan@LIBC
         U tanf@LIBC
00685d38 D teleVersion
00685d2c D teleheader
00685d28 D telemFileName
00944ed0 B tempTimeOffset
006855e0 D testIndex
006825d0 D texDictTKList
00a83eb4 B texLoadTime
00a83eb8 B texNumLoaded
006b3280 B textureCameraNormals
006b3288 B textureDecalZ
006b327c B textureDetail
006b3278 B textureEnhanced
006b3284 B textureForceZOff
006825b8 D textureTKList
         U time@LIBC
00792fdc B timeBeforeNextGangLoad
00792fd8 B timeBeforeNextLoad
00261329 T timeGetTime
0096b518 B timerDef
006ae4cc D torsoDffName
006ae4f0 D torsoTex
006ae4e0 D torsoTxdName
         U toupper@LIBC
00a98eb8 B trapDisplay
006dfd74 B trashMutex
00a98e38 B triggerDisplay
00210e41 T uncompress
006d70b4 B updateCount
006b4164 B useGPUForArrays
006d7030 B userSelectedLanguage
006b4074 B usingGrading
         U usleep@LIBC
00a410c0 B v
00a0253c B vecBmxHandleBarPos
00a02554 B vecChopperHandleBarPos
00a02548 B vecMtbHandleBarPos
006b126c D vecQuadResistance
00a12e48 B vecRCBaronGunPos
00a01f98 B vecTestResistance
009ed47c B vecTestTemp
00a02560 B vecTweakHandleBarPos
00a0256c B vecTweakHandleBarPos2
00952e4c B vecWheelCamBoatOffset
00952e58 B vecWheelCamBoatOffsetAlt
006aaba8 D versionString
009598c6 B version_name
009598c4 B version_number
006b8bd8 B vertexShaders
00a46e2c B vertexbufferT
006d81b8 B vm
0094eaec B wasPlaylistPlaying
0067a0f0 D waterVars
006855b4 D windowSize
00683c14 D worldTKList
006e0048 B xboxSaveCheck
00210ead T zError
00683b10 D z_errmsg
00210ec1 T zcalloc
00210ec9 T zcfree
00210ea1 T zlibVersion
